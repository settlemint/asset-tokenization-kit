name: 'Build Status Labeler'
description: 'Update build status labels on PR'
inputs:
  pr_number:
    description: 'Pull request number'
    required: true
  workflow_status:
    description: 'Status of the workflow (pending, running, success, failure)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Check and create labels if needed
      uses: actions/github-script@v7
      with:
        script: |
          const labels = [
            { name: 'qa:pending', color: 'CEE0F5', description: 'QA workflow needs to run' },  // Light purple
            { name: 'qa:running', color: 'FFA500', description: 'QA workflow is currently running' },  // Orange
            { name: 'qa:success', color: '22863A', description: 'QA workflow passed successfully' },  // Forest green
            { name: 'qa:failed', color: 'CB2431', description: 'QA workflow failed' }  // Red
          ];
          
          // Get all existing labels
          const existingLabels = await github.paginate(github.rest.issues.listLabelsForRepo, {
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          const existingLabelNames = new Set(existingLabels.map(l => l.name));
          
          // Create or update labels
          for (const label of labels) {
            const existingLabel = existingLabels.find(l => l.name === label.name);
            
            if (!existingLabel) {
              // Create new label
              try {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                console.log(`Created label: ${label.name}`);
              } catch (error) {
                console.log(`Failed to create label ${label.name}: ${error.message}`);
              }
            } else if (existingLabel.color !== label.color || existingLabel.description !== label.description) {
              // Update existing label if color or description changed
              try {
                await github.rest.issues.updateLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                console.log(`Updated label: ${label.name} (color: ${existingLabel.color} -> ${label.color}, desc: "${existingLabel.description}" -> "${label.description}")`);
              } catch (error) {
                console.log(`Failed to update label ${label.name}: ${error.message}`);
              }
            }
          }

    - name: Remove all build status labels
      uses: actions/github-script@v7
      with:
        script: |
          const labels = ['qa:pending', 'qa:running', 'qa:success', 'qa:failed'];
          const pr_number = ${{ inputs.pr_number }};

          for (const label of labels) {
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                name: label
              });
            } catch (error) {
              // Label might not exist on the PR, which is fine
              console.log(`Label ${label} not found on PR, skipping removal`);
            }
          }

    - name: Add appropriate build status label
      uses: actions/github-script@v7
      with:
        script: |
          const pr_number = ${{ inputs.pr_number }};
          const status = '${{ inputs.workflow_status }}';
          let label = '';

          switch(status) {
            case 'pending':
              label = 'qa:pending';
              break;
            case 'running':
              label = 'qa:running';
              break;
            case 'success':
              label = 'qa:success';
              break;
            case 'failure':
            case 'cancelled':
              label = 'qa:failed';
              break;
          }

          if (label) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              labels: [label]
            });
          }