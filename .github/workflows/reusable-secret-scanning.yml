name: Secret Scanning (Reusable)

# This is a reusable workflow for scanning secrets in the codebase.
# It can be used both within this repository and by external repositories.
#
# Usage in this repository:
# ```yaml
# jobs:
#   secret-scan:
#     uses: ./.github/workflows/reusable-secret-scanning.yml
#     with:
#       runs-on: 'namespace-profile-atk-services'  # optional, defaults to 'ubuntu-latest'
#       trivy-config: 'trivy-secret.yaml'  # optional, path to trivy config file
#       severity: 'HIGH,CRITICAL'  # optional, defaults to 'HIGH,CRITICAL'
# ```
#
# Usage in external repositories:
# ```yaml
# jobs:
#   secret-scan:
#     uses: settlemint/asset-tokenization-kit/.github/workflows/reusable-secret-scanning.yml@main
#     with:
#       runs-on: 'ubuntu-latest'
# ```

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Runner to use for the job"
        required: false
        type: string
        default: "ubuntu-latest"
      trivy-config:
        description: "Path to Trivy configuration file"
        required: false
        type: string
        default: ""
      severity:
        description: "Severity levels to check (comma-separated)"
        required: false
        type: string
        default: "HIGH,CRITICAL"
      exit-code:
        description: "Exit code when secrets are found"
        required: false
        type: string
        default: "1"

permissions:
  contents: read
  security-events: write

jobs:
  scan:
    name: Scan for Secrets
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 10
    if: |
      github.actor != 'dependabot[bot]' && github.actor != 'renovate[bot]' &&
      (github.event_name == 'push' || github.event.action == 'opened' ||
      github.event.action == 'synchronize')
    steps:
      - name: Checkout repository (namespace)
        if: startsWith(inputs.runs-on, 'namespace-')
        uses: namespacelabs/nscloud-checkout-action@v7
        with:
          fetch-depth: 1

      - name: Checkout repository (standard)
        if: ${{ !startsWith(inputs.runs-on, 'namespace-') }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache Trivy DB (namespace)
        if: startsWith(inputs.runs-on, 'namespace-')
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ~/.cache/trivy

      - name: Cache Trivy DB (standard)
        if: ${{ !startsWith(inputs.runs-on, 'namespace-') }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-trivy-db-

      - name: Secret Scanning (Trivy)
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: "fs"
          scan-ref: "."
          trivy-config: ${{ inputs.trivy-config }}
          severity: ${{ inputs.severity }}
          format: "table"
          exit-code: ${{ inputs.exit-code }}
          scanners: "secret"
