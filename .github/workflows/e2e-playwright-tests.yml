name: Playwright Tests
on:
  # schedule:
  #   - cron: "0 0 * * 1-5" # runs every night Sun-Fri at 2AM (time difference with GHA! + 1hr)
  pull_request:
    types: [labeled]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Playwright Tests
    runs-on: namespace-profile-atk
    environment: staging
    timeout-minutes: 60 # 1 hour maximum runtime
    if:
      ${{ github.ref == 'refs/heads/main' ||
      contains(github.event.pull_request.labels.*.name, 'run-playwright-tests')
      }}
    steps:
      - name: Checkout repository
        uses: namespacelabs/nscloud-checkout-action@v7

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Configure 1Password
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        env:
          SLACK_WEBHOOK_URL: op://platform/slack-webhooks/e2e-report

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: bun install
        working-directory: kit/e2e

      - name: Install Playwright browsers
        run: bunx playwright install --with-deps chromium
        working-directory: kit/e2e

      - name: Connect to SettleMint
        uses: settlemint/settlemint-action@main
        with:
          instance: ${{ secrets.SETTLEMINT_INSTANCE }}
          access-token: ${{ secrets.SETTLEMINT_PERSONAL_ACCESS_TOKEN }}
          dotEnvFile: ${{ secrets.ENV_FILE }}
          dotEnvLocalFile: ${{ secrets.ENV_FILE_LOCAL }}

      - name: Install dapp dependencies
        run: bun install
        working-directory: kit/dapp

      - name: Generate SettleMint code and addresses
        run: |
          bun codegen:settlemint
          bun addresses
        working-directory: kit/dapp

      - name: Start dev server
        run: |
          echo "Starting dev server..."
          nohup bun dev --port 3000 --hostname 0.0.0.0 > server.log 2>&1 &
          echo "SERVER_PID=$!" >> $GITHUB_ENV
          echo "Waiting 30 seconds for Next.js to initialize all routes..."
          sleep 30
          echo "Performing initial server check..."
          curl -v http://localhost:3000/ || echo "Initial check failed, will retry"
          timeout_seconds=120
          elapsed=0
          success=false

          while [ $elapsed -lt $timeout_seconds ]; do
            echo "Checking server status (${elapsed}s elapsed)..."
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/en || echo "failed")

            if [ "$status" = "200" ]; then
              echo "Server is ready! Status: $status"
              success=true
              break
            fi

            if [ "$status" = "307" ]; then
              echo "Server is ready (with redirect)! Status: $status"
              success=true
              break
            fi

            echo "Server not ready yet (status: $status). Recent logs:"
            tail -n 10 server.log || true
            sleep 15
            elapsed=$((elapsed + 15))
          done
          if [ "$success" = false ]; then
            echo "Server failed to start within $timeout_seconds seconds. Last server logs:"
            cat server.log
            echo "Attempting final direct check with verbose output:"
            curl -v http://localhost:3000/en || echo "Final check failed"
            exit 1
          fi

          echo "Dev server is ready at http://localhost:3000!"
        working-directory: kit/dapp

      - name: Run API Playwright tests
        id: playwright-api
        run:
          bun playwright test --config=playwright.api.config.ts
          --project=api-tests --retries 2 --reporter=html
        working-directory: kit/e2e
        env:
          CI: true

      - name: Run UI Playwright tests
        id: playwright-ui
        run:
          bun playwright test --config=playwright.ui.config.ts
          --project=ui-tests --retries 2 --reporter=html
        working-directory: kit/e2e
        env:
          CI: true

      - name: Send Slack notification
        if: ${{ !cancelled() }}
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ env.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "${{ (steps.playwright-api.outcome == 'success' && steps.playwright-ui.outcome == 'success') && ':white_check_mark: Asset Tokenization E2E Tests Passed (API & UI)' || ':x: Asset Tokenization E2E Tests Failed (API or UI)' }}\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run Details>"
            }

      - name: Stop dev server
        if: always()
        run: kill ${{ env.SERVER_PID }} || true
        working-directory: kit/dapp

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            kit/e2e/playwright-report/
            kit/e2e/test-results/
            kit/dapp/server.log
          retention-days: 1
