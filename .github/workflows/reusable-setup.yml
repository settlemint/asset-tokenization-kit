name: Setup Infrastructure (Reusable)

# This is a reusable workflow for setting up the common infrastructure
# needed for QA, integration, publish, and artifacts jobs.
#
# Usage:
# ```yaml
# jobs:
#   setup-and-run:
#     uses: ./.github/workflows/reusable-setup.yml
#     with:
#       turbo-command: 'ci:gha'  # required
#       runs-on: 'namespace-profile-atk'  # optional, defaults to 'namespace-profile-atk'
#       fetch-depth: 2  # optional, defaults to 2
#       use-pat-token: false  # optional, defaults to false
#     secrets:
#       OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
# ```

on:
  workflow_call:
    inputs:
      turbo-command:
        description: "Turbo command to run"
        required: true
        type: string
      runs-on:
        description: "Runner to use for the job"
        required: false
        type: string
        default: "namespace-profile-atk"
      fetch-depth:
        description: "Fetch depth for checkout"
        required: false
        type: number
        default: 2
      use-pat-token:
        description: "Whether to use PAT token for checkout"
        required: false
        type: boolean
        default: false
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN:
        required: true

permissions:
  contents: write
  issues: write
  pull-requests: write
  statuses: write
  checks: write
  packages: write
  id-token: write

jobs:
  setup-and-run:
    name: Setup and Run
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Setup 1Password
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        env:
          HARBOR_USER: op://platform/harbor/username
          HARBOR_PASS: op://platform/harbor/password
          PAT_TOKEN: op://platform/github-commit-pat/credential

      - name: Checkout repository (with PAT)
        if: ${{ inputs.use-pat-token }}
        uses: namespacelabs/nscloud-checkout-action@v7
        with:
          fetch-depth: ${{ inputs.fetch-depth }}
          token: ${{ env.PAT_TOKEN }}

      - name: Checkout repository (without PAT)
        if: ${{ !inputs.use-pat-token }}
        uses: namespacelabs/nscloud-checkout-action@v7
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - name: Set up turbo caching
        uses: namespace-actions/setup-turbocache@v0

      - name: Setup bun caches
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ./node_modules
            ./.turbo
            ./**/.turbo
            ~/.bun/install/cache

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Harbor
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: harbor.settlemint.com
          username: ${{ env.HARBOR_USER }}
          password: ${{ env.HARBOR_PASS }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install Helm Docs
        run: |
          brew install norwoodj/tap/helm-docs

      - name: Install Bun dependencies
        run: bun install

      - name: Launch docker compose
        run: |
          bun run dev:up

      - name: Install Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4

      - name: Turbo
        run: |
          ${{ inputs.turbo-command }}
        env:
          THE_GRAPH_PORT_LOCAL_DEPLOY: 8120 # For subgraph tests
          THE_GRAPH_PORT_LOCAL_QUERY: 8100 # For subgraph tests
