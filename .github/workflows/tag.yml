name: Tag

on:
  push:
    tags:
      - "v*"

jobs:
  codestudio:
    name: Codestudio
    runs-on: namespace-profile-atk
    environment: production
    steps:
      - name: Checkout repository
        uses: namespacelabs/nscloud-checkout-action@v7

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - name: Update package versions
        id: package-version
        run: bash .github/scripts/update-version.sh

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/settlemint/codestudio-asset-tokenization-kit
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: mode=max
          sbom: true

  custom-deployment:
    name: Custom Deployment dAPP
    environment: production
    runs-on: namespace-profile-atk
    steps:
      - name: Checkout repository
        uses: namespacelabs/nscloud-checkout-action@v7

      - name: Setup caches
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            .turbo
            ~/.bun/install/cache

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install Bun dependencies
        run: bun install

      - name: Connect to SettleMint
        uses: settlemint/settlemint-action@main
        with:
          instance: ${{ secrets.SETTLEMINT_INSTANCE }}
          access-token: ${{ secrets.SETTLEMINT_PERSONAL_ACCESS_TOKEN }}
          dotEnvFile: ${{ secrets.ENV_FILE }}
          dotEnvLocalFile: ${{ secrets.ENV_FILE_LOCAL }}

      - name: Turbo!
        run: bunx turbo codegen addresses build
        env:
          NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - name: Update package versions
        id: package-version
        run: bash .github/scripts/update-version.sh

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/settlemint/asset-tokenization-kit
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest

      - name: Extract SHA tag
        id: sha-tag
        run: |
          echo "sha_tag=$(echo "${{ steps.meta.outputs.tags }}" | grep "sha-" | head -n1)" >> $GITHUB_OUTPUT

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: kit/dapp
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: mode=max
          sbom: true

      - name: Run Drizzle migrations
        run: bunx drizzle-kit push --force
        working-directory: kit/dapp

      - name: Update Hasura
        uses: settlemint/settlemint-action@main
        with:
          auto-connect: false
          access-token: ${{ secrets.SETTLEMINT_ACCESS_TOKEN }}
          dotEnvFile: ${{ secrets.ENV_FILE }}
          dotEnvLocalFile: ${{ secrets.ENV_FILE_LOCAL }}
          command: hasura track -a

      - name: Update Custom Deployment
        uses: settlemint/settlemint-action@main
        with:
          auto-connect: false
          access-token: ${{ secrets.SETTLEMINT_ACCESS_TOKEN }}
          dotEnvFile: ${{ secrets.ENV_FILE }}
          dotEnvLocalFile: ${{ secrets.ENV_FILE_LOCAL }}
          command: platform update custom-deployment ${{ env.VERSION }} --wait

  create:
    name: NPM Package for settlemint create
    runs-on: namespace-profile-atk
    steps:
      - name: Setup 1Password
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        env:
          NPM_TOKEN: op://platform/npmjs/credential
          PAT_TOKEN: op://platform/github-commit-pat/credential

      - name: Checkout repository
        uses: namespacelabs/nscloud-checkout-action@v7
        with:
          token: ${{ env.PAT_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - name: Update package versions
        id: package-version
        run: bash .github/scripts/update-version.sh

      - name: Login to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ env.NPM_TOKEN }}" >> ~/.npmrc

      - name: Publish NPM Package
        continue-on-error: true
        run: |
          bun publish --tag ${{ env.TAG }} --access public

      - name: Auto-commit updated package versions
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update package versions [skip ci]"
          branch: main
          file_pattern: "package.json"

  helm:
    name: Helm Chart
    runs-on: namespace-profile-atk
    steps:
      - name: Checkout repository
        uses: namespacelabs/nscloud-checkout-action@v7

      - name: Setup 1Password
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        env:
          HARBOR_USER: op://platform/harbor/username
          HARBOR_PASS: op://platform/harbor/password

      - name: Login to Harbor
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: harbor.settlemint.com
          username: ${{ env.HARBOR_USER }}
          password: ${{ env.HARBOR_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4

      - name: Install YQ
        uses: alexellis/arkade-get@master
        with:
          print-summary: false
          yq: latest

      - name: Install Bun dependencies
        run: bun install

      - name: Version
        id: version
        shell: bash
        run: |
          if [[ $GITHUB_REF_SLUG =~ ^v?[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?$ ]]; then
            VERSION=$GITHUB_REF_SLUG
            SECONDARY_TAG="latest"
          else
            VERSION="1.0.0-${{ github.run_id }}"
            SECONDARY_TAG="latest"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "SECONDARY_TAG=$SECONDARY_TAG" >> $GITHUB_ENV

      - name: Set the versions
        run: |
          yq eval ".version = strenv(VERSION)" -i kit/charts/atk/Chart.yaml
          yq eval ".appVersion = strenv(VERSION)" -i kit/charts/atk/Chart.yaml

      - name: Turbo!
        run: bunx turbo genesis abi-output helm:push

      - name: Auto-commit updated package versions
        uses: stefanzweifel/git-auto-commit-action@b863ae1933cb653a53c021fe36dbb774e1fb9403 # v5
        with:
          commit_message: "chore: update Chart.yaml versions [skip ci]"
          branch: main
          file_pattern: "kit/charts/atk/Chart.yaml"
