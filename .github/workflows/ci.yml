name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  test:
    name: Test
    runs-on: namespace-profile-starterkit
    steps:
      - name: Setup 1Password
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        env:
          NPM_TOKEN: op://platform/npmjs/credential
          PAT_TOKEN: op://platform/github-commit-pat/credential

      - name: Checkout repository
        uses: namespacelabs/nscloud-checkout-action@v5
        with:
          token: ${{ env.PAT_TOKEN }}

      - name: Secret Scanning (Trivy)
        uses: aquasecurity/trivy-action@0.29.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          trivy-config: trivy-secret.yaml
          severity: "HIGH,CRITICAL"
          format: 'table'
          exit-code: '1'
          scanners: 'secret'

      - name: Setup caches
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ./.turbo
            ~/.bun/install/cache

      - name: Start Docker Compose
        run: docker compose up -d

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Bun dependencies
        run: bun install

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - name: Update package versions
        id: package-version
        run: bash .github/scripts/update-version.sh

      - name: Connect to SettleMint
        uses: settlemint/settlemint-action@main
        with:
          instance: https://console-release.settlemint.com
          access-token: ${{ secrets.SETTLEMINT_PERSONAL_ACCESS_TOKEN }}
          dotEnvFile: ${{ secrets.ENV_FILE }}
          dotEnvLocalFile: ${{ secrets.ENV_FILE_LOCAL }}

      - name: Lint & Check Types
        run: bunx turbo run lint test check-types

      - name: Test Deploy
        run: bunx turbo run test:deploy

      - name: Build predeployed subgraph
        working-directory: kit/subgraph
        run: |
         bun graph build --ipfs=https://ipfs.network.thegraph.com subgraph.yaml | tee subgraph-output.txt

      - name: Store genesis output
        uses: actions/upload-artifact@v4
        with:
          name: genesis-output
          path: kit/contracts/genesis-output.json

      - name: Store subgraph output
        uses: actions/upload-artifact@v4
        with:
          name: subgraph-output
          path: kit/subgraph/subgraph-output.txt

      - name: Store genesis output
        uses: actions/upload-artifact@v4
        with:
          name: abi-output
          path: |
            kit/contracts/artifacts/contracts/**/*.json
            !kit/contracts/artifacts/contracts/**/*.dbg.json

      - name: Login to GitHub Container Registry
        if: ${{ env.TAG != 'pr' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to npm
        if: ${{ env.TAG != 'pr' }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ env.NPM_TOKEN }}" >> ~/.npmrc

      - name: Publish
        if: ${{ env.TAG != 'pr' }}
        run: |
          PUBLISH_TASKS=""
          if [[ "$PUBLISH_NPM" == "true" ]]; then
            PUBLISH_TASKS="$PUBLISH_TASKS publish-npm"
          fi
          if [[ "$PUBLISH_DOCKER" == "true" ]]; then
            PUBLISH_TASKS="$PUBLISH_TASKS publish-docker"
          fi
          if [[ -n "$PUBLISH_TASKS" ]]; then
            bunx turbo run $PUBLISH_TASKS
          fi
        env:
          PUBLISH_NPM: true
          PUBLISH_DOCKER: true

      - name: Auto-commit updated package versions
        uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ env.TAG == 'latest' }}
        with:
          commit_message: "chore: update package versions [skip ci]"
          branch: main
          file_pattern: 'package.json'

      - name: Run Trivy vulnerability scanner on the docker image
        if: ${{ env.TAG != 'pr' }}
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: 'ghcr.io/settlemint/starterkit-asset-tokenization:${{ env.VERSION }}'
          format: 'table'
          exit-code: '1'
          trivy-config: trivy-secret.yaml
          severity: "HIGH,CRITICAL"
          scanners: 'secret'

      - name: Run Drizzle migrations
        if: ${{ env.TAG != 'pr' }}
        run: bunx drizzle-kit push --force
        working-directory: kit/dapp

      - name: Update Custom Deployment
        if: ${{ env.TAG != 'pr' }}
        uses: settlemint/settlemint-action@main
        with:
          auto-connect: false
          access-token: ${{ secrets.SETTLEMINT_ACCESS_TOKEN }}
          dotEnvFile: ${{ secrets.ENV_FILE }}
          dotEnvLocalFile: ${{ secrets.ENV_FILE_LOCAL }}
          command: platform update custom-deployment ${{ env.VERSION }} --wait
