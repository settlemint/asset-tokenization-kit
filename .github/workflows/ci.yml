name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: namespace-profile-starterkit
    steps:
      - name: Checkout repository
        uses: namespacelabs/nscloud-checkout-action@v5

      - name: Setup caches
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ~/.bun/install/cache
            node_modules

      - name: Process environment files
        run: bash .github/scripts/process-env.sh "${{ secrets.ENV_FILE }}" "${{ secrets.ENV_FILE_LOCAL }}"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Bun dependencies
        run: bun install

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - name: Update package versions
        id: package-version
        run: bash .github/scripts/update-version.sh

      - name: Connect
        run: bunx settlemint connect -a
        working-directory: kit/dapp

      - name: Lint & Check Types
        run: bunx turbo run lint check-types

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Publish
        run: |
          PUBLISH_TASKS=""
          if [[ "$PUBLISH_NPM" == "true" ]]; then
            PUBLISH_TASKS="$PUBLISH_TASKS publish-npm"
          fi
          if [[ "$PUBLISH_DOCKER" == "true" ]]; then
            PUBLISH_TASKS="$PUBLISH_TASKS publish-docker"
          fi
          if [[ -n "$PUBLISH_TASKS" ]]; then
            bunx turbo run $PUBLISH_TASKS
          fi
        env:
          PUBLISH_NPM: true
          PUBLISH_DOCKER: true

      - name: Update Custom Deployment
        if: ${{ env.TAG != 'pr' }}
        working-directory: kit/dapp
        run: |
          echo "Updating the Custom Deployment with the new version $VERSION"

          if [[ $TAG == "latest" ]]; then
            bun settlemint platform update custom-deployment $VERSION --prod --wait
          elif [[ $TAG == "main" ]]; then
            bun settlemint platform update custom-deployment $VERSION --wait
          fi