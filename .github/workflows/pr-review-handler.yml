name: PR Review Handler

on:
  pull_request_review:
    types: [submitted, dismissed]

jobs:
  # Get current QA status from labels
  get-qa-status:
    name: Get QA Status
    runs-on: namespace-profile-atk-services
    outputs:
      qa_status: ${{ steps.check_labels.outputs.qa_status }}
      has_approval: ${{ steps.check_approval.outputs.has_approval }}
    steps:
      - name: Check current labels
        id: check_labels
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ github.event.pull_request.number }};
            
            // Get current labels
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            });
            
            const labels = pr.labels.map(l => l.name);
            let qa_status = '';
            
            if (labels.includes('qa:success')) {
              qa_status = 'success';
            } else if (labels.includes('qa:failed')) {
              qa_status = 'failed';
            } else if (labels.includes('qa:running')) {
              qa_status = 'running';
            } else if (labels.includes('qa:pending')) {
              qa_status = 'pending';
            }
            
            core.setOutput('qa_status', qa_status);
            
      - name: Check approval status
        id: check_approval
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ github.event.pull_request.number }};
            
            // Get all reviews
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            });
            
            // Check if PR has approval (excluding the PR author)
            const has_approval = reviews.data.some(review => 
              review.state === 'APPROVED' && 
              review.user.login !== '${{ github.event.pull_request.user.login }}'
            );
            
            core.setOutput('has_approval', has_approval);

  # Update PR status label
  update-pr-status:
    name: Update PR Status
    needs: [get-qa-status]
    uses: ./.github/workflows/reusable-pr-status-labeler.yml
    with:
      pr_number: ${{ github.event.pull_request.number }}
      is_draft: ${{ github.event.pull_request.draft }}
      has_approval: ${{ fromJson(needs.get-qa-status.outputs.has_approval) }}
      qa_status: ${{ needs.get-qa-status.outputs.qa_status }}
      runs-on: namespace-profile-atk-services