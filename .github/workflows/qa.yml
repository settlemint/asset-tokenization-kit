name: qa

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  qa:
    name: QA
    uses: ./.github/workflows/reusable-qa.yml
    with:
      turbo-command: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "Running Turbo with --affected flag for PR"
          bunx turbo run ci:gha --affected --concurrency=100%
        else
          echo "Running full Turbo for main branch"
          bun run ci:gha:main --concurrency=100%
        fi
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

  pr-labels:
    name: PR Labels
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/reusable-pr-labels.yml

  secret-scanning:
    name: Secret Scanning
    uses: ./.github/workflows/reusable-secret-scanning.yml
    with:
      trivy-config: trivy-secret.yaml
      severity: "HIGH,CRITICAL"

  codeql:
    name: CodeQL
    uses: ./.github/workflows/reusable-codeql.yml
    with:
      language: "javascript-typescript"
      build-mode: "none"

  slack-notification-start:
    name: Slack Notification (Start)
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/reusable-slack-notification.yml
    with:
      workflow_conclusion: "running"
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

  slack-notification-end:
    name: Slack Notification (End)
    needs: [qa, secret-scanning, codeql, pr-labels]
    if: always() && github.event_name == 'pull_request'
    uses: ./.github/workflows/reusable-slack-notification.yml
    with:
      workflow_conclusion:
        ${{ needs.qa.result == 'success' && needs.secret-scanning.result !=
        'failure' && needs.codeql.result != 'failure' && needs.pr-labels.result
        != 'failure' && 'success' || 'failure' }}
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
