/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'CreateWalletInfoInput': { kind: 'INPUT_OBJECT'; name: 'CreateWalletInfoInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateWalletOutput': { kind: 'OBJECT'; name: 'CreateWalletOutput'; fields: { 'address': { name: 'address'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'derivationPath': { name: 'derivationPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreateWalletVerificationInput': { kind: 'INPUT_OBJECT'; name: 'CreateWalletVerificationInput'; isOneOf: false; inputFields: [{ name: 'otp'; type: { kind: 'INPUT_OBJECT'; name: 'OTPSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'pincode'; type: { kind: 'INPUT_OBJECT'; name: 'PincodeSettingsInput'; ofType: null; }; defaultValue: null }]; };
    'CreateWalletVerificationOutput': { kind: 'OBJECT'; name: 'CreateWalletVerificationOutput'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'parameters': { name: 'parameters'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'verificationType': { name: 'verificationType'; type: { kind: 'ENUM'; name: 'WalletVerificationType'; ofType: null; } }; }; };
    'DeleteWalletVerificationOutput': { kind: 'OBJECT'; name: 'DeleteWalletVerificationOutput'; fields: { 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'ID': unknown;
    'Int': unknown;
    'JSON': unknown;
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'StarterKitERC20Approve': { name: 'StarterKitERC20Approve'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionOutput'; ofType: null; } }; 'StarterKitERC20DexAddLiquidity': { name: 'StarterKitERC20DexAddLiquidity'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexApprove': { name: 'StarterKitERC20DexApprove'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexEmergencyWithdraw': { name: 'StarterKitERC20DexEmergencyWithdraw'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexFactoryCreatePair': { name: 'StarterKitERC20DexFactoryCreatePair'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexFactoryTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexGrantRole': { name: 'StarterKitERC20DexGrantRole'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexPause': { name: 'StarterKitERC20DexPause'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexPermit': { name: 'StarterKitERC20DexPermit'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexRemoveLiquidity': { name: 'StarterKitERC20DexRemoveLiquidity'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexRenounceRole': { name: 'StarterKitERC20DexRenounceRole'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexRevokeRole': { name: 'StarterKitERC20DexRevokeRole'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexSetFee': { name: 'StarterKitERC20DexSetFee'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexSwapBaseToQuote': { name: 'StarterKitERC20DexSwapBaseToQuote'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexSwapQuoteToBase': { name: 'StarterKitERC20DexSwapQuoteToBase'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexTransfer': { name: 'StarterKitERC20DexTransfer'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexTransferFrom': { name: 'StarterKitERC20DexTransferFrom'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20DexUnpause': { name: 'StarterKitERC20DexUnpause'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; ofType: null; } }; 'StarterKitERC20FactoryCreateToken': { name: 'StarterKitERC20FactoryCreateToken'; type: { kind: 'OBJECT'; name: 'StarterKitERC20FactoryTransactionOutput'; ofType: null; } }; 'StarterKitERC20Mint': { name: 'StarterKitERC20Mint'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionOutput'; ofType: null; } }; 'StarterKitERC20Permit': { name: 'StarterKitERC20Permit'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionOutput'; ofType: null; } }; 'StarterKitERC20RegistryAddToken': { name: 'StarterKitERC20RegistryAddToken'; type: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTransactionOutput'; ofType: null; } }; 'StarterKitERC20RenounceOwnership': { name: 'StarterKitERC20RenounceOwnership'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionOutput'; ofType: null; } }; 'StarterKitERC20Transfer': { name: 'StarterKitERC20Transfer'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionOutput'; ofType: null; } }; 'StarterKitERC20TransferFrom': { name: 'StarterKitERC20TransferFrom'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionOutput'; ofType: null; } }; 'StarterKitERC20TransferOwnership': { name: 'StarterKitERC20TransferOwnership'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionOutput'; ofType: null; } }; 'createWallet': { name: 'createWallet'; type: { kind: 'OBJECT'; name: 'CreateWalletOutput'; ofType: null; } }; 'createWalletVerification': { name: 'createWalletVerification'; type: { kind: 'OBJECT'; name: 'CreateWalletVerificationOutput'; ofType: null; } }; 'deleteWalletVerification': { name: 'deleteWalletVerification'; type: { kind: 'OBJECT'; name: 'DeleteWalletVerificationOutput'; ofType: null; } }; 'verifyWalletVerificationChallenge': { name: 'verifyWalletVerificationChallenge'; type: { kind: 'OBJECT'; name: 'VerifyWalletVerificationChallengeOutput'; ofType: null; } }; }; };
    'OTPAlgorithm': { name: 'OTPAlgorithm'; enumValues: 'SHA1' | 'SHA3_224' | 'SHA3_256' | 'SHA3_384' | 'SHA3_512' | 'SHA224' | 'SHA256' | 'SHA384' | 'SHA512'; };
    'OTPSettingsInput': { kind: 'INPUT_OBJECT'; name: 'OTPSettingsInput'; isOneOf: false; inputFields: [{ name: 'algorithm'; type: { kind: 'ENUM'; name: 'OTPAlgorithm'; ofType: null; }; defaultValue: null }, { name: 'digits'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'period'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'PincodeSettingsInput': { kind: 'INPUT_OBJECT'; name: 'PincodeSettingsInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'pincode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'StarterKitERC20': { name: 'StarterKitERC20'; type: { kind: 'OBJECT'; name: 'StarterKitERC20'; ofType: null; } }; 'StarterKitERC20ApproveReceipt': { name: 'StarterKitERC20ApproveReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20Dex': { name: 'StarterKitERC20Dex'; type: { kind: 'OBJECT'; name: 'StarterKitERC20Dex'; ofType: null; } }; 'StarterKitERC20DexAddLiquidityReceipt': { name: 'StarterKitERC20DexAddLiquidityReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexApproveReceipt': { name: 'StarterKitERC20DexApproveReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexEmergencyWithdrawReceipt': { name: 'StarterKitERC20DexEmergencyWithdrawReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexFactory': { name: 'StarterKitERC20DexFactory'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexFactory'; ofType: null; } }; 'StarterKitERC20DexFactoryCreatePairReceipt': { name: 'StarterKitERC20DexFactoryCreatePairReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexFactoryTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexGrantRoleReceipt': { name: 'StarterKitERC20DexGrantRoleReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexPauseReceipt': { name: 'StarterKitERC20DexPauseReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexPermitReceipt': { name: 'StarterKitERC20DexPermitReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexRemoveLiquidityReceipt': { name: 'StarterKitERC20DexRemoveLiquidityReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexRenounceRoleReceipt': { name: 'StarterKitERC20DexRenounceRoleReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexRevokeRoleReceipt': { name: 'StarterKitERC20DexRevokeRoleReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexSetFeeReceipt': { name: 'StarterKitERC20DexSetFeeReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexSwapBaseToQuoteReceipt': { name: 'StarterKitERC20DexSwapBaseToQuoteReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexSwapQuoteToBaseReceipt': { name: 'StarterKitERC20DexSwapQuoteToBaseReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexTransferFromReceipt': { name: 'StarterKitERC20DexTransferFromReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexTransferReceipt': { name: 'StarterKitERC20DexTransferReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20DexUnpauseReceipt': { name: 'StarterKitERC20DexUnpauseReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20Factory': { name: 'StarterKitERC20Factory'; type: { kind: 'OBJECT'; name: 'StarterKitERC20Factory'; ofType: null; } }; 'StarterKitERC20FactoryCreateTokenReceipt': { name: 'StarterKitERC20FactoryCreateTokenReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20FactoryTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20MintReceipt': { name: 'StarterKitERC20MintReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20PermitReceipt': { name: 'StarterKitERC20PermitReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20Registry': { name: 'StarterKitERC20Registry'; type: { kind: 'OBJECT'; name: 'StarterKitERC20Registry'; ofType: null; } }; 'StarterKitERC20RegistryAddTokenReceipt': { name: 'StarterKitERC20RegistryAddTokenReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20RenounceOwnershipReceipt': { name: 'StarterKitERC20RenounceOwnershipReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20TransferFromReceipt': { name: 'StarterKitERC20TransferFromReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20TransferOwnershipReceipt': { name: 'StarterKitERC20TransferOwnershipReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionReceiptOutput'; ofType: null; } }; 'StarterKitERC20TransferReceipt': { name: 'StarterKitERC20TransferReceipt'; type: { kind: 'OBJECT'; name: 'StarterKitERC20TransactionReceiptOutput'; ofType: null; } }; 'getPendingAndRecentlyProcessedTransactions': { name: 'getPendingAndRecentlyProcessedTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getPendingTransactions': { name: 'getPendingTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getProcessedTransactions': { name: 'getProcessedTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getTransaction': { name: 'getTransaction'; type: { kind: 'OBJECT'; name: 'TransactionOutput'; ofType: null; } }; 'getWalletVerificationChallenges': { name: 'getWalletVerificationChallenges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WalletVerificationChallenge'; ofType: null; }; }; } }; 'getWalletVerifications': { name: 'getWalletVerifications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WalletVerification'; ofType: null; }; }; } }; }; };
    'StarterKitERC20': { kind: 'OBJECT'; name: 'StarterKitERC20'; fields: { 'DOMAIN_SEPARATOR': { name: 'DOMAIN_SEPARATOR'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'allowance': { name: 'allowance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'balanceOf': { name: 'balanceOf'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decimals': { name: 'decimals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'eip712Domain': { name: 'eip712Domain'; type: { kind: 'OBJECT'; name: 'StarterKitERC20Eip712DomainOutput'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'nonces': { name: 'nonces'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'owner': { name: 'owner'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'symbol': { name: 'symbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20ApproveInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20ApproveInput'; isOneOf: false; inputFields: [{ name: 'spender'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20Dex': { kind: 'OBJECT'; name: 'StarterKitERC20Dex'; fields: { 'ADMIN_ROLE': { name: 'ADMIN_ROLE'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'DEFAULT_ADMIN_ROLE': { name: 'DEFAULT_ADMIN_ROLE'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'DOMAIN_SEPARATOR': { name: 'DOMAIN_SEPARATOR'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'FEE_SETTER_ROLE': { name: 'FEE_SETTER_ROLE'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'MAX_FEE': { name: 'MAX_FEE'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'MAX_TOKEN_AMOUNT': { name: 'MAX_TOKEN_AMOUNT'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'allowance': { name: 'allowance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'balanceOf': { name: 'balanceOf'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'baseToken': { name: 'baseToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decimals': { name: 'decimals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'eip712Domain': { name: 'eip712Domain'; type: { kind: 'OBJECT'; name: 'StarterKitERC20DexEip712DomainOutput'; ofType: null; } }; 'getAmountOfTokens': { name: 'getAmountOfTokens'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'getBaseToQuotePrice': { name: 'getBaseToQuotePrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'getBaseTokenBalance': { name: 'getBaseTokenBalance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'getQuoteToBasePrice': { name: 'getQuoteToBasePrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'getQuoteTokenBalance': { name: 'getQuoteTokenBalance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'getRoleAdmin': { name: 'getRoleAdmin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasRole': { name: 'hasRole'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'nonces': { name: 'nonces'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'paused': { name: 'paused'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'quoteToken': { name: 'quoteToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'supportsInterface': { name: 'supportsInterface'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'swapFee': { name: 'swapFee'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'symbol': { name: 'symbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'timelock': { name: 'timelock'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verifyBalances': { name: 'verifyBalances'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'StarterKitERC20DexAddLiquidityInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexAddLiquidityInput'; isOneOf: false; inputFields: [{ name: 'baseAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'quoteAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexApproveInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexApproveInput'; isOneOf: false; inputFields: [{ name: 'spender'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexEip712DomainOutput': { kind: 'OBJECT'; name: 'StarterKitERC20DexEip712DomainOutput'; fields: { 'chainId': { name: 'chainId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'extensions': { name: 'extensions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'fields': { name: 'fields'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'salt': { name: 'salt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verifyingContract': { name: 'verifyingContract'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20DexEmergencyWithdrawInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexEmergencyWithdrawInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexFactory': { kind: 'OBJECT'; name: 'StarterKitERC20DexFactory'; fields: { 'allPairs': { name: 'allPairs'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'allPairsLength': { name: 'allPairsLength'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'getPair': { name: 'getPair'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'StarterKitERC20DexFactoryCreatePairInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexFactoryCreatePairInput'; isOneOf: false; inputFields: [{ name: 'baseToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'quoteToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexFactoryTransactionOutput': { kind: 'OBJECT'; name: 'StarterKitERC20DexFactoryTransactionOutput'; fields: { 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20DexFactoryTransactionReceiptOutput': { kind: 'OBJECT'; name: 'StarterKitERC20DexFactoryTransactionReceiptOutput'; fields: { 'blobGasPrice': { name: 'blobGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blobGasUsed': { name: 'blobGasUsed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cumulativeGasUsed': { name: 'cumulativeGasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'logsBloom': { name: 'logsBloom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertReasonDecoded': { name: 'revertReasonDecoded'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'root': { name: 'root'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionReceiptStatus'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StarterKitERC20DexGrantRoleInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexGrantRoleInput'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexPermitInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexPermitInput'; isOneOf: false; inputFields: [{ name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'owner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'r'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 's'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'spender'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'v'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexRemoveLiquidityInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexRemoveLiquidityInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'minBaseAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'minQuoteAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexRenounceRoleInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexRenounceRoleInput'; isOneOf: false; inputFields: [{ name: 'callerConfirmation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexRevokeRoleInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexRevokeRoleInput'; isOneOf: false; inputFields: [{ name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexSetFeeInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexSetFeeInput'; isOneOf: false; inputFields: [{ name: '_newFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexSwapBaseToQuoteInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexSwapBaseToQuoteInput'; isOneOf: false; inputFields: [{ name: 'baseAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'minQuoteAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexSwapQuoteToBaseInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexSwapQuoteToBaseInput'; isOneOf: false; inputFields: [{ name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'minBaseAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'quoteAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexTransactionOutput': { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionOutput'; fields: { 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20DexTransactionReceiptOutput': { kind: 'OBJECT'; name: 'StarterKitERC20DexTransactionReceiptOutput'; fields: { 'blobGasPrice': { name: 'blobGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blobGasUsed': { name: 'blobGasUsed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cumulativeGasUsed': { name: 'cumulativeGasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'logsBloom': { name: 'logsBloom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertReasonDecoded': { name: 'revertReasonDecoded'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'root': { name: 'root'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionReceiptStatus'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StarterKitERC20DexTransferFromInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexTransferFromInput'; isOneOf: false; inputFields: [{ name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20DexTransferInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20DexTransferInput'; isOneOf: false; inputFields: [{ name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20Eip712DomainOutput': { kind: 'OBJECT'; name: 'StarterKitERC20Eip712DomainOutput'; fields: { 'chainId': { name: 'chainId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'extensions': { name: 'extensions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'fields': { name: 'fields'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'salt': { name: 'salt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verifyingContract': { name: 'verifyingContract'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20Factory': { kind: 'OBJECT'; name: 'StarterKitERC20Factory'; fields: { '_registry': { name: '_registry'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'registry': { name: 'registry'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20FactoryCreateTokenInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20FactoryCreateTokenInput'; isOneOf: false; inputFields: [{ name: 'extraData_'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name_'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'symbol_'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20FactoryTransactionOutput': { kind: 'OBJECT'; name: 'StarterKitERC20FactoryTransactionOutput'; fields: { 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20FactoryTransactionReceiptOutput': { kind: 'OBJECT'; name: 'StarterKitERC20FactoryTransactionReceiptOutput'; fields: { 'blobGasPrice': { name: 'blobGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blobGasUsed': { name: 'blobGasUsed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cumulativeGasUsed': { name: 'cumulativeGasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'logsBloom': { name: 'logsBloom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertReasonDecoded': { name: 'revertReasonDecoded'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'root': { name: 'root'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionReceiptStatus'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StarterKitERC20MintInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20MintInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20PermitInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20PermitInput'; isOneOf: false; inputFields: [{ name: 'deadline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'owner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'r'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 's'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'spender'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'v'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20Registry': { kind: 'OBJECT'; name: 'StarterKitERC20Registry'; fields: { 'getTokenByAddress': { name: 'getTokenByAddress'; type: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryGetTokenByAddressOutput'; ofType: null; } }; 'getTokenByIndex': { name: 'getTokenByIndex'; type: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryGetTokenByIndexOutput'; ofType: null; } }; 'getTokenBySymbol': { name: 'getTokenBySymbol'; type: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryGetTokenBySymbolOutput'; ofType: null; } }; 'getTokenList': { name: 'getTokenList'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTuple0GetTokenListOutput'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'StarterKitERC20RegistryAddTokenInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20RegistryAddTokenInput'; isOneOf: false; inputFields: [{ name: 'extraData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'factoryAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'tokenAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20RegistryGetTokenByAddressOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryGetTokenByAddressOutput'; fields: { 'token': { name: 'token'; type: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTokenGetTokenByAddressOutput'; ofType: null; } }; }; };
    'StarterKitERC20RegistryGetTokenByIndexOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryGetTokenByIndexOutput'; fields: { 'token': { name: 'token'; type: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTokenGetTokenByIndexOutput'; ofType: null; } }; }; };
    'StarterKitERC20RegistryGetTokenBySymbolOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryGetTokenBySymbolOutput'; fields: { 'token': { name: 'token'; type: { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTokenGetTokenBySymbolOutput'; ofType: null; } }; }; };
    'StarterKitERC20RegistryTokenGetTokenByAddressOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTokenGetTokenByAddressOutput'; fields: { 'extraData': { name: 'extraData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'symbol': { name: 'symbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20RegistryTokenGetTokenByIndexOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTokenGetTokenByIndexOutput'; fields: { 'extraData': { name: 'extraData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'symbol': { name: 'symbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20RegistryTokenGetTokenBySymbolOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTokenGetTokenBySymbolOutput'; fields: { 'extraData': { name: 'extraData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'symbol': { name: 'symbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20RegistryTransactionOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTransactionOutput'; fields: { 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20RegistryTransactionReceiptOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTransactionReceiptOutput'; fields: { 'blobGasPrice': { name: 'blobGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blobGasUsed': { name: 'blobGasUsed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cumulativeGasUsed': { name: 'cumulativeGasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'logsBloom': { name: 'logsBloom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertReasonDecoded': { name: 'revertReasonDecoded'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'root': { name: 'root'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionReceiptStatus'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StarterKitERC20RegistryTuple0GetTokenListOutput': { kind: 'OBJECT'; name: 'StarterKitERC20RegistryTuple0GetTokenListOutput'; fields: { 'extraData': { name: 'extraData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'symbol': { name: 'symbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20TransactionOutput': { kind: 'OBJECT'; name: 'StarterKitERC20TransactionOutput'; fields: { 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StarterKitERC20TransactionReceiptOutput': { kind: 'OBJECT'; name: 'StarterKitERC20TransactionReceiptOutput'; fields: { 'blobGasPrice': { name: 'blobGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blobGasUsed': { name: 'blobGasUsed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cumulativeGasUsed': { name: 'cumulativeGasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'logsBloom': { name: 'logsBloom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertReasonDecoded': { name: 'revertReasonDecoded'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'root': { name: 'root'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionReceiptStatus'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StarterKitERC20TransferFromInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20TransferFromInput'; isOneOf: false; inputFields: [{ name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20TransferInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20TransferInput'; isOneOf: false; inputFields: [{ name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StarterKitERC20TransferOwnershipInput': { kind: 'INPUT_OBJECT'; name: 'StarterKitERC20TransferOwnershipInput'; isOneOf: false; inputFields: [{ name: 'newOwner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'String': unknown;
    'Subscription': { kind: 'OBJECT'; name: 'Subscription'; fields: { 'getPendingAndRecentlyProcessedTransactions': { name: 'getPendingAndRecentlyProcessedTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getPendingTransactions': { name: 'getPendingTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getProcessedTransactions': { name: 'getProcessedTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getTransaction': { name: 'getTransaction'; type: { kind: 'OBJECT'; name: 'TransactionOutput'; ofType: null; } }; }; };
    'TransactionOutput': { kind: 'OBJECT'; name: 'TransactionOutput'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'functionName': { name: 'functionName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'receipt': { name: 'receipt'; type: { kind: 'OBJECT'; name: 'TransactionReceiptOutput'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionReceiptOutput': { kind: 'OBJECT'; name: 'TransactionReceiptOutput'; fields: { 'blobGasPrice': { name: 'blobGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blobGasUsed': { name: 'blobGasUsed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cumulativeGasUsed': { name: 'cumulativeGasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'logsBloom': { name: 'logsBloom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertReasonDecoded': { name: 'revertReasonDecoded'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'root': { name: 'root'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionReceiptStatus'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TransactionReceiptStatus': { name: 'TransactionReceiptStatus'; enumValues: 'Reverted' | 'Success'; };
    'TransactionsPaginatedOutput': { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'records': { name: 'records'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionOutput'; ofType: null; }; }; }; } }; }; };
    'VerifyWalletVerificationChallengeOutput': { kind: 'OBJECT'; name: 'VerifyWalletVerificationChallengeOutput'; fields: { 'verified': { name: 'verified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'WalletVerification': { kind: 'OBJECT'; name: 'WalletVerification'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationType': { name: 'verificationType'; type: { kind: 'ENUM'; name: 'WalletVerificationType'; ofType: null; } }; }; };
    'WalletVerificationChallenge': { kind: 'OBJECT'; name: 'WalletVerificationChallenge'; fields: { 'challenge': { name: 'challenge'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationType': { name: 'verificationType'; type: { kind: 'ENUM'; name: 'WalletVerificationType'; ofType: null; } }; }; };
    'WalletVerificationType': { name: 'WalletVerificationType'; enumValues: 'OTP' | 'PINCODE'; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'portal';
  query: 'Query';
  mutation: 'Mutation';
  subscription: 'Subscription';
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';
