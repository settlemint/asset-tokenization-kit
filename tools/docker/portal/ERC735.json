{
  "abi": [
    {
      "type": "function",
      "name": "addClaim",
      "inputs": [
        {
          "name": "_topic",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_scheme",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_issuer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_signature",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_uri",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "claimRequestId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getClaim",
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "topic",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimIdsByTopic",
      "inputs": [
        {
          "name": "_topic",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "claimIds",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeClaim",
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "success",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ClaimAdded",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimChanged",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimRemoved",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ClaimDoesNotExist",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ClaimNotValidAccordingToIssuer",
      "inputs": [
        {
          "name": "issuer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "topic",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "IssuerCannotBeZeroAddress",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60808060405234601557610c09908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081634eee424a146106f55750806380e9e9e11461064f578063b1a34e0d146101185763c9100bcb14610048575f80fd5b3461011457602036600319011261011457600480355f9081526020819052604090819020805460018201546002830154935190949193610110936100be936101029385936100f49391926001600160a01b03909116916100d19160058201916100c591810190829087908a908290600301610a97565b038761098c565b60405197888092610a97565b60405198899889526020890152604088015260c0606088015260c0870190610a12565b908582036080870152610a12565b9083820360a0850152610a12565b0390f35b5f80fd5b346101145760c0366003190112610114576024356004356044356001600160a01b038116908190036101145760643567ffffffffffffffff8111610114576101649036906004016109f4565b9160843567ffffffffffffffff8111610114576101859036906004016109f4565b60a43567ffffffffffffffff81116101145736602382011215610114576101b69036906024816004013591016109ae565b94308403610575575b6040516020810190858252846040820152604081526101df60608261098c565b5190205f81815260208190526040902084815560018101839055865191969160039091019067ffffffffffffffff81116103e057610227816102218454610a5f565b84610b7d565b6020601f8211600114610515579080610254925f9161050a575b508160011b915f199060031b1c19161790565b90555b855f525f602052600460405f2001835167ffffffffffffffff81116103e057610284816102218454610a5f565b6020601f82116001146104aa5790806102b0925f9161049f57508160011b915f199060031b1c19161790565b90555b855f525f602052600560405f2001875167ffffffffffffffff81116103e0576102e0816102218454610a5f565b6020601f821160011461043d57908061030c925f9161043257508160011b915f199060031b1c19161790565b90555b5f868152602081905260409020600201546001600160a01b031685146103f457835f52600160205260405f20918254680100000000000000008110156103e0576020988895866103a261038c857f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c59960016103d498018155610a36565b819391549060031b91821b915f19901b19161790565b9055865f525f8b52600260405f2001896bffffffffffffffffffffffff60a01b82541617905560405194859485610bc0565b0390a45b604051908152f35b634e487b7160e01b5f52604160045260245ffd5b7f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b139161042a602098889560405194859485610bc0565b0390a46103d8565b90508a01518b610241565b601f19821690835f52805f20915f5b8c828210610487575050908360019493921061046f575b5050811b01905561030f565b8b01515f1960f88460031b161c191690558a80610463565b6001849560209395849301518155019401920161044c565b90508601518b610241565b601f19821690835f52805f20915f5b8181106104f2575090836001949392106104da575b5050811b0190556102b3565b8701515f1960f88460031b161c191690558a806104ce565b9192602060018192868c0151815501940192016104b9565b90508401518b610241565b601f19821690835f52805f20915f5b81811061055d57509083600194939210610545575b5050811b019055610257565b8501515f1960f88460031b161c191690558a80610539565b9192602060018192868a015181550194019201610524565b60405163604b4d3760e11b81523060048201526024810184905260806044820152602081806105bc6105aa608483018b610a12565b82810360031901606484015287610a12565b0381885afa908115610644575f91610609575b506101bf5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b90506020813d60201161063c575b816106246020938361098c565b810103126101145751801515810361011457876105cf565b3d9150610617565b6040513d5f823e3d90fd5b34610114576020366003190112610114576004355f52600160205260405f20604051806020835491828152019081935f5260205f20905f5b8181106106df575050508161069d91038261098c565b604051918291602083019060208452518091526040830191905f5b8181106106c6575050500390f35b82518452859450602093840193909201916001016106b8565b8254845260209093019260019283019201610687565b346101145760203660031901126101145760043590815f525f60205260405f205490811561093657505f815f52600160205260405f2054905b825f526001602052836107448260405f20610a36565b90549060031b1c14610930575f19811461091c5760010181811061072e57905b825f52600160205260405f20905f19810190811161091c5761078c61038c916107a593610a36565b90549060031b1c92845f52600160205260405f20610a36565b9055805f52600160205260405f2080548015610908575f1901906107c98282610a36565b81545f19600392831b1b19169091559190555f838152602081815260409182902060018101546002820154935190815260809281018390526001600160a01b03909316949386937f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a9390928392610872926005830192610864926004820192610856929088019101610a97565b908582036040870152610a97565b908382036060850152610a97565b0390a45f525f602052600560405f205f81555f60018201555f600282015561089c60038201610b2e565b6108a860048201610b2e565b016108b38154610a5f565b90816108c5575b602060405160018152f35b81601f5f93116001146108dc5750555b80806108ba565b818352602083206108f891601f0160051c810190600101610b18565b80825281602081209155556108d5565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b90610764565b62461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b90601f8019910116810190811067ffffffffffffffff8211176103e057604052565b92919267ffffffffffffffff82116103e057604051916109d8601f8201601f19166020018461098c565b829481845281830111610114578281602093845f960137010152565b9080601f8301121561011457816020610a0f933591016109ae565b90565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b8054821015610a4b575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b90600182811c92168015610a8d575b6020831014610a7957565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610a6e565b5f9291815491610aa683610a5f565b8083529260018116908115610afb5750600114610ac257505050565b5f9081526020812093945091925b838310610ae1575060209250010190565b600181602092949394548385870101520191019190610ad0565b915050602093945060ff929192191683830152151560051b010190565b818110610b23575050565b5f8155600101610b18565b610b388154610a5f565b9081610b42575050565b81601f5f9311600114610b545750555b565b81835260208320610b7091601f0160051c810190600101610b18565b8082528160208120915555565b9190601f8111610b8c57505050565b610b52925f5260205f20906020601f840160051c83019310610bb6575b601f0160051c0190610b18565b9091508190610ba9565b92610be0610a0f9593610bee938652608060208701526080860190610a12565b908482036040860152610a12565b916060818403910152610a1256fea164736f6c634300081c000a",
    "sourceMap": "560:4761:33:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c9081634eee424a146106f55750806380e9e9e11461064f578063b1a34e0d146101185763c9100bcb14610048575f80fd5b3461011457602036600319011261011457600480355f9081526020819052604090819020805460018201546002830154935190949193610110936100be936101029385936100f49391926001600160a01b03909116916100d19160058201916100c591810190829087908a908290600301610a97565b038761098c565b60405197888092610a97565b60405198899889526020890152604088015260c0606088015260c0870190610a12565b908582036080870152610a12565b9083820360a0850152610a12565b0390f35b5f80fd5b346101145760c0366003190112610114576024356004356044356001600160a01b038116908190036101145760643567ffffffffffffffff8111610114576101649036906004016109f4565b9160843567ffffffffffffffff8111610114576101859036906004016109f4565b60a43567ffffffffffffffff81116101145736602382011215610114576101b69036906024816004013591016109ae565b94308403610575575b6040516020810190858252846040820152604081526101df60608261098c565b5190205f81815260208190526040902084815560018101839055865191969160039091019067ffffffffffffffff81116103e057610227816102218454610a5f565b84610b7d565b6020601f8211600114610515579080610254925f9161050a575b508160011b915f199060031b1c19161790565b90555b855f525f602052600460405f2001835167ffffffffffffffff81116103e057610284816102218454610a5f565b6020601f82116001146104aa5790806102b0925f9161049f57508160011b915f199060031b1c19161790565b90555b855f525f602052600560405f2001875167ffffffffffffffff81116103e0576102e0816102218454610a5f565b6020601f821160011461043d57908061030c925f9161043257508160011b915f199060031b1c19161790565b90555b5f868152602081905260409020600201546001600160a01b031685146103f457835f52600160205260405f20918254680100000000000000008110156103e0576020988895866103a261038c857f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c59960016103d498018155610a36565b819391549060031b91821b915f19901b19161790565b9055865f525f8b52600260405f2001896bffffffffffffffffffffffff60a01b82541617905560405194859485610bc0565b0390a45b604051908152f35b634e487b7160e01b5f52604160045260245ffd5b7f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b139161042a602098889560405194859485610bc0565b0390a46103d8565b90508a01518b610241565b601f19821690835f52805f20915f5b8c828210610487575050908360019493921061046f575b5050811b01905561030f565b8b01515f1960f88460031b161c191690558a80610463565b6001849560209395849301518155019401920161044c565b90508601518b610241565b601f19821690835f52805f20915f5b8181106104f2575090836001949392106104da575b5050811b0190556102b3565b8701515f1960f88460031b161c191690558a806104ce565b9192602060018192868c0151815501940192016104b9565b90508401518b610241565b601f19821690835f52805f20915f5b81811061055d57509083600194939210610545575b5050811b019055610257565b8501515f1960f88460031b161c191690558a80610539565b9192602060018192868a015181550194019201610524565b60405163604b4d3760e11b81523060048201526024810184905260806044820152602081806105bc6105aa608483018b610a12565b82810360031901606484015287610a12565b0381885afa908115610644575f91610609575b506101bf5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b90506020813d60201161063c575b816106246020938361098c565b810103126101145751801515810361011457876105cf565b3d9150610617565b6040513d5f823e3d90fd5b34610114576020366003190112610114576004355f52600160205260405f20604051806020835491828152019081935f5260205f20905f5b8181106106df575050508161069d91038261098c565b604051918291602083019060208452518091526040830191905f5b8181106106c6575050500390f35b82518452859450602093840193909201916001016106b8565b8254845260209093019260019283019201610687565b346101145760203660031901126101145760043590815f525f60205260405f205490811561093657505f815f52600160205260405f2054905b825f526001602052836107448260405f20610a36565b90549060031b1c14610930575f19811461091c5760010181811061072e57905b825f52600160205260405f20905f19810190811161091c5761078c61038c916107a593610a36565b90549060031b1c92845f52600160205260405f20610a36565b9055805f52600160205260405f2080548015610908575f1901906107c98282610a36565b81545f19600392831b1b19169091559190555f838152602081815260409182902060018101546002820154935190815260809281018390526001600160a01b03909316949386937f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a9390928392610872926005830192610864926004820192610856929088019101610a97565b908582036040870152610a97565b908382036060850152610a97565b0390a45f525f602052600560405f205f81555f60018201555f600282015561089c60038201610b2e565b6108a860048201610b2e565b016108b38154610a5f565b90816108c5575b602060405160018152f35b81601f5f93116001146108dc5750555b80806108ba565b818352602083206108f891601f0160051c810190600101610b18565b80825281602081209155556108d5565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b90610764565b62461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b90601f8019910116810190811067ffffffffffffffff8211176103e057604052565b92919267ffffffffffffffff82116103e057604051916109d8601f8201601f19166020018461098c565b829481845281830111610114578281602093845f960137010152565b9080601f8301121561011457816020610a0f933591016109ae565b90565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b8054821015610a4b575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b90600182811c92168015610a8d575b6020831014610a7957565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610a6e565b5f9291815491610aa683610a5f565b8083529260018116908115610afb5750600114610ac257505050565b5f9081526020812093945091925b838310610ae1575060209250010190565b600181602092949394548385870101520191019190610ad0565b915050602093945060ff929192191683830152151560051b010190565b818110610b23575050565b5f8155600101610b18565b610b388154610a5f565b9081610b42575050565b81601f5f9311600114610b545750555b565b81835260208320610b7091601f0160051c810190600101610b18565b8082528160208120915555565b9190601f8111610b8c57505050565b610b52925f5260205f20906020601f840160051c83019310610bb6575b601f0160051c0190610b18565b9091508190610ba9565b92610be0610a0f9593610bee938652608060208701526080860190610a12565b908482036040860152610a12565b916060818403910152610a1256fea164736f6c634300081c000a",
    "sourceMap": "560:4761:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;560:4761:33;;;;;;;;;;;;;;;;;;;;;;;4846:24;;560:4761;4884:24;;;560:4761;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;560:4761:33;;;;;;4999:21;;;;560:4761;;4963:22;;;560:4761;;;;;;;;4922:27;;560:4761;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;560:4761:33;;;;;;;;;;-1:-1:-1;;;;;560:4761:33;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2071:4;;2052:24;;2048:198;;560:4761;;;;2284:27;;560:4761;;;;;;;;;;2284:27;;;560:4761;2284:27;;:::i;:::-;560:4761;2274:38;;560:4761;;;;;;;;;;;;;;;2363:23;;560:4761;;;;;2274:38;;560:4761;2406:26;;;;;560:4761;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:21;560:4761;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2494:20;560:4761;;;2494:20;560:4761;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:23;;560:4761;-1:-1:-1;;;;;560:4761:33;2536:34;;;;560:4761;;;;;;;;;;;;;;;;;;;;;;;;;;2689:70;560:4761;;2689:70;560:4761;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:23;560:4761;;;2636:23;560:4761;;;;;;;;;;;;2689:70;;;;;:::i;:::-;;;;2532:346;560:4761;;;;;;;;;;;;;;;;;;2532:346;2795:72;560:4761;2795:72;560:4761;;;;;;2795:72;;;;;:::i;:::-;;;;2532:346;;560:4761;;;;;;;;;;2284:27;;560:4761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26;560:4761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:27;;560:4761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26;560:4761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:27;;560:4761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26;560:4761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2048:198;560:4761;;-1:-1:-1;;;2117:87:33;;2071:4;560:4761;2117:87;;560:4761;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;560:4761:33;;;;;;;:::i;:::-;2117:87;;;;;;;;;;560:4761;2117:87;;;2048:198;560:4761;2048:198;560:4761;;;-1:-1:-1;;;560:4761:33;;;;;;;;;;;;-1:-1:-1;;;560:4761:33;;;;;;;2117:87;;;560:4761;2117:87;;560:4761;2117:87;;;;;;560:4761;2117:87;;;:::i;:::-;;;560:4761;;;;;;;;;;;;2117:87;;;;;;-1:-1:-1;2117:87:33;;;560:4761;;;;;;;;;;;;;;;-1:-1:-1;;560:4761:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;560:4761:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;560:4761:33;;;;;;;;;;;;;;;;;3496:11;;;3492:95;;3597:22;560:4761;;;;;;;;;;;3690:175;;560:4761;;;;;;;3697:34;560:4761;;;;3697:34;:::i;:::-;560:4761;;;;;;3697:46;;;-1:-1:-1;;560:4761:33;;;;;;3790:25;;;3690:175;3786:69;3835:5;3690:175;560:4761;;;;;;;;;;;;;;;;;;;3912:39;3875:34;3912:39;560:4761;3912:39;;:::i;:::-;560:4761;;;;;;;;;;;;;;;;3875:34;:::i;560:4761::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;560:4761:33;;;;;;:::i;:::-;;;-1:-1:-1;;560:4761:33;;;;;;;;;;;;;-1:-1:-1;560:4761:33;;;;;;;;;;;;-1:-1:-1;4073:24:33;;560:4761;4111:24;;;560:4761;;;;;;;;;;;;;-1:-1:-1;;;;;560:4761:33;;;;;;;4005:252;;560:4761;;;;;;4226:21;;;;560:4761;;;4190:22;;;560:4761;;;;;;4149:27;560:4761;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;4005:252;;;560:4761;;;;;4226:21;560:4761;;;;;;;;;;;;4111:24;560:4761;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;3690:175;560:4761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4226:21;560:4761;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3697:46;;;;3492:95;-1:-1:-1;;;3523:53:33;;560:4761;;3523:53;;560:4761;;;;;;;;;;;-1:-1:-1;;;560:4761:33;;;;3523:53;;;560:4761;;;2284:27;;560:4761;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;2284:27;560:4761;;-1:-1:-1;;560:4761:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;560:4761:33;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;560:4761:33;;;;;;;;-1:-1:-1;;560:4761:33;;;;:::o;:::-;;;;;;;;-1:-1:-1;560:4761:33;;-1:-1:-1;560:4761:33;;;-1:-1:-1;560:4761:33;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;560:4761:33;;;;;;;;-1:-1:-1;560:4761:33;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;-1:-1:-1;560:4761:33;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;560:4761:33;;-1:-1:-1;560:4761:33;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;560:4761:33;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
    "getClaim(bytes32)": "c9100bcb",
    "getClaimIdsByTopic(uint256)": "80e9e9e1",
    "removeClaim(bytes32)": "4eee424a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"}],\"name\":\"ClaimDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"}],\"name\":\"ClaimNotValidAccordingToIssuer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IssuerCannotBeZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the IERC735 (Claim Holder) standard. This contract manages claims issued by different entities.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"See {IERC735-addClaim}. Adds or updates a claim. Emits {ClaimAdded} or {ClaimChanged}. The `_signature` is `keccak256(abi.encode(address(this), _topic, _data))` signed by the `issuer`. Claim ID is `keccak256(abi.encode(_issuer, _topic))`. Requirements: - If `issuer` is not this contract, the claim must be verifiable via `IClaimIssuer(issuer).isClaimValid(...)`. - This function should typically be restricted (e.g., by a claim key in the inheriting contract).\"},\"getClaim(bytes32)\":{\"details\":\"See {IERC735-getClaim}. Retrieves a claim by its ID. Claim ID is `keccak256(abi.encode(issuer_address, topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic.\"},\"removeClaim(bytes32)\":{\"details\":\"See {IERC735-removeClaim}. Removes a claim by its ID. Emits {ClaimRemoved}. Claim ID is `keccak256(abi.encode(issuer_address, topic))`. Requirements: - The `_claimId` must correspond to an existing claim. - This function should typically be restricted (e.g., by a claim key or management key in the inheriting contract,   or only allow issuer or self to remove).\"}},\"title\":\"ERC735 Claim Holder Standard Implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/onchainid/extensions/ERC735.sol\":\"ERC735\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/\",\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/\",\":forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\",\":openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/onchainid/extensions/ERC735.sol\":{\"keccak256\":\"0x5874b9616286df24b68fa2e298b67335b4089bf344d35567c40a4dae5721acdd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ede5c1ba0fe19997966b4e228608510dc693beaea60bee9e7ebd968d63d07f63\",\"dweb:/ipfs/QmfLhJtUnGo2P3CLRSRc1utJwWMvSamGPkX8o9yqW4ABx8\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e\",\"dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb\",\"dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e\",\"dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8\",\"dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ClaimDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ClaimNotValidAccordingToIssuer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IssuerCannotBeZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_topic",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_scheme",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_issuer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addClaim",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "claimRequestId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_claimId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_topic",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimIdsByTopic",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "claimIds",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_claimId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addClaim(uint256,uint256,address,bytes,bytes,string)": {
            "details": "See {IERC735-addClaim}. Adds or updates a claim. Emits {ClaimAdded} or {ClaimChanged}. The `_signature` is `keccak256(abi.encode(address(this), _topic, _data))` signed by the `issuer`. Claim ID is `keccak256(abi.encode(_issuer, _topic))`. Requirements: - If `issuer` is not this contract, the claim must be verifiable via `IClaimIssuer(issuer).isClaimValid(...)`. - This function should typically be restricted (e.g., by a claim key in the inheriting contract)."
          },
          "getClaim(bytes32)": {
            "details": "See {IERC735-getClaim}. Retrieves a claim by its ID. Claim ID is `keccak256(abi.encode(issuer_address, topic))`."
          },
          "getClaimIdsByTopic(uint256)": {
            "details": "See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic."
          },
          "removeClaim(bytes32)": {
            "details": "See {IERC735-removeClaim}. Removes a claim by its ID. Emits {ClaimRemoved}. Claim ID is `keccak256(abi.encode(issuer_address, topic))`. Requirements: - The `_claimId` must correspond to an existing claim. - This function should typically be restricted (e.g., by a claim key or management key in the inheriting contract,   or only allow issuer or self to remove)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/",
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/",
        "forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/",
        "openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/onchainid/extensions/ERC735.sol": "ERC735"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/onchainid/extensions/ERC735.sol": {
        "keccak256": "0x5874b9616286df24b68fa2e298b67335b4089bf344d35567c40a4dae5721acdd",
        "urls": [
          "bzz-raw://ede5c1ba0fe19997966b4e228608510dc693beaea60bee9e7ebd968d63d07f63",
          "dweb:/ipfs/QmfLhJtUnGo2P3CLRSRc1utJwWMvSamGPkX8o9yqW4ABx8"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol": {
        "keccak256": "0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779",
        "urls": [
          "bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e",
          "dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol": {
        "keccak256": "0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e",
        "urls": [
          "bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb",
          "dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol": {
        "keccak256": "0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122",
        "urls": [
          "bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e",
          "dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol": {
        "keccak256": "0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862",
        "urls": [
          "bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8",
          "dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "details": "Implementation of the IERC735 (Claim Holder) standard. This contract manages claims issued by different entities.",
    "methods": {
      "addClaim(uint256,uint256,address,bytes,bytes,string)": {
        "details": "See {IERC735-addClaim}. Adds or updates a claim. Emits {ClaimAdded} or {ClaimChanged}. The `_signature` is `keccak256(abi.encode(address(this), _topic, _data))` signed by the `issuer`. Claim ID is `keccak256(abi.encode(_issuer, _topic))`. Requirements: - If `issuer` is not this contract, the claim must be verifiable via `IClaimIssuer(issuer).isClaimValid(...)`. - This function should typically be restricted (e.g., by a claim key in the inheriting contract)."
      },
      "getClaim(bytes32)": {
        "details": "See {IERC735-getClaim}. Retrieves a claim by its ID. Claim ID is `keccak256(abi.encode(issuer_address, topic))`."
      },
      "getClaimIdsByTopic(uint256)": {
        "details": "See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic."
      },
      "removeClaim(bytes32)": {
        "details": "See {IERC735-removeClaim}. Removes a claim by its ID. Emits {ClaimRemoved}. Claim ID is `keccak256(abi.encode(issuer_address, topic))`. Requirements: - The `_claimId` must correspond to an existing claim. - This function should typically be restricted (e.g., by a claim key or management key in the inheriting contract,   or only allow issuer or self to remove)."
      }
    },
    "events": {
      "ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
      },
      "ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
      },
      "ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
      }
    },
    "title": "ERC735 Claim Holder Standard Implementation"
  },
  "id": 33
}