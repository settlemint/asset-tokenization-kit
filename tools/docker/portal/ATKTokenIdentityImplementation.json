{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "trustedForwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "accessManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addClaim",
      "inputs": [
        {
          "name": "_topic",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_scheme",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_issuer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_signature",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_uri",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addKey",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getClaim",
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "topic",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimIdsByTopic",
      "inputs": [
        {
          "name": "_topic",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "claimIds",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKey",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKeyPurposes",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKeysByPurpose",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "accessManagerAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isClaimValid",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IIdentity"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "keyHasPurpose",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeClaim",
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "success",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeKey",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AccessManagerSet",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "manager",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Approved",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimAdded",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimChanged",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimRemoved",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Executed",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutionFailed",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutionRequested",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KeyAdded",
      "inputs": [
        {
          "name": "key",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "purpose",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "keyType",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KeyRemoved",
      "inputs": [
        {
          "name": "key",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "purpose",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "keyType",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "neededRole",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ClaimDoesNotExist",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ClaimNotValidAccordingToIssuer",
      "inputs": [
        {
          "name": "issuer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "topic",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidAccessManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IssuerCannotBeZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UnsupportedExecutionOperation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UnsupportedKeyOperation",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1487:10926:145:-:0;;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;1623:37:219;;-1:-1:-1;;;;;;;;;;;1487:10926:145;;;;;;7894:76:220;;-1:-1:-1;;;;;;;;;;;1487:10926:145;;7983:34:220;7979:146;;-1:-1:-1;1487:10926:145;;;;;;;;1623:37:219;1487:10926:145;;;;;;;;;;;;;;;;7979:146:220;-1:-1:-1;;;;;;1487:10926:145;-1:-1:-1;;;;;1487:10926:145;;;-1:-1:-1;;;;;;;;;;;1487:10926:145;;;;;;8085:29:220;;1487:10926:145;;8085:29:220;7979:146;;;7894:76;7936:23;;;-1:-1:-1;7936:23:220;;-1:-1:-1;7936:23:220;1487:10926:145;-1:-1:-1;1487:10926:145;;;;;;-1:-1:-1;1487:10926:145;;;;;-1:-1:-1;1487:10926:145",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610de15750806312aaac70146101195780631d38124014610dc15780634eee424a14610b1f57806353d413c514610139578063572b6c0514610acb578063747442d314610aa05780637da0a87714610a5c57806380e9e9e1146109b65780639010f7261461011957806391d148541461097a578063b1a34e0d14610445578063b61d27f614610400578063c0969a6e14610391578063c4d66de81461020a578063c9100bcb1461013e578063d202158d14610139578063fb307b34146101195763fdcb6068146100ed575f80fd5b34610115575f366003190112610115576002546040516001600160a01b039091168152602090f35b5f80fd5b3461011557602036600319011261011557632feac35160e01b5f5260045ffd5b610e64565b3461011557602036600319011261011557600480355f9081526020819052604090819020805460018201546002830154935190949193610206936101b4936101f89385936101ea9391926001600160a01b03909116916101c79160058201916101bb91810190829087908a908290600301611032565b0387610e9a565b60405197888092611032565b60405198899889526020890152604088015260c0606088015260c0870190610f4b565b908582036080870152610f4b565b9083820360a0850152610f4b565b0390f35b3461011557602036600319011261011557610223610e84565b5f5160206113015f395f51905f52549060ff8260401c1615916001600160401b03811680159081610389575b600114908161037f575b159081610376575b506103675767ffffffffffffffff1981166001175f5160206113015f395f51905f52558261033b575b506001600160a01b031690811561032c575f5160206113015f395f51905f52549160ff8360401c161561031d576bffffffffffffffffffffffff60a01b60025416176002556102d557005b68ff000000000000000019165f5160206113015f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b631afcd79f60e31b5f5260045ffd5b6354c0aa7160e11b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f5160206113015f395f51905f52558261028a565b63f92ee8a960e01b5f5260045ffd5b90501584610261565b303b159150610259565b84915061024f565b34610115576080366003190112610115576004356001600160a01b03811603610115576044356001600160401b038111610115576103d3903690600401610f1e565b50506064356001600160401b038111610115576103f4903690600401610f1e565b505060206040515f8152f35b606036600319011261011557610414610e84565b506044356001600160401b03811161011557610434903690600401610f1e565b50506388fbac2560e01b5f5260045ffd5b346101155760c0366003190112610115576024356004356044356001600160a01b03811690819003610115576064356001600160401b03811161011557610490903690600401610f00565b916084356001600160401b038111610115576104b0903690600401610f00565b60a4356001600160401b0381116101155736602382011215610115576104e0903690602481600401359101610ebb565b946104f16104ec6110b3565b61110c565b3084036108ac575b604051602081019085825284604082015260408152610519606082610e9a565b5190205f8181526020819052604090208481556001810183905586519196916003909101906001600160401b038111610717576105608161055a8454610ffa565b84611281565b6020601f821160011461084c57908061058d925f91610841575b508160011b915f199060031b1c19161790565b90555b855f525f602052600460405f200183516001600160401b038111610717576105bc8161055a8454610ffa565b6020601f82116001146107e15790806105e8925f916107d657508160011b915f199060031b1c19161790565b90555b855f525f602052600560405f200187516001600160401b038111610717576106178161055a8454610ffa565b6020601f8211600114610774579080610643925f9161076957508160011b915f199060031b1c19161790565b90555b5f868152602081905260409020600201546001600160a01b0316851461072b57835f52600160205260405f2091825468010000000000000000811015610717576020988895866106d96106c3857f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c599600161070b980181556111f3565b819391549060031b91821b915f19901b19161790565b9055865f525f8b52600260405f2001896bffffffffffffffffffffffff60a01b825416179055604051948594856112c4565b0390a45b604051908152f35b634e487b7160e01b5f52604160045260245ffd5b7f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13916107616020988895604051948594856112c4565b0390a461070f565b90508a01518b61057a565b601f19821690835f52805f20915f5b8c8282106107be57505090836001949392106107a6575b5050811b019055610646565b8b01515f1960f88460031b161c191690558a8061079a565b60018495602093958493015181550194019201610783565b90508601518b61057a565b601f19821690835f52805f20915f5b81811061082957509083600194939210610811575b5050811b0190556105eb565b8701515f1960f88460031b161c191690558a80610805565b9192602060018192868c0151815501940192016107f0565b90508401518b61057a565b601f19821690835f52805f20915f5b8181106108945750908360019493921061087c575b5050811b019055610590565b8501515f1960f88460031b161c191690558a80610870565b9192602060018192868a01518155019401920161085b565b60405163604b4d3760e11b81523060048201526024810184905260806044820152602081806108f36108e1608483018b610f4b565b82810360031901606484015287610f4b565b0381885afa90811561096f575f91610940575b506104f95760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b610962915060203d602011610968575b61095a8183610e9a565b810190610f6f565b87610906565b503d610950565b6040513d5f823e3d90fd5b34610115576040366003190112610115576024356001600160a01b0381168103610115576109ac602091600435610f87565b6040519015158152f35b34610115576020366003190112610115576004355f52600160205260405f20604051806020835491828152019081935f5260205f20905f5b818110610a465750505081610a04910382610e9a565b604051918291602083019060208452518091526040830191905f5b818110610a2d575050500390f35b8251845285945060209384019390920191600101610a1f565b82548452602090930192600192830192016109ee565b34610115575f366003190112610115576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101155760403660031901126101155760243580151503610115576388fbac2560e01b5f5260045ffd5b34610115576020366003190112610115576020610ae6610e84565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b3461011557602036600319011261011557600435610b3e6104ec6110b3565b805f525f60205260405f20548015610d68575f815f52600160205260405f2054905b825f52600160205283610b768260405f206111f3565b90549060031b1c14610d62575f198114610d4e57600101818110610b6057905b825f52600160205260405f20905f198101908111610d4e57610bbe6106c391610bd7936111f3565b90549060031b1c92845f52600160205260405f206111f3565b9055805f52600160205260405f2080548015610d3a575f190190610bfb82826111f3565b81545f19600392831b1b19169091559190555f838152602081815260409182902060018101546002820154935190815260809281018390526001600160a01b03909316949386937f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a9390928392610ca4926005830192610c96926004820192610c88929088019101611032565b908582036040870152611032565b908382036060850152611032565b0390a45f525f602052600560405f205f81555f60018201555f6002820155610cce60038201611232565b610cda60048201611232565b01610ce58154610ffa565b9081610cf7575b602060405160018152f35b81601f5f9311600114610d0e5750555b8080610cec565b81835260208320610d2a91601f0160051c81019060010161121c565b8082528160208120915555610d07565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b90610b96565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b3461011557606036600319011261011557632feac35160e01b5f5260045ffd5b34610115576020366003190112610115576004359063ffffffff60e01b82168092036101155760209163189acdbd60e31b8114908115610e53575b8115610e42575b8115610e31575b5015158152f35b6301ffc9a760e01b14905083610e2a565b63604b4d3760e11b81149150610e23565b63b6b4ee6d60e01b81149150610e1c565b3461011557604036600319011261011557632feac35160e01b5f5260045ffd5b600435906001600160a01b038216820361011557565b90601f801991011681019081106001600160401b0382111761071757604052565b9291926001600160401b0382116107175760405191610ee4601f8201601f191660200184610e9a565b829481845281830111610115578281602093845f960137010152565b9080601f8301121561011557816020610f1b93359101610ebb565b90565b9181601f84011215610115578235916001600160401b038311610115576020838186019501011161011557565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90816020910312610115575180151581036101155790565b9060018060a01b0360025416908115610ff357604051632474521560e21b815260048101939093526001600160a01b03166024830152602090829060449082905afa90811561096f575f91610fda575090565b610f1b915060203d6020116109685761095a8183610e9a565b5050505f90565b90600182811c92168015611028575b602083101461101457565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611009565b5f929181549161104183610ffa565b8083529260018116908115611096575060011461105d57505050565b5f9081526020812093945091925b83831061107c575060209250010190565b60018160209294939454838587010152019101919061106b565b915050602093945060ff929192191683830152151560051b010190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611101575b156110fd576013193601368111610d4e573560601c90565b3390565b5060143610156110e5565b6002546001600160a01b0316801590811561116e575b5061112a5750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004527feca77a5bbbcf8baa6d8f93054311a3e6672f982247f67ba40cb896ecf1992aec602452604490fd5b604051632474521560e21b81527feca77a5bbbcf8baa6d8f93054311a3e6672f982247f67ba40cb896ecf1992aec60048201526001600160a01b03841660248201529150602090829060449082905afa90811561096f575f916111d4575b50155f611122565b6111ed915060203d6020116109685761095a8183610e9a565b5f6111cc565b8054821015611208575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b818110611227575050565b5f815560010161121c565b61123c8154610ffa565b9081611246575050565b81601f5f93116001146112585750555b565b8183526020832061127491601f0160051c81019060010161121c565b8082528160208120915555565b9190601f811161129057505050565b611256925f5260205f20906020601f840160051c830193106112ba575b601f0160051c019061121c565b90915081906112ad565b926112e4610f1b95936112f2938652608060208701526080860190610f4b565b908482036040860152610f4b565b916060818403910152610f4b56fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "1487:10926:145:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;5508:14;1487:10926;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;9039:25;;;1487:10926;9039:25;1487:10926;;9039:25;1487:10926;;:::i;:::-;;;;;;-1:-1:-1;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;4846:24:33;;1487:10926:145;4884:24:33;;;1487:10926:145;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;4999:21:33;;;;1487:10926:145;;4963:22:33;;;1487:10926:145;;;;;;;;4922:27:33;;1487:10926:145;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1487:10926:145;;;;;;;4301:16:220;1487:10926:145;-1:-1:-1;;;;;1487:10926:145;;4724:16:220;;:34;;;;1487:10926:145;4803:1:220;4788:16;:50;;;;1487:10926:145;4853:13:220;:30;;;;1487:10926:145;4849:91:220;;;-1:-1:-1;;1487:10926:145;;4803:1:220;1487:10926:145;-1:-1:-1;;;;;;;;;;;1487:10926:145;;4977:67:220;;1487:10926:145;-1:-1:-1;;;;;;1487:10926:145;;4206:34;;4202:69;;-1:-1:-1;;;;;;;;;;;1487:10926:145;;;;;;;7148:18:220;7144:73;;1487:10926:145;;;4318:37;1487:10926;;;4318:37;1487:10926;5064:101:220;;1487:10926:145;5064:101:220;1487:10926:145;;;-1:-1:-1;;;;;;;;;;;1487:10926:145;5140:14:220;1487:10926:145;;;4803:1:220;1487:10926:145;;5140:14:220;1487:10926:145;7144:73:220;7189:17;;;1487:10926:145;7189:17:220;1487:10926:145;;7189:17:220;4202:69:145;4249:22;;;1487:10926;4249:22;1487:10926;;4249:22;4977:67:220;-1:-1:-1;;1487:10926:145;;;-1:-1:-1;;;;;;;;;;;1487:10926:145;4977:67:220;;;4849:91;4906:23;;;1487:10926:145;4906:23:220;1487:10926:145;;4906:23:220;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:220;;4724:34;;;-1:-1:-1;4724:34:220;;1487:10926:145;;;;;;-1:-1:-1;;1487:10926:145;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;:::i;:::-;8039:31;;;;;1487:10926;8039:31;1487:10926;;8039:31;1487:10926;;;;;;-1:-1:-1;;1487:10926:145;;;;;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2547:12;;;;:::i;:::-;;:::i;:::-;2071:4:33;2052:24;;2048:198;;1487:10926:145;;;;2284:27:33;;1487:10926:145;;;;;;;;;;2284:27:33;;;1487:10926:145;2284:27:33;;:::i;:::-;1487:10926:145;2274:38:33;;1487:10926:145;;;;;;;;;;;;;;;2363:23:33;;1487:10926:145;;;;;2274:38:33;;1487:10926:145;2406:26:33;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:21:33;1487:10926:145;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2494:20:33;1487:10926:145;;;2494:20:33;1487:10926:145;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:23:33;;1487:10926:145;-1:-1:-1;;;;;1487:10926:145;2536:34:33;;;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;2689:70:33;1487:10926:145;;2689:70:33;1487:10926:145;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:23:33;1487:10926:145;;;2636:23:33;1487:10926:145;;;;;;;;;;;;2689:70:33;;;;;:::i;:::-;;;;2532:346;1487:10926:145;;;;;;;;;;;;;;;;;;2532:346:33;2795:72;1487:10926:145;2795:72:33;1487:10926:145;;;;;;2795:72:33;;;;;:::i;:::-;;;;2532:346;;1487:10926:145;;;;;;;;;;2284:27:33;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26:33;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:27:33;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26:33;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:27:33;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26:33;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2048:198:33;1487:10926:145;;-1:-1:-1;;;2117:87:33;;2071:4;1487:10926:145;2117:87:33;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1487:10926:145;;;;;;;:::i;:::-;2117:87:33;;;;;;;;;;1487:10926:145;2117:87:33;;;2048:198;1487:10926:145;2048:198:33;1487:10926:145;;;-1:-1:-1;;;1487:10926:145;;;;;;;;;;;;-1:-1:-1;;;1487:10926:145;;;;;;;2117:87:33;;;;1487:10926:145;2117:87:33;1487:10926:145;2117:87:33;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1487:10926:145;;;;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;;;1830:17:219;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;;;;;;;;;8039:31;;;1487:10926;8039:31;1487:10926;;8039:31;1487:10926;;;;;;-1:-1:-1;;1487:10926:145;;;;;;;:::i;:::-;;;1830:17:219;-1:-1:-1;;;;;1487:10926:145;;;;;2054:31:219;;;;1487:10926:145;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;;;2547:12;;;:::i;:::-;1487:10926;;;;;;;;;;3496:11:33;;3492:95;;1487:10926:145;;;;;;;;;;;3690:175:33;;1487:10926:145;;;;;;;3697:34:33;1487:10926:145;;;;3697:34:33;:::i;:::-;1487:10926:145;;;;;;3697:46:33;;;-1:-1:-1;;1487:10926:145;;;;;;3790:25:33;;;3690:175;3786:69;3835:5;3690:175;1487:10926:145;;;;;;;;;;;;;;;;;;;3912:39:33;3875:34;3912:39;1487:10926:145;3912:39:33;;:::i;:::-;1487:10926:145;;;;;;;;;;;;;;;;3875:34:33;:::i;1487:10926:145:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1487:10926:145;;;;;;:::i;:::-;;;-1:-1:-1;;1487:10926:145;;;;;;;;;;;;;-1:-1:-1;1487:10926:145;;;;;;;;;;;;-1:-1:-1;4073:24:33;;1487:10926:145;4111:24:33;;;1487:10926:145;;;;;;;;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;4005:252:33;;1487:10926:145;;;;;;4226:21:33;;;;1487:10926:145;;;4190:22:33;;;1487:10926:145;;;;;;4149:27:33;1487:10926:145;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;4005:252:33;;;1487:10926:145;;;;;4226:21:33;1487:10926:145;;;;;;;;;;;;4111:24:33;1487:10926:145;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;3690:175:33;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4226:21:33;1487:10926:145;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3697:46:33;;;;3492:95;1487:10926:145;;-1:-1:-1;;;3523:53:33;;1487:10926:145;;3523:53:33;;1487:10926:145;;;;;;;;;;;-1:-1:-1;;;1487:10926:145;;;;3523:53:33;;;1487:10926:145;;;;;;-1:-1:-1;;1487:10926:145;;;;9039:25;;;1487:10926;9039:25;1487:10926;;9039:25;1487:10926;;;;;;-1:-1:-1;;1487:10926:145;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11372:50:145;;;:94;;;;1487:10926;11372:152;;;;1487:10926;11372:192;;;;1487:10926;;;;;;;11372:192;-1:-1:-1;;;1134:40:229;;-1:-1:-1;11372:192:145;;;:152;-1:-1:-1;;;11482:42:145;;;-1:-1:-1;11372:152:145;;:94;-1:-1:-1;;;11426:40:145;;;-1:-1:-1;11372:94:145;;1487:10926;;;;;;-1:-1:-1;;1487:10926:145;;;;9039:25;;;-1:-1:-1;9039:25:145;1487:10926;-1:-1:-1;9039:25:145;1487:10926;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;:::o;:::-;;;2284:27:33;;1487:10926:145;;;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;2284:27:33;1487:10926:145;;-1:-1:-1;;1487:10926:145;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1487:10926:145;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1487:10926:145;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1487:10926:145;;;;;;;;-1:-1:-1;;1487:10926:145;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;5018:286::-;;1487:10926;;;;;5126:14;1487:10926;;5126:28;;;5122:46;;1487:10926;;-1:-1:-1;;;5234:63:145;;;;;1487:10926;;;;-1:-1:-1;;;;;1487:10926:145;;;;;5234:63;;1487:10926;;;;;;5234:63;;;;;;;1487:10926;5234:63;;;5227:70;5018:286;:::o;5234:63::-;;;;;;;;;;;;;;:::i;5122:46::-;5156:12;;;1487:10926;5156:12;:::o;1487:10926::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1487:10926:145;;;;;;;;-1:-1:-1;1487:10926:145;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2329:429:219:-;2545:10;1830:17;-1:-1:-1;;;;;1487:10926:145;2054:31:219;;2526:71;;2329:429;2522:230;;;1487:10926:145;;2435:8:219;1487:10926:145;2435:8:219;1487:10926:145;;;;;;;;2613:72:219:o;2522:230::-;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;;12149:262:145;12228:14;1487:10926;-1:-1:-1;;;;;1487:10926:145;12228:28;;;:96;;;;12149:262;12224:181;;;12149:262;:::o;12224:181::-;-1:-1:-1;;;;12347:47:145;;;-1:-1:-1;;;;;1487:10926:145;;;;12347:47;1487:10926;850:31:115;1487:10926:145;;;;12347:47;12228:96;1487:10926;;-1:-1:-1;;;12261:63:145;;850:31:115;12261:63:145;;;1487:10926;-1:-1:-1;;;;;1487:10926:145;;;;;;;-1:-1:-1;1487:10926:145;;;;12261:63;;1487:10926;;12261:63;;;;;;;-1:-1:-1;12261:63:145;;;12228:96;12260:64;;12228:96;;;12261:63;;;;1487:10926;12261:63;1487:10926;12261:63;;;;;;;:::i;:::-;;;;1487:10926;;;;;;;;-1:-1:-1;1487:10926:145;;-1:-1:-1;1487:10926:145;;;-1:-1:-1;1487:10926:145;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;-1:-1:-1;1487:10926:145;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;1487:10926:145;;-1:-1:-1;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1487:10926:145;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "52453": [
        {
          "start": 2673,
          "length": 32
        },
        {
          "start": 2795,
          "length": 32
        },
        {
          "start": 4278,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "accessManager()": "fdcb6068",
    "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
    "addKey(bytes32,uint256,uint256)": "1d381240",
    "approve(uint256,bool)": "747442d3",
    "execute(address,uint256,bytes)": "b61d27f6",
    "getClaim(bytes32)": "c9100bcb",
    "getClaimIdsByTopic(uint256)": "80e9e9e1",
    "getKey(bytes32)": "12aaac70",
    "getKeyPurposes(bytes32)": "fb307b34",
    "getKeysByPurpose(uint256)": "9010f726",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address)": "c4d66de8",
    "isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
    "isTrustedForwarder(address)": "572b6c05",
    "keyHasPurpose(bytes32,uint256)": "d202158d",
    "removeClaim(bytes32)": "4eee424a",
    "removeKey(bytes32,uint256)": "53d413c5",
    "supportsInterface(bytes4)": "01ffc9a7",
    "trustedForwarder()": "7da0a877"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"}],\"name\":\"ClaimDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"}],\"name\":\"ClaimNotValidAccordingToIssuer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAccessManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IssuerCannotBeZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedExecutionOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedKeyOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AccessManagerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accessManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accessManagerAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"Inherits `Identity` for ERC735 storage and basic claim logic, `ERC165Upgradeable` for interface detection,      and `ERC2771ContextUpgradeable` for meta-transaction support. ERC734 functions are disabled.\",\"errors\":{\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"Error: Account Lacks Required Role.      This error is emitted when an action is attempted by an account (`account`)      that does not possess the necessary authorization role (`neededRole`).      For example, if an account tries to mint new tokens but doesn't have the 'MINTER_ROLE'.\",\"params\":{\"account\":\"The address of the account that attempted the unauthorized action.\",\"neededRole\":\"The `bytes32` identifier of the role that the `account` was missing.\"}}],\"InvalidAccessManager()\":[{\"details\":\"Error thrown when trying to set an invalid access manager\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UnsupportedExecutionOperation()\":[{\"details\":\"Error thrown when attempting to use execution functionality in an unsupported way\"}],\"UnsupportedKeyOperation()\":[{\"details\":\"Error thrown when attempting to use key-based functionality\"}]},\"events\":{\"AccessManagerSet(address,address)\":{\"details\":\"This event is crucial for transparency and monitoring. It allows external observers      to know when the authority managing roles and permissions for a token has been updated.      The `indexed` keyword for `sender` and `manager` allows these addresses to be efficiently      searched for in event logs.\",\"params\":{\"manager\":\"The new address of the `SMARTTokenAccessManager` contract that will now                oversee access control for the token.\",\"sender\":\"The address of the account that initiated the change of the access manager.               This is typically an administrator or an account with special privileges.\"}},\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"accessManager()\":{\"returns\":{\"_0\":\"The address of the access manager.\"}},\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Adds or updates a claim. Requires CLAIM_SIGNER_KEY purpose from the sender.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a key with a specific purpose and type. Requires MANAGEMENT_KEY purpose.      The parameters (_key, _purpose, _keyType) are unused as key operations are unsupported in this implementation.\"},\"approve(uint256,bool)\":{\"details\":\"Approves or disapproves an execution.      Requires MANAGEMENT_KEY if the execution targets the identity itself.      Requires ACTION_KEY if the execution targets an external contract.      The parameters (_id, _toApprove) are unused as execution operations are unsupported in this implementation.\"},\"constructor\":{\"details\":\"Calls the constructor of the parent `Identity` contract.      - `address(0)`: This indicates that the identity contract itself is not initially owned by another identity contract.      - `true`: This boolean likely signifies that the deployer (`msg.sender` of this logic contract deployment, if deployed directly)                is *not* automatically added as a management key. The `initialize` function called via `delegatecall` by the proxy                is responsible for setting up the initial management key(s) for each specific identity instance.      This constructor will only be called once when this logic contract is deployed.      For proxied identities, the state (including keys and claims) is managed in the proxy's storage, initialized via `delegatecall` to `Identity.initialize(initialManagementKey)`.\"},\"execute(address,uint256,bytes)\":{\"details\":\"Initiates an execution. If the sender has MANAGEMENT_KEY, or ACTION_KEY (for external calls),      the execution is auto-approved.      The parameters (_to, _value, _data) are unused as execution operations are unsupported in this implementation.\"},\"getClaim(bytes32)\":{\"details\":\"See {IERC735-getClaim}. Retrieves a claim by its ID. Claim ID is `keccak256(abi.encode(issuer_address, topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic.\"},\"getKey(bytes32)\":{\"details\":\"Gets key data. This operation is unsupported in this identity model.      The parameter (_key) is unused as key operations are unsupported in this implementation.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Gets key purposes. This operation is unsupported in this identity model.      The parameter (_key) is unused as key operations are unsupported in this implementation.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Gets keys by purpose. This operation is unsupported in this identity model.      The parameter (_purpose) is unused as key operations are unsupported in this implementation.\"},\"hasRole(bytes32,address)\":{\"details\":\"This function implements the `ISMARTTokenAccessManaged` interface.      It delegates the actual role check to the `hasRole` function of the `_accessManager` contract.      The `virtual` keyword means that this function can be overridden by inheriting contracts.\",\"params\":{\"account\":\"The address of the account whose roles are being checked.\",\"role\":\"The `bytes32` identifier of the role to check.\"},\"returns\":{\"_0\":\"`true` if the account has the role, `false` otherwise.\"}},\"initialize(address)\":{\"details\":\"Intended to be called once by a proxy via delegatecall.      NOTE: Named `initializeSMARTTokenIdentity` to avoid conflict with the non-virtual `initialize`      function in the base `Identity` contract from OnchainID.\",\"params\":{\"accessManagerAddress\":\"The address of the ISMARTTokenAccessManager contract.\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks claim validity.      Parameters (_identity, claimTopic, sig, data) are unused as this identity implementation      does not issue claims and always returns false.\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Checks if a key has a purpose. This operation is unsupported.      The parameters (_key, _purpose) are unused as key operations are unsupported in this implementation.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Requires CLAIM_SIGNER_KEY purpose from the sender.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes a purpose from a key. If it's the last purpose, the key is removed. Requires MANAGEMENT_KEY purpose.      The parameters (_key, _purpose) are unused as key operations are unsupported in this implementation.\"},\"supportsInterface(bytes4)\":{\"details\":\"It declares support for `IIdentity`, `IERC734`, `IERC735` (components of `IIdentity`),      and `IERC165` itself. It chains to `ERC165Upgradeable.supportsInterface`.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_accessManager\":{\"details\":\"This manager contract is responsible for all role assignments and checks.      This variable is declared `internal`, meaning it's accessible within this contract      and any contracts that inherit from it, but not externally.\"}},\"title\":\"ATK Token Identity Implementation Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"notice\":\"This error is functionally identical to `AccessControlUnauthorizedAccount`         defined in OpenZeppelin's `access/AccessControl.sol` contract.         Re-defining it here ensures consistency within the SMART framework and can         help in scenarios where specific error catching is needed for this module.\"}]},\"events\":{\"AccessManagerSet(address,address)\":{\"notice\":\"Emitted when the address of the access manager contract is successfully changed or set.\"}},\"kind\":\"user\",\"methods\":{\"accessManager()\":{\"notice\":\"Returns the address of the access manager for the token.\"},\"constructor\":{\"notice\":\"Constructor for the `SMARTTokenIdentityImplementation`.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks if a given account has a specific role, as defined by the `_accessManager`.\"},\"initialize(address)\":{\"notice\":\"Initializes the SMARTTokenIdentityImplementation.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if the contract supports a given interface ID.\"}},\"notice\":\"This contract provides the upgradeable logic for on-chain identities associated with tokens/assets         within the SMART Protocol. It is based on the OnchainID `Identity` contract but restricts         ERC734 key management, relying on an external Access Manager for ERC735 claim operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/identity-factory/identities/ATKTokenIdentityImplementation.sol\":\"ATKTokenIdentityImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/onchainid/extensions/ERC735.sol\":{\"keccak256\":\"0x5874b9616286df24b68fa2e298b67335b4089bf344d35567c40a4dae5721acdd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ede5c1ba0fe19997966b4e228608510dc693beaea60bee9e7ebd968d63d07f63\",\"dweb:/ipfs/QmfLhJtUnGo2P3CLRSRc1utJwWMvSamGPkX8o9yqW4ABx8\"]},\"contracts/smart/extensions/access-managed/ISMARTTokenAccessManaged.sol\":{\"keccak256\":\"0xb05c08191398db750d9fd974e8df1bace09434c27fd81a9db7d36ff429affd97\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://5155ee4da616fb8e3365c933952b07b93d603c6a4eb6542433b08c651a0e0c25\",\"dweb:/ipfs/QmW4C4YbYuDLX32oEFrp11t9TK44B5otKCXQemXs1jMgCD\"]},\"contracts/smart/extensions/access-managed/ISMARTTokenAccessManager.sol\":{\"keccak256\":\"0xd8fb2176229e603ed535b0ade30c09c41c416a90997edf8eab72af01cdcd51f3\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://90d07eb638bcd5a00efd0e4752c414e8ea25a3be93efcdc765d147b6c49c004a\",\"dweb:/ipfs/QmRLK1p8b6jZqQ9EMxoMQQMtSgeEqz2P12xbHozaXztdBw\"]},\"contracts/system/ATKSystemRoles.sol\":{\"keccak256\":\"0x7c5a50fcea7ee061d1bf5451217fbf83cfbc42cae638a0de4b8fc41fa5d7d980\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://8dc4128ddb017dfd71ff70bd4b292bcf5e60ae6f81a07b1ceb15439607bb93c0\",\"dweb:/ipfs/QmWJpzgR3YuLvRXZPdFzvyZ1mHAyV3fhSUMcdFG4QJ3xzx\"]},\"contracts/system/identity-factory/identities/ATKTokenIdentityImplementation.sol\":{\"keccak256\":\"0xd89732480bf0b20b4dc4424d60465b75ba4ea82cd8eb1eeb00d324054a207560\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://554d0aa7007fe07ce68ab6ce453024a4ebe747d6a9ad21c46b04fcac19d8da4b\",\"dweb:/ipfs/QmRiXpuGZjMHh2poJjbBj7A4NMM1tNDDxSPZPT7SYrRbB6\"]},\"contracts/system/identity-factory/identities/IATKTokenIdentity.sol\":{\"keccak256\":\"0xcb99992b48e9492498db97b301a8b7cc2730d018f535b851a216df7dc2c6b67b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://df28d69b1c6d62d9746b165badcca360134409fef934224469db4aa2c5ab0146\",\"dweb:/ipfs/QmRahsqaYy8qhjyuNEWZUu3swujZ61QpdEHQeNNP67UqLh\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e\",\"dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb\",\"dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e\",\"dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8\",\"dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trustedForwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ClaimDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ClaimNotValidAccordingToIssuer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAccessManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IssuerCannotBeZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedExecutionOperation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedKeyOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AccessManagerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Executed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "purpose",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "keyType",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "KeyAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "purpose",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "keyType",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "KeyRemoved",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accessManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_topic",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_scheme",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_issuer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addClaim",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addKey",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_claimId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_topic",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimIdsByTopic",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "claimIds",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKey",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKeyPurposes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKeysByPurpose",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "accessManagerAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "contract IIdentity",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isClaimValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "keyHasPurpose",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_claimId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeKey",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "accessManager()": {
            "returns": {
              "_0": "The address of the access manager."
            }
          },
          "addClaim(uint256,uint256,address,bytes,bytes,string)": {
            "details": "Adds or updates a claim. Requires CLAIM_SIGNER_KEY purpose from the sender."
          },
          "addKey(bytes32,uint256,uint256)": {
            "details": "Adds a key with a specific purpose and type. Requires MANAGEMENT_KEY purpose.      The parameters (_key, _purpose, _keyType) are unused as key operations are unsupported in this implementation."
          },
          "approve(uint256,bool)": {
            "details": "Approves or disapproves an execution.      Requires MANAGEMENT_KEY if the execution targets the identity itself.      Requires ACTION_KEY if the execution targets an external contract.      The parameters (_id, _toApprove) are unused as execution operations are unsupported in this implementation."
          },
          "constructor": {
            "details": "Calls the constructor of the parent `Identity` contract.      - `address(0)`: This indicates that the identity contract itself is not initially owned by another identity contract.      - `true`: This boolean likely signifies that the deployer (`msg.sender` of this logic contract deployment, if deployed directly)                is *not* automatically added as a management key. The `initialize` function called via `delegatecall` by the proxy                is responsible for setting up the initial management key(s) for each specific identity instance.      This constructor will only be called once when this logic contract is deployed.      For proxied identities, the state (including keys and claims) is managed in the proxy's storage, initialized via `delegatecall` to `Identity.initialize(initialManagementKey)`."
          },
          "execute(address,uint256,bytes)": {
            "details": "Initiates an execution. If the sender has MANAGEMENT_KEY, or ACTION_KEY (for external calls),      the execution is auto-approved.      The parameters (_to, _value, _data) are unused as execution operations are unsupported in this implementation."
          },
          "getClaim(bytes32)": {
            "details": "See {IERC735-getClaim}. Retrieves a claim by its ID. Claim ID is `keccak256(abi.encode(issuer_address, topic))`."
          },
          "getClaimIdsByTopic(uint256)": {
            "details": "See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic."
          },
          "getKey(bytes32)": {
            "details": "Gets key data. This operation is unsupported in this identity model.      The parameter (_key) is unused as key operations are unsupported in this implementation."
          },
          "getKeyPurposes(bytes32)": {
            "details": "Gets key purposes. This operation is unsupported in this identity model.      The parameter (_key) is unused as key operations are unsupported in this implementation."
          },
          "getKeysByPurpose(uint256)": {
            "details": "Gets keys by purpose. This operation is unsupported in this identity model.      The parameter (_purpose) is unused as key operations are unsupported in this implementation."
          },
          "hasRole(bytes32,address)": {
            "details": "This function implements the `ISMARTTokenAccessManaged` interface.      It delegates the actual role check to the `hasRole` function of the `_accessManager` contract.      The `virtual` keyword means that this function can be overridden by inheriting contracts.",
            "params": {
              "account": "The address of the account whose roles are being checked.",
              "role": "The `bytes32` identifier of the role to check."
            },
            "returns": {
              "_0": "`true` if the account has the role, `false` otherwise."
            }
          },
          "initialize(address)": {
            "details": "Intended to be called once by a proxy via delegatecall.      NOTE: Named `initializeSMARTTokenIdentity` to avoid conflict with the non-virtual `initialize`      function in the base `Identity` contract from OnchainID.",
            "params": {
              "accessManagerAddress": "The address of the ISMARTTokenAccessManager contract."
            }
          },
          "isClaimValid(address,uint256,bytes,bytes)": {
            "details": "Checks claim validity.      Parameters (_identity, claimTopic, sig, data) are unused as this identity implementation      does not issue claims and always returns false."
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "keyHasPurpose(bytes32,uint256)": {
            "details": "Checks if a key has a purpose. This operation is unsupported.      The parameters (_key, _purpose) are unused as key operations are unsupported in this implementation."
          },
          "removeClaim(bytes32)": {
            "details": "Removes a claim. Requires CLAIM_SIGNER_KEY purpose from the sender."
          },
          "removeKey(bytes32,uint256)": {
            "details": "Removes a purpose from a key. If it's the last purpose, the key is removed. Requires MANAGEMENT_KEY purpose.      The parameters (_key, _purpose) are unused as key operations are unsupported in this implementation."
          },
          "supportsInterface(bytes4)": {
            "details": "It declares support for `IIdentity`, `IERC734`, `IERC735` (components of `IIdentity`),      and `IERC165` itself. It chains to `ERC165Upgradeable.supportsInterface`."
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "accessManager()": {
            "notice": "Returns the address of the access manager for the token."
          },
          "constructor": {
            "notice": "Constructor for the `SMARTTokenIdentityImplementation`."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks if a given account has a specific role, as defined by the `_accessManager`."
          },
          "initialize(address)": {
            "notice": "Initializes the SMARTTokenIdentityImplementation."
          },
          "supportsInterface(bytes4)": {
            "notice": "Checks if the contract supports a given interface ID."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/identity-factory/identities/ATKTokenIdentityImplementation.sol": "ATKTokenIdentityImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/onchainid/extensions/ERC735.sol": {
        "keccak256": "0x5874b9616286df24b68fa2e298b67335b4089bf344d35567c40a4dae5721acdd",
        "urls": [
          "bzz-raw://ede5c1ba0fe19997966b4e228608510dc693beaea60bee9e7ebd968d63d07f63",
          "dweb:/ipfs/QmfLhJtUnGo2P3CLRSRc1utJwWMvSamGPkX8o9yqW4ABx8"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart/extensions/access-managed/ISMARTTokenAccessManaged.sol": {
        "keccak256": "0xb05c08191398db750d9fd974e8df1bace09434c27fd81a9db7d36ff429affd97",
        "urls": [
          "bzz-raw://5155ee4da616fb8e3365c933952b07b93d603c6a4eb6542433b08c651a0e0c25",
          "dweb:/ipfs/QmW4C4YbYuDLX32oEFrp11t9TK44B5otKCXQemXs1jMgCD"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/extensions/access-managed/ISMARTTokenAccessManager.sol": {
        "keccak256": "0xd8fb2176229e603ed535b0ade30c09c41c416a90997edf8eab72af01cdcd51f3",
        "urls": [
          "bzz-raw://90d07eb638bcd5a00efd0e4752c414e8ea25a3be93efcdc765d147b6c49c004a",
          "dweb:/ipfs/QmRLK1p8b6jZqQ9EMxoMQQMtSgeEqz2P12xbHozaXztdBw"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/ATKSystemRoles.sol": {
        "keccak256": "0x7c5a50fcea7ee061d1bf5451217fbf83cfbc42cae638a0de4b8fc41fa5d7d980",
        "urls": [
          "bzz-raw://8dc4128ddb017dfd71ff70bd4b292bcf5e60ae6f81a07b1ceb15439607bb93c0",
          "dweb:/ipfs/QmWJpzgR3YuLvRXZPdFzvyZ1mHAyV3fhSUMcdFG4QJ3xzx"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/identity-factory/identities/ATKTokenIdentityImplementation.sol": {
        "keccak256": "0xd89732480bf0b20b4dc4424d60465b75ba4ea82cd8eb1eeb00d324054a207560",
        "urls": [
          "bzz-raw://554d0aa7007fe07ce68ab6ce453024a4ebe747d6a9ad21c46b04fcac19d8da4b",
          "dweb:/ipfs/QmRiXpuGZjMHh2poJjbBj7A4NMM1tNDDxSPZPT7SYrRbB6"
        ],
        "license": "GPL-3.0"
      },
      "contracts/system/identity-factory/identities/IATKTokenIdentity.sol": {
        "keccak256": "0xcb99992b48e9492498db97b301a8b7cc2730d018f535b851a216df7dc2c6b67b",
        "urls": [
          "bzz-raw://df28d69b1c6d62d9746b165badcca360134409fef934224469db4aa2c5ab0146",
          "dweb:/ipfs/QmRahsqaYy8qhjyuNEWZUu3swujZ61QpdEHQeNNP67UqLh"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol": {
        "keccak256": "0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779",
        "urls": [
          "bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e",
          "dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol": {
        "keccak256": "0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e",
        "urls": [
          "bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb",
          "dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol": {
        "keccak256": "0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122",
        "urls": [
          "bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e",
          "dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol": {
        "keccak256": "0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862",
        "urls": [
          "bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8",
          "dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "accessManager()": {
        "notice": "Returns the address of the access manager for the token."
      },
      "constructor": {
        "notice": "Constructor for the `SMARTTokenIdentityImplementation`."
      },
      "hasRole(bytes32,address)": {
        "notice": "Checks if a given account has a specific role, as defined by the `_accessManager`."
      },
      "initialize(address)": {
        "notice": "Initializes the SMARTTokenIdentityImplementation."
      },
      "supportsInterface(bytes4)": {
        "notice": "Checks if the contract supports a given interface ID."
      }
    },
    "events": {
      "AccessManagerSet(address,address)": {
        "notice": "Emitted when the address of the access manager contract is successfully changed or set."
      }
    },
    "errors": {
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "notice": "This error is functionally identical to `AccessControlUnauthorizedAccount`         defined in OpenZeppelin's `access/AccessControl.sol` contract.         Re-defining it here ensures consistency within the SMART framework and can         help in scenarios where specific error catching is needed for this module."
        }
      ]
    },
    "notice": "This contract provides the upgradeable logic for on-chain identities associated with tokens/assets         within the SMART Protocol. It is based on the OnchainID `Identity` contract but restricts         ERC734 key management, relying on an external Access Manager for ERC735 claim operations."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "Inherits `Identity` for ERC735 storage and basic claim logic, `ERC165Upgradeable` for interface detection,      and `ERC2771ContextUpgradeable` for meta-transaction support. ERC734 functions are disabled.",
    "methods": {
      "accessManager()": {
        "returns": {
          "_0": "The address of the access manager."
        }
      },
      "addClaim(uint256,uint256,address,bytes,bytes,string)": {
        "details": "Adds or updates a claim. Requires CLAIM_SIGNER_KEY purpose from the sender."
      },
      "addKey(bytes32,uint256,uint256)": {
        "details": "Adds a key with a specific purpose and type. Requires MANAGEMENT_KEY purpose.      The parameters (_key, _purpose, _keyType) are unused as key operations are unsupported in this implementation."
      },
      "approve(uint256,bool)": {
        "details": "Approves or disapproves an execution.      Requires MANAGEMENT_KEY if the execution targets the identity itself.      Requires ACTION_KEY if the execution targets an external contract.      The parameters (_id, _toApprove) are unused as execution operations are unsupported in this implementation."
      },
      "constructor": {
        "details": "Calls the constructor of the parent `Identity` contract.      - `address(0)`: This indicates that the identity contract itself is not initially owned by another identity contract.      - `true`: This boolean likely signifies that the deployer (`msg.sender` of this logic contract deployment, if deployed directly)                is *not* automatically added as a management key. The `initialize` function called via `delegatecall` by the proxy                is responsible for setting up the initial management key(s) for each specific identity instance.      This constructor will only be called once when this logic contract is deployed.      For proxied identities, the state (including keys and claims) is managed in the proxy's storage, initialized via `delegatecall` to `Identity.initialize(initialManagementKey)`."
      },
      "execute(address,uint256,bytes)": {
        "details": "Initiates an execution. If the sender has MANAGEMENT_KEY, or ACTION_KEY (for external calls),      the execution is auto-approved.      The parameters (_to, _value, _data) are unused as execution operations are unsupported in this implementation."
      },
      "getClaim(bytes32)": {
        "details": "See {IERC735-getClaim}. Retrieves a claim by its ID. Claim ID is `keccak256(abi.encode(issuer_address, topic))`."
      },
      "getClaimIdsByTopic(uint256)": {
        "details": "See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic."
      },
      "getKey(bytes32)": {
        "details": "Gets key data. This operation is unsupported in this identity model.      The parameter (_key) is unused as key operations are unsupported in this implementation."
      },
      "getKeyPurposes(bytes32)": {
        "details": "Gets key purposes. This operation is unsupported in this identity model.      The parameter (_key) is unused as key operations are unsupported in this implementation."
      },
      "getKeysByPurpose(uint256)": {
        "details": "Gets keys by purpose. This operation is unsupported in this identity model.      The parameter (_purpose) is unused as key operations are unsupported in this implementation."
      },
      "hasRole(bytes32,address)": {
        "details": "This function implements the `ISMARTTokenAccessManaged` interface.      It delegates the actual role check to the `hasRole` function of the `_accessManager` contract.      The `virtual` keyword means that this function can be overridden by inheriting contracts.",
        "params": {
          "account": "The address of the account whose roles are being checked.",
          "role": "The `bytes32` identifier of the role to check."
        },
        "returns": {
          "_0": "`true` if the account has the role, `false` otherwise."
        }
      },
      "initialize(address)": {
        "details": "Intended to be called once by a proxy via delegatecall.      NOTE: Named `initializeSMARTTokenIdentity` to avoid conflict with the non-virtual `initialize`      function in the base `Identity` contract from OnchainID.",
        "params": {
          "accessManagerAddress": "The address of the ISMARTTokenAccessManager contract."
        }
      },
      "isClaimValid(address,uint256,bytes,bytes)": {
        "details": "Checks claim validity.      Parameters (_identity, claimTopic, sig, data) are unused as this identity implementation      does not issue claims and always returns false."
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "keyHasPurpose(bytes32,uint256)": {
        "details": "Checks if a key has a purpose. This operation is unsupported.      The parameters (_key, _purpose) are unused as key operations are unsupported in this implementation."
      },
      "removeClaim(bytes32)": {
        "details": "Removes a claim. Requires CLAIM_SIGNER_KEY purpose from the sender."
      },
      "removeKey(bytes32,uint256)": {
        "details": "Removes a purpose from a key. If it's the last purpose, the key is removed. Requires MANAGEMENT_KEY purpose.      The parameters (_key, _purpose) are unused as key operations are unsupported in this implementation."
      },
      "supportsInterface(bytes4)": {
        "details": "It declares support for `IIdentity`, `IERC734`, `IERC735` (components of `IIdentity`),      and `IERC165` itself. It chains to `ERC165Upgradeable.supportsInterface`."
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      }
    },
    "events": {
      "AccessManagerSet(address,address)": {
        "details": "This event is crucial for transparency and monitoring. It allows external observers      to know when the authority managing roles and permissions for a token has been updated.      The `indexed` keyword for `sender` and `manager` allows these addresses to be efficiently      searched for in event logs.",
        "params": {
          "manager": "The new address of the `SMARTTokenAccessManager` contract that will now                oversee access control for the token.",
          "sender": "The address of the account that initiated the change of the access manager.               This is typically an administrator or an account with special privileges."
        }
      },
      "Approved(uint256,bool)": {
        "details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
      },
      "ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
      },
      "ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
      },
      "ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
      },
      "Executed(uint256,address,uint256,bytes)": {
        "details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
      },
      "ExecutionFailed(uint256,address,uint256,bytes)": {
        "details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
      },
      "ExecutionRequested(uint256,address,uint256,bytes)": {
        "details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
      },
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "KeyAdded(bytes32,uint256,uint256)": {
        "details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
      },
      "KeyRemoved(bytes32,uint256,uint256)": {
        "details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
      }
    },
    "errors": {
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "Error: Account Lacks Required Role.      This error is emitted when an action is attempted by an account (`account`)      that does not possess the necessary authorization role (`neededRole`).      For example, if an account tries to mint new tokens but doesn't have the 'MINTER_ROLE'.",
          "params": {
            "account": "The address of the account that attempted the unauthorized action.",
            "neededRole": "The `bytes32` identifier of the role that the `account` was missing."
          }
        }
      ],
      "InvalidAccessManager()": [
        {
          "details": "Error thrown when trying to set an invalid access manager"
        }
      ],
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "UnsupportedExecutionOperation()": [
        {
          "details": "Error thrown when attempting to use execution functionality in an unsupported way"
        }
      ],
      "UnsupportedKeyOperation()": [
        {
          "details": "Error thrown when attempting to use key-based functionality"
        }
      ]
    },
    "title": "ATK Token Identity Implementation Contract"
  },
  "id": 145
}