{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "systemAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialAdmin",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "fallback",
      "stateMutability": "payable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "error",
      "name": "ETHTransfersNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InitializationWithZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSystemAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TokenAccessManagerImplementationNotSet",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x608060405234610171576040610469803803809161001c82610189565b608039126101715761002c6101d7565b61003660a06101ed565b906001600160a01b03811680159081156100ff575b506100f0577f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d380546001600160a01b0319166001600160a01b039290921691821790556100e1916100ce916100dc906100a390610224565b60405163189acdbd60e31b60208201526001600160a01b039093166024840152919283906044820190565b03601f1981018452836101b4565b6102b1565b60405161013b908161032e8239f35b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815263b04c0eef60e01b60048201529150602090829060249082905afa90811561016c575f9161013d575b50155f61004b565b61015f915060203d602011610165575b61015781836101b4565b810190610201565b5f610135565b503d61014d565b610219565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176101af57604052565b610175565b601f909101601f19168101906001600160401b038211908210176101af57604052565b608051906001600160a01b038216820361017157565b51906001600160a01b038216820361017157565b90816020910312610171575180151581036101715790565b6040513d5f823e3d90fd5b6040516344eecc1760e01b815290602090829060049082906001600160a01b03165afa90811561016c575f91610277575b506001600160a01b038116156102685790565b63099d3e0360e21b5f5260045ffd5b90506020813d6020116102a9575b81610292602093836101b4565b81010312610171576102a3906101ed565b5f610255565b3d9150610285565b6001600160a01b0381161561031e57815f929160208493519201905af43d15610316573d906001600160401b0382116101af57604051916102fc601f8201601f1916602001846101b4565b82523d5f602084013e5b1561030e5750565b602081519101fd5b606090610306565b63ee0a129760e01b5f5260045ffdfe608060405236156100dc577f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d3546344eecc1760e01b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb5763099d3e0360e21b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea164736f6c634300081c000a",
    "sourceMap": "1164:2031:117:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;1164:2031:117;;2533:28:109;;;:104;;;;-1:-1:-1;2529:164:109;;;1502:66;;;-1:-1:-1;;;;;;1502:66:109;-1:-1:-1;;;;;1164:2031:117;;;;1502:66:109;;;;;2443:4:117;;2288:93;;;;2204:42;;;:::i;:::-;1164:2031;;-1:-1:-1;;;1164:2031:117;2288:93;;;-1:-1:-1;;;;;1164:2031:117;;;2288:93;;;1164:2031;;;;;;;;;;2288:93;;;;;;;;;;:::i;:::-;2443:4;:::i;:::-;1164:2031;;;;;;;;;2529:164:109;2660:22;;;-1:-1:-1;2660:22:109;;-1:-1:-1;2660:22:109;2533:104;1164:2031:117;;-1:-1:-1;;;2566:71:109;;-1:-1:-1;;;2566:71:109;;;1164:2031:117;;-1:-1:-1;1164:2031:117;;;;;;;;2566:71:109;;;;;;;-1:-1:-1;2566:71:109;;;2533:104;2565:72;;2533:104;;;2566:71;;;;1164:2031:117;2566:71:109;1164:2031:117;2566:71:109;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1164:2031:117:-;-1:-1:-1;1164:2031:117;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1164:2031:117;;;;-1:-1:-1;;;;;1164:2031:117;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;-1:-1:-1;;1164:2031:117;;;;-1:-1:-1;;;;;1164:2031:117;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1164:2031:117;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1164:2031:117;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;2861:332;1164:2031;;-1:-1:-1;;;2999:41:117;;1164:2031;2999:41;;1164:2031;;2999:41;;1164:2031;;-1:-1:-1;;;;;1164:2031:117;2999:41;;;;;;;-1:-1:-1;2999:41:117;;;2861:332;-1:-1:-1;;;;;;1164:2031:117;;3054:28;3050:106;;2861:332;:::o;3050:106::-;3105:40;;;-1:-1:-1;3105:40:117;2999:41;-1:-1:-1;3105:40:117;2999:41;;;;;;;;;;;;;;;;;:::i;:::-;;;1164:2031;;;;;;;:::i;:::-;2999:41;;;;;;-1:-1:-1;2999:41:117;;3922:471:109;-1:-1:-1;;;;;1164:2031:117;;4049:35:109;4045:104;;4200:50;4082:1;4200:50;;;;;;;;;;;1164:2031:117;;;;;;-1:-1:-1;;;;;1164:2031:117;;;;;;;;2288:93;1164:2031;;-1:-1:-1;;1164:2031:117;4200:50:109;1164:2031:117;;;:::i;:::-;;;;4082:1:109;4200:50;1164:2031:117;;;;4264:8:109;4260:127;;3922:471;:::o;4260:127::-;4200:50;4288:89;;;;;1164:2031:117;;;;;4045:104:109;4107:31;;;4082:1;4107:31;;4082:1;4107:31",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405236156100dc577f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d3546344eecc1760e01b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb5763099d3e0360e21b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea164736f6c634300081c000a",
    "sourceMap": "1164:2031:117:-:0;;;;;;;1502:66:109;;-1:-1:-1;;;1164:2031:117;2999:41;;;;;;;1164:2031;;-1:-1:-1;;;;;1502:66:109;2999:41:117;;;;;;-1:-1:-1;2999:41:117;;;-1:-1:-1;;;;;;1502:66:109;;2381:17:182;3050:106:117;3105:40;;;-1:-1:-1;3105:40:117;2999:41;-1:-1:-1;3105:40:117;2999:41;;;;;;;;;1164:2031;;;;;;;;;;;;;;;;;;2999:41;1164:2031;;;;2999:41;;:::i;:::-;;;1164:2031;;;;-1:-1:-1;1164:2031:117;;2999:41;1164:2031;;-1:-1:-1;1164:2031:117;2999:41;;;;;;1164:2031;;;-1:-1:-1;1164:2031:117;;;;;;5238:24:109;;;;;;;;949:895:182;1019:819;949:895;;1019:819;;;;;;;;;;;;;;;;;;;;;;;1164:2031:117;;;;;;;;;;;-1:-1:-1;;;;;1502:66:109;;1164:2031:117;;;;;:::o;:::-;-1:-1:-1;1164:2031:117;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ETHTransfersNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializationWithZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSystemAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAccessManagerImplementationNotSet\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"It follows the EIP-1967 standard for upgradeable proxies. This means that this contract (the proxy)      holds the storage and the public address that users interact with, while the logic (code execution)      is delegated to a separate implementation contract (`ATKTokenAccessManagerImplementation`).      The address of the current implementation contract is retrieved dynamically from the `IATKSystem` contract.      This allows the underlying token access manager logic to be upgraded without changing the proxy's address or losing its state.      Inherits from `ATKSystemProxy`.\",\"errors\":{\"ETHTransfersNotAllowed()\":[{\"details\":\"Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent loss of funds or unexpected behavior.\"}],\"InitializationWithZeroAddress()\":[{\"details\":\"This typically occurs in proxy constructors if the logic contract address fetched from the system is address(0).\"}],\"InvalidSystemAddress()\":[{\"details\":\"This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation.\"}],\"TokenAccessManagerImplementationNotSet()\":[{\"details\":\"This error is thrown if an operation requires the token access manager implementation, but its logic contract address is zero or has not been configured in the `SMARTSystem`.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"This function is called only once when the proxy contract is deployed. It performs critical setup steps: 1. Stores the `systemAddress` (handled by `ATKSystemProxy` constructor). 2. Retrieves the initial `ATKTokenAccessManagerImplementation` address from the `IATKSystem` contract. 3. Ensures this retrieved implementation address is not the zero address. 4. Executes a `delegatecall` to the `initialize` function of the `ATKTokenAccessManagerImplementation` contract    via `_performInitializationDelegatecall`.\",\"params\":{\"initialAdmin\":\"The address that will be granted initial administrative privileges.\",\"systemAddress\":\"The address of the `IATKSystem` contract.\"}}},\"title\":\"ATK Token Access Manager Proxy Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ETHTransfersNotAllowed()\":[{\"notice\":\"Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it.\"}],\"InitializationWithZeroAddress()\":[{\"notice\":\"Error indicating that an attempt was made to initialize a component with a zero address for its implementation.\"}],\"InvalidSystemAddress()\":[{\"notice\":\"Error indicating that an invalid system address was provided or encountered.\"}],\"TokenAccessManagerImplementationNotSet()\":[{\"notice\":\"Error indicating that the token access manager contract implementation address has not been set.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the `ATKTokenAccessManagerProxy`.\"}},\"notice\":\"This contract acts as an upgradeable proxy for the `ATKTokenAccessManagerImplementation`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/access-manager/ATKTokenAccessManagerProxy.sol\":\"ATKTokenAccessManagerProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/smart/extensions/access-managed/ISMARTTokenAccessManager.sol\":{\"keccak256\":\"0xd8fb2176229e603ed535b0ade30c09c41c416a90997edf8eab72af01cdcd51f3\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://90d07eb638bcd5a00efd0e4752c414e8ea25a3be93efcdc765d147b6c49c004a\",\"dweb:/ipfs/QmRLK1p8b6jZqQ9EMxoMQQMtSgeEqz2P12xbHozaXztdBw\"]},\"contracts/system/ATKSystemErrors.sol\":{\"keccak256\":\"0x85d02e1d6fb4ee127073c8cfc6effadb23579771aa5ebb0a09abc736b30a2cf2\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://95d385cbab46aecdd99df43c550212fa82e36e45fa32b4d5dde79ba46e142503\",\"dweb:/ipfs/QmT8vANsK8VjU14ZLzEvvGfXePeYThqP9wosD58APn5vCD\"]},\"contracts/system/ATKSystemProxy.sol\":{\"keccak256\":\"0x12c010a68ad78794ba027937670830daf64096a0679935f905aba52d6f59fcbd\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://7ff81a994ac5b99823ffe2a52f9474561719c9e33edf133c637388e6b5ab8790\",\"dweb:/ipfs/QmdjMocxoF2HCMpmpz37HgL2MMLYW69ZFbRYhQeF9wZ7wZ\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x7b73d0d749af9b20cd90386faeec76ba4c07caddad3156583aebedd4ac8607ca\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://134f12d8f281615b7997c659a77723e6d29312b01fe09dfa2e02b39b39ec3ad9\",\"dweb:/ipfs/QmSPTaTr2vQDZCjVaPBazLXbA3YsYb6bKn2c52RawZbo2g\"]},\"contracts/system/access-manager/ATKTokenAccessManagerImplementation.sol\":{\"keccak256\":\"0xe61a8ee27d7e3c923840c0d017d60ef2914e2470732cd5467feb6a7a95ce8d1c\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://50fb5b1ba2283ec3200da2a8408e3d44c57d76386e713e93d112cfa63ce74022\",\"dweb:/ipfs/QmbV7wG8joMMnEn1BZ1ChiU6W8fKkrfTB49bNDc81jeS4U\"]},\"contracts/system/access-manager/ATKTokenAccessManagerProxy.sol\":{\"keccak256\":\"0x08214ec7bca8a9224b8b5489b75beca80017d61e94c3aff89160efe7c27b70b8\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f3a6c44ff433f13c80c024f95eabc2df5dd1d95745d65a4c3eb015445d3f2072\",\"dweb:/ipfs/QmQF9A8uPsD5WmbUtuoPBfj5yi9BZZqkjfcjkANgMYbXtp\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"dependencies/@openzeppelin-contracts-5.3.0/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "systemAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ETHTransfersNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializationWithZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSystemAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenAccessManagerImplementationNotSet"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "This function is called only once when the proxy contract is deployed. It performs critical setup steps: 1. Stores the `systemAddress` (handled by `ATKSystemProxy` constructor). 2. Retrieves the initial `ATKTokenAccessManagerImplementation` address from the `IATKSystem` contract. 3. Ensures this retrieved implementation address is not the zero address. 4. Executes a `delegatecall` to the `initialize` function of the `ATKTokenAccessManagerImplementation` contract    via `_performInitializationDelegatecall`.",
            "params": {
              "initialAdmin": "The address that will be granted initial administrative privileges.",
              "systemAddress": "The address of the `IATKSystem` contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor for the `ATKTokenAccessManagerProxy`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/access-manager/ATKTokenAccessManagerProxy.sol": "ATKTokenAccessManagerProxy"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/smart/extensions/access-managed/ISMARTTokenAccessManager.sol": {
        "keccak256": "0xd8fb2176229e603ed535b0ade30c09c41c416a90997edf8eab72af01cdcd51f3",
        "urls": [
          "bzz-raw://90d07eb638bcd5a00efd0e4752c414e8ea25a3be93efcdc765d147b6c49c004a",
          "dweb:/ipfs/QmRLK1p8b6jZqQ9EMxoMQQMtSgeEqz2P12xbHozaXztdBw"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/ATKSystemErrors.sol": {
        "keccak256": "0x85d02e1d6fb4ee127073c8cfc6effadb23579771aa5ebb0a09abc736b30a2cf2",
        "urls": [
          "bzz-raw://95d385cbab46aecdd99df43c550212fa82e36e45fa32b4d5dde79ba46e142503",
          "dweb:/ipfs/QmT8vANsK8VjU14ZLzEvvGfXePeYThqP9wosD58APn5vCD"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/ATKSystemProxy.sol": {
        "keccak256": "0x12c010a68ad78794ba027937670830daf64096a0679935f905aba52d6f59fcbd",
        "urls": [
          "bzz-raw://7ff81a994ac5b99823ffe2a52f9474561719c9e33edf133c637388e6b5ab8790",
          "dweb:/ipfs/QmdjMocxoF2HCMpmpz37HgL2MMLYW69ZFbRYhQeF9wZ7wZ"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/IATKSystem.sol": {
        "keccak256": "0x7b73d0d749af9b20cd90386faeec76ba4c07caddad3156583aebedd4ac8607ca",
        "urls": [
          "bzz-raw://134f12d8f281615b7997c659a77723e6d29312b01fe09dfa2e02b39b39ec3ad9",
          "dweb:/ipfs/QmSPTaTr2vQDZCjVaPBazLXbA3YsYb6bKn2c52RawZbo2g"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/access-manager/ATKTokenAccessManagerImplementation.sol": {
        "keccak256": "0xe61a8ee27d7e3c923840c0d017d60ef2914e2470732cd5467feb6a7a95ce8d1c",
        "urls": [
          "bzz-raw://50fb5b1ba2283ec3200da2a8408e3d44c57d76386e713e93d112cfa63ce74022",
          "dweb:/ipfs/QmbV7wG8joMMnEn1BZ1ChiU6W8fKkrfTB49bNDc81jeS4U"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/access-manager/ATKTokenAccessManagerProxy.sol": {
        "keccak256": "0x08214ec7bca8a9224b8b5489b75beca80017d61e94c3aff89160efe7c27b70b8",
        "urls": [
          "bzz-raw://f3a6c44ff433f13c80c024f95eabc2df5dd1d95745d65a4c3eb015445d3f2072",
          "dweb:/ipfs/QmQF9A8uPsD5WmbUtuoPBfj5yi9BZZqkjfcjkANgMYbXtp"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534",
        "urls": [
          "bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da",
          "dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor for the `ATKTokenAccessManagerProxy`."
      }
    },
    "errors": {
      "ETHTransfersNotAllowed()": [
        {
          "notice": "Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it."
        }
      ],
      "InitializationWithZeroAddress()": [
        {
          "notice": "Error indicating that an attempt was made to initialize a component with a zero address for its implementation."
        }
      ],
      "InvalidSystemAddress()": [
        {
          "notice": "Error indicating that an invalid system address was provided or encountered."
        }
      ],
      "TokenAccessManagerImplementationNotSet()": [
        {
          "notice": "Error indicating that the token access manager contract implementation address has not been set."
        }
      ]
    },
    "notice": "This contract acts as an upgradeable proxy for the `ATKTokenAccessManagerImplementation`."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "It follows the EIP-1967 standard for upgradeable proxies. This means that this contract (the proxy)      holds the storage and the public address that users interact with, while the logic (code execution)      is delegated to a separate implementation contract (`ATKTokenAccessManagerImplementation`).      The address of the current implementation contract is retrieved dynamically from the `IATKSystem` contract.      This allows the underlying token access manager logic to be upgraded without changing the proxy's address or losing its state.      Inherits from `ATKSystemProxy`.",
    "methods": {
      "constructor": {
        "details": "This function is called only once when the proxy contract is deployed. It performs critical setup steps: 1. Stores the `systemAddress` (handled by `ATKSystemProxy` constructor). 2. Retrieves the initial `ATKTokenAccessManagerImplementation` address from the `IATKSystem` contract. 3. Ensures this retrieved implementation address is not the zero address. 4. Executes a `delegatecall` to the `initialize` function of the `ATKTokenAccessManagerImplementation` contract    via `_performInitializationDelegatecall`.",
        "params": {
          "initialAdmin": "The address that will be granted initial administrative privileges.",
          "systemAddress": "The address of the `IATKSystem` contract."
        }
      }
    },
    "errors": {
      "ETHTransfersNotAllowed()": [
        {
          "details": "Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent loss of funds or unexpected behavior."
        }
      ],
      "InitializationWithZeroAddress()": [
        {
          "details": "This typically occurs in proxy constructors if the logic contract address fetched from the system is address(0)."
        }
      ],
      "InvalidSystemAddress()": [
        {
          "details": "This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation."
        }
      ],
      "TokenAccessManagerImplementationNotSet()": [
        {
          "details": "This error is thrown if an operation requires the token access manager implementation, but its logic contract address is zero or has not been configured in the `SMARTSystem`."
        }
      ]
    },
    "title": "ATK Token Access Manager Proxy Contract"
  },
  "id": 117
}