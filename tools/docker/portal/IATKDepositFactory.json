{
  "abi": [
    {
      "type": "function",
      "name": "createDeposit",
      "inputs": [
        {
          "name": "name_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "symbol_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "decimals_",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "requiredClaimTopics_",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "initialModulePairs_",
          "type": "tuple[]",
          "internalType": "struct SMARTComplianceModuleParamPair[]",
          "components": [
            {
              "name": "module",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "params",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "deployedDepositAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "systemAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "tokenImplementation_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialAdmin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "identityVerificationModule",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isValidTokenImplementation",
      "inputs": [
        {
          "name": "tokenImplementation_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "predictDepositAddress",
      "inputs": [
        {
          "name": "name_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "symbol_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "decimals_",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "requiredClaimTopics_",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "initialModulePairs_",
          "type": "tuple[]",
          "internalType": "struct SMARTComplianceModuleParamPair[]",
          "components": [
            {
              "name": "module",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "params",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "predictedAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "TokenAssetCreated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenIdentity",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "interfaces",
          "type": "bytes4[]",
          "indexed": false,
          "internalType": "bytes4[]"
        },
        {
          "name": "accessManager",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokenImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessManagerAlreadyDeployed",
      "inputs": [
        {
          "name": "predictedAddress",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "AddressAlreadyDeployed",
      "inputs": [
        {
          "name": "predictedAddress",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidIdentityVerificationModuleAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidImplementationAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidTokenAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProxyCreationFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TokenIdentityAddressMismatch",
      "inputs": [
        {
          "name": "deployedTokenIdentityAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "tokenIdentityAddress",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createDeposit(string,string,uint8,uint256[],(address,bytes)[])": "b212ce56",
    "initialize(address,address,address,address)": "f8c8765e",
    "isValidTokenImplementation(address)": "995087de",
    "predictDepositAddress(string,string,uint8,uint256[],(address,bytes)[])": "208330b3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenImplementation()": "2f3a3d5d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"predictedAddress\",\"type\":\"address\"}],\"name\":\"AccessManagerAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"predictedAddress\",\"type\":\"address\"}],\"name\":\"AddressAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIdentityVerificationModuleAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImplementationAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyCreationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployedTokenIdentityAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIdentityAddress\",\"type\":\"address\"}],\"name\":\"TokenIdentityAddressMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIdentity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4[]\",\"name\":\"interfaces\",\"type\":\"bytes4[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessManager\",\"type\":\"address\"}],\"name\":\"TokenAssetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TokenImplementationUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"requiredClaimTopics_\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct SMARTComplianceModuleParamPair[]\",\"name\":\"initialModulePairs_\",\"type\":\"tuple[]\"}],\"name\":\"createDeposit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedDepositAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenImplementation_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"identityVerificationModule\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenImplementation_\",\"type\":\"address\"}],\"name\":\"isValidTokenImplementation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"requiredClaimTopics_\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct SMARTComplianceModuleParamPair[]\",\"name\":\"initialModulePairs_\",\"type\":\"tuple[]\"}],\"name\":\"predictDepositAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"predictedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidTokenAddress()\":[{\"details\":\"Defines custom error types used by the contract for various failure conditions.\"}]},\"events\":{\"TokenAssetCreated(address,address,address,bytes4[],address)\":{\"params\":{\"accessManager\":\"The address of the access manager.\",\"interfaces\":\"The array of interfaces that the token supports.\",\"sender\":\"The address of the sender.\",\"tokenAddress\":\"The address of the newly created token.\",\"tokenIdentity\":\"The address of the token identity.\"}},\"TokenImplementationUpdated(address,address,address)\":{\"params\":{\"newImplementation\":\"The address of the new token implementation.\",\"oldImplementation\":\"The address of the old token implementation.\"}}},\"kind\":\"dev\",\"methods\":{\"createDeposit(string,string,uint8,uint256[],(address,bytes)[])\":{\"params\":{\"decimals_\":\"The number of decimals for the deposit token.\",\"initialModulePairs_\":\"An array of initial compliance module and parameter pairs.\",\"name_\":\"The name of the deposit token.\",\"requiredClaimTopics_\":\"An array of claim topics required for interacting with the deposit token.\",\"symbol_\":\"The symbol of the deposit token.\"},\"returns\":{\"deployedDepositAddress\":\"The address of the newly deployed deposit token contract.\"}},\"initialize(address,address,address,address)\":{\"params\":{\"identityVerificationModule\":\"The address of the identity verification module.\",\"initialAdmin\":\"The address of the initial admin for the token registry.\",\"systemAddress\":\"The address of the `IATKSystem` contract.\",\"tokenImplementation_\":\"The address of the token implementation contract.\"}},\"isValidTokenImplementation(address)\":{\"returns\":{\"_0\":\"tokenImplementation The address of the token implementation contract.\"}},\"predictDepositAddress(string,string,uint8,uint256[],(address,bytes)[])\":{\"params\":{\"decimals_\":\"The number of decimals for the deposit token.\",\"initialModulePairs_\":\"An array of initial compliance module and parameter pairs.\",\"name_\":\"The name of the deposit token.\",\"requiredClaimTopics_\":\"An array of claim topics required for interacting with the deposit token.\",\"symbol_\":\"The symbol of the deposit token.\"},\"returns\":{\"predictedAddress\":\"The predicted address of the deposit token contract.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenImplementation()\":{\"returns\":{\"_0\":\"tokenImplementation The address of the token implementation contract.\"}}},\"title\":\"Interface for the ATK Deposit Factory\",\"version\":1},\"userdoc\":{\"errors\":{\"AccessManagerAlreadyDeployed(address)\":[{\"notice\":\"Error when a predicted CREATE2 address for an access manager is already marked as deployed by this factory.\"}],\"AddressAlreadyDeployed(address)\":[{\"notice\":\"Error when a CREATE2 proxy deployment fails.\"}],\"InvalidIdentityVerificationModuleAddress()\":[{\"notice\":\"Error when the provided identity verification module address is the zero address.\"}],\"InvalidImplementationAddress()\":[{\"notice\":\"Error for attempting to unregister a token that is not registered.\"}],\"InvalidTokenAddress()\":[{\"notice\":\"Custom errors for the factory contract\"}],\"ProxyCreationFailed()\":[{\"notice\":\"Error for when the provided token implementation address is the zero address.\"}],\"TokenIdentityAddressMismatch(address,address)\":[{\"notice\":\"Error when a token identity address mismatch is detected.\"}]},\"events\":{\"TokenAssetCreated(address,address,address,bytes4[],address)\":{\"notice\":\"Emitted when a new proxy contract is created using CREATE2.\"},\"TokenImplementationUpdated(address,address,address)\":{\"notice\":\"Emitted when the token implementation address is updated.\"}},\"kind\":\"user\",\"methods\":{\"createDeposit(string,string,uint8,uint256[],(address,bytes)[])\":{\"notice\":\"Creates a new ATK Deposit token.\"},\"initialize(address,address,address,address)\":{\"notice\":\"Initializes the token registry.\"},\"isValidTokenImplementation(address)\":{\"notice\":\"Returns the address of the token implementation contract.\"},\"predictDepositAddress(string,string,uint8,uint256[],(address,bytes)[])\":{\"notice\":\"Predicts the deployment address of a new ATK Deposit token.\"},\"tokenImplementation()\":{\"notice\":\"Returns the address of the token implementation contract.\"}},\"notice\":\"Defines the functions for creating and predicting addresses of ATK Deposit token instances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/assets/deposit/IATKDepositFactory.sol\":\"IATKDepositFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/assets/deposit/IATKDepositFactory.sol\":{\"keccak256\":\"0xd60a39ce1927cdde066cd6bdc46f81669fa468ab1201bd635425c08129942493\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://198985002b97e06da62ad74fed5914bdb300913bf8b5378d8d59183e301ff523\",\"dweb:/ipfs/QmNUy1YkS2Pm4ZxuXmg9HxmdvJ3j8Ccg4yYwiZUpTih86a\"]},\"contracts/smart/interface/structs/SMARTComplianceModuleParamPair.sol\":{\"keccak256\":\"0x489a55538b554a0c935bee7efc28f7e821e161638c5726c9d367a644a0b7c62a\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://04bb06aed3ee3c5c6f3df9a59721c08ddd57b5521da1c9c6fd96b7c8b57db813\",\"dweb:/ipfs/QmRuzqKDr2sBHNuQhCzWGa8euNiMyvP7LTjSFjvAj5uFqh\"]},\"contracts/system/token-factory/IATKTokenFactory.sol\":{\"keccak256\":\"0xdbb6b89048b12218b8c10fc0ae96e92d1aa246ced85f01f8eaf59be3bcbb98c8\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://8b46c67fdddd870efbad064413e6d707e60d8b920d27bcccdce91fc00969a7b0\",\"dweb:/ipfs/QmchmsPth5NwDC4mL88tf3CLwTKErxb8dpWehrZCJy2uWa\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "predictedAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AccessManagerAlreadyDeployed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "predictedAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressAlreadyDeployed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidIdentityVerificationModuleAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidImplementationAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTokenAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProxyCreationFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "deployedTokenIdentityAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenIdentityAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "TokenIdentityAddressMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenIdentity",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes4[]",
              "name": "interfaces",
              "type": "bytes4[]",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "accessManager",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenAssetCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldImplementation",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokenImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals_",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "requiredClaimTopics_",
              "type": "uint256[]"
            },
            {
              "internalType": "struct SMARTComplianceModuleParamPair[]",
              "name": "initialModulePairs_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createDeposit",
          "outputs": [
            {
              "internalType": "address",
              "name": "deployedDepositAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "systemAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenImplementation_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialAdmin",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "identityVerificationModule",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenImplementation_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidTokenImplementation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals_",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "requiredClaimTopics_",
              "type": "uint256[]"
            },
            {
              "internalType": "struct SMARTComplianceModuleParamPair[]",
              "name": "initialModulePairs_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "predictDepositAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "predictedAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createDeposit(string,string,uint8,uint256[],(address,bytes)[])": {
            "params": {
              "decimals_": "The number of decimals for the deposit token.",
              "initialModulePairs_": "An array of initial compliance module and parameter pairs.",
              "name_": "The name of the deposit token.",
              "requiredClaimTopics_": "An array of claim topics required for interacting with the deposit token.",
              "symbol_": "The symbol of the deposit token."
            },
            "returns": {
              "deployedDepositAddress": "The address of the newly deployed deposit token contract."
            }
          },
          "initialize(address,address,address,address)": {
            "params": {
              "identityVerificationModule": "The address of the identity verification module.",
              "initialAdmin": "The address of the initial admin for the token registry.",
              "systemAddress": "The address of the `IATKSystem` contract.",
              "tokenImplementation_": "The address of the token implementation contract."
            }
          },
          "isValidTokenImplementation(address)": {
            "returns": {
              "_0": "tokenImplementation The address of the token implementation contract."
            }
          },
          "predictDepositAddress(string,string,uint8,uint256[],(address,bytes)[])": {
            "params": {
              "decimals_": "The number of decimals for the deposit token.",
              "initialModulePairs_": "An array of initial compliance module and parameter pairs.",
              "name_": "The name of the deposit token.",
              "requiredClaimTopics_": "An array of claim topics required for interacting with the deposit token.",
              "symbol_": "The symbol of the deposit token."
            },
            "returns": {
              "predictedAddress": "The predicted address of the deposit token contract."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "tokenImplementation()": {
            "returns": {
              "_0": "tokenImplementation The address of the token implementation contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createDeposit(string,string,uint8,uint256[],(address,bytes)[])": {
            "notice": "Creates a new ATK Deposit token."
          },
          "initialize(address,address,address,address)": {
            "notice": "Initializes the token registry."
          },
          "isValidTokenImplementation(address)": {
            "notice": "Returns the address of the token implementation contract."
          },
          "predictDepositAddress(string,string,uint8,uint256[],(address,bytes)[])": {
            "notice": "Predicts the deployment address of a new ATK Deposit token."
          },
          "tokenImplementation()": {
            "notice": "Returns the address of the token implementation contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/assets/deposit/IATKDepositFactory.sol": "IATKDepositFactory"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/assets/deposit/IATKDepositFactory.sol": {
        "keccak256": "0xd60a39ce1927cdde066cd6bdc46f81669fa468ab1201bd635425c08129942493",
        "urls": [
          "bzz-raw://198985002b97e06da62ad74fed5914bdb300913bf8b5378d8d59183e301ff523",
          "dweb:/ipfs/QmNUy1YkS2Pm4ZxuXmg9HxmdvJ3j8Ccg4yYwiZUpTih86a"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/structs/SMARTComplianceModuleParamPair.sol": {
        "keccak256": "0x489a55538b554a0c935bee7efc28f7e821e161638c5726c9d367a644a0b7c62a",
        "urls": [
          "bzz-raw://04bb06aed3ee3c5c6f3df9a59721c08ddd57b5521da1c9c6fd96b7c8b57db813",
          "dweb:/ipfs/QmRuzqKDr2sBHNuQhCzWGa8euNiMyvP7LTjSFjvAj5uFqh"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/token-factory/IATKTokenFactory.sol": {
        "keccak256": "0xdbb6b89048b12218b8c10fc0ae96e92d1aa246ced85f01f8eaf59be3bcbb98c8",
        "urls": [
          "bzz-raw://8b46c67fdddd870efbad064413e6d707e60d8b920d27bcccdce91fc00969a7b0",
          "dweb:/ipfs/QmchmsPth5NwDC4mL88tf3CLwTKErxb8dpWehrZCJy2uWa"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "createDeposit(string,string,uint8,uint256[],(address,bytes)[])": {
        "notice": "Creates a new ATK Deposit token."
      },
      "initialize(address,address,address,address)": {
        "notice": "Initializes the token registry."
      },
      "isValidTokenImplementation(address)": {
        "notice": "Returns the address of the token implementation contract."
      },
      "predictDepositAddress(string,string,uint8,uint256[],(address,bytes)[])": {
        "notice": "Predicts the deployment address of a new ATK Deposit token."
      },
      "tokenImplementation()": {
        "notice": "Returns the address of the token implementation contract."
      }
    },
    "events": {
      "TokenAssetCreated(address,address,address,bytes4[],address)": {
        "notice": "Emitted when a new proxy contract is created using CREATE2."
      },
      "TokenImplementationUpdated(address,address,address)": {
        "notice": "Emitted when the token implementation address is updated."
      }
    },
    "errors": {
      "AccessManagerAlreadyDeployed(address)": [
        {
          "notice": "Error when a predicted CREATE2 address for an access manager is already marked as deployed by this factory."
        }
      ],
      "AddressAlreadyDeployed(address)": [
        {
          "notice": "Error when a CREATE2 proxy deployment fails."
        }
      ],
      "InvalidIdentityVerificationModuleAddress()": [
        {
          "notice": "Error when the provided identity verification module address is the zero address."
        }
      ],
      "InvalidImplementationAddress()": [
        {
          "notice": "Error for attempting to unregister a token that is not registered."
        }
      ],
      "InvalidTokenAddress()": [
        {
          "notice": "Custom errors for the factory contract"
        }
      ],
      "ProxyCreationFailed()": [
        {
          "notice": "Error for when the provided token implementation address is the zero address."
        }
      ],
      "TokenIdentityAddressMismatch(address,address)": [
        {
          "notice": "Error when a token identity address mismatch is detected."
        }
      ]
    },
    "notice": "Defines the functions for creating and predicting addresses of ATK Deposit token instances."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "createDeposit(string,string,uint8,uint256[],(address,bytes)[])": {
        "params": {
          "decimals_": "The number of decimals for the deposit token.",
          "initialModulePairs_": "An array of initial compliance module and parameter pairs.",
          "name_": "The name of the deposit token.",
          "requiredClaimTopics_": "An array of claim topics required for interacting with the deposit token.",
          "symbol_": "The symbol of the deposit token."
        },
        "returns": {
          "deployedDepositAddress": "The address of the newly deployed deposit token contract."
        }
      },
      "initialize(address,address,address,address)": {
        "params": {
          "identityVerificationModule": "The address of the identity verification module.",
          "initialAdmin": "The address of the initial admin for the token registry.",
          "systemAddress": "The address of the `IATKSystem` contract.",
          "tokenImplementation_": "The address of the token implementation contract."
        }
      },
      "isValidTokenImplementation(address)": {
        "returns": {
          "_0": "tokenImplementation The address of the token implementation contract."
        }
      },
      "predictDepositAddress(string,string,uint8,uint256[],(address,bytes)[])": {
        "params": {
          "decimals_": "The number of decimals for the deposit token.",
          "initialModulePairs_": "An array of initial compliance module and parameter pairs.",
          "name_": "The name of the deposit token.",
          "requiredClaimTopics_": "An array of claim topics required for interacting with the deposit token.",
          "symbol_": "The symbol of the deposit token."
        },
        "returns": {
          "predictedAddress": "The predicted address of the deposit token contract."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "tokenImplementation()": {
        "returns": {
          "_0": "tokenImplementation The address of the token implementation contract."
        }
      }
    },
    "events": {
      "TokenAssetCreated(address,address,address,bytes4[],address)": {
        "params": {
          "accessManager": "The address of the access manager.",
          "interfaces": "The array of interfaces that the token supports.",
          "sender": "The address of the sender.",
          "tokenAddress": "The address of the newly created token.",
          "tokenIdentity": "The address of the token identity."
        }
      },
      "TokenImplementationUpdated(address,address,address)": {
        "params": {
          "newImplementation": "The address of the new token implementation.",
          "oldImplementation": "The address of the old token implementation."
        }
      }
    },
    "errors": {
      "InvalidTokenAddress()": [
        {
          "details": "Defines custom error types used by the contract for various failure conditions."
        }
      ]
    },
    "title": "Interface for the ATK Deposit Factory"
  },
  "id": 16
}