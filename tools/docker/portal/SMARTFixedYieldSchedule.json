{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "tokenAddress_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "startDate_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "endDate_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "rate_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "interval_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "initialOwner_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "RATE_BASIS_POINTS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allPeriods",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateAccruedYield",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateAccruedYield",
      "inputs": [
        {
          "name": "holder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimYield",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "currentPeriod",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "endDate",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "interval",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lastClaimedPeriod",
      "inputs": [
        {
          "name": "holder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lastClaimedPeriod",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lastCompletedPeriod",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "periodEnd",
      "inputs": [
        {
          "name": "period",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rate",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "startDate",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "timeUntilNextPeriod",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "token",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ISMARTYield"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "topUpUnderlyingAsset",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "totalUnclaimedYield",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalYieldForNextPeriod",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "underlyingAsset",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawAllUnderlyingAsset",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawUnderlyingAsset",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "FixedYieldScheduleSet",
      "inputs": [
        {
          "name": "startDate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "endDate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "interval",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "periodEndTimestamps",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "underlyingAsset",
          "type": "address",
          "indexed": false,
          "internalType": "contract IERC20"
        },
        {
          "name": "yieldForNextPeriod",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "UnderlyingAssetTopUp",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "UnderlyingAssetWithdrawn",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "YieldClaimed",
      "inputs": [
        {
          "name": "holder",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "claimedAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "fromPeriod",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "toPeriod",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "periodAmounts",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "periodYields",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "totalUnclaimedYield",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "yieldForNextPeriod",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessControlBadConfirmation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "neededRole",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "AlreadyInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CannotInitializeLogicContract",
      "inputs": []
    },
    {
      "type": "error",
      "name": "EnforcedPause",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ExpectedPause",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientUnderlyingBalance",
      "inputs": [
        {
          "name": "currentBalance",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "requiredBalance",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEndDate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInterval",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPeriod",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidRate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidStartDate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidToken",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidUnderlyingAsset",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NoUnderlyingBalance",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NoYieldAvailable",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReentrantInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ScheduleNotActive",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a0806040523461039f5760e081611ee9803803809161001f828561040b565b83398101031261039f576100328161042e565b906020810151604082015192606083015160808401519161006160c061005a60a0880161042e565b960161042e565b6080526001600b556001600160a01b031680156103fc5742841115806103f2575b6103e357838611156103d45781156103c55782156103b6575f80546001600160a01b031916821790556040516376d5de8560e01b815290602090829060049082905afa9081156103ab575f91610365575b50600180546001600160a01b0319166001600160a01b039290921691821790551561035657826002558460035580600455816005558285038581116102d657829004600181018091116102d65761012981610442565b610136604051918261040b565b81815261014282610442565b602082019190601f190136833751906001600160401b0382116103425768010000000000000000821161034257600654826006558083106102fe575b5060065f5260205f205f5b8381106102ea57505050505f5b81811061026c5750506101a7610508565b9160018060a01b0360015416916040519660e0880195885260208801526040870152606086015260e0608086015260065480935261010085019260065f5260205f20905f5b8181106102565761022f877f257d94ac1c207cc7e5778ea325814452897ee07f059fea0c16b7b6f347be78b18a808a8a8a60a084015260c08301520390a161046c565b50604051611890908161063982396080518181816106540152818161070a01526117d50152f35b82548652602090950194600192830192016101ec565b60025490600181018082116102d65760055461028791610459565b82018092116102d6576003548083116102ce575b506006548110156102ba5760019160065f528160205f20015501610196565b634e487b7160e01b5f52603260045260245ffd5b91505f61029b565b634e487b7160e01b5f52601160045260245ffd5b600190602084519401938184015501610189565b60065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9081019083015b818110610337575061017e565b5f815560010161032a565b634e487b7160e01b5f52604160045260245ffd5b634e81208360e01b5f5260045ffd5b90506020813d6020116103a3575b816103806020938361040b565b8101031261039f57516001600160a01b038116810361039f575f6100d3565b5f80fd5b3d9150610373565b6040513d5f823e3d90fd5b6305fabb6160e41b5f5260045ffd5b636a43f8d160e01b5f5260045ffd5b63398145cf60e11b5f5260045ffd5b630bf784c760e01b5f5260045ffd5b5060025415610082565b63c1ab6dc160e01b5f5260045ffd5b601f909101601f19168101906001600160401b0382119082101761034257604052565b51906001600160a01b038216820361039f57565b6001600160401b0381116103425760051b60200190565b818102929181159184041417156102d657565b6001600160a01b0381165f9081525f516020611ec95f395f51905f52602052604090205460ff16610503576001600160a01b038181165f9081525f516020611ec95f395f51905f5260205260409020805460ff191660011790556104ce6105fd565b16906001600160a01b03165f7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6003544210156105f9575f546040516318160ddd60e01b8152906001600160a01b0316602082600481845afa9182156103ab575f926105c4575b50906020602492604051938480926340f2de1b60e11b82525f60048301525afa9182156103ab575f9261058e575b506105816127109261058a92610459565b60045490610459565b0490565b91506020823d6020116105bc575b816105a96020938361040b565b8101031261039f57905190610581610570565b3d915061059c565b91506020823d6020116105f1575b816105df6020938361040b565b8101031261039f579051906020610542565b3d91506105d2565b5f90565b6080516001600160a01b031633148061062d575b156106295760131936013681116102d6573560601c90565b3390565b50601436101561061156fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610ded575080630604061814610dd35780630898c94914610db95780630b97bc8614610d9c5780631cf7e14914610c885780631f28d52c14610c6e578063248a9ca314610c4357806327614ec414610be35780632c4e722e14610bc65780632f2ff15d14610b8857806336568abe14610b345780633f4ba83a14610acf578063406cf2291461073e578063572b6c05146106ea5780635c975abb146106c85780637158da7c146106a05780637b07882e146106835780637da0a8771461063f578063817ea144146106215780638456cb59146105b657806391d148541461056d578063947a36fb14610550578063978fd53b146105365780639a95299a146105135780639fc2f65a146104f9578063a206b55014610439578063a217fddf1461041f578063c24a0f8b14610402578063c54293aa14610376578063d1ae38b81461035a578063d547741f14610315578063e0ecad5a146101fc578063f68e5218146101bd5763fc0c546a14610192575f80fd5b346101b9575f3660031901126101b9575f546040516001600160a01b039091168152602090f35b5f80fd5b346101b9575f3660031901126101b95760206101f46101da6117d2565b6001600160a01b03165f9081526007602052604090205490565b604051908152f35b346101b95760203660031901126101b957610215610e40565b61021d61151f565b61022561153f565b61022d6115f7565b6001600160a01b038116908115610306576001546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa9081156102fb575f916102c9575b5080156102ba576102ac817f6f50cd6d1a8ee055bfba8d1998a1e71e64c3a0791f04001b50f038e3c106590994602094611794565b604051908152a26001600b55005b630bc0b2c560e21b5f5260045ffd5b90506020813d6020116102f3575b816102e460209383610f5c565b810103126101b9575184610277565b3d91506102d7565b6040513d5f823e3d90fd5b634e81208360e01b5f5260045ffd5b346101b95760403660031901126101b957610358600435610334610e56565b9061035361034e825f526009602052600160405f20015490565b6115a7565b6116a5565b005b346101b9575f3660031901126101b95760206040516127108152f35b346101b9575f3660031901126101b95760405180602060065491828152019060065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f905f5b8181106103ec576103e8856103d481870382610f5c565b604051918291602083526020830190610e6c565b0390f35b82548452602090930192600192830192016103bd565b346101b9575f3660031901126101b9576020600354604051908152f35b346101b9575f3660031901126101b95760206040515f8152f35b346101b95760203660031901126101b95760043561045561151f565b61045d6115f7565b6001546104b6906001600160a01b03166104756117d2565b6040516323b872dd60e01b60208201526001600160a01b03909116602482015230604482015260648082018590528152906104b1608483610f5c565b61182b565b7fabda30aae4846dafeb67b57e0f9fb5af47de85525570e48ced61a3c99a4f8daf60206001600160a01b036104e96117d2565b1692604051908152a26001600b55005b346101b9575f3660031901126101b95760206101f4611433565b346101b95760203660031901126101b95760206101f4610531610e40565b611170565b346101b9575f3660031901126101b95760206101f461113a565b346101b9575f3660031901126101b9576020600554604051908152f35b346101b95760403660031901126101b957610586610e56565b6004355f52600960205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101b9575f3660031901126101b9576105ce61153f565b6105d66115f7565b600160ff19600a541617600a557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258602061060e6117d2565b6040516001600160a01b039091168152a1005b346101b95760203660031901126101b95760206101f46101da610e40565b346101b9575f3660031901126101b9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101b9575f3660031901126101b95760206101f46105316117d2565b346101b9575f3660031901126101b9576001546040516001600160a01b039091168152602090f35b346101b9575f3660031901126101b957602060ff600a54166040519015158152f35b346101b95760203660031901126101b9576020610705610e40565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b346101b9575f3660031901126101b95761075661151f565b61075e6115f7565b61076661113a565b600181106108e4576107766117d2565b6001600160a01b0381165f8181526007602052604090205490929160018201918210610a87578282116108e4575f546040516340f2de1b60e11b815260048101869052936001600160a01b0390911690602085602481855afa9485156102fb575f95610a9b575b505f926107ea8583610e9f565b60018101809111610a87576107fe9061174e565b926108098684610e9f565b60018101809111610a875761081d9061174e565b96865b848111156108f35750505083156108e4577fb119cb4f54a2303fcdbc4f7a2c39dc38eb1368d94ac4571f4eddac9c4f0c28ba95610889856108cf938a5f5260076020528560405f205561087582600854610eca565b6008556001546001600160a01b0316611794565b6108c1610894610fdf565b9461089d611433565b9460405198899889526020890152604088015260e0606088015260e0870190610e6c565b908582036080870152610e6c565b9160a084015260c08301520390a26001600b55005b633dfa692b60e11b5f5260045ffd5b5f198101818111610a875780602061090d61094393610fa0565b905460405163277166bf60e11b81526001600160a01b038a16600482015260039290921b1c602482015292839081906044820190565b0381885afa80156102fb5784905f90610a52575b610969935080610a1b575b5050610fa0565b9054604051630981b24d60e41b815260039290921b1c600482015290602082602481875afa80156102fb575f906109e8575b6109ae925083816109b3575b5050610f92565b610820565b6109c36109cc9161271093610fcc565b60045490610fcc565b046109e06109da8b84610e9f565b8c611780565b528b836109a7565b506020823d8211610a13575b81610a0160209383610f5c565b810103126101b9576109ae915161099b565b3d91506109f4565b610a2e6109c3610a369361271093610fcc565b04809a610eca565b98610a4a610a448c86610e9f565b8a611780565b52838d610962565b50506020823d8211610a7f575b81610a6c60209383610f5c565b810103126101b957836109699251610957565b3d9150610a5f565b634e487b7160e01b5f52601160045260245ffd5b9094506020813d602011610ac7575b81610ab760209383610f5c565b810103126101b9575193866107dd565b3d9150610aaa565b346101b9575f3660031901126101b957610ae761153f565b600a5460ff811615610b255760ff1916600a557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa602061060e6117d2565b638dfc202b60e01b5f5260045ffd5b346101b95760403660031901126101b957610b4d610e56565b6001600160a01b03610b5d6117d2565b166001600160a01b03821603610b7957610358906004356116a5565b63334bd91960e11b5f5260045ffd5b346101b95760403660031901126101b957610358600435610ba7610e56565b90610bc161034e825f526009602052600160405f20015490565b611612565b346101b9575f3660031901126101b9576020600454604051908152f35b346101b95760203660031901126101b95760043580158015610c38575b610c29575f198101908111610a8757610c1a602091610fa0565b90549060031b1c604051908152f35b6302e8f35960e31b5f5260045ffd5b506006548111610c00565b346101b95760203660031901126101b95760206101f46004355f526009602052600160405f20015490565b346101b9575f3660031901126101b95760206101f4610fdf565b346101b95760403660031901126101b957610ca1610e40565b602435610cac61151f565b610cb461153f565b610cbc6115f7565b6001600160a01b038216918215610306578115610d8d576001546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa9081156102fb575f91610d5b575b50808411610d445750916102ac816020937f6f50cd6d1a8ee055bfba8d1998a1e71e64c3a0791f04001b50f038e3c106590995611794565b8390630c9f8b8560e01b5f5260045260245260445ffd5b90506020813d602011610d85575b81610d7660209383610f5c565b810103126101b9575185610d0c565b3d9150610d69565b63162908e360e11b5f5260045ffd5b346101b9575f3660031901126101b9576020600254604051908152f35b346101b9575f3660031901126101b95760206101f4610f1b565b346101b9575f3660031901126101b95760206101f4610ed7565b346101b95760203660031901126101b9576004359063ffffffff60e01b82168092036101b957602091637965db0b60e01b8114908115610e2f575b5015158152f35b6301ffc9a760e01b14905083610e28565b600435906001600160a01b03821682036101b957565b602435906001600160a01b03821682036101b957565b90602080835192838152019201905f5b818110610e895750505090565b8251845260209384019390920191600101610e7c565b91908203918211610a8757565b8115610eb6570490565b634e487b7160e01b5f52601260045260245ffd5b91908201809211610a8757565b600254804210610f1657600354421015610f0f57610ef8610f019142610e9f565b60055490610eac565b60018101809111610a875790565b5060065490565b505f90565b600254804210610f5157600354421015610f1657610f399042610e9f565b6005548015610eb65780610f4e920690610e9f565b90565b610f4e904290610e9f565b90601f8019910116810190811067ffffffffffffffff821117610f7e57604052565b634e487b7160e01b5f52604160045260245ffd5b5f198114610a875760010190565b600654811015610fb85760065f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b81810292918115918404141715610a8757565b610fe761113a565b60018110610f16575f80546040516340f2de1b60e11b81526004810183905291926001600160a01b0390911691602081602481865afa9081156102fb575f91611108575b5060015b8281111561105557505050506008548082111561104f57610f4e91610e9f565b50505f90565b5f198101818111610a875761106990610fa0565b9054604051630981b24d60e41b815260039290921b1c6004820152602081602481885afa9081156102fb575f916110d7575b50806110b1575b506110ac90610f92565b61102f565b6110ac91956127106110c96109c3866110d095610fcc565b0490610eca565b94906110a2565b90506020813d8211611100575b816110f160209383610f5c565b810103126101b957515f61109b565b3d91506110e4565b90506020813d602011611132575b8161112360209383610f5c565b810103126101b957515f61102b565b3d9150611116565b60025480421115610f1657600354421015610f0f57610ef861115c9142610e9f565b6006548082101561116b575090565b905090565b611178610ed7565b6001811080611428575b611419575f546040516340f2de1b60e11b81526001600160a01b03848116600483018190529391921690602083602481855afa9283156102fb575f936113e5575b50835f52600760205260405f20549460018601809611610a87576111e561113a565b905f9682811115611316575b5050505f938115158061130b575b611211575b50505050610f4e91610eca565b6020906024604051809581936370a0823160e01b835260048301525afa9182156102fb575f926112d7575b5081611249575b80611204565b91925090600181036112a857506112736109c36112789361126d6002545b42610e9f565b93610fcc565b610fcc565b90600554916127108302928084046127101490151715610a8757610f4e9261129f91610eac565b90915f80611243565b600119810192908311610a87576109c36112739161126d6112cb61127896610fa0565b90549060031b1c611267565b9091506020813d602011611303575b816112f360209383610f5c565b810103126101b95751905f61123c565b3d91506112e6565b5060035442106111ff565b8281116111f1575f198101818111610a8757602061133661136c92610fa0565b905460405163277166bf60e11b81526001600160a01b038716600482015260039290921b1c602482015291829081906044820190565b0381895afa9081156102fb575f916113b4575b5080611395575b5061139090610f92565b611316565b61139091986127106110c96109c38a6113ad95610fcc565b9790611386565b90506020813d82116113dd575b816113ce60209383610f5c565b810103126101b957515f61137f565b3d91506113c1565b9092506020813d602011611411575b8161140160209383610f5c565b810103126101b95751915f6111c3565b3d91506113f4565b63b27f716560e01b5f5260045ffd5b506002544210611182565b60035442101561151b575f546040516318160ddd60e01b8152906001600160a01b0316602082600481845afa9182156102fb575f926114e6575b50906020602492604051938480926340f2de1b60e11b82525f60048301525afa9182156102fb575f926114b0575b506109c3612710926114ac92610fcc565b0490565b91506020823d6020116114de575b816114cb60209383610f5c565b810103126101b9579051906109c361149b565b3d91506114be565b91506020823d602011611513575b8161150160209383610f5c565b810103126101b957905190602061146d565b3d91506114f4565b5f90565b6002600b5414611530576002600b55565b633ee5aeb560e01b5f5260045ffd5b6115476117d2565b6001600160a01b0381165f9081527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b602052604090205460ff16156115895750565b63e2517d3f60e01b5f5260018060a01b03166004525f60245260445ffd5b6115af6117d2565b815f52600960205260405f2060018060a01b0382165f5260205260ff60405f205416156115da575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b60ff600a541661160357565b63d93c066560e01b5f5260045ffd5b5f8181526009602090815260408083206001600160a01b038616845290915290205460ff1661104f575f8181526009602090815260408083206001600160a01b0386811685529252909120805460ff191660011790556116706117d2565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b5f8181526009602090815260408083206001600160a01b038616845290915290205460ff161561104f575f8181526009602090815260408083206001600160a01b0386811685529252909120805460ff191690556117016117d2565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b67ffffffffffffffff8111610f7e5760051b60200190565b9061175882611736565b6117656040519182610f5c565b8281528092611776601f1991611736565b0190602036910137565b8051821015610fb85760209160051b010190565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526117d0916104b1606483610f5c565b565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611820575b1561181c576013193601368111610a87573560601c90565b3390565b506014361015611804565b905f602091828151910182855af1156102fb575f513d61187a57506001600160a01b0381163b155b61185a5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b6001141561185356fea164736f6c634300081c000aec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b",
    "sourceMap": "706:4050:79:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;1500:37:164;706:4050:79;2061:21:181;1857:1;-1:-1:-1;;;;;706:4050:79;5871:27:81;;5867:54;;6142:15;6128:29;;;:50;;;-1:-1:-1;6124:180:81;;6317:22;;;;6313:51;;6378:10;;6374:36;;6424:14;;6420:44;;-1:-1:-1;706:4050:79;;-1:-1:-1;;;;;;706:4050:79;;;;;;;-1:-1:-1;;;6584:19:81;;706:4050:79;;;;;6584:19:81;;706:4050:79;;6584:19:81;;;;;;;-1:-1:-1;6584:19:81;;;-1:-1:-1;;706:4050:79;;;-1:-1:-1;;;;;;706:4050:79;-1:-1:-1;;;;;706:4050:79;;;;;;;;;6644:39:81;6640:76;;1857:1:181;6727:23:81;1857:1:181;;6760:19:81;1857:1:181;;6584:19:81;1857:1:181;;6812:21:81;1857:1:181;706:4050:79;;;;;;;;6926:35:81;;706:4050:79;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;706:4050:79;;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;;;;6976:50:81;706:4050:79;;6976:50:81;706:4050:79;;;;;;-1:-1:-1;706:4050:79;6976:50:81;-1:-1:-1;706:4050:79;;-1:-1:-1;706:4050:79;-1:-1:-1;706:4050:79;;;;;;7041:13:81;;;;-1:-1:-1;7056:16:81;;;;;;7398:25;;;;:::i;:::-;706:4050:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6976:50:81;706:4050:79;;;;;;;;6976:50:81;-1:-1:-1;706:4050:79;;-1:-1:-1;706:4050:79;;-1:-1:-1;706:4050:79;;;;;;2008:45;706:4050;7439:143:81;706:4050:79;;;;;;;;;;;;;7439:143:81;;;2008:45:79;:::i;:::-;;706:4050;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7074:3:81;6727:23;706:4050:79;;;;;;;;;;6812:21:81;706:4050:79;7127:19:81;;;:::i;:::-;706:4050:79;;;;;;;6760:19:81;706:4050:79;7165:20:81;;;7161:79;;7074:3;706:4050:79;6976:50:81;706:4050:79;;;;;;;;6976:50:81;-1:-1:-1;706:4050:79;;;-1:-1:-1;706:4050:79;;;;7041:13:81;;706:4050:79;;;;-1:-1:-1;706:4050:79;;6584:19:81;706:4050:79;;-1:-1:-1;706:4050:79;7161:79:81;7205:20;-1:-1:-1;7161:79:81;;;706:4050:79;;;;-1:-1:-1;706:4050:79;;6584:19:81;706:4050:79;;-1:-1:-1;706:4050:79;;;;;;;;;;;;;;;;;;6976:50:81;-1:-1:-1;706:4050:79;;;;;;;;;;;;;;;;;;-1:-1:-1;706:4050:79;;;;;;;;;;-1:-1:-1;706:4050:79;;6584:19:81;706:4050:79;;-1:-1:-1;706:4050:79;6640:76:81;6692:24;;;-1:-1:-1;6692:24:81;6584:19;-1:-1:-1;6692:24:81;6584:19;;;706:4050:79;6584:19:81;;706:4050:79;6584:19:81;;;;;;706:4050:79;6584:19:81;;;:::i;:::-;;;706:4050:79;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;6584:19:81;;;706:4050:79;-1:-1:-1;706:4050:79;;6584:19:81;;;-1:-1:-1;6584:19:81;;;706:4050:79;;;-1:-1:-1;706:4050:79;;;;;6420:44:81;6447:17;;;-1:-1:-1;6447:17:81;;-1:-1:-1;6447:17:81;6374:36;6397:13;;;-1:-1:-1;6397:13:81;;-1:-1:-1;6397:13:81;6313:51;6348:16;;;-1:-1:-1;6348:16:81;;-1:-1:-1;6348:16:81;6124:180;6275:18;;;-1:-1:-1;6275:18:81;;-1:-1:-1;6275:18:81;6128:50;706:4050:79;6162:10:81;706:4050:79;6162:15:81;6128:50;;5867:54;5907:14;;;-1:-1:-1;5907:14:81;;-1:-1:-1;5907:14:81;706:4050:79;;;;;-1:-1:-1;;706:4050:79;;;;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;706:4050:79;;;;;;:::o;:::-;-1:-1:-1;;;;;706:4050:79;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;6179:316:149:-;-1:-1:-1;;;;;706:4050:79;;5896:1:81;706:4050:79;;;-1:-1:-1;;;;;;;;;;;706:4050:79;;;;;;;;;;-1:-1:-1;;;;;706:4050:79;;;5896:1:81;706:4050:79;;;-1:-1:-1;;;;;;;;;;;706:4050:79;;;;;;;-1:-1:-1;;706:4050:79;;;;;3745:18;;:::i;:::-;706:4050;;-1:-1:-1;;;;;706:4050:79;5896:1:81;6370:40:149;5896:1:81;;6370:40:149;6347:4;6424:11;:::o;6272:217::-;6466:12;5896:1:81;6466:12:149;:::o;13740:599:81:-;13847:8;706:4050:79;13828:15:81;:27;;13824:41;;706:4050:79;;;;-1:-1:-1;;;13998:37:81;;706:4050:79;-1:-1:-1;;;;;706:4050:79;13998:37:81;706:4050:79;13998:37:81;706:4050:79;;13998:37:81;;;;;;;706:4050:79;13998:37:81;;;13740:599;706:4050:79;;13998:37:81;14148:36;706:4050:79;;;;;;;;;;14148:36:81;;706:4050:79;13998:37:81;14148:36;;706:4050:79;14148:36:81;;;;;;;706:4050:79;14148:36:81;;;13740:599;14284:19;;2658:6;14284:19;:27;:19;;:::i;:::-;13998:37;706:4050:79;14284:27:81;;:::i;:::-;706:4050:79;13740:599:81;:::o;14148:36::-;;;13998:37;14148:36;;13998:37;14148:36;;;;;;706:4050:79;14148:36:81;;;:::i;:::-;;;706:4050:79;;;;;;;14284:19:81;14148:36;;;;;-1:-1:-1;14148:36:81;;13998:37;;;;;;;;;;;;;706:4050:79;13998:37:81;;;:::i;:::-;;;706:4050:79;;;;;;;13998:37:81;;;;;;-1:-1:-1;13998:37:81;;13824:41;706:4050:79;13857:8:81;:::o;2206:429:164:-;1707:17;706:4050:79;-1:-1:-1;;;;;706:4050:79;2422:10:164;1931:31;;2403:71;;2206:429;2399:230;;;706:4050:79;;2312:8:164;706:4050:79;2312:8:164;706:4050:79;;;;;;;;2490:72:164:o;2399:230::-;2422:10;2593:25;:::o;2403:71::-;2312:8;3483:2;2312:8;2437:37;;2403:71;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610ded575080630604061814610dd35780630898c94914610db95780630b97bc8614610d9c5780631cf7e14914610c885780631f28d52c14610c6e578063248a9ca314610c4357806327614ec414610be35780632c4e722e14610bc65780632f2ff15d14610b8857806336568abe14610b345780633f4ba83a14610acf578063406cf2291461073e578063572b6c05146106ea5780635c975abb146106c85780637158da7c146106a05780637b07882e146106835780637da0a8771461063f578063817ea144146106215780638456cb59146105b657806391d148541461056d578063947a36fb14610550578063978fd53b146105365780639a95299a146105135780639fc2f65a146104f9578063a206b55014610439578063a217fddf1461041f578063c24a0f8b14610402578063c54293aa14610376578063d1ae38b81461035a578063d547741f14610315578063e0ecad5a146101fc578063f68e5218146101bd5763fc0c546a14610192575f80fd5b346101b9575f3660031901126101b9575f546040516001600160a01b039091168152602090f35b5f80fd5b346101b9575f3660031901126101b95760206101f46101da6117d2565b6001600160a01b03165f9081526007602052604090205490565b604051908152f35b346101b95760203660031901126101b957610215610e40565b61021d61151f565b61022561153f565b61022d6115f7565b6001600160a01b038116908115610306576001546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa9081156102fb575f916102c9575b5080156102ba576102ac817f6f50cd6d1a8ee055bfba8d1998a1e71e64c3a0791f04001b50f038e3c106590994602094611794565b604051908152a26001600b55005b630bc0b2c560e21b5f5260045ffd5b90506020813d6020116102f3575b816102e460209383610f5c565b810103126101b9575184610277565b3d91506102d7565b6040513d5f823e3d90fd5b634e81208360e01b5f5260045ffd5b346101b95760403660031901126101b957610358600435610334610e56565b9061035361034e825f526009602052600160405f20015490565b6115a7565b6116a5565b005b346101b9575f3660031901126101b95760206040516127108152f35b346101b9575f3660031901126101b95760405180602060065491828152019060065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f905f5b8181106103ec576103e8856103d481870382610f5c565b604051918291602083526020830190610e6c565b0390f35b82548452602090930192600192830192016103bd565b346101b9575f3660031901126101b9576020600354604051908152f35b346101b9575f3660031901126101b95760206040515f8152f35b346101b95760203660031901126101b95760043561045561151f565b61045d6115f7565b6001546104b6906001600160a01b03166104756117d2565b6040516323b872dd60e01b60208201526001600160a01b03909116602482015230604482015260648082018590528152906104b1608483610f5c565b61182b565b7fabda30aae4846dafeb67b57e0f9fb5af47de85525570e48ced61a3c99a4f8daf60206001600160a01b036104e96117d2565b1692604051908152a26001600b55005b346101b9575f3660031901126101b95760206101f4611433565b346101b95760203660031901126101b95760206101f4610531610e40565b611170565b346101b9575f3660031901126101b95760206101f461113a565b346101b9575f3660031901126101b9576020600554604051908152f35b346101b95760403660031901126101b957610586610e56565b6004355f52600960205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101b9575f3660031901126101b9576105ce61153f565b6105d66115f7565b600160ff19600a541617600a557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258602061060e6117d2565b6040516001600160a01b039091168152a1005b346101b95760203660031901126101b95760206101f46101da610e40565b346101b9575f3660031901126101b9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101b9575f3660031901126101b95760206101f46105316117d2565b346101b9575f3660031901126101b9576001546040516001600160a01b039091168152602090f35b346101b9575f3660031901126101b957602060ff600a54166040519015158152f35b346101b95760203660031901126101b9576020610705610e40565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b346101b9575f3660031901126101b95761075661151f565b61075e6115f7565b61076661113a565b600181106108e4576107766117d2565b6001600160a01b0381165f8181526007602052604090205490929160018201918210610a87578282116108e4575f546040516340f2de1b60e11b815260048101869052936001600160a01b0390911690602085602481855afa9485156102fb575f95610a9b575b505f926107ea8583610e9f565b60018101809111610a87576107fe9061174e565b926108098684610e9f565b60018101809111610a875761081d9061174e565b96865b848111156108f35750505083156108e4577fb119cb4f54a2303fcdbc4f7a2c39dc38eb1368d94ac4571f4eddac9c4f0c28ba95610889856108cf938a5f5260076020528560405f205561087582600854610eca565b6008556001546001600160a01b0316611794565b6108c1610894610fdf565b9461089d611433565b9460405198899889526020890152604088015260e0606088015260e0870190610e6c565b908582036080870152610e6c565b9160a084015260c08301520390a26001600b55005b633dfa692b60e11b5f5260045ffd5b5f198101818111610a875780602061090d61094393610fa0565b905460405163277166bf60e11b81526001600160a01b038a16600482015260039290921b1c602482015292839081906044820190565b0381885afa80156102fb5784905f90610a52575b610969935080610a1b575b5050610fa0565b9054604051630981b24d60e41b815260039290921b1c600482015290602082602481875afa80156102fb575f906109e8575b6109ae925083816109b3575b5050610f92565b610820565b6109c36109cc9161271093610fcc565b60045490610fcc565b046109e06109da8b84610e9f565b8c611780565b528b836109a7565b506020823d8211610a13575b81610a0160209383610f5c565b810103126101b9576109ae915161099b565b3d91506109f4565b610a2e6109c3610a369361271093610fcc565b04809a610eca565b98610a4a610a448c86610e9f565b8a611780565b52838d610962565b50506020823d8211610a7f575b81610a6c60209383610f5c565b810103126101b957836109699251610957565b3d9150610a5f565b634e487b7160e01b5f52601160045260245ffd5b9094506020813d602011610ac7575b81610ab760209383610f5c565b810103126101b9575193866107dd565b3d9150610aaa565b346101b9575f3660031901126101b957610ae761153f565b600a5460ff811615610b255760ff1916600a557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa602061060e6117d2565b638dfc202b60e01b5f5260045ffd5b346101b95760403660031901126101b957610b4d610e56565b6001600160a01b03610b5d6117d2565b166001600160a01b03821603610b7957610358906004356116a5565b63334bd91960e11b5f5260045ffd5b346101b95760403660031901126101b957610358600435610ba7610e56565b90610bc161034e825f526009602052600160405f20015490565b611612565b346101b9575f3660031901126101b9576020600454604051908152f35b346101b95760203660031901126101b95760043580158015610c38575b610c29575f198101908111610a8757610c1a602091610fa0565b90549060031b1c604051908152f35b6302e8f35960e31b5f5260045ffd5b506006548111610c00565b346101b95760203660031901126101b95760206101f46004355f526009602052600160405f20015490565b346101b9575f3660031901126101b95760206101f4610fdf565b346101b95760403660031901126101b957610ca1610e40565b602435610cac61151f565b610cb461153f565b610cbc6115f7565b6001600160a01b038216918215610306578115610d8d576001546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa9081156102fb575f91610d5b575b50808411610d445750916102ac816020937f6f50cd6d1a8ee055bfba8d1998a1e71e64c3a0791f04001b50f038e3c106590995611794565b8390630c9f8b8560e01b5f5260045260245260445ffd5b90506020813d602011610d85575b81610d7660209383610f5c565b810103126101b9575185610d0c565b3d9150610d69565b63162908e360e11b5f5260045ffd5b346101b9575f3660031901126101b9576020600254604051908152f35b346101b9575f3660031901126101b95760206101f4610f1b565b346101b9575f3660031901126101b95760206101f4610ed7565b346101b95760203660031901126101b9576004359063ffffffff60e01b82168092036101b957602091637965db0b60e01b8114908115610e2f575b5015158152f35b6301ffc9a760e01b14905083610e28565b600435906001600160a01b03821682036101b957565b602435906001600160a01b03821682036101b957565b90602080835192838152019201905f5b818110610e895750505090565b8251845260209384019390920191600101610e7c565b91908203918211610a8757565b8115610eb6570490565b634e487b7160e01b5f52601260045260245ffd5b91908201809211610a8757565b600254804210610f1657600354421015610f0f57610ef8610f019142610e9f565b60055490610eac565b60018101809111610a875790565b5060065490565b505f90565b600254804210610f5157600354421015610f1657610f399042610e9f565b6005548015610eb65780610f4e920690610e9f565b90565b610f4e904290610e9f565b90601f8019910116810190811067ffffffffffffffff821117610f7e57604052565b634e487b7160e01b5f52604160045260245ffd5b5f198114610a875760010190565b600654811015610fb85760065f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b81810292918115918404141715610a8757565b610fe761113a565b60018110610f16575f80546040516340f2de1b60e11b81526004810183905291926001600160a01b0390911691602081602481865afa9081156102fb575f91611108575b5060015b8281111561105557505050506008548082111561104f57610f4e91610e9f565b50505f90565b5f198101818111610a875761106990610fa0565b9054604051630981b24d60e41b815260039290921b1c6004820152602081602481885afa9081156102fb575f916110d7575b50806110b1575b506110ac90610f92565b61102f565b6110ac91956127106110c96109c3866110d095610fcc565b0490610eca565b94906110a2565b90506020813d8211611100575b816110f160209383610f5c565b810103126101b957515f61109b565b3d91506110e4565b90506020813d602011611132575b8161112360209383610f5c565b810103126101b957515f61102b565b3d9150611116565b60025480421115610f1657600354421015610f0f57610ef861115c9142610e9f565b6006548082101561116b575090565b905090565b611178610ed7565b6001811080611428575b611419575f546040516340f2de1b60e11b81526001600160a01b03848116600483018190529391921690602083602481855afa9283156102fb575f936113e5575b50835f52600760205260405f20549460018601809611610a87576111e561113a565b905f9682811115611316575b5050505f938115158061130b575b611211575b50505050610f4e91610eca565b6020906024604051809581936370a0823160e01b835260048301525afa9182156102fb575f926112d7575b5081611249575b80611204565b91925090600181036112a857506112736109c36112789361126d6002545b42610e9f565b93610fcc565b610fcc565b90600554916127108302928084046127101490151715610a8757610f4e9261129f91610eac565b90915f80611243565b600119810192908311610a87576109c36112739161126d6112cb61127896610fa0565b90549060031b1c611267565b9091506020813d602011611303575b816112f360209383610f5c565b810103126101b95751905f61123c565b3d91506112e6565b5060035442106111ff565b8281116111f1575f198101818111610a8757602061133661136c92610fa0565b905460405163277166bf60e11b81526001600160a01b038716600482015260039290921b1c602482015291829081906044820190565b0381895afa9081156102fb575f916113b4575b5080611395575b5061139090610f92565b611316565b61139091986127106110c96109c38a6113ad95610fcc565b9790611386565b90506020813d82116113dd575b816113ce60209383610f5c565b810103126101b957515f61137f565b3d91506113c1565b9092506020813d602011611411575b8161140160209383610f5c565b810103126101b95751915f6111c3565b3d91506113f4565b63b27f716560e01b5f5260045ffd5b506002544210611182565b60035442101561151b575f546040516318160ddd60e01b8152906001600160a01b0316602082600481845afa9182156102fb575f926114e6575b50906020602492604051938480926340f2de1b60e11b82525f60048301525afa9182156102fb575f926114b0575b506109c3612710926114ac92610fcc565b0490565b91506020823d6020116114de575b816114cb60209383610f5c565b810103126101b9579051906109c361149b565b3d91506114be565b91506020823d602011611513575b8161150160209383610f5c565b810103126101b957905190602061146d565b3d91506114f4565b5f90565b6002600b5414611530576002600b55565b633ee5aeb560e01b5f5260045ffd5b6115476117d2565b6001600160a01b0381165f9081527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b602052604090205460ff16156115895750565b63e2517d3f60e01b5f5260018060a01b03166004525f60245260445ffd5b6115af6117d2565b815f52600960205260405f2060018060a01b0382165f5260205260ff60405f205416156115da575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b60ff600a541661160357565b63d93c066560e01b5f5260045ffd5b5f8181526009602090815260408083206001600160a01b038616845290915290205460ff1661104f575f8181526009602090815260408083206001600160a01b0386811685529252909120805460ff191660011790556116706117d2565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b5f8181526009602090815260408083206001600160a01b038616845290915290205460ff161561104f575f8181526009602090815260408083206001600160a01b0386811685529252909120805460ff191690556117016117d2565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b67ffffffffffffffff8111610f7e5760051b60200190565b9061175882611736565b6117656040519182610f5c565b8281528092611776601f1991611736565b0190602036910137565b8051821015610fb85760209160051b010190565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526117d0916104b1606483610f5c565b565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611820575b1561181c576013193601368111610a87573560601c90565b3390565b506014361015611804565b905f602091828151910182855af1156102fb575f513d61187a57506001600160a01b0381163b155b61185a5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b6001141561185356fea164736f6c634300081c000a",
    "sourceMap": "706:4050:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;11256:31:81;3745:18:79;;:::i;:::-;-1:-1:-1;;;;;706:4050:79;-1:-1:-1;706:4050:79;;;10895:18:81;706:4050:79;;;;;;;10796:132:81;11256:31;706:4050:79;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;:::i;:::-;2466:103:181;;:::i;:::-;2475:4:149;;:::i;:::-;1315:72:180;;:::i;:::-;-1:-1:-1;;;;;706:4050:79;;;22676:16:81;;22672:53;;706:4050:79;;;;-1:-1:-1;;;22805:41:81;;22840:4;706:4050:79;22805:41:81;;706:4050:79;-1:-1:-1;;;;;706:4050:79;;;;;;22805:41:81;706:4050:79;;22805:41:81;;;;;;;706:4050:79;22805:41:81;;;706:4050:79;22860:12:81;;;22856:46;;22972:7;;22996:37;22972:7;706:4050:79;22972:7:81;;:::i;:::-;706:4050:79;;;;;22996:37:81;22805:16;3068:21:181;1899:1;706:4050:79;22856:46:81;22881:21;;;706:4050:79;22881:21:81;706:4050:79;;22881:21:81;22805:41;;;706:4050:79;22805:41:81;;706:4050:79;22805:41:81;;;;;;706:4050:79;22805:41:81;;;:::i;:::-;;;706:4050:79;;;;;22805:41:81;;;;;;-1:-1:-1;22805:41:81;;;706:4050:79;;;;;;;;;22672:53:81;21906:24;;;706:4050:79;22701:24:81;706:4050:79;;22701:24:81;706:4050:79;;;;;;-1:-1:-1;;706:4050:79;;;;4747:26:149;706:4050:79;;;;:::i;:::-;4717:18:149;2475:4;4717:18;;-1:-1:-1;706:4050:79;3901:6:149;706:4050:79;;3901:22:149;706:4050:79;-1:-1:-1;706:4050:79;3901:22:149;706:4050:79;3810:120:149;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;706:4050:79;;;;;;;-1:-1:-1;;706:4050:79;;;;;;;2658:6:81;706:4050:79;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;7727:20:81;706:4050:79;;;;;;;7727:20:81;706:4050:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;23956:8:81;706:4050:79;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;2466:103:181;;:::i;:::-;1315:72:180;;:::i;:::-;706:4050:79;;1745:53:173;;-1:-1:-1;;;;;706:4050:79;3745:18;;:::i;:::-;706:4050;;-1:-1:-1;;;706:4050:79;1745:53:173;;;-1:-1:-1;;;;;706:4050:79;;;1745:53:173;;;706:4050:79;21606:4:81;706:4050:79;;;;;;;;;;;1745:53:173;;706:4050:79;1745:53:173;;706:4050:79;1745:53:173;:::i;:::-;;:::i;:::-;21636:42:81;706:4050:79;-1:-1:-1;;;;;3745:18:79;;:::i;:::-;706:4050;;;;;;;21636:42:81;706:4050:79;3068:21:181;1899:1;706:4050:79;;;;;;;-1:-1:-1;;706:4050:79;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;706:4050:79;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;706:4050:79;;;;;24237:9:81;706:4050:79;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;:::i;:::-;;;;;2954:6:149;706:4050:79;;;;;2954:29:149;706:4050:79;;;;;;-1:-1:-1;706:4050:79;;;;;;-1:-1:-1;706:4050:79;;;;;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;2475:4:149;;:::i;:::-;1315:72:180;;:::i;:::-;2408:4;706:4050:79;;2398:14:180;706:4050:79;;;2398:14:180;706:4050:79;2427:20:180;706:4050:79;3745:18;;:::i;:::-;706:4050;;-1:-1:-1;;;;;706:4050:79;;;;;2427:20:180;706:4050:79;;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;706:4050:79;;;;;;1707:17:164;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;17896:35:81;3745:18:79;;:::i;706:4050::-;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;1796:7:180;706:4050:79;;;;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;;:::i;:::-;;;1707:17:164;-1:-1:-1;;;;;706:4050:79;;;;;1931:31:164;;;;706:4050:79;;;;;;;;;-1:-1:-1;;706:4050:79;;;;2466:103:181;;:::i;:::-;1315:72:180;;:::i;:::-;18084:21:81;;:::i;:::-;18164:1;18151:14;;18147:45;;3745:18:79;;:::i;:::-;-1:-1:-1;;;;;706:4050:79;;;;;;18305:18:81;706:4050:79;;;;;;;;;;;;;;-1:-1:-1;706:4050:79;;18389:23:81;;;18385:54;;706:4050:79;;;;-1:-1:-1;;;18579:32:81;;706:4050:79;18579:32:81;;706:4050:79;;;;-1:-1:-1;;;;;706:4050:79;;;;;;18579:32:81;706:4050:79;;18579:32:81;;;;;;;706:4050:79;18579:32:81;;;706:4050:79;18647:30:81;706:4050:79;18833:23:81;;;;;:::i;:::-;18164:1;706:4050:79;;;;;;;18819:42:81;;;:::i;:::-;18917:23;;;;;:::i;:::-;18164:1;706:4050:79;;;;;;;18903:42:81;;;:::i;:::-;19026:27;;19055:20;;;;;;;20278:23;;;;;20274:54;;21072:239;706:4050:79;20763:18:81;706:4050:79;;;;;;18305:18:81;706:4050:79;;;;;;1899:1:181;20556:35:81;706:4050:79;20556:35:81;706:4050:79;20556:35:81;:::i;:::-;;1899:1:181;706:4050:79;;-1:-1:-1;;;;;706:4050:79;20763:18:81;:::i;:::-;706:4050:79;20910:21:81;;:::i;:::-;21031:25;;;:::i;:::-;706:4050:79;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;21072:239:81;;;18164:1;3068:21:181;1899:1;706:4050:79;20274:54:81;18174:18;;;706:4050:79;20310:18:81;706:4050:79;;20310:18:81;19077:8;-1:-1:-1;;706:4050:79;;;;;;;19279:32:81;706:4050:79;19279:32:81;19252:60;19279:32;;:::i;:::-;706:4050:79;;;;-1:-1:-1;;;19252:60:81;;-1:-1:-1;;;;;706:4050:79;;;19252:60:81;;706:4050:79;;;;;;;;;;;;;;;;;;;;;19252:60:81;;;;;;;;;;;;706:4050:79;19252:60:81;;;19077:8;19848:32;19330:11;;;19326:276;;19077:8;706:4050:79;;19848:32:81;:::i;:::-;706:4050:79;;;;-1:-1:-1;;;19827:54:81;;706:4050:79;;;;;;;19827:54:81;;706:4050:79;;;;18579:32:81;706:4050:79;19827:54:81;;;;;;;706:4050:79;19827:54:81;;;19077:8;;19899:25;;;;19895:262;;19077:8;;;;:::i;:::-;19026:27;;19895:262;19972:29;:37;:29;2658:6;19972:29;;:::i;:::-;706:4050:79;;19972:37:81;;:::i;:::-;706:4050:79;20048:52:81;20061:19;;;;:::i;:::-;20048:52;;:::i;:::-;706:4050:79;19895:262:81;;;;19827:54;;706:4050:79;19827:54:81;;;;;;;;;706:4050:79;19827:54:81;;;:::i;:::-;;;706:4050:79;;;;19077:8:81;706:4050:79;;19827:54:81;;;;;-1:-1:-1;19827:54:81;;19326:276;19384:23;:15;19446:33;19384:15;2658:6;19384:15;;:::i;:23::-;706:4050:79;19446:33:81;;;:::i;:::-;19511:19;19497:48;19511:19;;;;:::i;:::-;19497:48;;:::i;:::-;706:4050:79;19326:276:81;;;;19252:60;;;706:4050:79;19252:60:81;;;;;;;;;706:4050:79;19252:60:81;;;:::i;:::-;;;706:4050:79;;;;;19848:32:81;706:4050:79;;19252:60:81;;;;;-1:-1:-1;19252:60:81;;706:4050:79;;;;;;;;;18579:32:81;706:4050:79;;18579:32:81;;;;706:4050:79;18579:32:81;;706:4050:79;18579:32:81;;;;;;706:4050:79;18579:32:81;;;:::i;:::-;;;706:4050:79;;;;;18579:32:81;;;;;;;-1:-1:-1;18579:32:81;;706:4050:79;;;;;;-1:-1:-1;;706:4050:79;;;;2475:4:149;;:::i;:::-;1796:7:180;706:4050:79;;;;2140:9:180;2136:62;;-1:-1:-1;;706:4050:79;1796:7:180;706:4050:79;2674:22:180;706:4050:79;3745:18;;:::i;2136:62:180:-;2172:15;;;706:4050:79;2172:15:180;706:4050:79;;2172:15:180;706:4050:79;;;;;;-1:-1:-1;;706:4050:79;;;;;;:::i;:::-;-1:-1:-1;;;;;3745:18:79;;:::i;:::-;706:4050;-1:-1:-1;;;;;706:4050:79;;5421:34:149;5417:102;;5529:37;706:4050:79;;;5529:37:149;:::i;5417:102::-;5478:30;;;706:4050:79;5478:30:149;706:4050:79;;5478:30:149;706:4050:79;;;;;;-1:-1:-1;;706:4050:79;;;;4330:25:149;706:4050:79;;;;:::i;:::-;4300:18:149;2475:4;4300:18;;-1:-1:-1;706:4050:79;3901:6:149;706:4050:79;;3901:22:149;706:4050:79;-1:-1:-1;706:4050:79;3901:22:149;706:4050:79;3810:120:149;;2475:4;4330:25;:::i;706:4050:79:-;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;8084:11:81;;:51;;;;706:4050:79;8080:79:81;;-1:-1:-1;;706:4050:79;;;;;;;8176:32:81;706:4050:79;8176:32:81;;:::i;:::-;706:4050:79;;;;;;;;;;;;8080:79:81;8144:15;;;706:4050:79;8144:15:81;706:4050:79;;8144:15:81;8084:51;706:4050:79;8108:20:81;706:4050:79;8099:36:81;;8084:51;;706:4050:79;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;-1:-1:-1;706:4050:79;3901:6:149;706:4050:79;;3901:22:149;706:4050:79;-1:-1:-1;706:4050:79;3901:22:149;706:4050:79;3810:120:149;;706:4050:79;;;;;;-1:-1:-1;;706:4050:79;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;706:4050:79;;;;;;:::i;:::-;;;2466:103:181;;:::i;:::-;2475:4:149;;:::i;:::-;1315:72:180;;:::i;:::-;-1:-1:-1;;;;;706:4050:79;;;21881:16:81;;21877:53;;21995:26;;21991:54;;706:4050:79;;;;-1:-1:-1;;;22121:41:81;;22156:4;706:4050:79;22121:41:81;;706:4050:79;-1:-1:-1;;;;;706:4050:79;;;;;;;;;22121:41:81;;;;;;;706:4050:79;22121:41:81;;;706:4050:79;22176:46:81;;;;22172:160;;22409:21;;;;706:4050:79;22409:21:81;22447:51;22409:21;;:::i;22172:160::-;22245:76;;;;;706:4050:79;22245:76:81;706:4050:79;;;;;;22245:76:81;22121:41;;;706:4050:79;22121:41:81;;706:4050:79;22121:41:81;;;;;;706:4050:79;22121:41:81;;;:::i;:::-;;;706:4050:79;;;;;22121:41:81;;;;;;-1:-1:-1;22121:41:81;;21991:54;22030:15;;;706:4050:79;22030:15:81;706:4050:79;;22030:15:81;706:4050:79;;;;;;-1:-1:-1;;706:4050:79;;;;;23811:10:81;706:4050:79;;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;706:4050:79;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;706:4050:79;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:149;;;:87;;;;706:4050:79;;;;;;;2673:87:149;-1:-1:-1;;;862:40:188;;-1:-1:-1;2673:87:149;;;706:4050:79;;;;-1:-1:-1;;;;;706:4050:79;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;706:4050:79;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;706:4050:79;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;8311:419:81:-;8407:10;706:4050:79;8389:15:81;;:28;8385:42;;8488:8;706:4050:79;8389:15:81;8469:27;;8465:67;;8677:28;8676:42;8389:15;;8677:28;:::i;:::-;8709:9;706:4050:79;8676:42:81;;:::i;:::-;8722:1;706:4050:79;;;;;;;8311:419:81;:::o;8465:67::-;706:4050:79;8505:20:81;706:4050:79;8498:34:81;:::o;8385:42::-;8419:8;706:4050:79;8419:8:81;:::o;9783:962::-;9966:10;706:4050:79;9948:15:81;;:28;9944:94;;10141:8;706:4050:79;9948:15:81;10122:27;;10118:66;;10362:28;9948:15;;10362:28;:::i;:::-;10567:9;706:4050:79;;;;;;10706:32:81;706:4050:79;;10706:32:81;;:::i;:::-;9783:962;:::o;9944:94::-;9999:28;9948:15;;9999:28;;:::i;706:4050:79:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;706:4050:79;;;;;-1:-1:-1;706:4050:79;;-1:-1:-1;;706:4050:79;;;;;;;:::o;:::-;8176:20:81;706:4050:79;;;;;;8176:20:81;-1:-1:-1;706:4050:79;;-1:-1:-1;706:4050:79;;;-1:-1:-1;706:4050:79;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11628:1826:81:-;11729:21;;:::i;:::-;11819:1;11806:14;;11802:28;;706:4050:79;;;;;-1:-1:-1;;;12162:36:81;;;;;706:4050:79;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;12162:36:81;706:4050:79;;12162:36:81;;;;;;;706:4050:79;12162:36:81;;;11628:1826;12334:18;11819:1;12354:20;;;;;;;706:4050:79;;;;13350:13:81;706:4050:79;13329:34:81;;;;13325:73;;13414:33;;;:::i;13325:73::-;13379:8;;706:4050:79;13379:8:81;:::o;12376:::-;-1:-1:-1;;706:4050:79;;;;;;;12429:32:81;;;:::i;:::-;706:4050:79;;;;-1:-1:-1;;;12754:40:81;;706:4050:79;;;;;;12162:36:81;12754:40;;706:4050:79;;;12162:36:81;706:4050:79;12754:40:81;;;;;;;;706:4050:79;12754:40:81;;;12376:8;12812:25;;12808:244;;12376:8;;;;;:::i;:::-;12334:18;;12808:244;12376:8;12979:29;;2658:6;12979:37;:29;;12957:80;12979:29;;:::i;:37::-;706:4050:79;12957:80:81;;:::i;:::-;12808:244;;;;12754:40;;;706:4050:79;12754:40:81;;;;;;;;;706:4050:79;12754:40:81;;;:::i;:::-;;;706:4050:79;;;;;12754:40:81;;;;;;-1:-1:-1;12754:40:81;;12162:36;;;706:4050:79;12162:36:81;;706:4050:79;12162:36:81;;;;;;706:4050:79;12162:36:81;;;:::i;:::-;;;706:4050:79;;;;;12162:36:81;;;;;;-1:-1:-1;12162:36:81;;8781:951;8884:10;706:4050:79;8865:15:81;;:29;;8861:43;;9125:8;706:4050:79;8865:15:81;9106:27;;9102:92;;9305:28;9371:23;8865:15;;9305:28;:::i;9371:23::-;9648:20;706:4050:79;9628:47:81;;;;;;:97;8781:951;:::o;9628:97::-;;;8781:951;:::o;14646:2863::-;14767:15;;:::i;:::-;14853:1;14836:18;;:50;;;14646:2863;14832:82;;15102:6;706:4050:79;;;-1:-1:-1;;;15102:32:81;;-1:-1:-1;;;;;706:4050:79;;;15102:32:81;;;706:4050:79;;;;;;;;;;15102:32:81;706:4050:79;;15102:32:81;;;;;;;:6;:32;;;14646:2863;706:4050:79;;15102:6:81;706:4050:79;15262:18:81;706:4050:79;;;15102:6:81;706:4050:79;;;14853:1:81;706:4050:79;;;;;;;15376:21:81;;:::i;:::-;15408:32;15102:6;15555:27;;;;;15551:540;;14646:2863;16101:31;;;15102:6;16249:18;;;;:48;;;14646:2863;16245:1199;;14646:2863;17460:42;;;;;;;:::i;16245:1199::-;706:4050:79;;15102:32:81;706:4050:79;;;;;;;;;16416:41:81;;15102:32;16416:41;;706:4050:79;16416:41:81;;;;;;;15102:6;16416:41;;;16245:1199;16475:16;;16471:963;;16245:1199;;;;16471:963;16587:19;;-1:-1:-1;16587:19:81;14853:1;16628:19;;14853:1;;706:4050:79;17341:28:81;:20;:43;706:4050:79;17117:29:81;16685:10;706:4050:79;16624:385:81;17117:15;:29;:::i;:::-;17341:20;;:::i;:28::-;:43;:::i;:::-;706:4050:79;17389:9:81;706:4050:79;;2658:6:81;706:4050:79;;;;;;2658:6:81;706:4050:79;;;;;;;17460:42:81;17340:79;;;;:::i;:::-;16471:963;;;;;;16624:385;-1:-1:-1;;706:4050:79;;;;;;;;17341:20:81;:28;16908:40;17117:29;16908:40;17341:43;16908:40;;:::i;:::-;706:4050:79;;;;;;16624:385:81;;16416:41;;;;706:4050:79;16416:41:81;;706:4050:79;16416:41:81;;;;;;706:4050:79;16416:41:81;;;:::i;:::-;;;706:4050:79;;;;;16416:41:81;;;;;;;-1:-1:-1;16416:41:81;;16249:48;706:4050:79;16289:8:81;706:4050:79;16271:15:81;:26;16249:48;;15551:540;15699:23;;;15551:540;15699:23;-1:-1:-1;;706:4050:79;;;;;;;;15889:32:81;15862:60;15889:32;;:::i;:::-;706:4050:79;;;;-1:-1:-1;;;15862:60:81;;-1:-1:-1;;;;;706:4050:79;;15102:32:81;15862:60;;706:4050:79;;;;;;;;;;;;;;;;;;;;;15862:60:81;;;;;;;;;;;15102:6;15862:60;;;15724:8;15944:11;;15940:127;;15724:8;;;;;:::i;:::-;15670:27;;15940:127;15724:8;16004:15;;2658:6;16004:23;:15;;15979:69;16004:15;;:::i;15979:69::-;15940:127;;;;15862:60;;;706:4050:79;15862:60:81;;;;;;;;;706:4050:79;15862:60:81;;;:::i;:::-;;;706:4050:79;;;;;15862:60:81;;;;;;-1:-1:-1;15862:60:81;;15102:32;;;;706:4050:79;15102:32:81;;706:4050:79;15102:32:81;;;;;;706:4050:79;15102:32:81;;;:::i;:::-;;;706:4050:79;;;;;15102:32:81;;;;;;;-1:-1:-1;15102:32:81;;14832:82;14895:19;;;;;;;;14836:50;706:4050:79;14876:10:81;706:4050:79;14858:15:81;:28;14836:50;;13740:599;13847:8;706:4050:79;13828:15:81;:27;;13824:41;;706:4050:79;;;;-1:-1:-1;;;13998:37:81;;706:4050:79;-1:-1:-1;;;;;706:4050:79;13998:37:81;706:4050:79;13998:37:81;706:4050:79;;13998:37:81;;;;;;;706:4050:79;13998:37:81;;;13740:599;706:4050:79;;13998:37:81;14148:36;706:4050:79;;;;;;;;;;14148:36:81;;706:4050:79;13998:37:81;14148:36;;706:4050:79;14148:36:81;;;;;;;706:4050:79;14148:36:81;;;13740:599;14284:19;;2658:6;14284:19;:27;:19;;:::i;:27::-;706:4050:79;13740:599:81;:::o;14148:36::-;;;13998:37;14148:36;;13998:37;14148:36;;;;;;706:4050:79;14148:36:81;;;:::i;:::-;;;706:4050:79;;;;;;;14284:19:81;14148:36;;;;;-1:-1:-1;14148:36:81;;13998:37;;;;;;;;;;;;;706:4050:79;13998:37:81;;;:::i;:::-;;;706:4050:79;;;;;;;13998:37:81;;;;;;-1:-1:-1;13998:37:81;;13824:41;706:4050:79;13857:8:81;:::o;2575:307:181:-;1899:1;2702:7;706:4050:79;2702:18:181;2698:86;;1899:1;2702:7;1899:1;2575:307::o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:181;;-1:-1:-1;2743:30:181;3199:103:149;3745:18:79;;:::i;:::-;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;;;;;;3519:23:149;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;706:4050:79;3565:47:149;706:4050:79;;;;;;3565:47:149;706:4050:79;;;;;;3565:47:149;3199:103;3745:18:79;;:::i;:::-;706:4050;-1:-1:-1;706:4050:79;2954:6:149;706:4050:79;;;-1:-1:-1;706:4050:79;;;;;;;;-1:-1:-1;706:4050:79;;;;;-1:-1:-1;706:4050:79;;;3519:23:149;3515:108;;3199:103;;:::o;3515:108::-;3565:47;;;-1:-1:-1;3565:47:149;706:4050:79;;;;;;3565:47:149;706:4050:79;;;;-1:-1:-1;3565:47:149;1878:128:180;706:4050:79;1796:7:180;706:4050:79;;1939:61:180;;1878:128::o;1939:61::-;1974:15;;;-1:-1:-1;1974:15:180;;-1:-1:-1;1974:15:180;6179:316:149;706:4050:79;;;;2954:6:149;706:4050:79;;;;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;;;;;;;;;2954:6:149;706:4050:79;;;;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;;;3745:18;;:::i;:::-;706:4050;;-1:-1:-1;;;;;706:4050:79;;6370:40:149;706:4050:79;;6370:40:149;6347:4;6424:11;:::o;6732:317::-;706:4050:79;;;;2954:6:149;706:4050:79;;;;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;;;;;;;;;;2954:6:149;706:4050:79;;;;;;;;-1:-1:-1;;;;;706:4050:79;;;;;;;;;;;;-1:-1:-1;;706:4050:79;;;3745:18;;:::i;:::-;706:4050;;-1:-1:-1;;;;;706:4050:79;;6924:40:149;706:4050:79;;6924:40:149;706:4050:79;6978:11:149;:::o;706:4050:79:-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;1219:160:173:-;706:4050:79;;-1:-1:-1;;;1328:43:173;;;;-1:-1:-1;;;;;706:4050:79;;;;1328:43:173;;;706:4050:79;;;;;;;;;1328:43:173;;;;;;706:4050:79;;1328:43:173;:::i;:::-;1219:160::o;2206:429:164:-;2422:10;1707:17;-1:-1:-1;;;;;706:4050:79;1931:31:164;;2403:71;;2206:429;2399:230;;;706:4050:79;;2312:8:164;706:4050:79;2312:8:164;706:4050:79;;;;;;;;2490:72:164:o;2399:230::-;2422:10;2593:25;:::o;2403:71::-;2312:8;3483:2;2312:8;2437:37;;2403:71;;8370:720:173;;-1:-1:-1;8507:421:173;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:173;;8942:15;;-1:-1:-1;;;;;;706:4050:79;;8960:26:173;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:173;;;-1:-1:-1;;;;;706:4050:79;;;;9033:40:173;706:4050:79;;;9033:40:173;8942:68;9009:1;8994:16;;8942:68;",
    "linkReferences": {},
    "immutableReferences": {
      "34920": [
        {
          "start": 1620,
          "length": 32
        },
        {
          "start": 1802,
          "length": 32
        },
        {
          "start": 6101,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "RATE_BASIS_POINTS()": "d1ae38b8",
    "allPeriods()": "c54293aa",
    "calculateAccruedYield()": "7b07882e",
    "calculateAccruedYield(address)": "9a95299a",
    "claimYield()": "406cf229",
    "currentPeriod()": "06040618",
    "endDate()": "c24a0f8b",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "interval()": "947a36fb",
    "isTrustedForwarder(address)": "572b6c05",
    "lastClaimedPeriod()": "f68e5218",
    "lastClaimedPeriod(address)": "817ea144",
    "lastCompletedPeriod()": "978fd53b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "periodEnd(uint256)": "27614ec4",
    "rate()": "2c4e722e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "startDate()": "0b97bc86",
    "supportsInterface(bytes4)": "01ffc9a7",
    "timeUntilNextPeriod()": "0898c949",
    "token()": "fc0c546a",
    "topUpUnderlyingAsset(uint256)": "a206b550",
    "totalUnclaimedYield()": "1f28d52c",
    "totalYieldForNextPeriod()": "9fc2f65a",
    "trustedForwarder()": "7da0a877",
    "underlyingAsset()": "7158da7c",
    "unpause()": "3f4ba83a",
    "withdrawAllUnderlyingAsset(address)": "e0ecad5a",
    "withdrawUnderlyingAsset(address,uint256)": "1cf7e149"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startDate_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotInitializeLogicContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requiredBalance\",\"type\":\"uint256\"}],\"name\":\"InsufficientUnderlyingBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInterval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStartDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUnderlyingAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoUnderlyingBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoYieldAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrantInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ScheduleNotActive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"periodEndTimestamps\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"underlyingAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldForNextPeriod\",\"type\":\"uint256\"}],\"name\":\"FixedYieldScheduleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnderlyingAssetTopUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnderlyingAssetWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"periodAmounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"periodYields\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUnclaimedYield\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldForNextPeriod\",\"type\":\"uint256\"}],\"name\":\"YieldClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATE_BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPeriods\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateAccruedYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"calculateAccruedYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"lastClaimedPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastClaimedPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCompletedPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"periodEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeUntilNextPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ISMARTYield\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"topUpUnderlyingAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnclaimedYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalYieldForNextPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawAllUnderlyingAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUnderlyingAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AlreadyInitialized()\":[{\"details\":\"Reverted if the `initialize` function is called more than once.\"}],\"CannotInitializeLogicContract()\":[{\"details\":\"Reverted if `initialize` is called directly on a logic contract that was configured via constructor.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InsufficientUnderlyingBalance(uint256,uint256)\":[{\"details\":\"Reverted by `topUpUnderlyingAsset` or `withdrawUnderlyingAsset` if the underlying asset transfer fails or if there's not enough balance.\",\"params\":{\"currentBalance\":\"The current balance of the underlying asset in the contract.\",\"requiredBalance\":\"The required balance of the underlying asset for the operation.\"}}],\"InvalidAmount()\":[{\"details\":\"Reverted by `withdrawUnderlyingAsset` if the withdrawal `amount` is zero.\"}],\"InvalidEndDate()\":[{\"details\":\"Reverted if the `endDate_` provided in the constructor is not after the `startDate_`.\"}],\"InvalidInterval()\":[{\"details\":\"Reverted if the `interval_` (distribution interval in seconds) provided in the constructor is zero.\"}],\"InvalidPeriod()\":[{\"details\":\"Reverted by `periodEnd` if an invalid period number (0 or out of bounds) is requested.\"}],\"InvalidRate()\":[{\"details\":\"Reverted if the `rate_` (yield rate in basis points) provided in the constructor is zero.\"}],\"InvalidStartDate()\":[{\"details\":\"Reverted if the `startDate_` provided in the constructor is not in the future (i.e., less than or equal to `block.timestamp`).\"}],\"InvalidToken()\":[{\"details\":\"Reverted if the `tokenAddress` provided in the constructor is the zero address.\"}],\"InvalidUnderlyingAsset()\":[{\"details\":\"Reverted if the `_underlyingAsset` (derived from `_token.yieldToken()`) is the zero address, or if `to` address in withdrawal is zero.\"}],\"NoUnderlyingBalance()\":[{\"details\":\"Reverted by `withdrawUnderlyingAsset` if the underlying asset balance is zero.\"}],\"NoYieldAvailable()\":[{\"details\":\"Reverted by `claimYield` if there is no accumulated yield for the caller to claim for completed periods.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"ReentrantInitialization()\":[{\"details\":\"Reverted if a re-entrant call occurs during the initialization process.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"ScheduleNotActive()\":[{\"details\":\"Reverted by `calculateAccruedYield` if the schedule has not yet started (i.e., `block.timestamp < _startDate`).\"}]},\"events\":{\"FixedYieldScheduleSet(uint256,uint256,uint256,uint256,uint256[],address,uint256)\":{\"params\":{\"endDate\":\"The end date of the yield schedule.\",\"interval\":\"The interval of the yield schedule.\",\"periodEndTimestamps\":\"The timestamps of the end of each period.\",\"rate\":\"The rate of the yield schedule.\",\"startDate\":\"The start date of the yield schedule.\",\"underlyingAsset\":\"The underlying asset of the yield schedule.\",\"yieldForNextPeriod\":\"The yield for the next period.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"UnderlyingAssetTopUp(address,uint256)\":{\"params\":{\"amount\":\"The quantity of `_underlyingAsset` tokens deposited.\",\"from\":\"The address that sent the `_underlyingAsset` tokens (the funder).\"}},\"UnderlyingAssetWithdrawn(address,uint256)\":{\"params\":{\"amount\":\"The quantity of `_underlyingAsset` tokens withdrawn.\",\"to\":\"The address that received the withdrawn `_underlyingAsset` tokens.\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"YieldClaimed(address,uint256,uint256,uint256,uint256[],uint256[],uint256,uint256)\":{\"params\":{\"claimedAmount\":\"The total quantity of `_underlyingAsset` transferred to the holder in this claim.\",\"fromPeriod\":\"The first period number (1-indexed) included in this claim.\",\"holder\":\"The address of the token holder who claimed the yield.\",\"periodAmounts\":\"An array containing the amount of yield claimed for each specific period within the `fromPeriod` to `toPeriod` range. The length of this array is `toPeriod - fromPeriod + 1`.\",\"periodYields\":\"An array containing the total yield for each specific period within the `fromPeriod` to `toPeriod` range. The length of this array is `toPeriod - fromPeriod + 1`.\",\"toPeriod\":\"The last period number (1-indexed) included in this claim.\",\"totalUnclaimedYield\":\"The total amount of unclaimed yield remaining in the contract across all holders after this claim.\",\"yieldForNextPeriod\":\"The yield for the next period.\"}}},\"kind\":\"dev\",\"methods\":{\"allPeriods()\":{\"details\":\"Each timestamp in the array marks the conclusion of a yield distribution period. The number of elements in this array corresponds to the total number of periods in the schedule. This is useful for understanding the full timeline of the yield schedule.\",\"returns\":{\"_0\":\"An array of Unix timestamps, each representing the end of a distribution period.\"}},\"calculateAccruedYield()\":{\"details\":\"Convenience function so callers don't have to pass their own address.\",\"returns\":{\"_0\":\"The total accrued yield amount for the caller.\"}},\"calculateAccruedYield(address)\":{\"details\":\"Calculates yield for completed, unclaimed periods using historical balances (`balanceOfAt`). For the current, ongoing period, it calculates a pro-rata share based on the holder's current balance and time elapsed in the period.\",\"params\":{\"holder\":\"The address of the token holder for whom to calculate accrued yield.\"},\"returns\":{\"_0\":\"The total amount of yield tokens accrued by the `holder`.\"}},\"claimYield()\":{\"details\":\"This function will typically: 1. Determine the periods for which the caller has not yet claimed yield. 2. Calculate the yield owed for those periods based on their historical token balance at the end of each respective period. 3. Transfer the total calculated yield (in `underlyingAsset()`) to the caller. 4. Update the caller's `lastClaimedPeriod`. This is a state-changing function and will emit events (e.g., `YieldClaimed`).\"},\"constructor\":{\"details\":\"If not a logic contract, initializes all parameters. Otherwise, defers to `initialize()`.\",\"params\":{\"endDate_\":\"End date of the yield schedule.\",\"forwarder\":\"The address of the trusted forwarder for ERC2771 meta-transactions.\",\"initialOwner_\":\"The address to be granted `DEFAULT_ADMIN_ROLE`.\",\"interval_\":\"Duration of each yield interval.\",\"rate_\":\"Yield rate in basis points.\",\"startDate_\":\"Start date of the yield schedule.\",\"tokenAddress_\":\"Address of the `ISMARTYield` token.\"}},\"currentPeriod()\":{\"details\":\"If the schedule has not yet started (`block.timestamp < startDate()`), this might return 0. If the schedule has ended (`block.timestamp >= endDate()`), this might return the total number of periods. Otherwise, it returns the 1-indexed number of the period that is currently in progress.\",\"returns\":{\"_0\":\"The current period number (1-indexed), or 0 if not started / an indicator if ended.\"}},\"endDate()\":{\"details\":\"After this timestamp, no more yield will typically accrue or be distributed by this schedule.\",\"returns\":{\"_0\":\"The Unix timestamp indicating when the yield schedule concludes.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"interval()\":{\"details\":\"For example, if yield is distributed daily, the interval would be `86400` seconds. This, along with `startDate` and `endDate`, defines the periodicity of the schedule.\",\"returns\":{\"_0\":\"The length of each yield period in seconds.\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"lastClaimedPeriod()\":{\"details\":\"Convenience function so callers don't have to pass their own address.\",\"returns\":{\"_0\":\"The last period number (1-indexed) claimed by the caller.\"}},\"lastClaimedPeriod(address)\":{\"details\":\"This is crucial for tracking individual claim statuses. If a holder has never claimed, this might return 0.\",\"params\":{\"holder\":\"The address of the token holder whose last claimed period is being queried.\"},\"returns\":{\"_0\":\"The 1-indexed number of the last period claimed by the `holder`.\"}},\"lastCompletedPeriod()\":{\"details\":\"This indicates up to which period users can typically claim their accrued yield. If no periods have completed (e.g., `block.timestamp < periodEnd(1)`), this might return 0.\",\"returns\":{\"_0\":\"The 1-indexed number of the last fully completed period.\"}},\"pause()\":{\"details\":\"Pause the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"periodEnd(uint256)\":{\"details\":\"Periods are 1-indexed. Accessing `_periodEndTimestamps` requires 0-indexed access (`period - 1`).\",\"params\":{\"period\":\"The period number (e.g., 1 for the first period, 2 for the second, etc.) whose end timestamp is being queried.\"},\"returns\":{\"_0\":\"The Unix timestamp marking the end of the specified `period`.\"}},\"rate()\":{\"details\":\"The interpretation of this rate (e.g., annual percentage rate, per period rate) and its precision (e.g., basis points) depends on the specific implementation of the schedule contract. For a fixed schedule, this rate is a key parameter in calculating yield per period.\",\"returns\":{\"_0\":\"The configured yield rate (e.g., in basis points, where 100 basis points = 1%).\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"startDate()\":{\"details\":\"This is an immutable value set in the constructor. It defines the beginning of the yield accrual period. This function fulfills the `startDate()` requirement from the `ISMARTFixedYieldSchedule` interface (which itself inherits it from `ISMARTYieldSchedule`).\"},\"timeUntilNextPeriod()\":{\"details\":\"If the schedule has not started, this could be time until `startDate()`. If the schedule is ongoing, this is the time left in the `currentPeriod()`. If the schedule has ended, this might return 0.\",\"returns\":{\"_0\":\"The time in seconds until the next period begins or current period ends.\"}},\"token()\":{\"details\":\"The schedule contract needs to interact with this token contract to query historical balances (e.g., `balanceOfAt`) and total supplies (`totalSupplyAt`). The returned token contract should implement the `ISMARTYield` interface.\",\"returns\":{\"_0\":\"The `ISMARTYield` compliant token contract address.\"}},\"topUpUnderlyingAsset(uint256)\":{\"details\":\"This function is used to ensure the contract has sufficient reserves of the `underlyingAsset()` to pay out accrued yield. It typically involves the caller first approving the schedule contract to spend their `underlyingAsset` tokens, then this function calls `transferFrom`.\",\"params\":{\"amount\":\"The quantity of the `underlyingAsset` to deposit into the schedule contract.\"}},\"totalUnclaimedYield()\":{\"details\":\"This calculation can be gas-intensive as it iterates through all completed periods and queries historical total supply for each. It assumes `_token.yieldBasisPerUnit(address(0))` provides a generic or representative basis if it varies by holder.\",\"returns\":{\"_0\":\"The total sum of unclaimed yield tokens.\"}},\"totalYieldForNextPeriod()\":{\"details\":\"This calculation uses the current total supply. For a more precise estimate if supply changes rapidly, one might need a more complex projection. Assumes a generic basis from `_token.yieldBasisPerUnit(address(0))`.\",\"returns\":{\"_0\":\"The estimated total yield tokens needed for the next period's distribution.\"}},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"underlyingAsset()\":{\"details\":\"This is the actual token that holders will receive when they claim their yield. It can be the same as `token()` or a different token (e.g., a stablecoin).\",\"returns\":{\"_0\":\"The `IERC20` compliant token contract address used for payments.\"}},\"unpause()\":{\"details\":\"Unpause the contract.\"},\"withdrawAllUnderlyingAsset(address)\":{\"details\":\"Similar to `withdrawUnderlyingAsset`, but withdraws the entire balance of `underlyingAsset` held by the contract. Should also be strictly access-controlled.\",\"params\":{\"to\":\"The address to which all `underlyingAsset` tokens will be sent.\"}},\"withdrawUnderlyingAsset(address,uint256)\":{\"details\":\"This is an administrative function and should be strictly access-controlled (e.g., `onlyRole(ADMIN_ROLE)`). Useful for managing excess funds or in emergency situations.\",\"params\":{\"amount\":\"The quantity of `underlyingAsset` tokens to withdraw.\",\"to\":\"The address to which the withdrawn `underlyingAsset` tokens will be sent.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"FixedYieldScheduleSet(uint256,uint256,uint256,uint256,uint256[],address,uint256)\":{\"notice\":\"Emitted when a new fixed yield schedule is set.\"},\"UnderlyingAssetTopUp(address,uint256)\":{\"notice\":\"Emitted when an administrator or funder successfully deposits `_underlyingAsset` into the contract to fund yield payments.\"},\"UnderlyingAssetWithdrawn(address,uint256)\":{\"notice\":\"Emitted when an administrator successfully withdraws `_underlyingAsset` from the contract.\"},\"YieldClaimed(address,uint256,uint256,uint256,uint256[],uint256[],uint256,uint256)\":{\"notice\":\"Emitted when a token holder successfully claims their accrued yield.\"}},\"kind\":\"user\",\"methods\":{\"RATE_BASIS_POINTS()\":{\"notice\":\"The denominator used for rate calculations. `10_000` represents 100% (since rate is in basis points).\"},\"allPeriods()\":{\"notice\":\"Returns an array of all period end timestamps for this yield schedule.\"},\"calculateAccruedYield()\":{\"notice\":\"Calculates the total accrued yield for the message sender (`_msgSender()`), including any pro-rata share for the current period.\"},\"calculateAccruedYield(address)\":{\"notice\":\"Calculates the total accrued yield for a specific token holder up to the current moment, including any pro-rata share for the ongoing period.\"},\"claimYield()\":{\"notice\":\"Allows the caller (a token holder) to claim all their available (accrued and unclaimed) yield from completed periods.\"},\"constructor\":{\"notice\":\"Constructor to deploy a new `SMARTFixedYieldSchedule` contract.\"},\"currentPeriod()\":{\"notice\":\"Returns the current, ongoing period number of the yield schedule.\"},\"endDate()\":{\"notice\":\"Returns the timestamp representing the end date and time of the entire yield schedule.\"},\"interval()\":{\"notice\":\"Returns the duration of each distribution interval or period in seconds.\"},\"lastClaimedPeriod()\":{\"notice\":\"Returns the last claimed period for the message sender (`_msgSender()`).\"},\"lastClaimedPeriod(address)\":{\"notice\":\"Returns the last period number for which a specific token holder has successfully claimed their yield.\"},\"lastCompletedPeriod()\":{\"notice\":\"Returns the most recent period number that has been fully completed and is eligible for yield claims.\"},\"periodEnd(uint256)\":{\"notice\":\"Returns the end timestamp for a specific yield distribution period.\"},\"rate()\":{\"notice\":\"Returns the yield rate for the schedule.\"},\"startDate()\":{\"notice\":\"Returns the Unix timestamp (seconds since epoch) when the yield schedule starts.\"},\"timeUntilNextPeriod()\":{\"notice\":\"Returns the remaining time in seconds until the start of the next yield distribution period.\"},\"token()\":{\"notice\":\"Returns the address of the SMART token contract for which this yield schedule is defined.\"},\"topUpUnderlyingAsset(uint256)\":{\"notice\":\"Allows anyone to deposit (top-up) the underlying asset into the schedule contract to fund yield payments.\"},\"totalUnclaimedYield()\":{\"notice\":\"Calculates the total amount of yield that has been accrued by all token holders across all completed periods but has not yet been claimed.\"},\"totalYieldForNextPeriod()\":{\"notice\":\"Calculates the total amount of yield that will be required to cover all token holders for the next upcoming distribution period.\"},\"underlyingAsset()\":{\"notice\":\"Returns the ERC20 token contract that is used for making yield payments.\"},\"withdrawAllUnderlyingAsset(address)\":{\"notice\":\"Allows an authorized administrator to withdraw all available `underlyingAsset` tokens from the schedule contract.\"},\"withdrawUnderlyingAsset(address,uint256)\":{\"notice\":\"Allows an authorized administrator to withdraw a specific `amount` of the `underlyingAsset` from the schedule contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart/extensions/yield/schedules/fixed/SMARTFixedYieldSchedule.sol\":\"SMARTFixedYieldSchedule\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/\",\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.2.0/=dependencies/@openzeppelin-contracts-upgradeable-5.2.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@smartprotocol-v0.0.1/=dependencies/@smartprotocol-v0.0.1/contracts/\",\":eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/\",\":forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/\",\":forge-std-1.9.6/=dependencies/forge-std-1.9.6/src/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\",\":hardhat/=dependencies/smart-protocol-8.0.8/node_modules/hardhat/\",\":openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\",\":smart-protocol-8.0.10/=dependencies/smart-protocol-8.0.10/contracts/\",\":smart-protocol-8.0.5/=dependencies/smart-protocol-8.0.5/contracts/\",\":smart-protocol-8.0.7/=dependencies/smart-protocol-8.0.7/contracts/\",\":smart-protocol-8.0.8/=dependencies/smart-protocol-8.0.8/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/smart/extensions/historical-balances/ISMARTHistoricalBalances.sol\":{\"keccak256\":\"0x748c28628df829a95a42783247fd2e2f082bf644370f54463dd8c060a1a4fdb8\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ca138ff3a56bdcdbfc7dd9ff17f56c0e15643d7f63172fe03dd47da35b47515f\",\"dweb:/ipfs/Qme1CeWEWgbr2YPJ9dRK98VCZ94naen9BhrrKb2wFhs6iC\"]},\"contracts/smart/extensions/yield/ISMARTYield.sol\":{\"keccak256\":\"0xabc3a75854b3b1b2fade84c3ea2fe058dbbbe88fa07e256e62d92359863e33b4\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://fe6b2e9add6b6abe4c715f6750a8c55c14b4a88edcc2b93f98777fa71303297b\",\"dweb:/ipfs/QmdRmeFStp5yqqZgmeRBpZxvwvEat5qb7szgC6Chom7nGG\"]},\"contracts/smart/extensions/yield/schedules/ISMARTYieldSchedule.sol\":{\"keccak256\":\"0xdfbf07a23c23697347fb56aee34b8ca40f6833d71a3f641f48e7867af27d32f6\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://4d8dccf3d331fd4e9b0fa5f26f9386a6ef432f0c304735ef274d8866e029dd5e\",\"dweb:/ipfs/QmPeH5qE3CTWCWUQgxJ2es7iHzLr4NsFsJzttsPTpqErVK\"]},\"contracts/smart/extensions/yield/schedules/fixed/ISMARTFixedYieldSchedule.sol\":{\"keccak256\":\"0x37570268db5ef2509791cd60a6bc8f56bcf58a78a8df3fbd6cce1aaca1228bc5\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://fbe019bf0ab9ed7e9291ae775d16aab465ba495e8a2980ad128c9094b852095d\",\"dweb:/ipfs/QmeCjCn3pHoS7hEc5RuFxSYYgvJEysWBec8zMPy8tsozTb\"]},\"contracts/smart/extensions/yield/schedules/fixed/SMARTFixedYieldSchedule.sol\":{\"keccak256\":\"0x114c98ba9f56a28c0a740fa4ed3fff55d9a233ca6962af34a03f0ee3547f5566\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f39277f9ef7a76928ba2b4e37bfb49e5ec2dd6f663c7a90174ea5b346a9598ea\",\"dweb:/ipfs/QmbN7FF1NMmjfUVdeYDktfUy96jrxikHL7vKPEqy2PHBRM\"]},\"contracts/smart/extensions/yield/schedules/fixed/internal/SMARTFixedYieldScheduleLogic.sol\":{\"keccak256\":\"0xafcbae6a6d7f7cde5f8fab3b0dd23254bea5ebca678f69674ffd0023ec845a43\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://0835572d3ba4c4dc792e0dde87da57ad8a8493cf63697fbdf0eb9f862d8335e6\",\"dweb:/ipfs/QmWCi73ZiKTW5ECHz9Vcq8W1j5XtdZZ8b7XHrhhacubRBS\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"dependencies/@openzeppelin-contracts-5.3.0/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startDate_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rate_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interval_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "initialOwner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotInitializeLogicContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EnforcedPause"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpectedPause"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requiredBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientUnderlyingBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEndDate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInterval"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPeriod"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidStartDate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidUnderlyingAsset"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoUnderlyingBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoYieldAvailable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrantInitialization"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ScheduleNotActive"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "interval",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "periodEndTimestamps",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "underlyingAsset",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "yieldForNextPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FixedYieldScheduleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnderlyingAssetTopUp",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnderlyingAssetWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fromPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "toPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "periodAmounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "periodYields",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalUnclaimedYield",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "yieldForNextPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "YieldClaimed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RATE_BASIS_POINTS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allPeriods",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateAccruedYield",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateAccruedYield",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimYield"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "endDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "interval",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastClaimedPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastClaimedPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastCompletedPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "period",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "periodEnd",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "startDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timeUntilNextPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract ISMARTYield",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "topUpUnderlyingAsset"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalUnclaimedYield",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalYieldForNextPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingAsset",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAllUnderlyingAsset"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawUnderlyingAsset"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allPeriods()": {
            "details": "Each timestamp in the array marks the conclusion of a yield distribution period. The number of elements in this array corresponds to the total number of periods in the schedule. This is useful for understanding the full timeline of the yield schedule.",
            "returns": {
              "_0": "An array of Unix timestamps, each representing the end of a distribution period."
            }
          },
          "calculateAccruedYield()": {
            "details": "Convenience function so callers don't have to pass their own address.",
            "returns": {
              "_0": "The total accrued yield amount for the caller."
            }
          },
          "calculateAccruedYield(address)": {
            "details": "Calculates yield for completed, unclaimed periods using historical balances (`balanceOfAt`). For the current, ongoing period, it calculates a pro-rata share based on the holder's current balance and time elapsed in the period.",
            "params": {
              "holder": "The address of the token holder for whom to calculate accrued yield."
            },
            "returns": {
              "_0": "The total amount of yield tokens accrued by the `holder`."
            }
          },
          "claimYield()": {
            "details": "This function will typically: 1. Determine the periods for which the caller has not yet claimed yield. 2. Calculate the yield owed for those periods based on their historical token balance at the end of each respective period. 3. Transfer the total calculated yield (in `underlyingAsset()`) to the caller. 4. Update the caller's `lastClaimedPeriod`. This is a state-changing function and will emit events (e.g., `YieldClaimed`)."
          },
          "constructor": {
            "details": "If not a logic contract, initializes all parameters. Otherwise, defers to `initialize()`.",
            "params": {
              "endDate_": "End date of the yield schedule.",
              "forwarder": "The address of the trusted forwarder for ERC2771 meta-transactions.",
              "initialOwner_": "The address to be granted `DEFAULT_ADMIN_ROLE`.",
              "interval_": "Duration of each yield interval.",
              "rate_": "Yield rate in basis points.",
              "startDate_": "Start date of the yield schedule.",
              "tokenAddress_": "Address of the `ISMARTYield` token."
            }
          },
          "currentPeriod()": {
            "details": "If the schedule has not yet started (`block.timestamp < startDate()`), this might return 0. If the schedule has ended (`block.timestamp >= endDate()`), this might return the total number of periods. Otherwise, it returns the 1-indexed number of the period that is currently in progress.",
            "returns": {
              "_0": "The current period number (1-indexed), or 0 if not started / an indicator if ended."
            }
          },
          "endDate()": {
            "details": "After this timestamp, no more yield will typically accrue or be distributed by this schedule.",
            "returns": {
              "_0": "The Unix timestamp indicating when the yield schedule concludes."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "interval()": {
            "details": "For example, if yield is distributed daily, the interval would be `86400` seconds. This, along with `startDate` and `endDate`, defines the periodicity of the schedule.",
            "returns": {
              "_0": "The length of each yield period in seconds."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "lastClaimedPeriod()": {
            "details": "Convenience function so callers don't have to pass their own address.",
            "returns": {
              "_0": "The last period number (1-indexed) claimed by the caller."
            }
          },
          "lastClaimedPeriod(address)": {
            "details": "This is crucial for tracking individual claim statuses. If a holder has never claimed, this might return 0.",
            "params": {
              "holder": "The address of the token holder whose last claimed period is being queried."
            },
            "returns": {
              "_0": "The 1-indexed number of the last period claimed by the `holder`."
            }
          },
          "lastCompletedPeriod()": {
            "details": "This indicates up to which period users can typically claim their accrued yield. If no periods have completed (e.g., `block.timestamp < periodEnd(1)`), this might return 0.",
            "returns": {
              "_0": "The 1-indexed number of the last fully completed period."
            }
          },
          "pause()": {
            "details": "Pause the contract."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "periodEnd(uint256)": {
            "details": "Periods are 1-indexed. Accessing `_periodEndTimestamps` requires 0-indexed access (`period - 1`).",
            "params": {
              "period": "The period number (e.g., 1 for the first period, 2 for the second, etc.) whose end timestamp is being queried."
            },
            "returns": {
              "_0": "The Unix timestamp marking the end of the specified `period`."
            }
          },
          "rate()": {
            "details": "The interpretation of this rate (e.g., annual percentage rate, per period rate) and its precision (e.g., basis points) depends on the specific implementation of the schedule contract. For a fixed schedule, this rate is a key parameter in calculating yield per period.",
            "returns": {
              "_0": "The configured yield rate (e.g., in basis points, where 100 basis points = 1%)."
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "startDate()": {
            "details": "This is an immutable value set in the constructor. It defines the beginning of the yield accrual period. This function fulfills the `startDate()` requirement from the `ISMARTFixedYieldSchedule` interface (which itself inherits it from `ISMARTYieldSchedule`)."
          },
          "timeUntilNextPeriod()": {
            "details": "If the schedule has not started, this could be time until `startDate()`. If the schedule is ongoing, this is the time left in the `currentPeriod()`. If the schedule has ended, this might return 0.",
            "returns": {
              "_0": "The time in seconds until the next period begins or current period ends."
            }
          },
          "token()": {
            "details": "The schedule contract needs to interact with this token contract to query historical balances (e.g., `balanceOfAt`) and total supplies (`totalSupplyAt`). The returned token contract should implement the `ISMARTYield` interface.",
            "returns": {
              "_0": "The `ISMARTYield` compliant token contract address."
            }
          },
          "topUpUnderlyingAsset(uint256)": {
            "details": "This function is used to ensure the contract has sufficient reserves of the `underlyingAsset()` to pay out accrued yield. It typically involves the caller first approving the schedule contract to spend their `underlyingAsset` tokens, then this function calls `transferFrom`.",
            "params": {
              "amount": "The quantity of the `underlyingAsset` to deposit into the schedule contract."
            }
          },
          "totalUnclaimedYield()": {
            "details": "This calculation can be gas-intensive as it iterates through all completed periods and queries historical total supply for each. It assumes `_token.yieldBasisPerUnit(address(0))` provides a generic or representative basis if it varies by holder.",
            "returns": {
              "_0": "The total sum of unclaimed yield tokens."
            }
          },
          "totalYieldForNextPeriod()": {
            "details": "This calculation uses the current total supply. For a more precise estimate if supply changes rapidly, one might need a more complex projection. Assumes a generic basis from `_token.yieldBasisPerUnit(address(0))`.",
            "returns": {
              "_0": "The estimated total yield tokens needed for the next period's distribution."
            }
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          },
          "underlyingAsset()": {
            "details": "This is the actual token that holders will receive when they claim their yield. It can be the same as `token()` or a different token (e.g., a stablecoin).",
            "returns": {
              "_0": "The `IERC20` compliant token contract address used for payments."
            }
          },
          "unpause()": {
            "details": "Unpause the contract."
          },
          "withdrawAllUnderlyingAsset(address)": {
            "details": "Similar to `withdrawUnderlyingAsset`, but withdraws the entire balance of `underlyingAsset` held by the contract. Should also be strictly access-controlled.",
            "params": {
              "to": "The address to which all `underlyingAsset` tokens will be sent."
            }
          },
          "withdrawUnderlyingAsset(address,uint256)": {
            "details": "This is an administrative function and should be strictly access-controlled (e.g., `onlyRole(ADMIN_ROLE)`). Useful for managing excess funds or in emergency situations.",
            "params": {
              "amount": "The quantity of `underlyingAsset` tokens to withdraw.",
              "to": "The address to which the withdrawn `underlyingAsset` tokens will be sent."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "RATE_BASIS_POINTS()": {
            "notice": "The denominator used for rate calculations. `10_000` represents 100% (since rate is in basis points)."
          },
          "allPeriods()": {
            "notice": "Returns an array of all period end timestamps for this yield schedule."
          },
          "calculateAccruedYield()": {
            "notice": "Calculates the total accrued yield for the message sender (`_msgSender()`), including any pro-rata share for the current period."
          },
          "calculateAccruedYield(address)": {
            "notice": "Calculates the total accrued yield for a specific token holder up to the current moment, including any pro-rata share for the ongoing period."
          },
          "claimYield()": {
            "notice": "Allows the caller (a token holder) to claim all their available (accrued and unclaimed) yield from completed periods."
          },
          "constructor": {
            "notice": "Constructor to deploy a new `SMARTFixedYieldSchedule` contract."
          },
          "currentPeriod()": {
            "notice": "Returns the current, ongoing period number of the yield schedule."
          },
          "endDate()": {
            "notice": "Returns the timestamp representing the end date and time of the entire yield schedule."
          },
          "interval()": {
            "notice": "Returns the duration of each distribution interval or period in seconds."
          },
          "lastClaimedPeriod()": {
            "notice": "Returns the last claimed period for the message sender (`_msgSender()`)."
          },
          "lastClaimedPeriod(address)": {
            "notice": "Returns the last period number for which a specific token holder has successfully claimed their yield."
          },
          "lastCompletedPeriod()": {
            "notice": "Returns the most recent period number that has been fully completed and is eligible for yield claims."
          },
          "periodEnd(uint256)": {
            "notice": "Returns the end timestamp for a specific yield distribution period."
          },
          "rate()": {
            "notice": "Returns the yield rate for the schedule."
          },
          "startDate()": {
            "notice": "Returns the Unix timestamp (seconds since epoch) when the yield schedule starts."
          },
          "timeUntilNextPeriod()": {
            "notice": "Returns the remaining time in seconds until the start of the next yield distribution period."
          },
          "token()": {
            "notice": "Returns the address of the SMART token contract for which this yield schedule is defined."
          },
          "topUpUnderlyingAsset(uint256)": {
            "notice": "Allows anyone to deposit (top-up) the underlying asset into the schedule contract to fund yield payments."
          },
          "totalUnclaimedYield()": {
            "notice": "Calculates the total amount of yield that has been accrued by all token holders across all completed periods but has not yet been claimed."
          },
          "totalYieldForNextPeriod()": {
            "notice": "Calculates the total amount of yield that will be required to cover all token holders for the next upcoming distribution period."
          },
          "underlyingAsset()": {
            "notice": "Returns the ERC20 token contract that is used for making yield payments."
          },
          "withdrawAllUnderlyingAsset(address)": {
            "notice": "Allows an authorized administrator to withdraw all available `underlyingAsset` tokens from the schedule contract."
          },
          "withdrawUnderlyingAsset(address,uint256)": {
            "notice": "Allows an authorized administrator to withdraw a specific `amount` of the `underlyingAsset` from the schedule contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/",
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.2.0/=dependencies/@openzeppelin-contracts-upgradeable-5.2.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@smartprotocol-v0.0.1/=dependencies/@smartprotocol-v0.0.1/contracts/",
        "eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/",
        "forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/",
        "forge-std-1.9.6/=dependencies/forge-std-1.9.6/src/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/",
        "hardhat/=dependencies/smart-protocol-8.0.8/node_modules/hardhat/",
        "openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/",
        "smart-protocol-8.0.10/=dependencies/smart-protocol-8.0.10/contracts/",
        "smart-protocol-8.0.5/=dependencies/smart-protocol-8.0.5/contracts/",
        "smart-protocol-8.0.7/=dependencies/smart-protocol-8.0.7/contracts/",
        "smart-protocol-8.0.8/=dependencies/smart-protocol-8.0.8/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/smart/extensions/yield/schedules/fixed/SMARTFixedYieldSchedule.sol": "SMARTFixedYieldSchedule"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/smart/extensions/historical-balances/ISMARTHistoricalBalances.sol": {
        "keccak256": "0x748c28628df829a95a42783247fd2e2f082bf644370f54463dd8c060a1a4fdb8",
        "urls": [
          "bzz-raw://ca138ff3a56bdcdbfc7dd9ff17f56c0e15643d7f63172fe03dd47da35b47515f",
          "dweb:/ipfs/Qme1CeWEWgbr2YPJ9dRK98VCZ94naen9BhrrKb2wFhs6iC"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/extensions/yield/ISMARTYield.sol": {
        "keccak256": "0xabc3a75854b3b1b2fade84c3ea2fe058dbbbe88fa07e256e62d92359863e33b4",
        "urls": [
          "bzz-raw://fe6b2e9add6b6abe4c715f6750a8c55c14b4a88edcc2b93f98777fa71303297b",
          "dweb:/ipfs/QmdRmeFStp5yqqZgmeRBpZxvwvEat5qb7szgC6Chom7nGG"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/extensions/yield/schedules/ISMARTYieldSchedule.sol": {
        "keccak256": "0xdfbf07a23c23697347fb56aee34b8ca40f6833d71a3f641f48e7867af27d32f6",
        "urls": [
          "bzz-raw://4d8dccf3d331fd4e9b0fa5f26f9386a6ef432f0c304735ef274d8866e029dd5e",
          "dweb:/ipfs/QmPeH5qE3CTWCWUQgxJ2es7iHzLr4NsFsJzttsPTpqErVK"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/extensions/yield/schedules/fixed/ISMARTFixedYieldSchedule.sol": {
        "keccak256": "0x37570268db5ef2509791cd60a6bc8f56bcf58a78a8df3fbd6cce1aaca1228bc5",
        "urls": [
          "bzz-raw://fbe019bf0ab9ed7e9291ae775d16aab465ba495e8a2980ad128c9094b852095d",
          "dweb:/ipfs/QmeCjCn3pHoS7hEc5RuFxSYYgvJEysWBec8zMPy8tsozTb"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/extensions/yield/schedules/fixed/SMARTFixedYieldSchedule.sol": {
        "keccak256": "0x114c98ba9f56a28c0a740fa4ed3fff55d9a233ca6962af34a03f0ee3547f5566",
        "urls": [
          "bzz-raw://f39277f9ef7a76928ba2b4e37bfb49e5ec2dd6f663c7a90174ea5b346a9598ea",
          "dweb:/ipfs/QmbN7FF1NMmjfUVdeYDktfUy96jrxikHL7vKPEqy2PHBRM"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/extensions/yield/schedules/fixed/internal/SMARTFixedYieldScheduleLogic.sol": {
        "keccak256": "0xafcbae6a6d7f7cde5f8fab3b0dd23254bea5ebca678f69674ffd0023ec845a43",
        "urls": [
          "bzz-raw://0835572d3ba4c4dc792e0dde87da57ad8a8493cf63697fbdf0eb9f862d8335e6",
          "dweb:/ipfs/QmWCi73ZiKTW5ECHz9Vcq8W1j5XtdZZ8b7XHrhhacubRBS"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/AccessControl.sol": {
        "keccak256": "0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458",
        "urls": [
          "bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67",
          "dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/metatx/ERC2771Context.sol": {
        "keccak256": "0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99",
        "urls": [
          "bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8",
          "dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Pausable.sol": {
        "keccak256": "0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f",
        "urls": [
          "bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c",
          "dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/ReentrancyGuard.sol": {
        "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
        "urls": [
          "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
          "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/ERC165.sol": {
        "keccak256": "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
        "urls": [
          "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
          "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "RATE_BASIS_POINTS()": {
        "notice": "The denominator used for rate calculations. `10_000` represents 100% (since rate is in basis points)."
      },
      "allPeriods()": {
        "notice": "Returns an array of all period end timestamps for this yield schedule."
      },
      "calculateAccruedYield()": {
        "notice": "Calculates the total accrued yield for the message sender (`_msgSender()`), including any pro-rata share for the current period."
      },
      "calculateAccruedYield(address)": {
        "notice": "Calculates the total accrued yield for a specific token holder up to the current moment, including any pro-rata share for the ongoing period."
      },
      "claimYield()": {
        "notice": "Allows the caller (a token holder) to claim all their available (accrued and unclaimed) yield from completed periods."
      },
      "constructor": {
        "notice": "Constructor to deploy a new `SMARTFixedYieldSchedule` contract."
      },
      "currentPeriod()": {
        "notice": "Returns the current, ongoing period number of the yield schedule."
      },
      "endDate()": {
        "notice": "Returns the timestamp representing the end date and time of the entire yield schedule."
      },
      "interval()": {
        "notice": "Returns the duration of each distribution interval or period in seconds."
      },
      "lastClaimedPeriod()": {
        "notice": "Returns the last claimed period for the message sender (`_msgSender()`)."
      },
      "lastClaimedPeriod(address)": {
        "notice": "Returns the last period number for which a specific token holder has successfully claimed their yield."
      },
      "lastCompletedPeriod()": {
        "notice": "Returns the most recent period number that has been fully completed and is eligible for yield claims."
      },
      "periodEnd(uint256)": {
        "notice": "Returns the end timestamp for a specific yield distribution period."
      },
      "rate()": {
        "notice": "Returns the yield rate for the schedule."
      },
      "startDate()": {
        "notice": "Returns the Unix timestamp (seconds since epoch) when the yield schedule starts."
      },
      "timeUntilNextPeriod()": {
        "notice": "Returns the remaining time in seconds until the start of the next yield distribution period."
      },
      "token()": {
        "notice": "Returns the address of the SMART token contract for which this yield schedule is defined."
      },
      "topUpUnderlyingAsset(uint256)": {
        "notice": "Allows anyone to deposit (top-up) the underlying asset into the schedule contract to fund yield payments."
      },
      "totalUnclaimedYield()": {
        "notice": "Calculates the total amount of yield that has been accrued by all token holders across all completed periods but has not yet been claimed."
      },
      "totalYieldForNextPeriod()": {
        "notice": "Calculates the total amount of yield that will be required to cover all token holders for the next upcoming distribution period."
      },
      "underlyingAsset()": {
        "notice": "Returns the ERC20 token contract that is used for making yield payments."
      },
      "withdrawAllUnderlyingAsset(address)": {
        "notice": "Allows an authorized administrator to withdraw all available `underlyingAsset` tokens from the schedule contract."
      },
      "withdrawUnderlyingAsset(address,uint256)": {
        "notice": "Allows an authorized administrator to withdraw a specific `amount` of the `underlyingAsset` from the schedule contract."
      }
    },
    "events": {
      "FixedYieldScheduleSet(uint256,uint256,uint256,uint256,uint256[],address,uint256)": {
        "notice": "Emitted when a new fixed yield schedule is set."
      },
      "UnderlyingAssetTopUp(address,uint256)": {
        "notice": "Emitted when an administrator or funder successfully deposits `_underlyingAsset` into the contract to fund yield payments."
      },
      "UnderlyingAssetWithdrawn(address,uint256)": {
        "notice": "Emitted when an administrator successfully withdraws `_underlyingAsset` from the contract."
      },
      "YieldClaimed(address,uint256,uint256,uint256,uint256[],uint256[],uint256,uint256)": {
        "notice": "Emitted when a token holder successfully claims their accrued yield."
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "allPeriods()": {
        "details": "Each timestamp in the array marks the conclusion of a yield distribution period. The number of elements in this array corresponds to the total number of periods in the schedule. This is useful for understanding the full timeline of the yield schedule.",
        "returns": {
          "_0": "An array of Unix timestamps, each representing the end of a distribution period."
        }
      },
      "calculateAccruedYield()": {
        "details": "Convenience function so callers don't have to pass their own address.",
        "returns": {
          "_0": "The total accrued yield amount for the caller."
        }
      },
      "calculateAccruedYield(address)": {
        "details": "Calculates yield for completed, unclaimed periods using historical balances (`balanceOfAt`). For the current, ongoing period, it calculates a pro-rata share based on the holder's current balance and time elapsed in the period.",
        "params": {
          "holder": "The address of the token holder for whom to calculate accrued yield."
        },
        "returns": {
          "_0": "The total amount of yield tokens accrued by the `holder`."
        }
      },
      "claimYield()": {
        "details": "This function will typically: 1. Determine the periods for which the caller has not yet claimed yield. 2. Calculate the yield owed for those periods based on their historical token balance at the end of each respective period. 3. Transfer the total calculated yield (in `underlyingAsset()`) to the caller. 4. Update the caller's `lastClaimedPeriod`. This is a state-changing function and will emit events (e.g., `YieldClaimed`)."
      },
      "constructor": {
        "details": "If not a logic contract, initializes all parameters. Otherwise, defers to `initialize()`.",
        "params": {
          "endDate_": "End date of the yield schedule.",
          "forwarder": "The address of the trusted forwarder for ERC2771 meta-transactions.",
          "initialOwner_": "The address to be granted `DEFAULT_ADMIN_ROLE`.",
          "interval_": "Duration of each yield interval.",
          "rate_": "Yield rate in basis points.",
          "startDate_": "Start date of the yield schedule.",
          "tokenAddress_": "Address of the `ISMARTYield` token."
        }
      },
      "currentPeriod()": {
        "details": "If the schedule has not yet started (`block.timestamp < startDate()`), this might return 0. If the schedule has ended (`block.timestamp >= endDate()`), this might return the total number of periods. Otherwise, it returns the 1-indexed number of the period that is currently in progress.",
        "returns": {
          "_0": "The current period number (1-indexed), or 0 if not started / an indicator if ended."
        }
      },
      "endDate()": {
        "details": "After this timestamp, no more yield will typically accrue or be distributed by this schedule.",
        "returns": {
          "_0": "The Unix timestamp indicating when the yield schedule concludes."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "interval()": {
        "details": "For example, if yield is distributed daily, the interval would be `86400` seconds. This, along with `startDate` and `endDate`, defines the periodicity of the schedule.",
        "returns": {
          "_0": "The length of each yield period in seconds."
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "lastClaimedPeriod()": {
        "details": "Convenience function so callers don't have to pass their own address.",
        "returns": {
          "_0": "The last period number (1-indexed) claimed by the caller."
        }
      },
      "lastClaimedPeriod(address)": {
        "details": "This is crucial for tracking individual claim statuses. If a holder has never claimed, this might return 0.",
        "params": {
          "holder": "The address of the token holder whose last claimed period is being queried."
        },
        "returns": {
          "_0": "The 1-indexed number of the last period claimed by the `holder`."
        }
      },
      "lastCompletedPeriod()": {
        "details": "This indicates up to which period users can typically claim their accrued yield. If no periods have completed (e.g., `block.timestamp < periodEnd(1)`), this might return 0.",
        "returns": {
          "_0": "The 1-indexed number of the last fully completed period."
        }
      },
      "pause()": {
        "details": "Pause the contract."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "periodEnd(uint256)": {
        "details": "Periods are 1-indexed. Accessing `_periodEndTimestamps` requires 0-indexed access (`period - 1`).",
        "params": {
          "period": "The period number (e.g., 1 for the first period, 2 for the second, etc.) whose end timestamp is being queried."
        },
        "returns": {
          "_0": "The Unix timestamp marking the end of the specified `period`."
        }
      },
      "rate()": {
        "details": "The interpretation of this rate (e.g., annual percentage rate, per period rate) and its precision (e.g., basis points) depends on the specific implementation of the schedule contract. For a fixed schedule, this rate is a key parameter in calculating yield per period.",
        "returns": {
          "_0": "The configured yield rate (e.g., in basis points, where 100 basis points = 1%)."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "startDate()": {
        "details": "This is an immutable value set in the constructor. It defines the beginning of the yield accrual period. This function fulfills the `startDate()` requirement from the `ISMARTFixedYieldSchedule` interface (which itself inherits it from `ISMARTYieldSchedule`)."
      },
      "timeUntilNextPeriod()": {
        "details": "If the schedule has not started, this could be time until `startDate()`. If the schedule is ongoing, this is the time left in the `currentPeriod()`. If the schedule has ended, this might return 0.",
        "returns": {
          "_0": "The time in seconds until the next period begins or current period ends."
        }
      },
      "token()": {
        "details": "The schedule contract needs to interact with this token contract to query historical balances (e.g., `balanceOfAt`) and total supplies (`totalSupplyAt`). The returned token contract should implement the `ISMARTYield` interface.",
        "returns": {
          "_0": "The `ISMARTYield` compliant token contract address."
        }
      },
      "topUpUnderlyingAsset(uint256)": {
        "details": "This function is used to ensure the contract has sufficient reserves of the `underlyingAsset()` to pay out accrued yield. It typically involves the caller first approving the schedule contract to spend their `underlyingAsset` tokens, then this function calls `transferFrom`.",
        "params": {
          "amount": "The quantity of the `underlyingAsset` to deposit into the schedule contract."
        }
      },
      "totalUnclaimedYield()": {
        "details": "This calculation can be gas-intensive as it iterates through all completed periods and queries historical total supply for each. It assumes `_token.yieldBasisPerUnit(address(0))` provides a generic or representative basis if it varies by holder.",
        "returns": {
          "_0": "The total sum of unclaimed yield tokens."
        }
      },
      "totalYieldForNextPeriod()": {
        "details": "This calculation uses the current total supply. For a more precise estimate if supply changes rapidly, one might need a more complex projection. Assumes a generic basis from `_token.yieldBasisPerUnit(address(0))`.",
        "returns": {
          "_0": "The estimated total yield tokens needed for the next period's distribution."
        }
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      },
      "underlyingAsset()": {
        "details": "This is the actual token that holders will receive when they claim their yield. It can be the same as `token()` or a different token (e.g., a stablecoin).",
        "returns": {
          "_0": "The `IERC20` compliant token contract address used for payments."
        }
      },
      "unpause()": {
        "details": "Unpause the contract."
      },
      "withdrawAllUnderlyingAsset(address)": {
        "details": "Similar to `withdrawUnderlyingAsset`, but withdraws the entire balance of `underlyingAsset` held by the contract. Should also be strictly access-controlled.",
        "params": {
          "to": "The address to which all `underlyingAsset` tokens will be sent."
        }
      },
      "withdrawUnderlyingAsset(address,uint256)": {
        "details": "This is an administrative function and should be strictly access-controlled (e.g., `onlyRole(ADMIN_ROLE)`). Useful for managing excess funds or in emergency situations.",
        "params": {
          "amount": "The quantity of `underlyingAsset` tokens to withdraw.",
          "to": "The address to which the withdrawn `underlyingAsset` tokens will be sent."
        }
      }
    },
    "events": {
      "FixedYieldScheduleSet(uint256,uint256,uint256,uint256,uint256[],address,uint256)": {
        "params": {
          "endDate": "The end date of the yield schedule.",
          "interval": "The interval of the yield schedule.",
          "periodEndTimestamps": "The timestamps of the end of each period.",
          "rate": "The rate of the yield schedule.",
          "startDate": "The start date of the yield schedule.",
          "underlyingAsset": "The underlying asset of the yield schedule.",
          "yieldForNextPeriod": "The yield for the next period."
        }
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "UnderlyingAssetTopUp(address,uint256)": {
        "params": {
          "amount": "The quantity of `_underlyingAsset` tokens deposited.",
          "from": "The address that sent the `_underlyingAsset` tokens (the funder)."
        }
      },
      "UnderlyingAssetWithdrawn(address,uint256)": {
        "params": {
          "amount": "The quantity of `_underlyingAsset` tokens withdrawn.",
          "to": "The address that received the withdrawn `_underlyingAsset` tokens."
        }
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      },
      "YieldClaimed(address,uint256,uint256,uint256,uint256[],uint256[],uint256,uint256)": {
        "params": {
          "claimedAmount": "The total quantity of `_underlyingAsset` transferred to the holder in this claim.",
          "fromPeriod": "The first period number (1-indexed) included in this claim.",
          "holder": "The address of the token holder who claimed the yield.",
          "periodAmounts": "An array containing the amount of yield claimed for each specific period within the `fromPeriod` to `toPeriod` range. The length of this array is `toPeriod - fromPeriod + 1`.",
          "periodYields": "An array containing the total yield for each specific period within the `fromPeriod` to `toPeriod` range. The length of this array is `toPeriod - fromPeriod + 1`.",
          "toPeriod": "The last period number (1-indexed) included in this claim.",
          "totalUnclaimedYield": "The total amount of unclaimed yield remaining in the contract across all holders after this claim.",
          "yieldForNextPeriod": "The yield for the next period."
        }
      }
    },
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "AlreadyInitialized()": [
        {
          "details": "Reverted if the `initialize` function is called more than once."
        }
      ],
      "CannotInitializeLogicContract()": [
        {
          "details": "Reverted if `initialize` is called directly on a logic contract that was configured via constructor."
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "InsufficientUnderlyingBalance(uint256,uint256)": [
        {
          "details": "Reverted by `topUpUnderlyingAsset` or `withdrawUnderlyingAsset` if the underlying asset transfer fails or if there's not enough balance.",
          "params": {
            "currentBalance": "The current balance of the underlying asset in the contract.",
            "requiredBalance": "The required balance of the underlying asset for the operation."
          }
        }
      ],
      "InvalidAmount()": [
        {
          "details": "Reverted by `withdrawUnderlyingAsset` if the withdrawal `amount` is zero."
        }
      ],
      "InvalidEndDate()": [
        {
          "details": "Reverted if the `endDate_` provided in the constructor is not after the `startDate_`."
        }
      ],
      "InvalidInterval()": [
        {
          "details": "Reverted if the `interval_` (distribution interval in seconds) provided in the constructor is zero."
        }
      ],
      "InvalidPeriod()": [
        {
          "details": "Reverted by `periodEnd` if an invalid period number (0 or out of bounds) is requested."
        }
      ],
      "InvalidRate()": [
        {
          "details": "Reverted if the `rate_` (yield rate in basis points) provided in the constructor is zero."
        }
      ],
      "InvalidStartDate()": [
        {
          "details": "Reverted if the `startDate_` provided in the constructor is not in the future (i.e., less than or equal to `block.timestamp`)."
        }
      ],
      "InvalidToken()": [
        {
          "details": "Reverted if the `tokenAddress` provided in the constructor is the zero address."
        }
      ],
      "InvalidUnderlyingAsset()": [
        {
          "details": "Reverted if the `_underlyingAsset` (derived from `_token.yieldToken()`) is the zero address, or if `to` address in withdrawal is zero."
        }
      ],
      "NoUnderlyingBalance()": [
        {
          "details": "Reverted by `withdrawUnderlyingAsset` if the underlying asset balance is zero."
        }
      ],
      "NoYieldAvailable()": [
        {
          "details": "Reverted by `claimYield` if there is no accumulated yield for the caller to claim for completed periods."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "ReentrantInitialization()": [
        {
          "details": "Reverted if a re-entrant call occurs during the initialization process."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ],
      "ScheduleNotActive()": [
        {
          "details": "Reverted by `calculateAccruedYield` if the schedule has not yet started (i.e., `block.timestamp < _startDate`)."
        }
      ]
    }
  },
  "id": 79
}