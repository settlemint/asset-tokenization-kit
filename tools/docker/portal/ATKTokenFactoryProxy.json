{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "systemAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialAdmin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "factoryTypeHash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "tokenImplementation",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "identityVerificationModule",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "fallback",
      "stateMutability": "payable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "error",
      "name": "ETHTransfersNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSystemAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TokenFactoryImplementationNotSet",
      "inputs": [
        {
          "name": "registryTypeHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x608060405260a06104cb803803809161001782610273565b6080391261025b576100276102c1565b61003160a06102d7565b60c0519061003f60e06102d7565b61004a6101006102d7565b6001600160a01b038516801580156101f3575b6101e4575f5160206104ab5f395f51905f5280546001600160a01b0319166001600160a01b039092169190911790556100b4847f17947bca0d2c81fdff72d848cf07e6794554f6987d19e262fbc8ebfe6c58aef455565b5f5160206104ab5f395f51905f52546100e3906100d7906001600160a01b031681565b6001600160a01b031690565b604051631cece55f60e01b8152600481018690529490602090869060249082905afa9485156101df575f956101ae575b506001600160a01b0385161561019c57604051637c643b2f60e11b602082019081526001600160a01b03888116602484015285811660448401528681166064840152841660848084019190915282525f918291889161017360a48261029e565b51915af461017f610325565b90156101945760405161014790816103648239f35b602081519101fd5b630cc8ce1560e11b5f5260045260245ffd5b6101d191955060203d6020116101d8575b6101c9818361029e565b81019061030e565b935f610113565b503d6101bf565b610303565b633f997a3760e01b5f5260045ffd5b506040516301ffc9a760e01b8152633d1b15b560e21b6004820152602081602481855afa9081156101df575f9161022c575b501561005d565b61024e915060203d602011610254575b610246818361029e565b8101906102eb565b5f610225565b503d61023c565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b0382119082101761029957604052565b61025f565b601f909101601f19168101906001600160401b0382119082101761029957604052565b608051906001600160a01b038216820361025b57565b51906001600160a01b038216820361025b57565b9081602091031261025b5751801515810361025b5790565b6040513d5f823e3d90fd5b9081602091031261025b57610322906102d7565b90565b3d1561035e573d906001600160401b0382116102995760405191610353601f8201601f19166020018461029e565b82523d5f602084013e565b60609056fe608060405236156100b1576020608060248160018060a01b037fe8884080cc51c5c292bf466c34183fc7b6d97a0de789d28a4fa18c91a467e8f354167f17947bca0d2c81fdff72d848cf07e6794554f6987d19e262fbc8ebfe6c58aef454631cece55f60e01b83526084525afa80156100a6575f901561011d575060203d60201161009f575b8061009261009a926100c0565b6080016100f7565b61011d565b503d610085565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b601f80199101166080016080811067ffffffffffffffff8211176100e357604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f190112610119576080516001600160a01b03811681036101195790565b5f80fd5b5f8091368280378136915af43d5f803e15610136573d5ff35b3d5ffdfea164736f6c634300081c000ae8884080cc51c5c292bf466c34183fc7b6d97a0de789d28a4fa18c91a467e8f3",
    "sourceMap": "841:3810:127:-:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;841:3810:127;;2746:27;;:102;;;;-1:-1:-1;2742:162:127;;-1:-1:-1;;;;;;;;;;;998:66:127;;-1:-1:-1;;;;;;998:66:127;-1:-1:-1;;;;;841:3810:127;;;998:66;;;;;;2980:15;;1212:66;;1567:158;2980:15;-1:-1:-1;;;;;;;;;;;841:3810:127;3075:34;;1496:58;;-1:-1:-1;;;;;841:3810:127;1496:58;841:3810;1507:46;-1:-1:-1;;;;;841:3810:127;;;3075:34;841:3810;;-1:-1:-1;;;3075:51:127;;;;;841:3810;;;;;;;;;;;;;3075:51;;;;;;;-1:-1:-1;3075:51:127;;;-1:-1:-1;;;;;;;841:3810:127;;3140:28;3136:90;;841:3810;;-1:-1:-1;;;841:3810:127;3257:208;;;;;-1:-1:-1;;;;;841:3810:127;;;3257:208;;;841:3810;;;;;;;;;;;;;;;;;;;;;;;;;3257:208;;-1:-1:-1;;;;841:3810:127;;3257:208;841:3810;;3257:208;:::i;:::-;3746:33;;;;;;:::i;:::-;3793:8;;3789:205;;841:3810;;;;;;;;;3789:205;841:3810;3895:89;;;;;3136:90;-1:-1:-1;;;;3177:49:127;3075:51;841:3810;;-1:-1:-1;3177:49:127;3075:51;;;;;841:3810;3075:51;841:3810;3075:51;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;2742:162::-;2871:22;;;-1:-1:-1;2871:22:127;;-1:-1:-1;2871:22:127;2746:102;-1:-1:-1;841:3810:127;;-1:-1:-1;;;2778:70:127;;-1:-1:-1;;;2778:70:127;;;841:3810;;;;;2778:70;;;;;;;;-1:-1:-1;2778:70:127;;;2746:102;2777:71;;2746:102;;2778:70;;;;841:3810;2778:70;841:3810;2778:70;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;841:3810;-1:-1:-1;841:3810:127;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;841:3810:127;;;;-1:-1:-1;;;;;841:3810:127;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;-1:-1:-1;;841:3810:127;;;;-1:-1:-1;;;;;841:3810:127;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;841:3810:127;;;;;;:::o;:::-;;;-1:-1:-1;;;;;841:3810:127;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;-1:-1:-1;;;;;841:3810:127;;;;;;;;3257:208;841:3810;;-1:-1:-1;;841:3810:127;;;;;:::i;:::-;;;;-1:-1:-1;841:3810:127;;;;:::o;:::-;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405236156100b1576020608060248160018060a01b037fe8884080cc51c5c292bf466c34183fc7b6d97a0de789d28a4fa18c91a467e8f354167f17947bca0d2c81fdff72d848cf07e6794554f6987d19e262fbc8ebfe6c58aef454631cece55f60e01b83526084525afa80156100a6575f901561011d575060203d60201161009f575b8061009261009a926100c0565b6080016100f7565b61011d565b503d610085565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b601f80199101166080016080811067ffffffffffffffff8211176100e357604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f190112610119576080516001600160a01b03811681036101195790565b5f80fd5b5f8091368280378136915af43d5f803e15610136573d5ff35b3d5ffdfea164736f6c634300081c000a",
    "sourceMap": "841:3810:127:-:0;;;;;;;;;4469:51;841:3810;;;;;;998:66;;841:3810;1212:66;;841:3810;;;4469:51;;;841:3810;4469:51;;;;;;-1:-1:-1;4469:51:127;;2381:17:160;4469:51:127;;841:3810;4469:51;841:3810;4469:51;;;;;;;;;:::i;:::-;841:3810;4469:51;;:::i;:::-;2381:17:160;:::i;4469:51:127:-;-1:-1:-1;4469:51:127;;;;841:3810;;;-1:-1:-1;841:3810:127;;;;;;4618:24;;;;;;;;841:3810;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;841:3810:127;;;;;-1:-1:-1;841:3810:127;;;;;;;;;;;;-1:-1:-1;;;;;841:3810:127;;;;;;;:::o;:::-;-1:-1:-1;841:3810:127;;949:895:160;1019:819;949:895;;1019:819;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"factoryTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"identityVerificationModule\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ETHTransfersNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSystemAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"registryTypeHash\",\"type\":\"bytes32\"}],\"name\":\"TokenFactoryImplementationNotSet\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ETHTransfersNotAllowed()\":[{\"details\":\"Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent loss of funds or unexpected behavior.\"}],\"InvalidSystemAddress()\":[{\"details\":\"This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy by setting the system address and delegating a call to the `initialize` function of the token factory implementation.\",\"params\":{\"factoryTypeHash\":\"The hash of the factory type.\",\"identityVerificationModule\":\"The address of the identity verification module.\",\"initialAdmin\":\"The address of the initial admin for the token factory.\",\"systemAddress\":\"The address of the IATKSystem contract that provides the implementation.\",\"tokenImplementation\":\"The address of the token implementation contract.\"}}},\"title\":\"Proxy contract for ATK Token Factory.\",\"version\":1},\"userdoc\":{\"errors\":{\"ETHTransfersNotAllowed()\":[{\"notice\":\"Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it.\"}],\"InvalidSystemAddress()\":[{\"notice\":\"Error indicating that an invalid system address was provided or encountered.\"}],\"TokenFactoryImplementationNotSet(bytes32)\":[{\"notice\":\"Error indicating that the token factory implementation address has not been set.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs the ATKTokenFactoryProxy.\"}},\"notice\":\"This contract serves as a proxy to the ATK Token Factory implementation, allowing for upgradeability of the token factory logic. It retrieves the implementation address from the IATKSystem contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/token-factory/ATKTokenFactoryProxy.sol\":\"ATKTokenFactoryProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/system/ATKSystemErrors.sol\":{\"keccak256\":\"0xe9fb398f265a4daa88b4e58ee81b6cea21a12f10d9a9c2b15df95043fbf5d0d6\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://645c118e965405ef2ca92f77cb7a7c5f99daf0f8bae771395807fb4ab96f5417\",\"dweb:/ipfs/QmRb5gWGfUZ8RhFskTXHCp3UH34AekXJwBfVLEXagxraT4\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x27bedf7546b96ea7bee71a1ddd6756ba763e7f0d2ca2dcc439fc4044139351b4\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://455bd3d4638cd9a6a65df6eb31fc6fdbba6292fd31d8c0009cccfdd2efe2f9ab\",\"dweb:/ipfs/QmZLm1fRC841vV7ctS5qAyH1BDJWFvLm8wbcdCm77DNGyq\"]},\"contracts/system/token-factory/ATKTokenFactoryProxy.sol\":{\"keccak256\":\"0x9111bd8854f5865ae2aad65d13ca52c61987ba6876a6edd56ba51dd8f5aa2609\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://b2e49fd0c4b3a99962b9d9242316949e2e16fd64ac379a788c93f3981381e51e\",\"dweb:/ipfs/Qme8Vx1GdgdhM63PjUDJXWCus6goEEY4H7GnBYXckrYgp1\"]},\"contracts/system/token-factory/IATKTokenFactory.sol\":{\"keccak256\":\"0xafe633933b72d93c069c1ac253c9fdbb175905c598bcefa58fe8e96f47fb0a16\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://36811550e10222fa8b4d88c100e1ce74e6bc30c2708a066f1edd6b96ab8ba926\",\"dweb:/ipfs/QmTbqtC2XQdShphqUTe43Cd6ZMv5odtZziD5wzDd34Rdrn\"]},\"dependencies/@openzeppelin-contracts-5.3.0/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "systemAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialAdmin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "factoryTypeHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "tokenImplementation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "identityVerificationModule",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ETHTransfersNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSystemAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "registryTypeHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "TokenFactoryImplementationNotSet"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Initializes the proxy by setting the system address and delegating a call to the `initialize` function of the token factory implementation.",
            "params": {
              "factoryTypeHash": "The hash of the factory type.",
              "identityVerificationModule": "The address of the identity verification module.",
              "initialAdmin": "The address of the initial admin for the token factory.",
              "systemAddress": "The address of the IATKSystem contract that provides the implementation.",
              "tokenImplementation": "The address of the token implementation contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructs the ATKTokenFactoryProxy."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/token-factory/ATKTokenFactoryProxy.sol": "ATKTokenFactoryProxy"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/system/ATKSystemErrors.sol": {
        "keccak256": "0xe9fb398f265a4daa88b4e58ee81b6cea21a12f10d9a9c2b15df95043fbf5d0d6",
        "urls": [
          "bzz-raw://645c118e965405ef2ca92f77cb7a7c5f99daf0f8bae771395807fb4ab96f5417",
          "dweb:/ipfs/QmRb5gWGfUZ8RhFskTXHCp3UH34AekXJwBfVLEXagxraT4"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/IATKSystem.sol": {
        "keccak256": "0x27bedf7546b96ea7bee71a1ddd6756ba763e7f0d2ca2dcc439fc4044139351b4",
        "urls": [
          "bzz-raw://455bd3d4638cd9a6a65df6eb31fc6fdbba6292fd31d8c0009cccfdd2efe2f9ab",
          "dweb:/ipfs/QmZLm1fRC841vV7ctS5qAyH1BDJWFvLm8wbcdCm77DNGyq"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/token-factory/ATKTokenFactoryProxy.sol": {
        "keccak256": "0x9111bd8854f5865ae2aad65d13ca52c61987ba6876a6edd56ba51dd8f5aa2609",
        "urls": [
          "bzz-raw://b2e49fd0c4b3a99962b9d9242316949e2e16fd64ac379a788c93f3981381e51e",
          "dweb:/ipfs/Qme8Vx1GdgdhM63PjUDJXWCus6goEEY4H7GnBYXckrYgp1"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/token-factory/IATKTokenFactory.sol": {
        "keccak256": "0xafe633933b72d93c069c1ac253c9fdbb175905c598bcefa58fe8e96f47fb0a16",
        "urls": [
          "bzz-raw://36811550e10222fa8b4d88c100e1ce74e6bc30c2708a066f1edd6b96ab8ba926",
          "dweb:/ipfs/QmTbqtC2XQdShphqUTe43Cd6ZMv5odtZziD5wzDd34Rdrn"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructs the ATKTokenFactoryProxy."
      }
    },
    "errors": {
      "ETHTransfersNotAllowed()": [
        {
          "notice": "Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it."
        }
      ],
      "InvalidSystemAddress()": [
        {
          "notice": "Error indicating that an invalid system address was provided or encountered."
        }
      ],
      "TokenFactoryImplementationNotSet(bytes32)": [
        {
          "notice": "Error indicating that the token factory implementation address has not been set."
        }
      ]
    },
    "notice": "This contract serves as a proxy to the ATK Token Factory implementation, allowing for upgradeability of the token factory logic. It retrieves the implementation address from the IATKSystem contract."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the proxy by setting the system address and delegating a call to the `initialize` function of the token factory implementation.",
        "params": {
          "factoryTypeHash": "The hash of the factory type.",
          "identityVerificationModule": "The address of the identity verification module.",
          "initialAdmin": "The address of the initial admin for the token factory.",
          "systemAddress": "The address of the IATKSystem contract that provides the implementation.",
          "tokenImplementation": "The address of the token implementation contract."
        }
      }
    },
    "errors": {
      "ETHTransfersNotAllowed()": [
        {
          "details": "Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent loss of funds or unexpected behavior."
        }
      ],
      "InvalidSystemAddress()": [
        {
          "details": "This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation."
        }
      ]
    },
    "title": "Proxy contract for ATK Token Factory."
  },
  "id": 127
}