{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "trustedForwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addMultipleToBypassList",
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addToBypassList",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "areValidComplianceModules",
      "inputs": [
        {
          "name": "_pairs",
          "type": "tuple[]",
          "internalType": "struct SMARTComplianceModuleParamPair[]",
          "components": [
            {
              "name": "module",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "params",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "canTransfer",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "created",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "destroyed",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialAdmins",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isBypassed",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidComplianceModule",
      "inputs": [
        {
          "name": "_module",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_params",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeFromBypassList",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeMultipleFromBypassList",
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferred",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AddressAddedToBypassList",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "manager",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AddressRemovedFromBypassList",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "manager",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessControlBadConfirmation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "neededRole",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "AddressAlreadyOnBypassList",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "AddressNotOnBypassList",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidModule",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroAddressNotAllowed",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a03461011057601f61175c38819003918201601f19168301916001600160401b038311848410176101145780849260209460405283398101031261011057516001600160a01b0381168103610110576080525f51602061173c5f395f51905f525460ff8160401c16610101576002600160401b03196001600160401b038216016100ab575b60405161161390816101298239608051818181610739015281816107ae01526115310152f35b6001600160401b0319166001600160401b039081175f51602061173c5f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610085565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8062fdecdb14610c1b57806301ffc9a714610b935780630379210414610ac6578063204b600114610a8a578063248a9ca314610a4b578063292d4803146109665780632f2ff15d1461091c57806336568abe146108c85780633e5af4ca146107e2578063572b6c051461078e5780636d62a4fe146107685780637da0a87714610724578063882f1ea8146106705780638a668634146105e357806391d148541461058e578063a217fddf14610574578063a224cee71461038a578063ad02d621146102af578063d547741f14610260578063e2677662146101685763e50bcad3146100ff575f80fd5b3461016457604036600319011261016457610118610ce6565b602435906001600160401b0382116101645736602383011215610164578160040135906001600160401b038211610164573660248385010111610164576024610162930190611128565b005b5f80fd5b346101645761017636610d12565b6040516354c560bd60e11b81529192905f836004816001600160a01b0386165afa928315610231575f9361023c575b508251925f5b8481106101b457005b6001600160a01b036101c68284610f7f565b5151169060206101d68285610f7f565b51015191803b1561016457845f918983896102076040519889968795869463c4c104b960e01b865260048601610fb7565b03925af191821561023157600192610221575b50016101ab565b5f61022b91610d9a565b8761021a565b6040513d5f823e3d90fd5b6102599193503d805f833e6102518183610d9a565b810190610e40565b91846101a5565b346101645760403660031901126101645761016260043561027f610cfc565b906102aa6102a5825f525f5160206115c75f395f51905f52602052600160405f20015490565b6112b6565b611485565b34610164576020366003190112610164576004356001600160401b038111610164576102df903690600401610cb6565b906102e8611228565b5f5b8281106102f357005b6001600160a01b0361030e610309838686610e30565b610e1c565b16805f525f60205260ff60405f20541615610378575f818152602081905260409020805460ff19169055600191906001600160a01b0361034c61152e565b16907f128fb3593d4d8a8ca29b7babc9136572a1e28c525fa35c4bb4ea14b20742c8635f80a3016102ea565b632cf22ae160e21b5f5260045260245ffd5b34610164576020366003190112610164576004356001600160401b03811161016457366023820112156101645780600401356103c581610dcf565b916103d36040519384610d9a565b8183526024602084019260051b8201019036821161016457602401915b81831061055457835f5160206115e75f395f51905f525460ff8160401c1615906001600160401b0381168015908161054c575b6001149081610542575b159081610539575b5061052a5767ffffffffffffffff1981166001175f5160206115e75f395f51905f5255816104fe575b5061046761159b565b61046f61159b565b5f5b82518110156104a0576001906104996001600160a01b036104928387610f7f565b5116611312565b5001610471565b506104a757005b68ff0000000000000000195f5160206115e75f395f51905f5254165f5160206115e75f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff191668010000000000000001175f5160206115e75f395f51905f52558261045e565b63f92ee8a960e01b5f5260045ffd5b90501584610435565b303b15915061042d565b839150610423565b82356001600160a01b0381168103610164578152602092830192016103f0565b34610164575f3660031901126101645760206040515f8152f35b34610164576040366003190112610164576105a7610cfc565b6004355f525f5160206115c75f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610164576020366003190112610164576105fc610ce6565b610604611228565b6001600160a01b03165f8181526020819052604090205460ff1615610378575f818152602081905260409020805460ff191690556001600160a01b0361064861152e565b16907f128fb3593d4d8a8ca29b7babc9136572a1e28c525fa35c4bb4ea14b20742c8635f80a3005b3461016457602036600319011261016457610689610ce6565b610691611228565b6001600160a01b0316801561071557805f525f60205260ff60405f205416610703575f818152602081905260409020805460ff191660011790556001600160a01b036106db61152e565b16907f0f3a9500f0f26c009c928e123e0f7bee0ecd4caa7b6010581f85e7b28794c1275f80a3005b630237252360e11b5f5260045260245ffd5b6342bcdf7f60e11b5f5260045ffd5b34610164575f366003190112610164576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461016457602061078461077b36610d4c565b92919091611025565b6040519015158152f35b346101645760203660031901126101645760206107a9610ce6565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610164576107f036610d4c565b6040516354c560bd60e11b8152909391905f816004816001600160a01b0387165afa908115610231575f916108ae575b508051935f5b85811061082f57005b6001600160a01b036108418285610f7f565b5151169060206108518286610f7f565b51015191803b1561016457855f9185838a6108848e98604051998a978896879563ea6b97a560e01b875260048701610feb565b03925af19182156102315760019261089e575b5001610826565b5f6108a891610d9a565b88610897565b6108c291503d805f833e6102518183610d9a565b85610820565b34610164576040366003190112610164576108e1610cfc565b6001600160a01b036108f161152e565b166001600160a01b0382160361090d5761016290600435611485565b63334bd91960e11b5f5260045ffd5b346101645760403660031901126101645761016260043561093b610cfc565b906109616102a5825f525f5160206115c75f395f51905f52602052600160405f20015490565b6113d4565b346101645761097436610d12565b6040516354c560bd60e11b81529192905f836004816001600160a01b0386165afa928315610231575f93610a2f575b508251925f5b8481106109b257005b6001600160a01b036109c48284610f7f565b5151169060206109d48285610f7f565b51015191803b1561016457845f91898389610a05604051988996879586946310efe2a560e01b865260048601610fb7565b03925af191821561023157600192610a1f575b50016109a9565b5f610a2991610d9a565b87610a18565b610a449193503d805f833e6102518183610d9a565b91846109a3565b34610164576020366003190112610164576020610a826004355f525f5160206115c75f395f51905f52602052600160405f20015490565b604051908152f35b34610164576020366003190112610164576001600160a01b03610aab610ce6565b165f525f602052602060ff60405f2054166040519015158152f35b34610164576020366003190112610164576004356001600160401b03811161016457610af6903690600401610cb6565b90610aff611228565b5f5b828110610b0a57005b6001600160a01b03610b20610309838686610e30565b16801561071557805f525f60205260ff60405f205416610703575f818152602081905260409020805460ff1916600190811790915591906001600160a01b03610b6761152e565b16907f0f3a9500f0f26c009c928e123e0f7bee0ecd4caa7b6010581f85e7b28794c1275f80a301610b01565b346101645760203660031901126101645760043563ffffffff60e01b811680910361016457602090637d84485d60e01b8114908115610c0a575b8115610bdf575b506040519015158152f35b637965db0b60e01b811491508115610bf9575b5082610bd4565b6301ffc9a760e01b14905082610bf2565b63118f21f760e31b81149150610bcd565b34610164576020366003190112610164576004356001600160401b03811161016457610c4b903690600401610cb6565b5f5b818110610c5657005b610c64610309828486610de6565b90610c70818486610de6565b602081013590601e19813603018212156101645701918235926001600160401b0384116101645760200192803603841361016457600193610cb092611128565b01610c4d565b9181601f84011215610164578235916001600160401b038311610164576020808501948460051b01011161016457565b600435906001600160a01b038216820361016457565b602435906001600160a01b038216820361016457565b6060906003190112610164576004356001600160a01b038116810361016457906024356001600160a01b0381168103610164579060443590565b6080906003190112610164576004356001600160a01b038116810361016457906024356001600160a01b038116810361016457906044356001600160a01b0381168103610164579060643590565b90601f801991011681019081106001600160401b03821117610dbb57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b038111610dbb5760051b60200190565b9190811015610e085760051b81013590603e1981360301821215610164570190565b634e487b7160e01b5f52603260045260245ffd5b356001600160a01b03811681036101645790565b9190811015610e085760051b0190565b602081830312610164578051906001600160401b03821161016457019080601f8301121561016457815191610e7483610dcf565b92610e826040519485610d9a565b80845260208085019160051b830101918383116101645760208101915b838310610eae57505050505090565b82516001600160401b038111610164578201906040828703601f1901126101645760405191604083018381106001600160401b03821117610dbb5760405260208101516001600160a01b038116810361016457835260408101516001600160401b0381116101645760209101019086601f83011215610164578151926001600160401b038411610dbb57604051610f4f601f8601601f191660200182610d9a565b8481528860208686010111610164575f6020868197828098018386015e8301015283820152815201920191610e9f565b8051821015610e085760209160051b010190565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6001600160a01b039182168152911660208201526040810191909152608060608201819052610fe892910190610f93565b90565b6001600160a01b03918216815291811660208301529091166040820152606081019190915260a060808201819052610fe892910190610f93565b909160018060a01b0381165f525f60205260ff60405f20541661111f576040516354c560bd60e11b81525f816004816001600160a01b0387165afa908115610231575f91611105575b508051935f5b8581106110875750505050505050600190565b6001600160a01b036110998285610f7f565b5151169060206110a98286610f7f565b51015191803b156101645760405163ddfcf37760e01b8152925f918491829081906110db908e8c8b8f60048701610feb565b03915afa918215610231576001926110f5575b5001611074565b5f6110ff91610d9a565b5f6110ee565b61111991503d805f833e6102518183610d9a565b5f61106e565b50505050600190565b6001600160a01b0316908115610715576040516301ffc9a760e01b8152638c30a94360e01b6004820152602081602481865afa5f91816111eb575b5061117757631bb2296560e31b5f5260045ffd5b156111dc57813b15610164575f91839160446040518096819582946334ba7ac760e11b845260206004850152816024850152848401378181018301879052601f01601f191681010301915afa8015610231576111d05750565b5f6111da91610d9a565b565b631bb2296560e31b5f5260045ffd5b9091506020813d602011611220575b8161120760209383610d9a565b810103126101645751801515810361016457905f611163565b3d91506111fa565b61123061152e565b6001600160a01b0381165f9081527fe8bf0762f5377f8b8340c486ee15f5ce9fad20a5b6c8702048ea00d950b82bd2602052604090205460ff16156112725750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004527feaeeb45c1b9029a6e392e1e7aa6f4af6bd8111f85c32809598bc9903a16227a3602452604490fd5b6112be61152e565b815f525f5160206115c75f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f205416156112f5575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166113cf576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff1916600117905561139a61152e565b16906001600160a01b03165f7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b5f8181525f5160206115c75f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1661147f575f8181525f5160206115c75f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff1916600117905561144a61152e565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f8181525f5160206115c75f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff161561147f575f8181525f5160206115c75f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff191690556114f961152e565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611590575b1561158c576013193601368111611578573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b506014361015611560565b60ff5f5160206115e75f395f51905f525460401c16156115b757565b631afcd79f60e31b5f5260045ffdfe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000af0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "sourceMap": "2477:19789:117:-:0;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;1623:37:198;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;;;7894:76:199;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;7983:34:199;7979:146;;-1:-1:-1;2477:19789:117;;;;;;;;1623:37:198;2477:19789:117;;;;;;;;;;;;;;;;7979:146:199;-1:-1:-1;;;;;;2477:19789:117;-1:-1:-1;;;;;2477:19789:117;;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;;;8085:29:199;;2477:19789:117;;8085:29:199;7979:146;;;7894:76;7936:23;;;-1:-1:-1;7936:23:199;;-1:-1:-1;7936:23:199;2477:19789:117;-1:-1:-1;2477:19789:117;;;;;;-1:-1:-1;2477:19789:117;;;;;-1:-1:-1;2477:19789:117",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c8062fdecdb14610c1b57806301ffc9a714610b935780630379210414610ac6578063204b600114610a8a578063248a9ca314610a4b578063292d4803146109665780632f2ff15d1461091c57806336568abe146108c85780633e5af4ca146107e2578063572b6c051461078e5780636d62a4fe146107685780637da0a87714610724578063882f1ea8146106705780638a668634146105e357806391d148541461058e578063a217fddf14610574578063a224cee71461038a578063ad02d621146102af578063d547741f14610260578063e2677662146101685763e50bcad3146100ff575f80fd5b3461016457604036600319011261016457610118610ce6565b602435906001600160401b0382116101645736602383011215610164578160040135906001600160401b038211610164573660248385010111610164576024610162930190611128565b005b5f80fd5b346101645761017636610d12565b6040516354c560bd60e11b81529192905f836004816001600160a01b0386165afa928315610231575f9361023c575b508251925f5b8481106101b457005b6001600160a01b036101c68284610f7f565b5151169060206101d68285610f7f565b51015191803b1561016457845f918983896102076040519889968795869463c4c104b960e01b865260048601610fb7565b03925af191821561023157600192610221575b50016101ab565b5f61022b91610d9a565b8761021a565b6040513d5f823e3d90fd5b6102599193503d805f833e6102518183610d9a565b810190610e40565b91846101a5565b346101645760403660031901126101645761016260043561027f610cfc565b906102aa6102a5825f525f5160206115c75f395f51905f52602052600160405f20015490565b6112b6565b611485565b34610164576020366003190112610164576004356001600160401b038111610164576102df903690600401610cb6565b906102e8611228565b5f5b8281106102f357005b6001600160a01b0361030e610309838686610e30565b610e1c565b16805f525f60205260ff60405f20541615610378575f818152602081905260409020805460ff19169055600191906001600160a01b0361034c61152e565b16907f128fb3593d4d8a8ca29b7babc9136572a1e28c525fa35c4bb4ea14b20742c8635f80a3016102ea565b632cf22ae160e21b5f5260045260245ffd5b34610164576020366003190112610164576004356001600160401b03811161016457366023820112156101645780600401356103c581610dcf565b916103d36040519384610d9a565b8183526024602084019260051b8201019036821161016457602401915b81831061055457835f5160206115e75f395f51905f525460ff8160401c1615906001600160401b0381168015908161054c575b6001149081610542575b159081610539575b5061052a5767ffffffffffffffff1981166001175f5160206115e75f395f51905f5255816104fe575b5061046761159b565b61046f61159b565b5f5b82518110156104a0576001906104996001600160a01b036104928387610f7f565b5116611312565b5001610471565b506104a757005b68ff0000000000000000195f5160206115e75f395f51905f5254165f5160206115e75f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff191668010000000000000001175f5160206115e75f395f51905f52558261045e565b63f92ee8a960e01b5f5260045ffd5b90501584610435565b303b15915061042d565b839150610423565b82356001600160a01b0381168103610164578152602092830192016103f0565b34610164575f3660031901126101645760206040515f8152f35b34610164576040366003190112610164576105a7610cfc565b6004355f525f5160206115c75f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610164576020366003190112610164576105fc610ce6565b610604611228565b6001600160a01b03165f8181526020819052604090205460ff1615610378575f818152602081905260409020805460ff191690556001600160a01b0361064861152e565b16907f128fb3593d4d8a8ca29b7babc9136572a1e28c525fa35c4bb4ea14b20742c8635f80a3005b3461016457602036600319011261016457610689610ce6565b610691611228565b6001600160a01b0316801561071557805f525f60205260ff60405f205416610703575f818152602081905260409020805460ff191660011790556001600160a01b036106db61152e565b16907f0f3a9500f0f26c009c928e123e0f7bee0ecd4caa7b6010581f85e7b28794c1275f80a3005b630237252360e11b5f5260045260245ffd5b6342bcdf7f60e11b5f5260045ffd5b34610164575f366003190112610164576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461016457602061078461077b36610d4c565b92919091611025565b6040519015158152f35b346101645760203660031901126101645760206107a9610ce6565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610164576107f036610d4c565b6040516354c560bd60e11b8152909391905f816004816001600160a01b0387165afa908115610231575f916108ae575b508051935f5b85811061082f57005b6001600160a01b036108418285610f7f565b5151169060206108518286610f7f565b51015191803b1561016457855f9185838a6108848e98604051998a978896879563ea6b97a560e01b875260048701610feb565b03925af19182156102315760019261089e575b5001610826565b5f6108a891610d9a565b88610897565b6108c291503d805f833e6102518183610d9a565b85610820565b34610164576040366003190112610164576108e1610cfc565b6001600160a01b036108f161152e565b166001600160a01b0382160361090d5761016290600435611485565b63334bd91960e11b5f5260045ffd5b346101645760403660031901126101645761016260043561093b610cfc565b906109616102a5825f525f5160206115c75f395f51905f52602052600160405f20015490565b6113d4565b346101645761097436610d12565b6040516354c560bd60e11b81529192905f836004816001600160a01b0386165afa928315610231575f93610a2f575b508251925f5b8481106109b257005b6001600160a01b036109c48284610f7f565b5151169060206109d48285610f7f565b51015191803b1561016457845f91898389610a05604051988996879586946310efe2a560e01b865260048601610fb7565b03925af191821561023157600192610a1f575b50016109a9565b5f610a2991610d9a565b87610a18565b610a449193503d805f833e6102518183610d9a565b91846109a3565b34610164576020366003190112610164576020610a826004355f525f5160206115c75f395f51905f52602052600160405f20015490565b604051908152f35b34610164576020366003190112610164576001600160a01b03610aab610ce6565b165f525f602052602060ff60405f2054166040519015158152f35b34610164576020366003190112610164576004356001600160401b03811161016457610af6903690600401610cb6565b90610aff611228565b5f5b828110610b0a57005b6001600160a01b03610b20610309838686610e30565b16801561071557805f525f60205260ff60405f205416610703575f818152602081905260409020805460ff1916600190811790915591906001600160a01b03610b6761152e565b16907f0f3a9500f0f26c009c928e123e0f7bee0ecd4caa7b6010581f85e7b28794c1275f80a301610b01565b346101645760203660031901126101645760043563ffffffff60e01b811680910361016457602090637d84485d60e01b8114908115610c0a575b8115610bdf575b506040519015158152f35b637965db0b60e01b811491508115610bf9575b5082610bd4565b6301ffc9a760e01b14905082610bf2565b63118f21f760e31b81149150610bcd565b34610164576020366003190112610164576004356001600160401b03811161016457610c4b903690600401610cb6565b5f5b818110610c5657005b610c64610309828486610de6565b90610c70818486610de6565b602081013590601e19813603018212156101645701918235926001600160401b0384116101645760200192803603841361016457600193610cb092611128565b01610c4d565b9181601f84011215610164578235916001600160401b038311610164576020808501948460051b01011161016457565b600435906001600160a01b038216820361016457565b602435906001600160a01b038216820361016457565b6060906003190112610164576004356001600160a01b038116810361016457906024356001600160a01b0381168103610164579060443590565b6080906003190112610164576004356001600160a01b038116810361016457906024356001600160a01b038116810361016457906044356001600160a01b0381168103610164579060643590565b90601f801991011681019081106001600160401b03821117610dbb57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b038111610dbb5760051b60200190565b9190811015610e085760051b81013590603e1981360301821215610164570190565b634e487b7160e01b5f52603260045260245ffd5b356001600160a01b03811681036101645790565b9190811015610e085760051b0190565b602081830312610164578051906001600160401b03821161016457019080601f8301121561016457815191610e7483610dcf565b92610e826040519485610d9a565b80845260208085019160051b830101918383116101645760208101915b838310610eae57505050505090565b82516001600160401b038111610164578201906040828703601f1901126101645760405191604083018381106001600160401b03821117610dbb5760405260208101516001600160a01b038116810361016457835260408101516001600160401b0381116101645760209101019086601f83011215610164578151926001600160401b038411610dbb57604051610f4f601f8601601f191660200182610d9a565b8481528860208686010111610164575f6020868197828098018386015e8301015283820152815201920191610e9f565b8051821015610e085760209160051b010190565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6001600160a01b039182168152911660208201526040810191909152608060608201819052610fe892910190610f93565b90565b6001600160a01b03918216815291811660208301529091166040820152606081019190915260a060808201819052610fe892910190610f93565b909160018060a01b0381165f525f60205260ff60405f20541661111f576040516354c560bd60e11b81525f816004816001600160a01b0387165afa908115610231575f91611105575b508051935f5b8581106110875750505050505050600190565b6001600160a01b036110998285610f7f565b5151169060206110a98286610f7f565b51015191803b156101645760405163ddfcf37760e01b8152925f918491829081906110db908e8c8b8f60048701610feb565b03915afa918215610231576001926110f5575b5001611074565b5f6110ff91610d9a565b5f6110ee565b61111991503d805f833e6102518183610d9a565b5f61106e565b50505050600190565b6001600160a01b0316908115610715576040516301ffc9a760e01b8152638c30a94360e01b6004820152602081602481865afa5f91816111eb575b5061117757631bb2296560e31b5f5260045ffd5b156111dc57813b15610164575f91839160446040518096819582946334ba7ac760e11b845260206004850152816024850152848401378181018301879052601f01601f191681010301915afa8015610231576111d05750565b5f6111da91610d9a565b565b631bb2296560e31b5f5260045ffd5b9091506020813d602011611220575b8161120760209383610d9a565b810103126101645751801515810361016457905f611163565b3d91506111fa565b61123061152e565b6001600160a01b0381165f9081527fe8bf0762f5377f8b8340c486ee15f5ce9fad20a5b6c8702048ea00d950b82bd2602052604090205460ff16156112725750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004527feaeeb45c1b9029a6e392e1e7aa6f4af6bd8111f85c32809598bc9903a16227a3602452604490fd5b6112be61152e565b815f525f5160206115c75f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f205416156112f5575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166113cf576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff1916600117905561139a61152e565b16906001600160a01b03165f7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b5f8181525f5160206115c75f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1661147f575f8181525f5160206115c75f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff1916600117905561144a61152e565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f8181525f5160206115c75f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff161561147f575f8181525f5160206115c75f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff191690556114f961152e565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611590575b1561158c576013193601368111611578573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b506014361015611560565b60ff5f5160206115e75f395f51905f525460401c16156115b757565b631afcd79f60e31b5f5260045ffdfe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "2477:19789:117:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;14385:7;2477:19789;;14385:7;;:::i;:::-;2477:19789;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;11846:34:117;;2477:19789;;;;;;;-1:-1:-1;;;;;2477:19789:117;;11846:34;;;;;;;2477:19789;11846:34;;;2477:19789;;;;11951:13;2477:19789;11966:21;;;;;;2477:19789;11951:13;-1:-1:-1;;;;;12027:14:117;;;;:::i;:::-;;2477:19789;;12080:14;:21;:14;;;;:::i;:::-;;:21;;12004:98;;;;;;2477:19789;;;;;;12004:98;2477:19789;;;;;;;;;;;;12004:98;;2477:19789;12004:98;;;:::i;:::-;;;;;;;;;;2477:19789;12004:98;;;11951:13;2477:19789;;11951:13;;12004:98;2477:19789;12004:98;;;:::i;:::-;;;;;2477:19789;;;;;;;;;11846:34;;;;;;;2477:19789;11846:34;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;2477:19789;;;;;;-1:-1:-1;;2477:19789:117;;;;5767:26:195;2477:19789:117;;;;:::i;:::-;5737:18:195;3202:4;5737:18;;-1:-1:-1;2477:19789:117;-1:-1:-1;;;;;;;;;;;2477:19789:117;;4919:24:195;2477:19789:117;-1:-1:-1;2477:19789:117;4919:24:195;2477:19789:117;4759:191:195;;5737:18;3202:4;:::i;:::-;5767:26;:::i;2477:19789:117:-;;;;;;-1:-1:-1;;2477:19789:117;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;:::i;:::-;3202:4:195;;;:::i;:::-;2477:19789:117;7877:18;;;;;;2477:19789;7862:13;-1:-1:-1;;;;;7930:11:117;;;;;;:::i;:::-;;:::i;:::-;2477:19789;;;;;;;;;;;;;7959:28;7955:72;;2477:19789;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;-1:-1:-1;;;;;21452:38:117;;:::i;:::-;2477:19789;8096:51;;2477:19789;8096:51;;2477:19789;7862:13;;7955:72;6262:31;;;2477:19789;7996:31;2477:19789;;;;7996:31;2477:19789;;;;;;-1:-1:-1;;2477:19789:117;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;;;4301:16:199;2477:19789:117;-1:-1:-1;;;;;2477:19789:117;;4724:16:199;;:34;;;;2477:19789:117;4803:1:199;4788:16;:50;;;;2477:19789:117;4853:13:199;:30;;;;2477:19789:117;4849:91:199;;;-1:-1:-1;;2477:19789:117;;4803:1:199;2477:19789:117;-1:-1:-1;;;;;;;;;;;2477:19789:117;;4977:67:199;;2477:19789:117;6891:76:199;;;:::i;:::-;;;:::i;:::-;2477:19789:117;5092:3;2477:19789;;5066:24;;;;;4803:1:199;;5111:48:117;-1:-1:-1;;;;;5142:16:117;2477:19789;5142:16;;:::i;:::-;2477:19789;;5111:48;:::i;:::-;;2477:19789;5051:13;;5066:24;;5064:101:199;;2477:19789:117;5064:101:199;2477:19789:117;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;-1:-1:-1;;;;;;;;;;;2477:19789:117;5140:14:199;2477:19789:117;;;4803:1:199;2477:19789:117;;5140:14:199;2477:19789:117;4977:67:199;-1:-1:-1;;2477:19789:117;;;-1:-1:-1;;;;;;;;;;;2477:19789:117;4977:67:199;;;4849:91;4906:23;;;2477:19789:117;4906:23:199;2477:19789:117;;4906:23:199;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:199;;4724:34;;;-1:-1:-1;4724:34:199;;2477:19789:117;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;;3901:31:195;2477:19789:117;;;;;;-1:-1:-1;2477:19789:117;;;;;;-1:-1:-1;2477:19789:117;;;;;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;:::i;:::-;3202:4:195;;:::i;:::-;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;6225:28;6221:72;;2477:19789;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;-1:-1:-1;;;;;21452:38:117;;:::i;:::-;2477:19789;6354:51;;2477:19789;6354:51;;2477:19789;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;:::i;:::-;3202:4:195;;:::i;:::-;-1:-1:-1;;;;;2477:19789:117;5632:21;;5628:57;;2477:19789;;;;;;;;;;;;5695:75;;2477:19789;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;5811:4;2477:19789;;;-1:-1:-1;;;;;21452:38:117;;:::i;:::-;2477:19789;5830:47;;2477:19789;5830:47;;2477:19789;5695:75;7163:35;;;2477:19789;5735:35;2477:19789;;;;5735:35;5628:57;7086:23;;;2477:19789;5662:23;2477:19789;;5662:23;2477:19789;;;;;;-1:-1:-1;;2477:19789:117;;;;;;1830:17:198;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;;:::i;:::-;;;1830:17:198;-1:-1:-1;;;;;2477:19789:117;;;;;2054:31:198;;;;2477:19789:117;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;10116:34:117;;2477:19789;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;10116:34;;;;;;;2477:19789;10116:34;;;2477:19789;;;;10221:13;2477:19789;10236:21;;;;;;2477:19789;10221:13;-1:-1:-1;;;;;10519:14:117;;;;:::i;:::-;;2477:19789;;10600:14;:21;:14;;;;:::i;:::-;;:21;;10496:139;;;;;;2477:19789;;;;;;10496:139;2477:19789;;;;;;;;;;;;;;10496:139;;2477:19789;10496:139;;;:::i;:::-;;;;;;;;;;2477:19789;10496:139;;;10221:13;2477:19789;;10221:13;;10496:139;2477:19789;10496:139;;;:::i;:::-;;;;10116:34;;;;;;2477:19789;10116:34;;;;;;:::i;:::-;;;;2477:19789;;;;;;-1:-1:-1;;2477:19789:117;;;;;;:::i;:::-;-1:-1:-1;;;;;21452:38:117;;:::i;:::-;2477:19789;-1:-1:-1;;;;;2477:19789:117;;6441:34:195;6437:102;;6549:37;2477:19789:117;;;6549:37:195;:::i;6437:102::-;6498:30;;;2477:19789:117;6498:30:195;2477:19789:117;;6498:30:195;2477:19789:117;;;;;;-1:-1:-1;;2477:19789:117;;;;5350:25:195;2477:19789:117;;;;:::i;:::-;5320:18:195;3202:4;5320:18;;-1:-1:-1;2477:19789:117;-1:-1:-1;;;;;;;;;;;2477:19789:117;;4919:24:195;2477:19789:117;-1:-1:-1;2477:19789:117;4919:24:195;2477:19789:117;4759:191:195;;3202:4;5350:25;:::i;2477:19789:117:-;;;;;;;:::i;:::-;;;-1:-1:-1;;;13085:34:117;;2477:19789;;;;;;;-1:-1:-1;;;;;2477:19789:117;;13085:34;;;;;;;2477:19789;13085:34;;;2477:19789;;;;13190:13;2477:19789;13205:21;;;;;;2477:19789;13190:13;-1:-1:-1;;;;;13266:14:117;;;;:::i;:::-;;2477:19789;;13323:14;:21;:14;;;;:::i;:::-;;:21;;13243:102;;;;;;2477:19789;;;;;;13243:102;2477:19789;;;;;;;;;;;;13243:102;;2477:19789;13243:102;;;:::i;:::-;;;;;;;;;;2477:19789;13243:102;;;13190:13;2477:19789;;13190:13;;13243:102;2477:19789;13243:102;;;:::i;:::-;;;;13085:34;;;;;;;2477:19789;13085:34;;;;;;:::i;:::-;;;;;2477:19789;;;;;;-1:-1:-1;;2477:19789:117;;;;;;;;-1:-1:-1;2477:19789:117;-1:-1:-1;;;;;;;;;;;2477:19789:117;;4919:24:195;2477:19789:117;-1:-1:-1;2477:19789:117;4919:24:195;2477:19789:117;4759:191:195;;2477:19789:117;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;-1:-1:-1;;;;;2477:19789:117;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;:::i;:::-;3202:4:195;;;:::i;:::-;2477:19789:117;6974:18;;;;;;2477:19789;6959:13;-1:-1:-1;;;;;7027:11:117;;;;;;:::i;:::-;2477:19789;7056:21;;7052:57;;2477:19789;;;;;;;;;;;;7123:75;;2477:19789;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;7243:4;2477:19789;;;;;;7243:4;2477:19789;-1:-1:-1;;;;;21452:38:117;;:::i;:::-;2477:19789;7266:47;;2477:19789;7266:47;;2477:19789;6959:13;;2477:19789;;;;;;-1:-1:-1;;2477:19789:117;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20751:49:117;;;:122;;;;2477:19789;20751:162;;;;2477:19789;;;;;;;;;;20751:162;-1:-1:-1;;;3551:47:195;;;-1:-1:-1;3551:87:195;;;;20751:162:117;;;;;3551:87:195;-1:-1:-1;;;1134:40:208;;-1:-1:-1;3551:87:195;;;20751:122:117;-1:-1:-1;;;20816:57:117;;;-1:-1:-1;20751:122:117;;2477:19789;;;;;;-1:-1:-1;;2477:19789:117;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;:::i;:::-;;15278:15;;;;;;2477:19789;15263:13;15335:16;:9;;;;;:::i;:16::-;15353:9;;;;;;:::i;:::-;2477:19789;15353:16;;2477:19789;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;15353:16;;;;:::i;:::-;2477:19789;15263:13;;2477:19789;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;:::o;:::-;;;;-1:-1:-1;2477:19789:117;;;;;-1:-1:-1;2477:19789:117;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2477:19789:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2477:19789:117;;;;;;;;-1:-1:-1;;2477:19789:117;;;;:::o;:::-;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16783:1278::-;;;2477:19789;;;;;;;;;;;;;;;;;;17092:65;;2477:19789;;-1:-1:-1;;;17319:34:117;;2477:19789;;17319:34;2477:19789;-1:-1:-1;;;;;2477:19789:117;;17319:34;;;;;;;2477:19789;17319:34;;;16783:1278;2477:19789;;;17424:13;2477:19789;17439:21;;;;;;18043:11;;;;;;;2477:19789;16783:1278;:::o;17424:13::-;-1:-1:-1;;;;;17744:14:117;;;;:::i;:::-;;2477:19789;;17825:14;2477:19789;17825:14;;;;:::i;:::-;;:21;;17721:139;;;;;;2477:19789;;-1:-1:-1;;;17721:139:117;;2477:19789;;;;;;;;;17721:139;;2477:19789;;;;17319:34;17721:139;;;:::i;:::-;;;;;;;;;;2477:19789;17721:139;;;17424:13;2477:19789;;17424:13;;17721:139;2477:19789;17721:139;;;:::i;:::-;;;;17319:34;;;;;;2477:19789;17319:34;;;;;;:::i;:::-;;;;17092:65;17135:11;;;;17142:4;17135:11;:::o;19000:1200::-;-1:-1:-1;;;;;2477:19789:117;;19102:21;;19098:57;;2477:19789;;-1:-1:-1;;;19440:76:117;;-1:-1:-1;;;19440:76:117;;;2477:19789;;;19440:76;2477:19789;19440:76;;;19121:1;;19440:76;;;19000:1200;-1:-1:-1;19436:383:117;;19597:15;;;19121:1;19724:15;19440:76;19121:1;19724:15;19436:383;19560:10;19556:130;;20134:59;;;;;19121:1;2477:19789;;;;;;;;;;;;;;;20134:59;;2477:19789;19440:76;20134:59;;2477:19789;;19440:76;2477:19789;;;;;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;20134:59;;;;;;;;;;;19000:1200;:::o;20134:59::-;19121:1;20134:59;;;:::i;:::-;19000:1200::o;19556:130::-;19597:15;;;19121:1;19597:15;19440:76;19121:1;19597:15;19440:76;;;;2477:19789;19440:76;;2477:19789;19440:76;;;;;;2477:19789;19440:76;;;:::i;:::-;;;2477:19789;;;;;;;;;;;;19440:76;;;;;;;-1:-1:-1;19440:76:117;;4148:103:195;21452:38:117;;:::i;:::-;-1:-1:-1;;;;;2477:19789:117;;-1:-1:-1;2477:19789:117;;;;;;;;;;;;4468:23:195;4464:108;;4148:103;:::o;4464:108::-;-1:-1:-1;;;;4514:47:195;;;-1:-1:-1;;;;;2477:19789:117;;;;4514:47:195;2477:19789:117;3621:37:110;2477:19789:117;;;;4514:47:195;4148:103;21452:38:117;;:::i;:::-;2477:19789;-1:-1:-1;2477:19789:117;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;-1:-1:-1;2477:19789:117;;;;;;;;-1:-1:-1;2477:19789:117;;;;;-1:-1:-1;2477:19789:117;;;4468:23:195;4464:108;;4148:103;;:::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:195;2477:19789:117;;;;;;4514:47:195;2477:19789:117;;;;-1:-1:-1;4514:47:195;7270:387;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;21452:38;;:::i;:::-;2477:19789;;-1:-1:-1;;;;;2477:19789:117;;7532:40:195;2477:19789:117;;7532:40:195;7509:4;7586:11;:::o;7432:219::-;7628:12;2477:19789:117;7628:12:195;:::o;7270:387::-;2477:19789:117;;;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;;;21452:38;;:::i;:::-;2477:19789;;-1:-1:-1;;;;;2477:19789:117;;7532:40:195;2477:19789:117;;7532:40:195;7509:4;7586:11;:::o;7432:219::-;7628:12;;2477:19789:117;7628:12:195;:::o;7894:388::-;2477:19789:117;;;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;;;;;-1:-1:-1;;;;;2477:19789:117;;;;;;;;;;;;-1:-1:-1;;2477:19789:117;;;21452:38;;:::i;:::-;2477:19789;;-1:-1:-1;;;;;2477:19789:117;;8157:40:195;2477:19789:117;;8157:40:195;2477:19789:117;8211:11:195;:::o;2329:429:198:-;2545:10;1830:17;-1:-1:-1;;;;;2477:19789:117;2054:31:198;;2526:71;;2329:429;2522:230;;;2477:19789:117;;2435:8:198;2477:19789:117;2435:8:198;2477:19789:117;;;;;;;;2613:72:198:o;2477:19789:117:-;;;;;;;;;;;;2522:230:198;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;;7082:141:199;2477:19789:117;-1:-1:-1;;;;;;;;;;;2477:19789:117;;;;7148:18:199;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:199;;-1:-1:-1;7189:17:199",
    "linkReferences": {},
    "immutableReferences": {
      "46773": [
        {
          "start": 1849,
          "length": 32
        },
        {
          "start": 1966,
          "length": 32
        },
        {
          "start": 5425,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "addMultipleToBypassList(address[])": "03792104",
    "addToBypassList(address)": "882f1ea8",
    "areValidComplianceModules((address,bytes)[])": "00fdecdb",
    "canTransfer(address,address,address,uint256)": "6d62a4fe",
    "created(address,address,uint256)": "e2677662",
    "destroyed(address,address,uint256)": "292d4803",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address[])": "a224cee7",
    "isBypassed(address)": "204b6001",
    "isTrustedForwarder(address)": "572b6c05",
    "isValidComplianceModule(address,bytes)": "e50bcad3",
    "removeFromBypassList(address)": "8a668634",
    "removeMultipleFromBypassList(address[])": "ad02d621",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferred(address,address,address,uint256)": "3e5af4ca",
    "trustedForwarder()": "7da0a877"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressAlreadyOnBypassList\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressNotOnBypassList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidModule\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddressAddedToBypassList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddressRemovedFromBypassList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"addMultipleToBypassList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBypassList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct SMARTComplianceModuleParamPair[]\",\"name\":\"_pairs\",\"type\":\"tuple[]\"}],\"name\":\"areValidComplianceModules\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"initialAdmins\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBypassed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"isValidComplianceModule\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBypassList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"removeMultipleFromBypassList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"It acts as a central orchestrator for compliance checks related to ATK tokens (which implement the `IATK` interface). When a ATK token operation occurs (like a transfer, creation, or destruction of tokens), this compliance contract is notified. It then iterates through all compliance modules registered with that specific token and calls the relevant functions (hooks) on each module. For example, before a transfer, it checks `canTransfer` on all modules. After a transfer, it calls `transferred`. This contract is designed to be used behind a proxy (like `SMARTComplianceProxy`) to allow its logic to be upgraded. It supports meta-transactions via `ERC2771ContextUpgradeable` allowing a trusted forwarder to pay for gas fees. It also implements `ERC165Upgradeable` for interface detection. Additionally, it implements a bypass list functionality that allows certain addresses (mainly contracts) to bypass compliance checks when they are the sender or receiver of a transfer.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidModule()\":[{\"details\":\"This error is typically reverted when a contract address provided as a compliance module does not correctly implement the `ISMARTComplianceModule` interface, or if the interface check fails.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ZeroAddressNotAllowed()\":[{\"details\":\"This error is typically reverted when a contract address provided as a compliance module does not correctly implement the `ISMARTComplianceModule` interface, or if the interface check fails.\"}]},\"events\":{\"AddressAddedToBypassList(address,address)\":{\"params\":{\"account\":\"The address that was added to the bypass list.\",\"manager\":\"The address that performed the addition.\"}},\"AddressRemovedFromBypassList(address,address)\":{\"params\":{\"account\":\"The address that was removed from the bypass list.\",\"manager\":\"The address that performed the removal.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"addMultipleToBypassList(address[])\":{\"details\":\"Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function. This is a gas-efficient way to add multiple addresses to the bypass list at once.\",\"params\":{\"accounts\":\"Array of addresses to add to the bypass list\"}},\"addToBypassList(address)\":{\"details\":\"Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function. Bypassed addresses can bypass compliance checks in canTransfer function.\",\"params\":{\"account\":\"The address to add to the bypass list\"}},\"areValidComplianceModules((address,bytes)[])\":{\"details\":\"This function iterates through the provided array and calls `_validateModuleAndParams` for each pair. If any module/parameter pair in the array is invalid, the entire function call will revert. This is useful for validating a set of modules before registering them with a token.\",\"params\":{\"_pairs\":\"An array of `SMARTComplianceModuleParamPair` structs. Each struct contains a module address and its ABI-encoded parameters.\"}},\"canTransfer(address,address,address,uint256)\":{\"details\":\"This function is typically called by an `ISMART` token contract *before* a transfer is executed. It first checks if either the sender or receiver is on the bypass list - if so, the transfer is automatically allowed. Otherwise, it retrieves all compliance modules registered for the `_token` and calls the `canTransfer` view function on each module. If *any* of the modules revert during their `canTransfer` check (indicating the transfer is not allowed by that module), this entire function call will also revert, signaling that the transfer is not compliant. If all modules allow the transfer (i.e., none of them revert), this function returns `true`.\",\"params\":{\"_amount\":\"The quantity of tokens proposed to be transferred.\",\"_from\":\"The address from which tokens would be transferred.\",\"_to\":\"The address to which tokens would be transferred.\",\"_token\":\"The address of the `ISMART` token contract for which the compliance check is being performed.\"},\"returns\":{\"_0\":\"`true` if all registered compliance modules allow the transfer, otherwise the function reverts.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor This annotation is used by OpenZeppelin Upgrades plugins to acknowledge that this constructor is part of an upgradeable contract pattern and is handled correctly.\",\"details\":\"This constructor is specific to OpenZeppelin's upgradeable contracts pattern. It initializes the `ERC2771ContextUpgradeable` with the address of a trusted forwarder for meta-transactions. The `_disableInitializers()` call is crucial for upgradeable contracts; it ensures that the `initialize` function cannot be called on the implementation contract directly after deployment, reserving it for the proxy context.\",\"params\":{\"trustedForwarder\":\"The address of the ERC-2771 trusted forwarder contract. This allows users to interact with this contract without paying gas fees directly, if the forwarder is set up to relay their transactions.\"}},\"created(address,address,uint256)\":{\"details\":\"This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `created` function, passing along the creation details. This allows modules to react to token creation events. It is critical that this function is only callable by the `ISMART` token contract.\",\"params\":{\"_amount\":\"The quantity of tokens that were created.\",\"_to\":\"The address to which the new tokens were minted.\",\"_token\":\"The address of the `ISMART` token contract where tokens were created.\"}},\"destroyed(address,address,uint256)\":{\"details\":\"This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `destroyed` function, passing along the destruction details. This allows modules to react to token destruction events. It is critical that this function is only callable by the `ISMART` token contract.\",\"params\":{\"_amount\":\"The quantity of tokens that were destroyed.\",\"_from\":\"The address from which tokens were burned.\",\"_token\":\"The address of the `ISMART` token contract from which tokens were destroyed.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address[])\":{\"details\":\"This function is called once to set up the initial state of the contract. It initializes the ERC165 interface detection capability and sets up AccessControl with the deployer as the default admin. For upgradeable contracts, initializers replace constructors for setup logic. The `initializer` modifier ensures this function can only be called once.\",\"params\":{\"initialAdmins\":\"The addresses of the initial admins.\"}},\"isBypassed(address)\":{\"params\":{\"account\":\"The address to check\"},\"returns\":{\"_0\":\"True if the address is on the bypass list, false otherwise\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"isValidComplianceModule(address,bytes)\":{\"details\":\"This function calls the internal `_validateModuleAndParams` helper. It's a view function, meaning it doesn't change state and can be called without gas costs (if called externally). It will revert if the module is invalid (e.g., doesn't support `ISMARTComplianceModule` interface or parameters are incorrect for the module).\",\"params\":{\"_module\":\"The address of the compliance module contract to validate.\",\"_params\":\"The ABI-encoded parameters intended for this specific module. Each module defines how its parameters should be structured and validated.\"}},\"removeFromBypassList(address)\":{\"details\":\"Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\",\"params\":{\"account\":\"The address to remove from the bypass list\"}},\"removeMultipleFromBypassList(address[])\":{\"details\":\"Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\",\"params\":{\"accounts\":\"Array of addresses to remove from the bypass list\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Announces support for ISMARTCompliance and IATKComplianceBypassList interfaces\",\"params\":{\"interfaceId\":\"The interface identifier to check\"},\"returns\":{\"_0\":\"True if the interface is supported, false otherwise\"}},\"transferred(address,address,address,uint256)\":{\"details\":\"This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `transferred` function, passing along the transfer details. This allows modules to react to transfers, for example, by updating internal state or logging. It is critical that this function is only callable by the `ISMART` token contract it is associated with to prevent unauthorized notifications. The current implementation assumes this restriction is handled by the token contract itself.\",\"params\":{\"_amount\":\"The quantity of tokens that were transferred.\",\"_from\":\"The address from which tokens were transferred. This will be `address(0)` for token minting/creation events.\",\"_to\":\"The address to which tokens were transferred. This will be `address(0)` for token burning/destruction events.\",\"_token\":\"The address of the `ISMART` token contract that performed the transfer.\"}},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_bypassedAddresses\":{\"details\":\"When an address is on the bypass list, transfers involving this address (as sender or receiver) will skip compliance module checks in the `canTransfer` function\"}},\"title\":\"ATK Compliance Contract Implementation\",\"version\":1},\"userdoc\":{\"errors\":{\"AddressAlreadyOnBypassList(address)\":[{\"notice\":\"Error thrown when trying to add an address that is already on the bypass list.\"}],\"AddressNotOnBypassList(address)\":[{\"notice\":\"Error thrown when trying to remove an address that is not on the bypass list.\"}],\"InvalidModule()\":[{\"notice\":\"Error indicating that a provided address is not a valid compliance module.\"}],\"ZeroAddressNotAllowed()\":[{\"notice\":\"Error indicating that a provided address is not a valid compliance module.\"}]},\"events\":{\"AddressAddedToBypassList(address,address)\":{\"notice\":\"Emitted when an address is added to the compliance bypass list.\"},\"AddressRemovedFromBypassList(address,address)\":{\"notice\":\"Emitted when an address is removed from the compliance bypass list.\"}},\"kind\":\"user\",\"methods\":{\"addMultipleToBypassList(address[])\":{\"notice\":\"Adds multiple addresses to the compliance bypass list in a single transaction\"},\"addToBypassList(address)\":{\"notice\":\"Adds an address to the compliance bypass list\"},\"areValidComplianceModules((address,bytes)[])\":{\"notice\":\"Checks if an array of compliance module and parameter pairs are all valid.\"},\"canTransfer(address,address,address,uint256)\":{\"notice\":\"Checks if a proposed token transfer is compliant with all registered modules for a given token.\"},\"constructor\":{\"notice\":\"Constructor for the compliance implementation contract.\"},\"created(address,address,uint256)\":{\"notice\":\"Called by an `ISMART` token contract after new tokens have been successfully created (minted).\"},\"destroyed(address,address,uint256)\":{\"notice\":\"Called by an `ISMART` token contract after tokens have been successfully destroyed (burned).\"},\"initialize(address[])\":{\"notice\":\"Initializes the compliance contract after it has been deployed (typically via a proxy).\"},\"isBypassed(address)\":{\"notice\":\"Checks if an address is on the bypass list\"},\"isValidComplianceModule(address,bytes)\":{\"notice\":\"Checks if a single given module address and its associated parameters are valid.\"},\"removeFromBypassList(address)\":{\"notice\":\"Removes an address from the compliance bypass list\"},\"removeMultipleFromBypassList(address[])\":{\"notice\":\"Removes multiple addresses from the compliance bypass list in a single transaction\"},\"supportsInterface(bytes4)\":{\"notice\":\"Override supportsInterface to support ERC165 interface detection\"},\"transferred(address,address,address,uint256)\":{\"notice\":\"Called by an `ISMART` token contract after a token transfer has successfully occurred.\"}},\"notice\":\"This contract is the upgradeable logic implementation for the main compliance functionality within the ATK Protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/compliance/ATKComplianceImplementation.sol\":\"ATKComplianceImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/\",\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.2.0/=dependencies/@openzeppelin-contracts-upgradeable-5.2.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@smartprotocol-v0.0.1/=dependencies/@smartprotocol-v0.0.1/contracts/\",\":eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/\",\":forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/\",\":forge-std-1.9.6/=dependencies/forge-std-1.9.6/src/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\",\":hardhat/=dependencies/smart-protocol-8.0.8/node_modules/hardhat/\",\":openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\",\":smart-protocol-8.0.10/=dependencies/smart-protocol-8.0.10/contracts/\",\":smart-protocol-8.0.5/=dependencies/smart-protocol-8.0.5/contracts/\",\":smart-protocol-8.0.7/=dependencies/smart-protocol-8.0.7/contracts/\",\":smart-protocol-8.0.8/=dependencies/smart-protocol-8.0.8/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/smart/interface/ERC-3643/IERC3643IdentityRegistryStorage.sol\":{\"keccak256\":\"0x3a8a72df8da5bf4d988bbfb00151b933ff17cdc8d4be47dc121cd9e2083ba86f\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://369250658bf8d3ebb583946820afa494271ce6bfde607d15c7060cdf7a303cf3\",\"dweb:/ipfs/QmSJjaK6vyv8K9RX1k3rwxsoKfVNyMoHEszxyxdTQfDKQG\"]},\"contracts/smart/interface/ERC-3643/IERC3643TrustedIssuersRegistry.sol\":{\"keccak256\":\"0x15b72940814cd959b57bf75623f16c51fc6c50eab51fd2420a8b653519ebd76c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://479f5e24a1b608776d9d5d7da9c76dd3c9b1dd300d8b4eee7a15dcfba4817bee\",\"dweb:/ipfs/QmPhMBfQAqt5NeRcSu3jDTwhoQXnB7nXNEcmoJ7KoWVt7V\"]},\"contracts/smart/interface/ISMART.sol\":{\"keccak256\":\"0xfce323160dd5cd8c9db34de0ea872bec41fd2ea8d8496e1e3c17865d374994da\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://1a1fafbdec0c59e078798438d2a3cd05bd70b864d7dfa67faf135d5634c5ae51\",\"dweb:/ipfs/QmehZwexgZN2BZKA6eFrG3DHUMRUZnzYTen6j5Ry5Znbf2\"]},\"contracts/smart/interface/ISMARTCompliance.sol\":{\"keccak256\":\"0x948341e4ad374e1dded6d1b30c395ad0f01e6ea2099fb6b96c5476e8b28c1d77\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://d261e9a0c8682f11ac86048f13e367caee6d5f512d51b8752186b8c01b6ba618\",\"dweb:/ipfs/Qmdp14emh3NFSAphyuAgsTE7qZt1g1UYcNLS3tNNM8T6Hv\"]},\"contracts/smart/interface/ISMARTComplianceModule.sol\":{\"keccak256\":\"0x0506b3696a61f59ebb32ffb0fcb1c955c3c76e1ab9f85440cf5562a800490c6e\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://2aef21997c167cf1dc9430b232e0dcddd6316f945f44e2ebe943241c2c257896\",\"dweb:/ipfs/Qmbp5MEoHkBMTTreXYoxjKohVVbEPBtcwX1QPfLHv71FxQ\"]},\"contracts/smart/interface/ISMARTIdentityRegistry.sol\":{\"keccak256\":\"0x62a95a9db2ac97ceaf59f7585d7bbaf3acb65ed9b5e57597b9d1fe1b4d7c4eda\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://bd870710359396db48e70ef7e40449125ff744c6c8ce15ad7e1894df430c87ea\",\"dweb:/ipfs/QmZ6khf5Vm6hBkkUgYC1b161jSQaZeegJVRY6ndjRW1EcG\"]},\"contracts/smart/interface/ISMARTIdentityRegistryStorage.sol\":{\"keccak256\":\"0x219b3d03958859e2f082aac5cbf3b40acf243e326ee6e74e6bb03be7724c2985\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://8cf8d30ec47cb2aed5b51d373837584fb6f08deab1d35142510271e733404f52\",\"dweb:/ipfs/Qmc9NnABx9ouhhCR8qgJC3RtU5oAyycSjZkY6nGtuWFwuz\"]},\"contracts/smart/interface/ISMARTTopicSchemeRegistry.sol\":{\"keccak256\":\"0xec5e42dcf7d929f8a0db42c9c8a0fa81d089a9f7177b7da10df029f94334ca8a\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://e346e3241e3110b3f17d2b244a49d68a1d79c6928bef7d372ea3458c1029cea0\",\"dweb:/ipfs/QmeSyCYN9qYXRjn799fRFP7X9apf7bubVhnFEUGQatx3xd\"]},\"contracts/smart/interface/structs/SMARTComplianceModuleParamPair.sol\":{\"keccak256\":\"0x489a55538b554a0c935bee7efc28f7e821e161638c5726c9d367a644a0b7c62a\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://04bb06aed3ee3c5c6f3df9a59721c08ddd57b5521da1c9c6fd96b7c8b57db813\",\"dweb:/ipfs/QmRuzqKDr2sBHNuQhCzWGa8euNiMyvP7LTjSFjvAj5uFqh\"]},\"contracts/system/ATKSystemRoles.sol\":{\"keccak256\":\"0x7c5a50fcea7ee061d1bf5451217fbf83cfbc42cae638a0de4b8fc41fa5d7d980\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://8dc4128ddb017dfd71ff70bd4b292bcf5e60ae6f81a07b1ceb15439607bb93c0\",\"dweb:/ipfs/QmWJpzgR3YuLvRXZPdFzvyZ1mHAyV3fhSUMcdFG4QJ3xzx\"]},\"contracts/system/compliance/ATKComplianceImplementation.sol\":{\"keccak256\":\"0xe9937ddb94a898ae574d6a2045ad06e90287a1062d76fc340a70c63fb5af69f9\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://0079da9747c017fb39d6fbbfaac39687568c165100b5a2527803cd255fc0296e\",\"dweb:/ipfs/QmfVJEdvDXmZrMJqbESiEQvW1CjYXPRvtoEDwuWeUZZZiZ\"]},\"contracts/system/compliance/IATKComplianceBypassList.sol\":{\"keccak256\":\"0x5b3d452616a287e6232fb66301b06c53663e0d19588b0cb9fa04a8be9001e4ee\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://9103ec8fd0709a1696269ca441c0ec3f2b88141973d301c7656ae405d75c7b77\",\"dweb:/ipfs/QmbgrEKtfZ3HTBpGugibrMq2DmdoowK5rb2zV1WLLpcfFc\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e\",\"dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb\",\"dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e\",\"dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8\",\"dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trustedForwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressAlreadyOnBypassList"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressNotOnBypassList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidModule"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressAddedToBypassList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressRemovedFromBypassList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addMultipleToBypassList"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addToBypassList"
        },
        {
          "inputs": [
            {
              "internalType": "struct SMARTComplianceModuleParamPair[]",
              "name": "_pairs",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "module",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areValidComplianceModules"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canTransfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "created"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "destroyed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "initialAdmins",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBypassed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_module",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_params",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidComplianceModule"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFromBypassList"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeMultipleFromBypassList"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferred"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addMultipleToBypassList(address[])": {
            "details": "Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function. This is a gas-efficient way to add multiple addresses to the bypass list at once.",
            "params": {
              "accounts": "Array of addresses to add to the bypass list"
            }
          },
          "addToBypassList(address)": {
            "details": "Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function. Bypassed addresses can bypass compliance checks in canTransfer function.",
            "params": {
              "account": "The address to add to the bypass list"
            }
          },
          "areValidComplianceModules((address,bytes)[])": {
            "details": "This function iterates through the provided array and calls `_validateModuleAndParams` for each pair. If any module/parameter pair in the array is invalid, the entire function call will revert. This is useful for validating a set of modules before registering them with a token.",
            "params": {
              "_pairs": "An array of `SMARTComplianceModuleParamPair` structs. Each struct contains a module address and its ABI-encoded parameters."
            }
          },
          "canTransfer(address,address,address,uint256)": {
            "details": "This function is typically called by an `ISMART` token contract *before* a transfer is executed. It first checks if either the sender or receiver is on the bypass list - if so, the transfer is automatically allowed. Otherwise, it retrieves all compliance modules registered for the `_token` and calls the `canTransfer` view function on each module. If *any* of the modules revert during their `canTransfer` check (indicating the transfer is not allowed by that module), this entire function call will also revert, signaling that the transfer is not compliant. If all modules allow the transfer (i.e., none of them revert), this function returns `true`.",
            "params": {
              "_amount": "The quantity of tokens proposed to be transferred.",
              "_from": "The address from which tokens would be transferred.",
              "_to": "The address to which tokens would be transferred.",
              "_token": "The address of the `ISMART` token contract for which the compliance check is being performed."
            },
            "returns": {
              "_0": "`true` if all registered compliance modules allow the transfer, otherwise the function reverts."
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor This annotation is used by OpenZeppelin Upgrades plugins to acknowledge that this constructor is part of an upgradeable contract pattern and is handled correctly.",
            "details": "This constructor is specific to OpenZeppelin's upgradeable contracts pattern. It initializes the `ERC2771ContextUpgradeable` with the address of a trusted forwarder for meta-transactions. The `_disableInitializers()` call is crucial for upgradeable contracts; it ensures that the `initialize` function cannot be called on the implementation contract directly after deployment, reserving it for the proxy context.",
            "params": {
              "trustedForwarder": "The address of the ERC-2771 trusted forwarder contract. This allows users to interact with this contract without paying gas fees directly, if the forwarder is set up to relay their transactions."
            }
          },
          "created(address,address,uint256)": {
            "details": "This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `created` function, passing along the creation details. This allows modules to react to token creation events. It is critical that this function is only callable by the `ISMART` token contract.",
            "params": {
              "_amount": "The quantity of tokens that were created.",
              "_to": "The address to which the new tokens were minted.",
              "_token": "The address of the `ISMART` token contract where tokens were created."
            }
          },
          "destroyed(address,address,uint256)": {
            "details": "This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `destroyed` function, passing along the destruction details. This allows modules to react to token destruction events. It is critical that this function is only callable by the `ISMART` token contract.",
            "params": {
              "_amount": "The quantity of tokens that were destroyed.",
              "_from": "The address from which tokens were burned.",
              "_token": "The address of the `ISMART` token contract from which tokens were destroyed."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize(address[])": {
            "details": "This function is called once to set up the initial state of the contract. It initializes the ERC165 interface detection capability and sets up AccessControl with the deployer as the default admin. For upgradeable contracts, initializers replace constructors for setup logic. The `initializer` modifier ensures this function can only be called once.",
            "params": {
              "initialAdmins": "The addresses of the initial admins."
            }
          },
          "isBypassed(address)": {
            "params": {
              "account": "The address to check"
            },
            "returns": {
              "_0": "True if the address is on the bypass list, false otherwise"
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "isValidComplianceModule(address,bytes)": {
            "details": "This function calls the internal `_validateModuleAndParams` helper. It's a view function, meaning it doesn't change state and can be called without gas costs (if called externally). It will revert if the module is invalid (e.g., doesn't support `ISMARTComplianceModule` interface or parameters are incorrect for the module).",
            "params": {
              "_module": "The address of the compliance module contract to validate.",
              "_params": "The ABI-encoded parameters intended for this specific module. Each module defines how its parameters should be structured and validated."
            }
          },
          "removeFromBypassList(address)": {
            "details": "Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.",
            "params": {
              "account": "The address to remove from the bypass list"
            }
          },
          "removeMultipleFromBypassList(address[])": {
            "details": "Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.",
            "params": {
              "accounts": "Array of addresses to remove from the bypass list"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Announces support for ISMARTCompliance and IATKComplianceBypassList interfaces",
            "params": {
              "interfaceId": "The interface identifier to check"
            },
            "returns": {
              "_0": "True if the interface is supported, false otherwise"
            }
          },
          "transferred(address,address,address,uint256)": {
            "details": "This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `transferred` function, passing along the transfer details. This allows modules to react to transfers, for example, by updating internal state or logging. It is critical that this function is only callable by the `ISMART` token contract it is associated with to prevent unauthorized notifications. The current implementation assumes this restriction is handled by the token contract itself.",
            "params": {
              "_amount": "The quantity of tokens that were transferred.",
              "_from": "The address from which tokens were transferred. This will be `address(0)` for token minting/creation events.",
              "_to": "The address to which tokens were transferred. This will be `address(0)` for token burning/destruction events.",
              "_token": "The address of the `ISMART` token contract that performed the transfer."
            }
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addMultipleToBypassList(address[])": {
            "notice": "Adds multiple addresses to the compliance bypass list in a single transaction"
          },
          "addToBypassList(address)": {
            "notice": "Adds an address to the compliance bypass list"
          },
          "areValidComplianceModules((address,bytes)[])": {
            "notice": "Checks if an array of compliance module and parameter pairs are all valid."
          },
          "canTransfer(address,address,address,uint256)": {
            "notice": "Checks if a proposed token transfer is compliant with all registered modules for a given token."
          },
          "constructor": {
            "notice": "Constructor for the compliance implementation contract."
          },
          "created(address,address,uint256)": {
            "notice": "Called by an `ISMART` token contract after new tokens have been successfully created (minted)."
          },
          "destroyed(address,address,uint256)": {
            "notice": "Called by an `ISMART` token contract after tokens have been successfully destroyed (burned)."
          },
          "initialize(address[])": {
            "notice": "Initializes the compliance contract after it has been deployed (typically via a proxy)."
          },
          "isBypassed(address)": {
            "notice": "Checks if an address is on the bypass list"
          },
          "isValidComplianceModule(address,bytes)": {
            "notice": "Checks if a single given module address and its associated parameters are valid."
          },
          "removeFromBypassList(address)": {
            "notice": "Removes an address from the compliance bypass list"
          },
          "removeMultipleFromBypassList(address[])": {
            "notice": "Removes multiple addresses from the compliance bypass list in a single transaction"
          },
          "supportsInterface(bytes4)": {
            "notice": "Override supportsInterface to support ERC165 interface detection"
          },
          "transferred(address,address,address,uint256)": {
            "notice": "Called by an `ISMART` token contract after a token transfer has successfully occurred."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/",
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.2.0/=dependencies/@openzeppelin-contracts-upgradeable-5.2.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@smartprotocol-v0.0.1/=dependencies/@smartprotocol-v0.0.1/contracts/",
        "eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/",
        "forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/",
        "forge-std-1.9.6/=dependencies/forge-std-1.9.6/src/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/",
        "hardhat/=dependencies/smart-protocol-8.0.8/node_modules/hardhat/",
        "openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/",
        "smart-protocol-8.0.10/=dependencies/smart-protocol-8.0.10/contracts/",
        "smart-protocol-8.0.5/=dependencies/smart-protocol-8.0.5/contracts/",
        "smart-protocol-8.0.7/=dependencies/smart-protocol-8.0.7/contracts/",
        "smart-protocol-8.0.8/=dependencies/smart-protocol-8.0.8/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/compliance/ATKComplianceImplementation.sol": "ATKComplianceImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/smart/interface/ERC-3643/IERC3643IdentityRegistryStorage.sol": {
        "keccak256": "0x3a8a72df8da5bf4d988bbfb00151b933ff17cdc8d4be47dc121cd9e2083ba86f",
        "urls": [
          "bzz-raw://369250658bf8d3ebb583946820afa494271ce6bfde607d15c7060cdf7a303cf3",
          "dweb:/ipfs/QmSJjaK6vyv8K9RX1k3rwxsoKfVNyMoHEszxyxdTQfDKQG"
        ],
        "license": "CC0-1.0"
      },
      "contracts/smart/interface/ERC-3643/IERC3643TrustedIssuersRegistry.sol": {
        "keccak256": "0x15b72940814cd959b57bf75623f16c51fc6c50eab51fd2420a8b653519ebd76c",
        "urls": [
          "bzz-raw://479f5e24a1b608776d9d5d7da9c76dd3c9b1dd300d8b4eee7a15dcfba4817bee",
          "dweb:/ipfs/QmPhMBfQAqt5NeRcSu3jDTwhoQXnB7nXNEcmoJ7KoWVt7V"
        ],
        "license": "CC0-1.0"
      },
      "contracts/smart/interface/ISMART.sol": {
        "keccak256": "0xfce323160dd5cd8c9db34de0ea872bec41fd2ea8d8496e1e3c17865d374994da",
        "urls": [
          "bzz-raw://1a1fafbdec0c59e078798438d2a3cd05bd70b864d7dfa67faf135d5634c5ae51",
          "dweb:/ipfs/QmehZwexgZN2BZKA6eFrG3DHUMRUZnzYTen6j5Ry5Znbf2"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTCompliance.sol": {
        "keccak256": "0x948341e4ad374e1dded6d1b30c395ad0f01e6ea2099fb6b96c5476e8b28c1d77",
        "urls": [
          "bzz-raw://d261e9a0c8682f11ac86048f13e367caee6d5f512d51b8752186b8c01b6ba618",
          "dweb:/ipfs/Qmdp14emh3NFSAphyuAgsTE7qZt1g1UYcNLS3tNNM8T6Hv"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTComplianceModule.sol": {
        "keccak256": "0x0506b3696a61f59ebb32ffb0fcb1c955c3c76e1ab9f85440cf5562a800490c6e",
        "urls": [
          "bzz-raw://2aef21997c167cf1dc9430b232e0dcddd6316f945f44e2ebe943241c2c257896",
          "dweb:/ipfs/Qmbp5MEoHkBMTTreXYoxjKohVVbEPBtcwX1QPfLHv71FxQ"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTIdentityRegistry.sol": {
        "keccak256": "0x62a95a9db2ac97ceaf59f7585d7bbaf3acb65ed9b5e57597b9d1fe1b4d7c4eda",
        "urls": [
          "bzz-raw://bd870710359396db48e70ef7e40449125ff744c6c8ce15ad7e1894df430c87ea",
          "dweb:/ipfs/QmZ6khf5Vm6hBkkUgYC1b161jSQaZeegJVRY6ndjRW1EcG"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTIdentityRegistryStorage.sol": {
        "keccak256": "0x219b3d03958859e2f082aac5cbf3b40acf243e326ee6e74e6bb03be7724c2985",
        "urls": [
          "bzz-raw://8cf8d30ec47cb2aed5b51d373837584fb6f08deab1d35142510271e733404f52",
          "dweb:/ipfs/Qmc9NnABx9ouhhCR8qgJC3RtU5oAyycSjZkY6nGtuWFwuz"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTTopicSchemeRegistry.sol": {
        "keccak256": "0xec5e42dcf7d929f8a0db42c9c8a0fa81d089a9f7177b7da10df029f94334ca8a",
        "urls": [
          "bzz-raw://e346e3241e3110b3f17d2b244a49d68a1d79c6928bef7d372ea3458c1029cea0",
          "dweb:/ipfs/QmeSyCYN9qYXRjn799fRFP7X9apf7bubVhnFEUGQatx3xd"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/structs/SMARTComplianceModuleParamPair.sol": {
        "keccak256": "0x489a55538b554a0c935bee7efc28f7e821e161638c5726c9d367a644a0b7c62a",
        "urls": [
          "bzz-raw://04bb06aed3ee3c5c6f3df9a59721c08ddd57b5521da1c9c6fd96b7c8b57db813",
          "dweb:/ipfs/QmRuzqKDr2sBHNuQhCzWGa8euNiMyvP7LTjSFjvAj5uFqh"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/ATKSystemRoles.sol": {
        "keccak256": "0x7c5a50fcea7ee061d1bf5451217fbf83cfbc42cae638a0de4b8fc41fa5d7d980",
        "urls": [
          "bzz-raw://8dc4128ddb017dfd71ff70bd4b292bcf5e60ae6f81a07b1ceb15439607bb93c0",
          "dweb:/ipfs/QmWJpzgR3YuLvRXZPdFzvyZ1mHAyV3fhSUMcdFG4QJ3xzx"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/compliance/ATKComplianceImplementation.sol": {
        "keccak256": "0xe9937ddb94a898ae574d6a2045ad06e90287a1062d76fc340a70c63fb5af69f9",
        "urls": [
          "bzz-raw://0079da9747c017fb39d6fbbfaac39687568c165100b5a2527803cd255fc0296e",
          "dweb:/ipfs/QmfVJEdvDXmZrMJqbESiEQvW1CjYXPRvtoEDwuWeUZZZiZ"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/compliance/IATKComplianceBypassList.sol": {
        "keccak256": "0x5b3d452616a287e6232fb66301b06c53663e0d19588b0cb9fa04a8be9001e4ee",
        "urls": [
          "bzz-raw://9103ec8fd0709a1696269ca441c0ec3f2b88141973d301c7656ae405d75c7b77",
          "dweb:/ipfs/QmbgrEKtfZ3HTBpGugibrMq2DmdoowK5rb2zV1WLLpcfFc"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol": {
        "keccak256": "0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779",
        "urls": [
          "bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e",
          "dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol": {
        "keccak256": "0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e",
        "urls": [
          "bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb",
          "dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol": {
        "keccak256": "0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122",
        "urls": [
          "bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e",
          "dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol": {
        "keccak256": "0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862",
        "urls": [
          "bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8",
          "dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534",
        "urls": [
          "bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da",
          "dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "addMultipleToBypassList(address[])": {
        "notice": "Adds multiple addresses to the compliance bypass list in a single transaction"
      },
      "addToBypassList(address)": {
        "notice": "Adds an address to the compliance bypass list"
      },
      "areValidComplianceModules((address,bytes)[])": {
        "notice": "Checks if an array of compliance module and parameter pairs are all valid."
      },
      "canTransfer(address,address,address,uint256)": {
        "notice": "Checks if a proposed token transfer is compliant with all registered modules for a given token."
      },
      "constructor": {
        "notice": "Constructor for the compliance implementation contract."
      },
      "created(address,address,uint256)": {
        "notice": "Called by an `ISMART` token contract after new tokens have been successfully created (minted)."
      },
      "destroyed(address,address,uint256)": {
        "notice": "Called by an `ISMART` token contract after tokens have been successfully destroyed (burned)."
      },
      "initialize(address[])": {
        "notice": "Initializes the compliance contract after it has been deployed (typically via a proxy)."
      },
      "isBypassed(address)": {
        "notice": "Checks if an address is on the bypass list"
      },
      "isValidComplianceModule(address,bytes)": {
        "notice": "Checks if a single given module address and its associated parameters are valid."
      },
      "removeFromBypassList(address)": {
        "notice": "Removes an address from the compliance bypass list"
      },
      "removeMultipleFromBypassList(address[])": {
        "notice": "Removes multiple addresses from the compliance bypass list in a single transaction"
      },
      "supportsInterface(bytes4)": {
        "notice": "Override supportsInterface to support ERC165 interface detection"
      },
      "transferred(address,address,address,uint256)": {
        "notice": "Called by an `ISMART` token contract after a token transfer has successfully occurred."
      }
    },
    "events": {
      "AddressAddedToBypassList(address,address)": {
        "notice": "Emitted when an address is added to the compliance bypass list."
      },
      "AddressRemovedFromBypassList(address,address)": {
        "notice": "Emitted when an address is removed from the compliance bypass list."
      }
    },
    "errors": {
      "AddressAlreadyOnBypassList(address)": [
        {
          "notice": "Error thrown when trying to add an address that is already on the bypass list."
        }
      ],
      "AddressNotOnBypassList(address)": [
        {
          "notice": "Error thrown when trying to remove an address that is not on the bypass list."
        }
      ],
      "InvalidModule()": [
        {
          "notice": "Error indicating that a provided address is not a valid compliance module."
        }
      ],
      "ZeroAddressNotAllowed()": [
        {
          "notice": "Error indicating that a provided address is not a valid compliance module."
        }
      ]
    },
    "notice": "This contract is the upgradeable logic implementation for the main compliance functionality within the ATK Protocol."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "It acts as a central orchestrator for compliance checks related to ATK tokens (which implement the `IATK` interface). When a ATK token operation occurs (like a transfer, creation, or destruction of tokens), this compliance contract is notified. It then iterates through all compliance modules registered with that specific token and calls the relevant functions (hooks) on each module. For example, before a transfer, it checks `canTransfer` on all modules. After a transfer, it calls `transferred`. This contract is designed to be used behind a proxy (like `SMARTComplianceProxy`) to allow its logic to be upgraded. It supports meta-transactions via `ERC2771ContextUpgradeable` allowing a trusted forwarder to pay for gas fees. It also implements `ERC165Upgradeable` for interface detection. Additionally, it implements a bypass list functionality that allows certain addresses (mainly contracts) to bypass compliance checks when they are the sender or receiver of a transfer.",
    "methods": {
      "addMultipleToBypassList(address[])": {
        "details": "Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function. This is a gas-efficient way to add multiple addresses to the bypass list at once.",
        "params": {
          "accounts": "Array of addresses to add to the bypass list"
        }
      },
      "addToBypassList(address)": {
        "details": "Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function. Bypassed addresses can bypass compliance checks in canTransfer function.",
        "params": {
          "account": "The address to add to the bypass list"
        }
      },
      "areValidComplianceModules((address,bytes)[])": {
        "details": "This function iterates through the provided array and calls `_validateModuleAndParams` for each pair. If any module/parameter pair in the array is invalid, the entire function call will revert. This is useful for validating a set of modules before registering them with a token.",
        "params": {
          "_pairs": "An array of `SMARTComplianceModuleParamPair` structs. Each struct contains a module address and its ABI-encoded parameters."
        }
      },
      "canTransfer(address,address,address,uint256)": {
        "details": "This function is typically called by an `ISMART` token contract *before* a transfer is executed. It first checks if either the sender or receiver is on the bypass list - if so, the transfer is automatically allowed. Otherwise, it retrieves all compliance modules registered for the `_token` and calls the `canTransfer` view function on each module. If *any* of the modules revert during their `canTransfer` check (indicating the transfer is not allowed by that module), this entire function call will also revert, signaling that the transfer is not compliant. If all modules allow the transfer (i.e., none of them revert), this function returns `true`.",
        "params": {
          "_amount": "The quantity of tokens proposed to be transferred.",
          "_from": "The address from which tokens would be transferred.",
          "_to": "The address to which tokens would be transferred.",
          "_token": "The address of the `ISMART` token contract for which the compliance check is being performed."
        },
        "returns": {
          "_0": "`true` if all registered compliance modules allow the transfer, otherwise the function reverts."
        }
      },
      "constructor": {
        "details": "This constructor is specific to OpenZeppelin's upgradeable contracts pattern. It initializes the `ERC2771ContextUpgradeable` with the address of a trusted forwarder for meta-transactions. The `_disableInitializers()` call is crucial for upgradeable contracts; it ensures that the `initialize` function cannot be called on the implementation contract directly after deployment, reserving it for the proxy context.",
        "params": {
          "trustedForwarder": "The address of the ERC-2771 trusted forwarder contract. This allows users to interact with this contract without paying gas fees directly, if the forwarder is set up to relay their transactions."
        }
      },
      "created(address,address,uint256)": {
        "details": "This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `created` function, passing along the creation details. This allows modules to react to token creation events. It is critical that this function is only callable by the `ISMART` token contract.",
        "params": {
          "_amount": "The quantity of tokens that were created.",
          "_to": "The address to which the new tokens were minted.",
          "_token": "The address of the `ISMART` token contract where tokens were created."
        }
      },
      "destroyed(address,address,uint256)": {
        "details": "This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `destroyed` function, passing along the destruction details. This allows modules to react to token destruction events. It is critical that this function is only callable by the `ISMART` token contract.",
        "params": {
          "_amount": "The quantity of tokens that were destroyed.",
          "_from": "The address from which tokens were burned.",
          "_token": "The address of the `ISMART` token contract from which tokens were destroyed."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "initialize(address[])": {
        "details": "This function is called once to set up the initial state of the contract. It initializes the ERC165 interface detection capability and sets up AccessControl with the deployer as the default admin. For upgradeable contracts, initializers replace constructors for setup logic. The `initializer` modifier ensures this function can only be called once.",
        "params": {
          "initialAdmins": "The addresses of the initial admins."
        }
      },
      "isBypassed(address)": {
        "params": {
          "account": "The address to check"
        },
        "returns": {
          "_0": "True if the address is on the bypass list, false otherwise"
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "isValidComplianceModule(address,bytes)": {
        "details": "This function calls the internal `_validateModuleAndParams` helper. It's a view function, meaning it doesn't change state and can be called without gas costs (if called externally). It will revert if the module is invalid (e.g., doesn't support `ISMARTComplianceModule` interface or parameters are incorrect for the module).",
        "params": {
          "_module": "The address of the compliance module contract to validate.",
          "_params": "The ABI-encoded parameters intended for this specific module. Each module defines how its parameters should be structured and validated."
        }
      },
      "removeFromBypassList(address)": {
        "details": "Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.",
        "params": {
          "account": "The address to remove from the bypass list"
        }
      },
      "removeMultipleFromBypassList(address[])": {
        "details": "Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.",
        "params": {
          "accounts": "Array of addresses to remove from the bypass list"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Announces support for ISMARTCompliance and IATKComplianceBypassList interfaces",
        "params": {
          "interfaceId": "The interface identifier to check"
        },
        "returns": {
          "_0": "True if the interface is supported, false otherwise"
        }
      },
      "transferred(address,address,address,uint256)": {
        "details": "This function iterates through all compliance modules registered with the given `_token`. For each module, it calls the module's `transferred` function, passing along the transfer details. This allows modules to react to transfers, for example, by updating internal state or logging. It is critical that this function is only callable by the `ISMART` token contract it is associated with to prevent unauthorized notifications. The current implementation assumes this restriction is handled by the token contract itself.",
        "params": {
          "_amount": "The quantity of tokens that were transferred.",
          "_from": "The address from which tokens were transferred. This will be `address(0)` for token minting/creation events.",
          "_to": "The address to which tokens were transferred. This will be `address(0)` for token burning/destruction events.",
          "_token": "The address of the `ISMART` token contract that performed the transfer."
        }
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      }
    },
    "events": {
      "AddressAddedToBypassList(address,address)": {
        "params": {
          "account": "The address that was added to the bypass list.",
          "manager": "The address that performed the addition."
        }
      },
      "AddressRemovedFromBypassList(address,address)": {
        "params": {
          "account": "The address that was removed from the bypass list.",
          "manager": "The address that performed the removal."
        }
      },
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "InvalidModule()": [
        {
          "details": "This error is typically reverted when a contract address provided as a compliance module does not correctly implement the `ISMARTComplianceModule` interface, or if the interface check fails."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "ZeroAddressNotAllowed()": [
        {
          "details": "This error is typically reverted when a contract address provided as a compliance module does not correctly implement the `ISMARTComplianceModule` interface, or if the interface check fails."
        }
      ]
    },
    "title": "ATK Compliance Contract Implementation"
  },
  "id": 117
}