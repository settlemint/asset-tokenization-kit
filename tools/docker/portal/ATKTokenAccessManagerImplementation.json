{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchGrantRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "accounts",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchRevokeRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "accounts",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantMultipleRoles",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "roles",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialAdmin",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeMultipleRoles",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "roles",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessControlBadConfirmation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "neededRole",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a03461011057601f610b3438819003918201601f19168301916001600160401b038311848410176101145780849260209460405283398101031261011057516001600160a01b0381168103610110576080525f516020610b145f395f51905f525460ff8160401c16610101576002600160401b03196001600160401b038216016100ab575b6040516109eb90816101298239608051818181610324015281816103c101526109340152f35b6001600160401b0319166001600160401b039081175f516020610b145f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610085565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461052557508063248a9ca3146104ff5780632f2ff15d146104d357806336568abe1461047f57806346b5cb59146104365780634fe9d1f5146103f5578063572b6c05146103a15780636f39feec146103535780637da0a8771461030f57806391b9f9d8146102c957806391d1485414610274578063a217fddf1461025a578063c4d66de8146100f25763d547741f146100b6575f80fd5b346100ee5760403660031901126100ee576100ec6004356100d5610592565b906100e76100e282610663565b6106b9565b610888565b005b5f80fd5b346100ee5760203660031901126100ee5761010b6105a8565b5f5160206109bf5f395f51905f52549060ff8260401c16159167ffffffffffffffff811680159081610252575b6001149081610248575b15908161023f575b506102305767ffffffffffffffff1981166001175f5160206109bf5f395f51905f525582610204575b5060ff5f5160206109bf5f395f51905f525460401c16156101f55761019790610715565b5061019e57005b68ff0000000000000000195f5160206109bf5f395f51905f5254165f5160206109bf5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b631afcd79f60e31b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f5160206109bf5f395f51905f525582610173565b63f92ee8a960e01b5f5260045ffd5b9050158461014a565b303b159150610142565b849150610138565b346100ee575f3660031901126100ee5760206040515f8152f35b346100ee5760403660031901126100ee5761028d610592565b6004355f525f51602061099f5f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100ee576102d736610623565b91905f5b8381106102e457005b80610308846102f66001948887610681565b356103036100e282610663565b6107d7565b50016102db565b346100ee575f3660031901126100ee576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ee57610361366105ef565b5f9291925b81811061036f57005b8061039a6103886103836001948689610681565b6106a5565b6103946100e287610663565b85610888565b5001610366565b346100ee5760203660031901126100ee5760206103bc6105a8565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b346100ee5761040336610623565b91905f5b83811061041057005b8061042f846104226001948887610681565b356100e76100e282610663565b5001610407565b346100ee57610444366105ef565b5f9291925b81811061045257005b806104786104666103836001948689610681565b6104726100e287610663565b856107d7565b5001610449565b346100ee5760403660031901126100ee57610498610592565b6001600160a01b036104a8610931565b166001600160a01b038216036104c4576100ec90600435610888565b63334bd91960e11b5f5260045ffd5b346100ee5760403660031901126100ee576100ec6004356104f2610592565b906103036100e282610663565b346100ee5760203660031901126100ee57602061051d600435610663565b604051908152f35b346100ee5760203660031901126100ee576004359063ffffffff60e01b82168092036100ee57602091631983557360e21b8114908115610567575b5015158152f35b637965db0b60e01b811491508115610581575b5083610560565b6301ffc9a760e01b1490508361057a565b602435906001600160a01b03821682036100ee57565b600435906001600160a01b03821682036100ee57565b9181601f840112156100ee5782359167ffffffffffffffff83116100ee576020808501948460051b0101116100ee57565b9060406003198301126100ee57600435916024359067ffffffffffffffff82116100ee5761061f916004016105be565b9091565b9060406003198301126100ee576004356001600160a01b03811681036100ee57916024359067ffffffffffffffff82116100ee5761061f916004016105be565b5f525f51602061099f5f395f51905f52602052600160405f20015490565b91908110156106915760051b0190565b634e487b7160e01b5f52603260045260245ffd5b356001600160a01b03811681036100ee5790565b6106c1610931565b815f525f51602061099f5f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f205416156106f8575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166107d2576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff1916600117905561079d610931565b16906001600160a01b03165f7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b5f8181525f51602061099f5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16610882575f8181525f51602061099f5f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff1916600117905561084d610931565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f8181525f51602061099f5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615610882575f8181525f51602061099f5f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff191690556108fc610931565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610993575b1561098f57601319360136811161097b573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b50601436101561096356fe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000af0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "sourceMap": "1766:8111:116:-:0;;;;;;;;;;;;;-1:-1:-1;;1766:8111:116;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;1623:37:214;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;;;7894:76:215;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;7983:34:215;7979:146;;-1:-1:-1;1766:8111:116;;;;;;;;1623:37:214;1766:8111:116;;;;;;;;;;;;;;;;7979:146:215;-1:-1:-1;;;;;;1766:8111:116;-1:-1:-1;;;;;1766:8111:116;;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;;;8085:29:215;;1766:8111:116;;8085:29:215;7979:146;;;7894:76;7936:23;;;-1:-1:-1;7936:23:215;;-1:-1:-1;7936:23:215;1766:8111:116;-1:-1:-1;1766:8111:116;;;;;;-1:-1:-1;1766:8111:116;;;;;-1:-1:-1;1766:8111:116",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461052557508063248a9ca3146104ff5780632f2ff15d146104d357806336568abe1461047f57806346b5cb59146104365780634fe9d1f5146103f5578063572b6c05146103a15780636f39feec146103535780637da0a8771461030f57806391b9f9d8146102c957806391d1485414610274578063a217fddf1461025a578063c4d66de8146100f25763d547741f146100b6575f80fd5b346100ee5760403660031901126100ee576100ec6004356100d5610592565b906100e76100e282610663565b6106b9565b610888565b005b5f80fd5b346100ee5760203660031901126100ee5761010b6105a8565b5f5160206109bf5f395f51905f52549060ff8260401c16159167ffffffffffffffff811680159081610252575b6001149081610248575b15908161023f575b506102305767ffffffffffffffff1981166001175f5160206109bf5f395f51905f525582610204575b5060ff5f5160206109bf5f395f51905f525460401c16156101f55761019790610715565b5061019e57005b68ff0000000000000000195f5160206109bf5f395f51905f5254165f5160206109bf5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b631afcd79f60e31b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f5160206109bf5f395f51905f525582610173565b63f92ee8a960e01b5f5260045ffd5b9050158461014a565b303b159150610142565b849150610138565b346100ee575f3660031901126100ee5760206040515f8152f35b346100ee5760403660031901126100ee5761028d610592565b6004355f525f51602061099f5f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346100ee576102d736610623565b91905f5b8381106102e457005b80610308846102f66001948887610681565b356103036100e282610663565b6107d7565b50016102db565b346100ee575f3660031901126100ee576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ee57610361366105ef565b5f9291925b81811061036f57005b8061039a6103886103836001948689610681565b6106a5565b6103946100e287610663565b85610888565b5001610366565b346100ee5760203660031901126100ee5760206103bc6105a8565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b346100ee5761040336610623565b91905f5b83811061041057005b8061042f846104226001948887610681565b356100e76100e282610663565b5001610407565b346100ee57610444366105ef565b5f9291925b81811061045257005b806104786104666103836001948689610681565b6104726100e287610663565b856107d7565b5001610449565b346100ee5760403660031901126100ee57610498610592565b6001600160a01b036104a8610931565b166001600160a01b038216036104c4576100ec90600435610888565b63334bd91960e11b5f5260045ffd5b346100ee5760403660031901126100ee576100ec6004356104f2610592565b906103036100e282610663565b346100ee5760203660031901126100ee57602061051d600435610663565b604051908152f35b346100ee5760203660031901126100ee576004359063ffffffff60e01b82168092036100ee57602091631983557360e21b8114908115610567575b5015158152f35b637965db0b60e01b811491508115610581575b5083610560565b6301ffc9a760e01b1490508361057a565b602435906001600160a01b03821682036100ee57565b600435906001600160a01b03821682036100ee57565b9181601f840112156100ee5782359167ffffffffffffffff83116100ee576020808501948460051b0101116100ee57565b9060406003198301126100ee57600435916024359067ffffffffffffffff82116100ee5761061f916004016105be565b9091565b9060406003198301126100ee576004356001600160a01b03811681036100ee57916024359067ffffffffffffffff82116100ee5761061f916004016105be565b5f525f51602061099f5f395f51905f52602052600160405f20015490565b91908110156106915760051b0190565b634e487b7160e01b5f52603260045260245ffd5b356001600160a01b03811681036100ee5790565b6106c1610931565b815f525f51602061099f5f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f205416156106f8575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166107d2576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff1916600117905561079d610931565b16906001600160a01b03165f7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b5f8181525f51602061099f5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16610882575f8181525f51602061099f5f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff1916600117905561084d610931565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f8181525f51602061099f5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615610882575f8181525f51602061099f5f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff191690556108fc610931565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610993575b1561098f57601319360136811161097b573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b50601436101561096356fe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "1766:8111:116:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1766:8111:116;;;;5767:26:211;1766:8111:116;;;;:::i;:::-;5737:18:211;3202:4;5737:18;;;:::i;:::-;3202:4;:::i;:::-;5767:26;:::i;:::-;1766:8111:116;;;;;;;;;;;-1:-1:-1;;1766:8111:116;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;;;;4301:16:215;1766:8111:116;;;;4724:16:215;;:34;;;;1766:8111:116;4803:1:215;4788:16;:50;;;;1766:8111:116;4853:13:215;:30;;;;1766:8111:116;4849:91:215;;;-1:-1:-1;;1766:8111:116;;4803:1:215;1766:8111:116;-1:-1:-1;;;;;;;;;;;1766:8111:116;;4977:67:215;;1766:8111:116;;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;7148:18:215;7144:73;;2945:44:116;;;:::i;:::-;;5064:101:215;;1766:8111:116;5064:101:215;1766:8111:116;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;-1:-1:-1;;;;;;;;;;;1766:8111:116;5140:14:215;1766:8111:116;;;4803:1:215;1766:8111:116;;5140:14:215;1766:8111:116;7144:73:215;7189:17;;;1766:8111:116;7189:17:215;1766:8111:116;;7189:17:215;4977:67;-1:-1:-1;;1766:8111:116;;;-1:-1:-1;;;;;;;;;;;1766:8111:116;4977:67:215;;;4849:91;4906:23;;;1766:8111:116;4906:23:215;1766:8111:116;;4906:23:215;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:215;;4724:34;;;-1:-1:-1;4724:34:215;;1766:8111:116;;;;;;-1:-1:-1;;1766:8111:116;;;;;;;;;;;;;;;;;-1:-1:-1;;1766:8111:116;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;;3901:31:211;1766:8111:116;;;;;;-1:-1:-1;1766:8111:116;;;;;;-1:-1:-1;1766:8111:116;;;;;;;;;;;;;;;;;;:::i;:::-;5960:13;;1766:8111;5975:10;;;;;;1766:8111;5960:13;6012:8;5350:25:211;6012:8:116;;1766:8111;6012:8;;;;:::i;:::-;1766:8111;3202:4:211;5320:18;;;:::i;3202:4::-;5350:25;:::i;:::-;;1766:8111:116;5960:13;;1766:8111;;;;;;-1:-1:-1;;1766:8111:116;;;;;;1830:17:214;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;;:::i;:::-;;5293:13;;;5308:10;;;;;;1766:8111;5293:13;5352:11;5767:26:211;5352:11:116;;1766:8111;5352:11;;;;:::i;:::-;;:::i;:::-;3202:4:211;5737:18;;;:::i;3202:4::-;5767:26;;:::i;:::-;;1766:8111:116;5293:13;;1766:8111;;;;;;-1:-1:-1;;1766:8111:116;;;;;;;:::i;:::-;;;1830:17:214;-1:-1:-1;;;;;1766:8111:116;;;;;2054:31:214;;;;1766:8111:116;;;;;;;;;;:::i;:::-;6629:13;;1766:8111;6644:10;;;;;;1766:8111;6629:13;6682:8;5767:26:211;6682:8:116;;1766:8111;6682:8;;;;:::i;:::-;1766:8111;3202:4:211;5737:18;;;:::i;5767:26::-;;1766:8111:116;6629:13;;1766:8111;;;;;;;:::i;:::-;;4665:13;;;4680:10;;;;;;1766:8111;4665:13;4723:11;5350:25:211;4723:11:116;;1766:8111;4723:11;;;;:::i;:::-;3202:4:211;5320:18;;;:::i;3202:4::-;5350:25;;:::i;:::-;;1766:8111:116;4665:13;;1766:8111;;;;;;-1:-1:-1;;1766:8111:116;;;;;;:::i;:::-;-1:-1:-1;;;;;7604:18:116;;:::i;:::-;1766:8111;-1:-1:-1;;;;;1766:8111:116;;6441:34:211;6437:102;;6549:37;1766:8111:116;;;6549:37:211;:::i;6437:102::-;6498:30;;;1766:8111:116;6498:30:211;1766:8111:116;;6498:30:211;1766:8111:116;;;;;;-1:-1:-1;;1766:8111:116;;;;5350:25:211;1766:8111:116;;;;:::i;:::-;5320:18:211;3202:4;5320:18;;;:::i;1766:8111:116:-;;;;;;-1:-1:-1;;1766:8111:116;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1766:8111:116;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9771:57:116;;;:97;;;;1766:8111;;;;;;;9771:97;-1:-1:-1;;;3551:47:211;;;-1:-1:-1;3551:87:211;;;;9771:97:116;;;;;3551:87:211;-1:-1:-1;;;1134:40:224;;-1:-1:-1;3551:87:211;;;1766:8111:116;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1766:8111:116;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;-1:-1:-1;;1766:8111:116;;;;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;;;;;;;;;:::i;4759:191:211:-;-1:-1:-1;1766:8111:116;-1:-1:-1;;;;;;;;;;;1766:8111:116;;4919:24:211;1766:8111:116;-1:-1:-1;1766:8111:116;4919:24:211;1766:8111:116;4759:191:211;:::o;1766:8111:116:-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;;:::o;4148:103:211:-;7604:18:116;;:::i;:::-;1766:8111;-1:-1:-1;1766:8111:116;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;-1:-1:-1;1766:8111:116;;;;;;;;-1:-1:-1;1766:8111:116;;;;;-1:-1:-1;1766:8111:116;;;4468:23:211;4464:108;;4148:103;;:::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:211;1766:8111:116;;;;;;4514:47:211;1766:8111:116;;;;-1:-1:-1;4514:47:211;7270:387;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;;;;-1:-1:-1;;1766:8111:116;;;;;7604:18;;:::i;:::-;1766:8111;;-1:-1:-1;;;;;1766:8111:116;;7532:40:211;1766:8111:116;;7532:40:211;7509:4;7586:11;:::o;7432:219::-;7628:12;1766:8111:116;7628:12:211;:::o;7270:387::-;1766:8111:116;;;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;-1:-1:-1;;1766:8111:116;;;;;7604:18;;:::i;:::-;1766:8111;;-1:-1:-1;;;;;1766:8111:116;;7532:40:211;1766:8111:116;;7532:40:211;7509:4;7586:11;:::o;7432:219::-;7628:12;;1766:8111:116;7628:12:211;:::o;7894:388::-;1766:8111:116;;;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1766:8111:116;;;;;;;;-1:-1:-1;;;;;1766:8111:116;;;;;;;;;;;;-1:-1:-1;;1766:8111:116;;;7604:18;;:::i;:::-;1766:8111;;-1:-1:-1;;;;;1766:8111:116;;8157:40:211;1766:8111:116;;8157:40:211;1766:8111:116;8211:11:211;:::o;2329:429:214:-;2545:10;1830:17;-1:-1:-1;;;;;1766:8111:116;2054:31:214;;2526:71;;2329:429;2522:230;;;1766:8111:116;;2435:8:214;1766:8111:116;2435:8:214;1766:8111:116;;;;;;;;2613:72:214:o;1766:8111:116:-;;;;;;;;;;;;2522:230:214;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;",
    "linkReferences": {},
    "immutableReferences": {
      "50796": [
        {
          "start": 804,
          "length": 32
        },
        {
          "start": 961,
          "length": 32
        },
        {
          "start": 2356,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "batchGrantRole(bytes32,address[])": "46b5cb59",
    "batchRevokeRole(bytes32,address[])": "6f39feec",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantMultipleRoles(address,bytes32[])": "91b9f9d8",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address)": "c4d66de8",
    "isTrustedForwarder(address)": "572b6c05",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "trustedForwarder()": "7da0a877"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"batchGrantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"batchRevokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract inherits from OpenZeppelin's `AccessControlUpgradeable` to get robust      role-based access control features (like granting, revoking, renouncing roles) and      `ERC2771ContextUpgradeable` to support meta-transactions.      It is designed to be upgradeable using a Transparent Proxy Pattern.      Meta-transactions allow users to interact with contracts without needing ETH for gas fees,      as a trusted \\\"forwarder\\\" can relay their transactions.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"batchGrantRole(bytes32,address[])\":{\"details\":\"This function now calls the `grantRole` from `AccessControlUpgradeable`.      Requires the caller to have the admin role for `role`.\",\"params\":{\"accounts\":\"The addresses that will receive the role.\",\"role\":\"The role identifier to grant.\"}},\"batchRevokeRole(bytes32,address[])\":{\"details\":\"This function now calls the `revokeRole` from `AccessControlUpgradeable`.      Requires the caller to have the admin role for `role`.\",\"params\":{\"accounts\":\"The addresses that will lose the role.\",\"role\":\"The role identifier to revoke.\"}},\"constructor\":{\"details\":\"Initializes the contract with a forwarder address.\",\"params\":{\"forwarder\":\"The address of the trusted forwarder contract.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"This function calls the `grantRole` from `AccessControlUpgradeable` for each role.      Requires the caller to have the admin role for each `role` being granted.\",\"params\":{\"account\":\"The address that will receive all the roles.\",\"roles\":\"The array of role identifiers to grant.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"This function implements `hasRole` from both `ISMARTTokenAccessManager` and OpenZeppelin's `IAccessControlUpgradeable`.      It directly uses the `hasRole` function inherited from OpenZeppelin's `AccessControlUpgradeable` contract,      which contains the actual logic for checking role assignments.      The `override` keyword is used because this function is redefining a function from its parent contracts/interfaces.      The `virtual` keyword indicates that this function can, in turn, be overridden by contracts that inherit from `ATKTokenAccessManager`.\",\"params\":{\"account\":\"The address of the account whose roles are being checked.\",\"role\":\"The `bytes32` identifier of the role to check.\"},\"returns\":{\"_0\":\"`true` if the account has the specified role, `false` otherwise.\"}},\"initialize(address)\":{\"details\":\"This function replaces the constructor and should be called only once, typically by the deployer      or an upgrade mechanism.      It grants the `DEFAULT_ADMIN_ROLE` to the initial admin.\",\"params\":{\"initialAdmin\":\"Address of the initial admin for the token.\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"This function calls the `revokeRole` from `AccessControlUpgradeable` for each role.      Requires the caller to have the admin role for each `role` being revoked.\",\"params\":{\"account\":\"The address that will lose all the roles.\",\"roles\":\"The array of role identifiers to revoke.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"This function allows other contracts to query if this contract implements a specific interface,      adhering to the ERC165 standard (Standard Interface Detection).      It checks if the given `interfaceId` matches `type(ISMARTTokenAccessManager).interfaceId`      or any interface supported by its parent `AccessControlUpgradeable` (which includes ERC165 itself      and `IAccessControl`).\",\"params\":{\"interfaceId\":\"The bytes4 identifier of the interface to check for support.\"},\"returns\":{\"_0\":\"`true` if the contract supports the interface, `false` otherwise.\"}},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"title\":\"Centralized Access Control Manager for ATK Tokens (Upgradeable)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchGrantRole(bytes32,address[])\":{\"notice\":\"Grants `role` to each address in `accounts`.\"},\"batchRevokeRole(bytes32,address[])\":{\"notice\":\"Revokes `role` from each address in `accounts`.\"},\"constructor\":{\"notice\":\"Constructor for the ATKTokenAccessManager.\"},\"grantMultipleRoles(address,bytes32[])\":{\"notice\":\"Grants multiple roles to a single account.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks if a given account has a specific role.\"},\"initialize(address)\":{\"notice\":\"Initializes the access manager.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"notice\":\"Revokes multiple roles from a single account.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Declares support for interfaces, including `ISMARTTokenAccessManager`.\"}},\"notice\":\"This contract is a dedicated manager for handling roles and permissions across multiple         ATK token contracts. Instead of each token managing its own access control, they can         delegate these checks to an instance of this `ATKTokenAccessManager`.         This promotes consistency, simplifies role management (as roles are managed in one place),         and can save gas by deploying this logic once and reusing it.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/access-manager/ATKTokenAccessManagerImplementation.sol\":\"ATKTokenAccessManagerImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/smart/extensions/access-managed/ISMARTTokenAccessManager.sol\":{\"keccak256\":\"0xd8fb2176229e603ed535b0ade30c09c41c416a90997edf8eab72af01cdcd51f3\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://90d07eb638bcd5a00efd0e4752c414e8ea25a3be93efcdc765d147b6c49c004a\",\"dweb:/ipfs/QmRLK1p8b6jZqQ9EMxoMQQMtSgeEqz2P12xbHozaXztdBw\"]},\"contracts/system/access-manager/ATKTokenAccessManagerImplementation.sol\":{\"keccak256\":\"0xe61a8ee27d7e3c923840c0d017d60ef2914e2470732cd5467feb6a7a95ce8d1c\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://50fb5b1ba2283ec3200da2a8408e3d44c57d76386e713e93d112cfa63ce74022\",\"dweb:/ipfs/QmbV7wG8joMMnEn1BZ1ChiU6W8fKkrfTB49bNDc81jeS4U\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchGrantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRevokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "roles",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantMultipleRoles"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "roles",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeMultipleRoles"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchGrantRole(bytes32,address[])": {
            "details": "This function now calls the `grantRole` from `AccessControlUpgradeable`.      Requires the caller to have the admin role for `role`.",
            "params": {
              "accounts": "The addresses that will receive the role.",
              "role": "The role identifier to grant."
            }
          },
          "batchRevokeRole(bytes32,address[])": {
            "details": "This function now calls the `revokeRole` from `AccessControlUpgradeable`.      Requires the caller to have the admin role for `role`.",
            "params": {
              "accounts": "The addresses that will lose the role.",
              "role": "The role identifier to revoke."
            }
          },
          "constructor": {
            "details": "Initializes the contract with a forwarder address.",
            "params": {
              "forwarder": "The address of the trusted forwarder contract."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantMultipleRoles(address,bytes32[])": {
            "details": "This function calls the `grantRole` from `AccessControlUpgradeable` for each role.      Requires the caller to have the admin role for each `role` being granted.",
            "params": {
              "account": "The address that will receive all the roles.",
              "roles": "The array of role identifiers to grant."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "This function implements `hasRole` from both `ISMARTTokenAccessManager` and OpenZeppelin's `IAccessControlUpgradeable`.      It directly uses the `hasRole` function inherited from OpenZeppelin's `AccessControlUpgradeable` contract,      which contains the actual logic for checking role assignments.      The `override` keyword is used because this function is redefining a function from its parent contracts/interfaces.      The `virtual` keyword indicates that this function can, in turn, be overridden by contracts that inherit from `ATKTokenAccessManager`.",
            "params": {
              "account": "The address of the account whose roles are being checked.",
              "role": "The `bytes32` identifier of the role to check."
            },
            "returns": {
              "_0": "`true` if the account has the specified role, `false` otherwise."
            }
          },
          "initialize(address)": {
            "details": "This function replaces the constructor and should be called only once, typically by the deployer      or an upgrade mechanism.      It grants the `DEFAULT_ADMIN_ROLE` to the initial admin.",
            "params": {
              "initialAdmin": "Address of the initial admin for the token."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "revokeMultipleRoles(address,bytes32[])": {
            "details": "This function calls the `revokeRole` from `AccessControlUpgradeable` for each role.      Requires the caller to have the admin role for each `role` being revoked.",
            "params": {
              "account": "The address that will lose all the roles.",
              "roles": "The array of role identifiers to revoke."
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "This function allows other contracts to query if this contract implements a specific interface,      adhering to the ERC165 standard (Standard Interface Detection).      It checks if the given `interfaceId` matches `type(ISMARTTokenAccessManager).interfaceId`      or any interface supported by its parent `AccessControlUpgradeable` (which includes ERC165 itself      and `IAccessControl`).",
            "params": {
              "interfaceId": "The bytes4 identifier of the interface to check for support."
            },
            "returns": {
              "_0": "`true` if the contract supports the interface, `false` otherwise."
            }
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchGrantRole(bytes32,address[])": {
            "notice": "Grants `role` to each address in `accounts`."
          },
          "batchRevokeRole(bytes32,address[])": {
            "notice": "Revokes `role` from each address in `accounts`."
          },
          "constructor": {
            "notice": "Constructor for the ATKTokenAccessManager."
          },
          "grantMultipleRoles(address,bytes32[])": {
            "notice": "Grants multiple roles to a single account."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks if a given account has a specific role."
          },
          "initialize(address)": {
            "notice": "Initializes the access manager."
          },
          "revokeMultipleRoles(address,bytes32[])": {
            "notice": "Revokes multiple roles from a single account."
          },
          "supportsInterface(bytes4)": {
            "notice": "Declares support for interfaces, including `ISMARTTokenAccessManager`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/access-manager/ATKTokenAccessManagerImplementation.sol": "ATKTokenAccessManagerImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/smart/extensions/access-managed/ISMARTTokenAccessManager.sol": {
        "keccak256": "0xd8fb2176229e603ed535b0ade30c09c41c416a90997edf8eab72af01cdcd51f3",
        "urls": [
          "bzz-raw://90d07eb638bcd5a00efd0e4752c414e8ea25a3be93efcdc765d147b6c49c004a",
          "dweb:/ipfs/QmRLK1p8b6jZqQ9EMxoMQQMtSgeEqz2P12xbHozaXztdBw"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/access-manager/ATKTokenAccessManagerImplementation.sol": {
        "keccak256": "0xe61a8ee27d7e3c923840c0d017d60ef2914e2470732cd5467feb6a7a95ce8d1c",
        "urls": [
          "bzz-raw://50fb5b1ba2283ec3200da2a8408e3d44c57d76386e713e93d112cfa63ce74022",
          "dweb:/ipfs/QmbV7wG8joMMnEn1BZ1ChiU6W8fKkrfTB49bNDc81jeS4U"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534",
        "urls": [
          "bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da",
          "dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "batchGrantRole(bytes32,address[])": {
        "notice": "Grants `role` to each address in `accounts`."
      },
      "batchRevokeRole(bytes32,address[])": {
        "notice": "Revokes `role` from each address in `accounts`."
      },
      "constructor": {
        "notice": "Constructor for the ATKTokenAccessManager."
      },
      "grantMultipleRoles(address,bytes32[])": {
        "notice": "Grants multiple roles to a single account."
      },
      "hasRole(bytes32,address)": {
        "notice": "Checks if a given account has a specific role."
      },
      "initialize(address)": {
        "notice": "Initializes the access manager."
      },
      "revokeMultipleRoles(address,bytes32[])": {
        "notice": "Revokes multiple roles from a single account."
      },
      "supportsInterface(bytes4)": {
        "notice": "Declares support for interfaces, including `ISMARTTokenAccessManager`."
      }
    },
    "notice": "This contract is a dedicated manager for handling roles and permissions across multiple         ATK token contracts. Instead of each token managing its own access control, they can         delegate these checks to an instance of this `ATKTokenAccessManager`.         This promotes consistency, simplifies role management (as roles are managed in one place),         and can save gas by deploying this logic once and reusing it."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "details": "This contract inherits from OpenZeppelin's `AccessControlUpgradeable` to get robust      role-based access control features (like granting, revoking, renouncing roles) and      `ERC2771ContextUpgradeable` to support meta-transactions.      It is designed to be upgradeable using a Transparent Proxy Pattern.      Meta-transactions allow users to interact with contracts without needing ETH for gas fees,      as a trusted \"forwarder\" can relay their transactions.",
    "methods": {
      "batchGrantRole(bytes32,address[])": {
        "details": "This function now calls the `grantRole` from `AccessControlUpgradeable`.      Requires the caller to have the admin role for `role`.",
        "params": {
          "accounts": "The addresses that will receive the role.",
          "role": "The role identifier to grant."
        }
      },
      "batchRevokeRole(bytes32,address[])": {
        "details": "This function now calls the `revokeRole` from `AccessControlUpgradeable`.      Requires the caller to have the admin role for `role`.",
        "params": {
          "accounts": "The addresses that will lose the role.",
          "role": "The role identifier to revoke."
        }
      },
      "constructor": {
        "details": "Initializes the contract with a forwarder address.",
        "params": {
          "forwarder": "The address of the trusted forwarder contract."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantMultipleRoles(address,bytes32[])": {
        "details": "This function calls the `grantRole` from `AccessControlUpgradeable` for each role.      Requires the caller to have the admin role for each `role` being granted.",
        "params": {
          "account": "The address that will receive all the roles.",
          "roles": "The array of role identifiers to grant."
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "This function implements `hasRole` from both `ISMARTTokenAccessManager` and OpenZeppelin's `IAccessControlUpgradeable`.      It directly uses the `hasRole` function inherited from OpenZeppelin's `AccessControlUpgradeable` contract,      which contains the actual logic for checking role assignments.      The `override` keyword is used because this function is redefining a function from its parent contracts/interfaces.      The `virtual` keyword indicates that this function can, in turn, be overridden by contracts that inherit from `ATKTokenAccessManager`.",
        "params": {
          "account": "The address of the account whose roles are being checked.",
          "role": "The `bytes32` identifier of the role to check."
        },
        "returns": {
          "_0": "`true` if the account has the specified role, `false` otherwise."
        }
      },
      "initialize(address)": {
        "details": "This function replaces the constructor and should be called only once, typically by the deployer      or an upgrade mechanism.      It grants the `DEFAULT_ADMIN_ROLE` to the initial admin.",
        "params": {
          "initialAdmin": "Address of the initial admin for the token."
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeMultipleRoles(address,bytes32[])": {
        "details": "This function calls the `revokeRole` from `AccessControlUpgradeable` for each role.      Requires the caller to have the admin role for each `role` being revoked.",
        "params": {
          "account": "The address that will lose all the roles.",
          "roles": "The array of role identifiers to revoke."
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "This function allows other contracts to query if this contract implements a specific interface,      adhering to the ERC165 standard (Standard Interface Detection).      It checks if the given `interfaceId` matches `type(ISMARTTokenAccessManager).interfaceId`      or any interface supported by its parent `AccessControlUpgradeable` (which includes ERC165 itself      and `IAccessControl`).",
        "params": {
          "interfaceId": "The bytes4 identifier of the interface to check for support."
        },
        "returns": {
          "_0": "`true` if the contract supports the interface, `false` otherwise."
        }
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      }
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ]
    },
    "title": "Centralized Access Control Manager for ATK Tokens (Upgradeable)"
  },
  "id": 116
}