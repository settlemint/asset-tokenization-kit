{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "vestingDuration_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "cliffDuration_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "_cliffDuration",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "_vestingDuration",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateClaimableAmount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "vestingStartTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "claimedAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "claimableAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cliffDuration",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsMultipleClaims",
      "inputs": [],
      "outputs": [
        {
          "name": "supportsMultiple",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "vestingDuration",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "error",
      "name": "CliffExceedsVestingDuration",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidVestingDuration",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60c0346100a457601f6102e438819003918201601f19168301916001600160401b038311848410176100a85780849260409485528339810103126100a45760208151910151908015610095578082116100865760805260a05260405161022790816100bd823960805181818160d9015261018c015260a05181818161011301526101650152f35b63fc1a94fb60e01b5f5260045ffd5b632b39f6cb60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80630289943d146100c257806307a297ab146100845780631514617e1461007f578063d85349f71461005b578063f826851a146100605763fcfb21b91461005b575f80fd5b6100fc565b3461007b575f36600319011261007b57602060405160018152f35b5f80fd5b6100c2565b3461007b57608036600319011261007b576004356001600160a01b0381160361007b5760206100ba606435604435602435610157565b604051908152f35b3461007b575f36600319011261007b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461007b575f36600319011261007b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b9190820391821161014357565b634e487b7160e01b5f52601160045260245ffd5b91906101639042610136565b7f00000000000000000000000000000000000000000000000000000000000000008110610213577f0000000000000000000000000000000000000000000000000000000000000000908181106101e2575050815b8083116101da575b50808211156101d4576101d191610136565b90565b50505f90565b91505f6101bf565b8084029084820414841517156101435781156101ff5704916101b7565b634e487b7160e01b5f52601260045260245ffd5b5050505f9056fea164736f6c634300081c000a",
    "sourceMap": "715:4292:123:-:0;;;;;;;;;;;;;-1:-1:-1;;715:4292:123;;;;-1:-1:-1;;;;;715:4292:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1680:21;;;1676:58;;1748:33;;;1744:75;;1830:35;;1875:31;;715:4292;;;;;;;;1830:35;715:4292;;;;;;;;;;1875:31;715:4292;;;;;;;;;;;1744:75;1790:29;;;-1:-1:-1;1790:29:123;;-1:-1:-1;1790:29:123;1676:58;1710:24;;;-1:-1:-1;1710:24:123;;-1:-1:-1;1710:24:123;715:4292;-1:-1:-1;715:4292:123;;;;;;-1:-1:-1;715:4292:123;;;;;-1:-1:-1;715:4292:123",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c80630289943d146100c257806307a297ab146100845780631514617e1461007f578063d85349f71461005b578063f826851a146100605763fcfb21b91461005b575f80fd5b6100fc565b3461007b575f36600319011261007b57602060405160018152f35b5f80fd5b6100c2565b3461007b57608036600319011261007b576004356001600160a01b0381160361007b5760206100ba606435604435602435610157565b604051908152f35b3461007b575f36600319011261007b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461007b575f36600319011261007b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b9190820391821161014357565b634e487b7160e01b5f52601160045260245ffd5b91906101639042610136565b7f00000000000000000000000000000000000000000000000000000000000000008110610213577f0000000000000000000000000000000000000000000000000000000000000000908181106101e2575050815b8083116101da575b50808211156101d4576101d191610136565b90565b50505f90565b91505f6101bf565b8084029084820414841517156101435781156101ff5704916101b7565b634e487b7160e01b5f52601260045260245ffd5b5050505f9056fea164736f6c634300081c000a",
    "sourceMap": "715:4292:123:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;715:4292:123;;;;;;;4994:4;715:4292;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;715:4292:123;;;;;;-1:-1:-1;;;;;715:4292:123;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;715:4292:123;;;;;;;945:41;715:4292;;;;;;;;;-1:-1:-1;;715:4292:123;;;;;;;2321:14;715:4292;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;3090:1545;;;3514:34;3090:1545;3514:15;:34;:::i;:::-;3628:14;3614:28;;3610:67;;3816:16;;3801:31;;;;;3906:34;;;3797:388;4297:34;;;4293:99;;3797:388;-1:-1:-1;4516:36:123;;;;;;4555;;;:::i;:::-;3090:1545;:::o;4516:79::-;;;-1:-1:-1;3090:1545:123;:::o;4293:99::-;4347:34;-1:-1:-1;4293:99:123;;;3797:388;715:4292;;;;;;;;;;;;;;;;;;;3797:388;;;715:4292;;;;-1:-1:-1;715:4292:123;;;;;-1:-1:-1;715:4292:123;3610:67;3658:8;;;3665:1;3658:8;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "25250": [
        {
          "start": 217,
          "length": 32
        },
        {
          "start": 396,
          "length": 32
        }
      ],
      "25253": [
        {
          "start": 275,
          "length": 32
        },
        {
          "start": 357,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "_cliffDuration()": "fcfb21b9",
    "_vestingDuration()": "0289943d",
    "calculateClaimableAmount(address,uint256,uint256,uint256)": "07a297ab",
    "cliffDuration()": "d85349f7",
    "supportsMultipleClaims()": "f826851a",
    "vestingDuration()": "1514617e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vestingDuration_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CliffExceedsVestingDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"_cliffDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"name\":\"calculateClaimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimableAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cliffDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportsMultipleClaims\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supportsMultiple\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This contract implements stateless linear vesting calculations with configurable duration and cliff.      The vesting parameters (duration, cliff) are set at deployment and cannot be changed.      It holds no state about users; all user-specific data is passed in during calculations.\",\"kind\":\"dev\",\"methods\":{\"calculateClaimableAmount(address,uint256,uint256,uint256)\":{\"details\":\"Implements linear vesting with optional cliff period. No tokens are claimable before cliff.      After cliff, tokens vest linearly until the full vesting duration is reached.\",\"params\":{\"account\":\"The address of the claimant (unused in this strategy but required by interface).\",\"claimedAmount\":\"The amount already claimed for this specific index.\",\"totalAmount\":\"The total allocation for the specific index being claimed.\",\"vestingStartTime\":\"The timestamp when vesting started for this allocation.\"},\"returns\":{\"claimableAmount\":\"The amount that can be claimed now.\"}},\"cliffDuration()\":{\"returns\":{\"_0\":\"The cliff duration in seconds.\"}},\"constructor\":{\"details\":\"Sets the vesting duration and cliff duration. Both are immutable after deployment.\",\"params\":{\"cliffDuration_\":\"The initial cliff duration in seconds (must be <= vestingDuration_).\",\"vestingDuration_\":\"The total vesting duration in seconds (must be > 0).\"}},\"supportsMultipleClaims()\":{\"details\":\"Linear vesting requires multiple claims as tokens become available gradually.\",\"returns\":{\"supportsMultiple\":\"Always true for linear vesting strategy.\"}},\"vestingDuration()\":{\"returns\":{\"_0\":\"The vesting duration in seconds.\"}}},\"stateVariables\":{\"_cliffDuration\":{\"details\":\"Set once at construction and immutable thereafter. Must be <= _vestingDuration.\"},\"_vestingDuration\":{\"details\":\"Set once at construction and immutable thereafter.\"}},\"title\":\"ATK Linear Vesting Strategy\",\"version\":1},\"userdoc\":{\"errors\":{\"CliffExceedsVestingDuration()\":[{\"notice\":\"Error indicating that the cliff duration exceeds the vesting duration.\"}],\"InvalidVestingDuration()\":[{\"notice\":\"Error indicating that an invalid vesting duration was provided.\"}]},\"kind\":\"user\",\"methods\":{\"_cliffDuration()\":{\"notice\":\"The cliff duration before any tokens can be claimed, in seconds.\"},\"_vestingDuration()\":{\"notice\":\"The total duration of the vesting period in seconds.\"},\"calculateClaimableAmount(address,uint256,uint256,uint256)\":{\"notice\":\"Calculates the amount claimable based on linear vesting parameters.\"},\"cliffDuration()\":{\"notice\":\"Returns the cliff duration.\"},\"constructor\":{\"notice\":\"Initializes the linear vesting strategy with specified parameters.\"},\"supportsMultipleClaims()\":{\"notice\":\"Returns whether this strategy supports multiple claims over time.\"},\"vestingDuration()\":{\"notice\":\"Returns the total vesting duration.\"}},\"notice\":\"Implementation of a linear vesting calculation strategy for ATK airdrop contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/airdrop/vesting-airdrop/ATKLinearVestingStrategy.sol\":\"ATKLinearVestingStrategy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/system/airdrop/vesting-airdrop/ATKLinearVestingStrategy.sol\":{\"keccak256\":\"0xee0c8e0ae8aab574497b8bf407084658c2434be49db70549445e181a76ba31f0\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://7322a8659efef1bc0dd7bfbe22835815f91358ac9aba754b08d1b11ced6185ca\",\"dweb:/ipfs/QmQX7yU1vLFau7sNXfwZubU7GXrTBWjiqJDymcv3889RHU\"]},\"contracts/system/airdrop/vesting-airdrop/ATKVestingAirdropErrors.sol\":{\"keccak256\":\"0x95513b1e3d6d3a2122920133f743680e8bd42be39a5d7d929bf9aef213b467da\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://b68d9fc63a0d1de7b3a7f31784df8d403f8d403aff46b3f87d83a83e676a514c\",\"dweb:/ipfs/QmSuAPK23Mqjf2SMJZQJ9fRZjCWHckFHmpuhzuhHE4KzkN\"]},\"contracts/system/airdrop/vesting-airdrop/IATKVestingStrategy.sol\":{\"keccak256\":\"0x4b407d87d884f6e3f8d005f6b5f31760168dd0d7e73b4794b817f64215a33153\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://27e95586b6131529d539130c90d51fa3c625f5d047451780f2c9f551737bdc84\",\"dweb:/ipfs/QmUa7u4dMP99YoWPpepXWQvGUhUNZKzYcNG44XZV8RZm6R\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vestingDuration_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cliffDuration_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CliffExceedsVestingDuration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVestingDuration"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_cliffDuration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_vestingDuration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vestingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateClaimableAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimableAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cliffDuration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsMultipleClaims",
          "outputs": [
            {
              "internalType": "bool",
              "name": "supportsMultiple",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingDuration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateClaimableAmount(address,uint256,uint256,uint256)": {
            "details": "Implements linear vesting with optional cliff period. No tokens are claimable before cliff.      After cliff, tokens vest linearly until the full vesting duration is reached.",
            "params": {
              "account": "The address of the claimant (unused in this strategy but required by interface).",
              "claimedAmount": "The amount already claimed for this specific index.",
              "totalAmount": "The total allocation for the specific index being claimed.",
              "vestingStartTime": "The timestamp when vesting started for this allocation."
            },
            "returns": {
              "claimableAmount": "The amount that can be claimed now."
            }
          },
          "cliffDuration()": {
            "returns": {
              "_0": "The cliff duration in seconds."
            }
          },
          "constructor": {
            "details": "Sets the vesting duration and cliff duration. Both are immutable after deployment.",
            "params": {
              "cliffDuration_": "The initial cliff duration in seconds (must be <= vestingDuration_).",
              "vestingDuration_": "The total vesting duration in seconds (must be > 0)."
            }
          },
          "supportsMultipleClaims()": {
            "details": "Linear vesting requires multiple claims as tokens become available gradually.",
            "returns": {
              "supportsMultiple": "Always true for linear vesting strategy."
            }
          },
          "vestingDuration()": {
            "returns": {
              "_0": "The vesting duration in seconds."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "_cliffDuration()": {
            "notice": "The cliff duration before any tokens can be claimed, in seconds."
          },
          "_vestingDuration()": {
            "notice": "The total duration of the vesting period in seconds."
          },
          "calculateClaimableAmount(address,uint256,uint256,uint256)": {
            "notice": "Calculates the amount claimable based on linear vesting parameters."
          },
          "cliffDuration()": {
            "notice": "Returns the cliff duration."
          },
          "constructor": {
            "notice": "Initializes the linear vesting strategy with specified parameters."
          },
          "supportsMultipleClaims()": {
            "notice": "Returns whether this strategy supports multiple claims over time."
          },
          "vestingDuration()": {
            "notice": "Returns the total vesting duration."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/airdrop/vesting-airdrop/ATKLinearVestingStrategy.sol": "ATKLinearVestingStrategy"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/system/airdrop/vesting-airdrop/ATKLinearVestingStrategy.sol": {
        "keccak256": "0xee0c8e0ae8aab574497b8bf407084658c2434be49db70549445e181a76ba31f0",
        "urls": [
          "bzz-raw://7322a8659efef1bc0dd7bfbe22835815f91358ac9aba754b08d1b11ced6185ca",
          "dweb:/ipfs/QmQX7yU1vLFau7sNXfwZubU7GXrTBWjiqJDymcv3889RHU"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/airdrop/vesting-airdrop/ATKVestingAirdropErrors.sol": {
        "keccak256": "0x95513b1e3d6d3a2122920133f743680e8bd42be39a5d7d929bf9aef213b467da",
        "urls": [
          "bzz-raw://b68d9fc63a0d1de7b3a7f31784df8d403f8d403aff46b3f87d83a83e676a514c",
          "dweb:/ipfs/QmSuAPK23Mqjf2SMJZQJ9fRZjCWHckFHmpuhzuhHE4KzkN"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/airdrop/vesting-airdrop/IATKVestingStrategy.sol": {
        "keccak256": "0x4b407d87d884f6e3f8d005f6b5f31760168dd0d7e73b4794b817f64215a33153",
        "urls": [
          "bzz-raw://27e95586b6131529d539130c90d51fa3c625f5d047451780f2c9f551737bdc84",
          "dweb:/ipfs/QmUa7u4dMP99YoWPpepXWQvGUhUNZKzYcNG44XZV8RZm6R"
        ],
        "license": "FSL-1.1-MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "_cliffDuration()": {
        "notice": "The cliff duration before any tokens can be claimed, in seconds."
      },
      "_vestingDuration()": {
        "notice": "The total duration of the vesting period in seconds."
      },
      "calculateClaimableAmount(address,uint256,uint256,uint256)": {
        "notice": "Calculates the amount claimable based on linear vesting parameters."
      },
      "cliffDuration()": {
        "notice": "Returns the cliff duration."
      },
      "constructor": {
        "notice": "Initializes the linear vesting strategy with specified parameters."
      },
      "supportsMultipleClaims()": {
        "notice": "Returns whether this strategy supports multiple claims over time."
      },
      "vestingDuration()": {
        "notice": "Returns the total vesting duration."
      }
    },
    "errors": {
      "CliffExceedsVestingDuration()": [
        {
          "notice": "Error indicating that the cliff duration exceeds the vesting duration."
        }
      ],
      "InvalidVestingDuration()": [
        {
          "notice": "Error indicating that an invalid vesting duration was provided."
        }
      ]
    },
    "notice": "Implementation of a linear vesting calculation strategy for ATK airdrop contracts."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This contract implements stateless linear vesting calculations with configurable duration and cliff.      The vesting parameters (duration, cliff) are set at deployment and cannot be changed.      It holds no state about users; all user-specific data is passed in during calculations.",
    "methods": {
      "calculateClaimableAmount(address,uint256,uint256,uint256)": {
        "details": "Implements linear vesting with optional cliff period. No tokens are claimable before cliff.      After cliff, tokens vest linearly until the full vesting duration is reached.",
        "params": {
          "account": "The address of the claimant (unused in this strategy but required by interface).",
          "claimedAmount": "The amount already claimed for this specific index.",
          "totalAmount": "The total allocation for the specific index being claimed.",
          "vestingStartTime": "The timestamp when vesting started for this allocation."
        },
        "returns": {
          "claimableAmount": "The amount that can be claimed now."
        }
      },
      "cliffDuration()": {
        "returns": {
          "_0": "The cliff duration in seconds."
        }
      },
      "constructor": {
        "details": "Sets the vesting duration and cliff duration. Both are immutable after deployment.",
        "params": {
          "cliffDuration_": "The initial cliff duration in seconds (must be <= vestingDuration_).",
          "vestingDuration_": "The total vesting duration in seconds (must be > 0)."
        }
      },
      "supportsMultipleClaims()": {
        "details": "Linear vesting requires multiple claims as tokens become available gradually.",
        "returns": {
          "supportsMultiple": "Always true for linear vesting strategy."
        }
      },
      "vestingDuration()": {
        "returns": {
          "_0": "The vesting duration in seconds."
        }
      }
    },
    "title": "ATK Linear Vesting Strategy"
  },
  "id": 123
}