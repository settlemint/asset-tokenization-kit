{{- $erpcHost := include "atk.ingress.primaryHost" (dict "context" . "path" (list "erpc") "default" "rpc.k8s.orb.local") -}}
{{- $graphHost := include "atk.ingress.primaryHost" (dict "context" . "path" (list "graph-node") "default" "graph.k8s.orb.local") -}}
{{- $grafanaHost := include "atk.ingress.primaryHost" (dict "context" . "path" (list "observability" "grafana") "default" "grafana.k8s.orb.local") -}}
{{- $dappHost := include "atk.ingress.primaryHost" (dict "context" . "path" (list "dapp") "default" "dapp.k8s.orb.local") -}}
{{- $portalHost := include "atk.ingress.primaryHost" (dict "context" . "path" (list "portal") "default" "portal.k8s.orb.local") -}}
{{- $txsignerHost := include "atk.ingress.primaryHost" (dict "context" . "path" (list "txsigner") "default" "txsigner.k8s.orb.local") -}}

========================================================================
  The SettleMint Asset Tokenization Kit has been deployed successfully!
========================================================================

The following endpoints are now available:

  Blockchain JSON-RPC: https://{{ $erpcHost }}
  Blockchain Explorer: https://{{ .Values.blockscout.frontend.ingress.hostname | default "explorer.k8s.orb.local" }}
             The Graph: https://{{ $graphHost }}
                Hasura: https://{{ .Values.hasura.ingress.hostName | default "hasura.k8s.orb.local" }}
               Grafana: https://{{ $grafanaHost }}
{{- if .Values.dapp.enabled }}
                  DApp: https://{{ $dappHost }}
{{- end }}

========================================================================
                      Environment Configuration
========================================================================

To connect your development environment to this deployment, you need
to configure the following environment variables:

Configuration Details:
  Instance Type: standalone
  Blockchain RPC: {{- if and .Values.txsigner.enabled .Values.txsigner.ingress.enabled }} https://{{ $txsignerHost }}{{- else }} https://{{ $erpcHost }}{{- end }}
  Load Balancer: https://{{ $erpcHost }}
  Hasura GraphQL: https://{{ .Values.hasura.ingress.hostName | default "hasura.k8s.orb.local" }}/v1/graphql
  Hasura Admin Secret: {{ .Values.dapp.secretEnv.SETTLEMINT_HASURA_ADMIN_SECRET | default "atk" }}
  Database URL: {{ printf "postgresql://hasura:atk@postgresql.%s:5432/hasura" (include "atk.extractDomain" (dict "url" (.Values.hasura.ingress.hostName | default "hasura.k8s.orb.local"))) }}
  The Graph Endpoint: https://{{ $graphHost }}
  Subgraph Names: kit
{{- if .Values.portal.enabled }}
  Portal GraphQL: https://{{ $portalHost }}/graphql
{{- end }}
  MinIO Endpoint: s3://minio.k8s.orb.local
  MinIO Access Key: atk-service
  MinIO Secret Key: atk-service-secret
  IPFS Endpoint: https://ipfs.console.settlemint.com
  Blockscout GraphQL: https://{{ .Values.blockscout.frontend.ingress.hostname | default "explorer.k8s.orb.local" }}/api/v1/graphql

========================================================================
                    Environment Variable Files
========================================================================

Create the following files in your project root directory:

=== .env ===
SETTLEMINT_BLOCKCHAIN_NODE_JSON_RPC_ENDPOINT={{- if and .Values.txsigner.enabled .Values.txsigner.ingress.enabled }}https://{{ $txsignerHost }}{{- else }}https://{{ $erpcHost }}{{- end }}
SETTLEMINT_BLOCKCHAIN_NODE_OR_LOAD_BALANCER_JSON_RPC_ENDPOINT=https://{{ $erpcHost }}
SETTLEMINT_BLOCKSCOUT_GRAPHQL_ENDPOINT=https://{{ .Values.blockscout.frontend.ingress.hostname | default "explorer.k8s.orb.local" }}/api/v1/graphql
SETTLEMINT_HASURA_ENDPOINT=https://{{ .Values.hasura.ingress.hostName | default "hasura.k8s.orb.local" }}/v1/graphql
SETTLEMINT_INSTANCE=standalone
SETTLEMINT_IPFS_API_ENDPOINT=https://ipfs.console.settlemint.com
SETTLEMINT_MINIO_ACCESS_KEY=atk-service
SETTLEMINT_MINIO_ENDPOINT=s3://minio.k8s.orb.local
{{- if .Values.portal.enabled }}
SETTLEMINT_PORTAL_GRAPHQL_ENDPOINT=https://{{ $portalHost }}/graphql
{{- else }}
# SETTLEMINT_PORTAL_GRAPHQL_ENDPOINT=https://{{ $portalHost }}/graphql  # Portal disabled
{{- end }}
SETTLEMINT_THEGRAPH_DEFAULT_SUBGRAPH=kit
SETTLEMINT_THEGRAPH_SUBGRAPHS_ENDPOINTS=["https://{{ $graphHost }}/subgraphs/name/kit"]

=== .env.local ===
SETTLEMINT_HASURA_ADMIN_SECRET={{ .Values.dapp.secretEnv.SETTLEMINT_HASURA_ADMIN_SECRET | default "atk" }}
SETTLEMINT_HASURA_DATABASE_URL={{ printf "postgresql://hasura:atk@postgresql.%s:5432/hasura" (include "atk.extractDomain" (dict "url" (.Values.hasura.ingress.hostName | default "hasura.k8s.orb.local"))) }}
SETTLEMINT_MINIO_SECRET_KEY=atk-service-secret

========================================================================

{{- if and .Values.txsigner.enabled (not .Values.txsigner.ingress.enabled) }}

Notes:
- Transaction Signer is enabled but not exposed via ingress. To use it
  for signing transactions, either send your transactions with the portal (REST/GraphQL)
  or enable the ingress for txsigner (secure this ingress!) to send eth_sendTransaction calls.

{{- end }}
