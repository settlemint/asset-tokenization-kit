# -- (object) Global Docker image registry
global:
  # -- (string) Global Docker image registry
  imageRegistry: ""
  # -- (list) Global Docker registry secret names as an array
  imagePullSecrets: []
  # -- (string) Global StorageClass for Persistent Volume(s)
  storageClass: ""
  # -- (object) Security contexts configuration (pod and container level)
  securityContexts: {}
  # -- (object) Datastore configurations for dependencies like Redis
  datastores: {}
  # -- (object) Global labels applied to all resources
  labels:
    # -- (string) Kots.io app slug identifier
    kots.io/app-slug: settlemint-atk

# -- (string) String to fully override common.names.fullname
fullnameOverride: "erpc"

# -- (object) Labels to add to all deployed objects
commonLabels: {}

# -- (object) Annotations to add to all deployed objects
commonAnnotations: {}


# -- (object) eRPC image
image:
  # -- (string) eRPC image registry
  registry: ghcr.io
  # -- (string) eRPC image repository
  repository: erpc/erpc
  # -- (string) eRPC image tag (immutable tags are recommended)
  tag: "0.0.57"
  # -- (string) eRPC image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  digest: ""
  # -- (string) eRPC image pull policy
  pullPolicy: IfNotPresent
  # -- (list) eRPC image pull secrets
  pullSecrets: []

# -- (object) Redis parameters for cache/shared state connectivity (overrides global.datastores.erpc.redis)
redis: {}

# -- (int) Number of eRPC replicas to deploy
replicaCount: 1

# -- (object) Update strategy configuration for eRPC deployment
updateStrategy:
  # -- (string) eRPC deployment strategy type
  type: RollingUpdate
  # -- (object) eRPC deployment rolling update configuration parameters
  rollingUpdate: {}

# -- (string) Alternate scheduler
schedulerName: ""

# -- (string) eRPC pods' priority class name
priorityClassName: ""

# -- (list) Topology Spread Constraints for pod assignment
topologySpreadConstraints: []

# -- (object) Extra labels for eRPC pods
podLabels:
  app.kubernetes.io/component: erpc

# -- (object) Annotations for eRPC pods
podAnnotations:
  # -- (string) Enable prometheus scraping
  prometheus.io/scrape: "true"
  # -- (string) Prometheus metrics port
  prometheus.io/port: "4001"
  # -- (string) Prometheus metrics path
  prometheus.io/path: "/metrics"

# -- (string) Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
podAffinityPreset: ""

# -- (string) Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
podAntiAffinityPreset: soft

# -- (object) Node affinity preset configuration
nodeAffinityPreset:
  # -- (string) Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  type: ""
  # -- (string) Node label key to match. Ignored if `affinity` is set
  key: ""
  # -- (list) Node label values to match. Ignored if `affinity` is set
  values: []

# -- (object) Affinity for pod assignment
affinity: {}

# -- (object) Node labels for pod assignment
nodeSelector: {}

# -- (list) Tolerations for pod assignment
tolerations: []

# -- (object) Pod Security Context configuration (overrides global.securityContexts.pod)
podSecurityContext: {}

# -- (object) Container Security Context configuration (overrides global.securityContexts.container)
containerSecurityContext: {}

# -- (object) Runtime tuning for Go garbage collection and memory management
runtime:
  # -- (object) Go garbage collection tuning configuration
  gc:
    # -- (bool) Enable automatic Go GC tuning based on container limits
    enabled: true
    # -- (int) Triggers garbage collection when heap grows by this percentage
    gogc: 30
    # -- (float) Fraction of the pod memory limit used to derive GOMEMLIMIT (set to 1.0 for 100%)
    gomemlimitRatio: 0.85
    # -- (string) Absolute fallback for GOMEMLIMIT (takes precedence when set, e.g. "2GiB")
    gomemlimitOverride: ""

# -- (string) Working directory for the eRPC container
workingDir: "/"

# -- (string) Path where the rendered configuration file will be mounted
configMountPath: "/erpc.yaml"

# -- (object) .env Secret mount configuration
envSecret:
  # -- (bool) Enable mounting a Secret containing a .env file
  enabled: false
  # -- (string) Name of the Secret containing the .env data (required when enabled)
  name: ""
  # -- (string) Path where the .env file will be mounted
  mountPath: "/.env"
  # -- (string) Optional subPath within the Secret to mount (defaults to the key named `.env`)
  subPath: ""
  # -- (int) File mode applied to the mounted Secret (decimal 420 = 0644)
  defaultMode: 420

# -- (object) eRPC containers resource requests and limits
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- (object) Configure eRPC containers' liveness probe
livenessProbe:
  # -- (bool) Enable livenessProbe on eRPC containers
  enabled: true
  # -- (int) Initial delay seconds for livenessProbe
  initialDelaySeconds: 10
  # -- (int) Period seconds for livenessProbe
  periodSeconds: 10
  # -- (int) Timeout seconds for livenessProbe
  timeoutSeconds: 5
  # -- (int) Failure threshold for livenessProbe
  failureThreshold: 3
  # -- (int) Success threshold for livenessProbe
  successThreshold: 1
  # -- (object) HTTP get parameters for livenessProbe
  httpGet:
    # -- (string) Path for httpGet livenessProbe
    path: /healthcheck
    # -- (string) Port for httpGet livenessProbe
    port: http

# -- (object) Configure eRPC containers' readiness probe
readinessProbe:
  # -- (bool) Enable readinessProbe on eRPC containers
  enabled: true
  # -- (int) Initial delay seconds for readinessProbe
  initialDelaySeconds: 5
  # -- (int) Period seconds for readinessProbe
  periodSeconds: 10
  # -- (int) Timeout seconds for readinessProbe
  timeoutSeconds: 5
  # -- (int) Failure threshold for readinessProbe
  failureThreshold: 3
  # -- (int) Success threshold for readinessProbe
  successThreshold: 1
  # -- (object) HTTP get parameters for readinessProbe
  httpGet:
    # -- (string) Path for httpGet readinessProbe
    path: /healthcheck
    # -- (string) Port for httpGet readinessProbe
    port: http

# -- (object) Configure eRPC containers' startup probe
startupProbe:
  # -- (bool) Enable startupProbe on eRPC containers
  enabled: false
  # -- (int) Initial delay seconds for startupProbe
  initialDelaySeconds: 30
  # -- (int) Period seconds for startupProbe
  periodSeconds: 10
  # -- (int) Timeout seconds for startupProbe
  timeoutSeconds: 5
  # -- (int) Failure threshold for startupProbe
  failureThreshold: 10
  # -- (int) Success threshold for startupProbe
  successThreshold: 1

# -- (object) lifecycleHooks for the eRPC container(s) to automate configuration before or after startup
lifecycleHooks: {}

# -- (list) Optionally specify extra list of additional volumes for the eRPC pod(s)
extraVolumes: []

# -- (list) Optionally specify extra list of additional volumeMounts for the eRPC container(s)
extraVolumeMounts: []

# -- (list) Array with extra environment variables to add to eRPC nodes
extraEnvVars: []

# -- (string) Name of existing ConfigMap containing extra env vars for eRPC nodes
extraEnvVarsCM: ""

# -- (string) Name of existing Secret containing extra env vars for eRPC nodes
extraEnvVarsSecret: ""

# -- (object) Init container configuration for dependency checking
initContainer:
  # -- (object) Generic TCP check settings for service dependencies
  tcpCheck:
    # -- (bool) Enable TCP dependency checking init container
    enabled: true
    # -- (object) Container image for TCP check init container
    image:
      # -- (string) TCP check image repository
      repository: ghcr.io/settlemint/btp-waitforit
      # -- (string) TCP check image tag
      tag: v7.7.10
      # -- (string) TCP check image pull policy
      pullPolicy: IfNotPresent
    # -- (int) Timeout in seconds for each dependency check
    timeout: 120
    # -- (object) Resource limits and requests for TCP check container
    resources:
      # -- (object) Resource limits for TCP check container
      limits:
        # -- (string) CPU limit for TCP check container
        cpu: 300m
        # -- (string) Memory limit for TCP check container
        memory: 64Mi
      # -- (object) Resource requests for TCP check container
      requests:
        # -- (string) CPU request for TCP check container
        cpu: 10m
        # -- (string) Memory request for TCP check container
        memory: 32Mi
    # -- (list) List of service dependencies to check before starting
    dependencies:
      # -- (object) Besu RPC service dependency
      -
        # -- (string) Name of the dependency
        name: besu-rpc
        # -- (string) Service endpoint to check (service-name:port)
        endpoint: "besu-node-rpc-0.besu-node-rpc:8545"
      # -- (object) Redis service dependency
      -
        # -- (string) Name of the dependency
        name: redis
        # -- (string) Service endpoint to check (template rendered)
        endpoint: '{{ include "erpc.redis.endpoint" (dict "context" $) }}'

# -- (list) Additional init containers appended verbatim to the workload spec
extraInitContainers: []

# -- (object) Service parameters
service:
  # -- (string) eRPC service type
  type: ClusterIP
  # -- (int) eRPC service HTTP port
  port: 4000
  # -- (int) eRPC service metrics port
  metricsPort: 4001
  # -- (string) Node port for HTTP
  nodePort: ""
  # -- (string) Node port for metrics
  metricsNodePort: ""
  # -- (string) eRPC service Cluster IP
  clusterIP: ""
  # -- (string) eRPC service Load Balancer IP
  loadBalancerIP: ""
  # -- (list) eRPC service Load Balancer sources
  loadBalancerSourceRanges: []
  # -- (string) eRPC service external traffic policy
  externalTrafficPolicy: Cluster
  # -- (object) Additional custom annotations for eRPC service
  annotations: {}
  # -- (list) Extra ports to expose in the eRPC service (normally used with the `sidecar` value)
  extraPorts: []
  # -- (string) Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  sessionAffinity: None
  # -- (object) Additional settings for the sessionAffinity
  sessionAffinityConfig: {}

# -- (object) Ingress parameters
ingress:
  # -- (bool) Enable ingress record generation for eRPC
  enabled: true
  # -- (string) Ingress path type
  pathType: ImplementationSpecific
  # -- (string) Force Ingress API version (automatically detected if not set)
  apiVersion: ""
  # -- (string) Default host for the ingress record
  hostname: besu.k8s.orb.local
  # -- (string) IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ingressClassName: "atk-nginx"
  # -- (string) Default path for the ingress record
  path: /
  # -- (object) Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  annotations: {}
  # -- (bool) Enable TLS configuration for the host defined at `ingress.hostname` parameter
  tls: false
  # -- (bool) Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  selfSigned: false
  # -- (list) An array with additional hostname(s) to be covered with the ingress record
  extraHosts: []
  # -- (list) An array with additional arbitrary paths that may need to be added to the ingress under the main host
  extraPaths: []
  # -- (list) TLS configuration for additional hostname(s) to be covered with this ingress record
  extraTls: []
  # -- (list) Custom TLS certificates as secrets
  secrets: []
  # -- (list) Additional rules to be covered with this ingress record
  extraRules: []

# -- (object) OpenShift Route parameters
openShiftRoute:
  # -- (bool) Enable OpenShift route creation for eRPC
  enabled: false
  # -- (object) Additional annotations for the OpenShift route resource
  annotations: {}
  # -- (string) Hostname exposed via the OpenShift route
  host: besu.k8s.orb.local
  # -- (string) HTTP path exposed via the OpenShift route
  path: /
  # -- (string) Wildcard policy applied to the route
  wildcardPolicy: None
  # -- (object) Service port configuration for the route target
  port:
    # -- (string) Service target port name (must exist on the eRPC service)
    targetPort: http
  # -- (object) Primary service weight configuration
  to:
    # -- (int) Weight assigned to the eRPC service backend
    weight: 100
  # -- (list) Additional backends for weighted routing
  alternateBackends: []
  # -- (object) TLS configuration for the OpenShift route
  tls: null

# -- Service account for eRPC pods
serviceAccount:
  # -- (bool) Specifies whether a ServiceAccount should be created
  create: true
  # -- (string) The name of the ServiceAccount to use.
  name: ""
  # -- (bool) Automount service account token for the deployment controller service account
  automountServiceAccountToken: false
  # -- (object) Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
  annotations: {}
  # -- (object) Extra labels to be added to the service account
  labels: {}

# -- (object) Autoscaling configuration for eRPC
autoscaling:
  # -- (bool) Enable autoscaling for eRPC
  enabled: false
  # -- (int) Maximum number of eRPC replicas
  maxReplicas: 3
  # -- (int) Minimum number of eRPC replicas
  minReplicas: 1
  # -- (list) Built-in metrics configuration
  builtInMetrics:
    # -- (object) CPU utilization metric configuration
    -
      # -- (string) Metric type (Resource, Pods, Object, External)
      type: Resource
      # -- (object) Resource metric configuration
      resource:
        # -- (string) Resource name to monitor
        name: cpu
        # -- (object) Target metric configuration
        target:
          # -- (string) Target type (Utilization, Value, AverageValue)
          type: Utilization
          # -- (int) Target average CPU utilization percentage
          averageUtilization: 80
    # -- (object) Memory utilization metric configuration
    -
      # -- (string) Metric type (Resource, Pods, Object, External)
      type: Resource
      # -- (object) Resource metric configuration
      resource:
        # -- (string) Resource name to monitor
        name: memory
        # -- (object) Target metric configuration
        target:
          # -- (string) Target type (Utilization, Value, AverageValue)
          type: Utilization
          # -- (int) Target average memory utilization percentage
          averageUtilization: 80
  # -- (list) Custom metrics configuration
  customMetrics: []

# -- (object) Pod disruption budget configuration
pdb:
  # -- (bool) If true, create a pod disruption budget for pods.
  enabled: false
  # -- (string) Minimum number/percentage of pods that should remain scheduled
  minAvailable: ""
  # -- (string) Maximum number/percentage of pods that may be made unavailable. Defaults to 1 if both pdb.minAvailable and pdb.maxUnavailable are empty.
  maxUnavailable: ""

# -- (object) Network policies configuration
networkPolicy:
  # -- (bool) Enable creation of NetworkPolicy resources
  enabled: false
  # -- (bool) The Policy model to apply
  allowExternal: true
  # -- (bool) Allow the pod to access any range of port and all destinations.
  allowExternalEgress: true
  # -- (bool) Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
  addExternalClientAccess: true
  # -- (list) Add extra ingress rules to the NetworkPolicy
  extraIngress:
    # -- (object) Ingress rule allowing access from specific pods
    -
      # -- (list) Source pod selectors for this ingress rule
      from:
        # -- (object) Allow traffic from dapp pods
        -
          # -- (object) Pod selector for dapp
          podSelector:
            # -- (object) Label selector for dapp pods
            matchLabels:
              # -- (string) App name label for dapp
              app.kubernetes.io/name: dapp
        # -- (object) Allow traffic from txsigner pods
        -
          # -- (object) Pod selector for txsigner
          podSelector:
            # -- (object) Label selector for txsigner pods
            matchLabels:
              # -- (string) App name label for txsigner
              app.kubernetes.io/name: txsigner
        # -- (object) Allow traffic from ingress-nginx pods
        -
          # -- (object) Pod selector for ingress-nginx
          podSelector:
            # -- (object) Label selector for ingress-nginx pods
            matchLabels:
              # -- (string) App name label for ingress-nginx
              app.kubernetes.io/name: ingress-nginx
        # -- (object) Allow traffic from any pod in same namespace
        -
          # -- (object) Empty pod selector matches all pods
          podSelector: {}
      # -- (list) Port configurations for this ingress rule
      ports:
        # -- (object) RPC port configuration
        -
          # -- (string) Protocol for RPC traffic
          protocol: TCP
          # -- (int) RPC port number
          port: 4000
        # -- (object) Metrics port configuration
        -
          # -- (string) Protocol for metrics traffic
          protocol: TCP
          # -- (int) Metrics port number
          port: 4001
  # -- (list) Add extra egress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
  extraEgress:
    # -- (object) Egress rule for DNS resolution
    -
      # -- (list) Destination selectors for DNS traffic
      to:
        # -- (object) Allow DNS queries to kube-dns pods
        -
          # -- (object) Namespace selector (empty matches all namespaces)
          namespaceSelector: {}
          # -- (object) Pod selector for kube-dns
          podSelector:
            # -- (object) Label selector for kube-dns pods
            matchLabels:
              # -- (string) Kubernetes app label for DNS
              k8s-app: kube-dns
      # -- (list) Port configurations for DNS egress
      ports:
        # -- (object) DNS port configuration
        -
          # -- (string) Protocol for DNS queries
          protocol: UDP
          # -- (int) DNS port number
          port: 53
    # -- (object) Egress rule for Besu node access
    -
      # -- (list) Destination selectors for Besu traffic
      to:
        # -- (object) Allow traffic to Besu statefulset pods
        -
          # -- (object) Pod selector for Besu nodes
          podSelector:
            # -- (object) Label selector for Besu pods
            matchLabels:
              # -- (string) App name label for Besu statefulset
              app.kubernetes.io/name: besu-statefulset
      # -- (list) Port configurations for Besu egress
      ports:
        # -- (object) Besu RPC port configuration
        -
          # -- (string) Protocol for Besu RPC traffic
          protocol: TCP
          # -- (int) Besu RPC port number
          port: 8545
  # -- (object) Ingress rules configuration
  ingressRules:
    # -- (object) Access restrictions configuration
    accessOnlyFrom:
      # -- (bool) Enable ingress rule that makes eRPC only accessible from a particular origin.
      enabled: false
      # -- (object) Namespace selector label that is allowed to access eRPC. This label will be used to identified allowed namespace(s).
      namespaceSelector: {}
      # -- (object) Pods selector label that is allowed to access eRPC. This label will be used to identified allowed pod(s).
      podSelector: {}

# -- (object) Test parameters
tests:
  # -- (object) Image for test pods
  image:
    # -- (string) Test image registry
    registry: docker.io
    # -- (string) Test image repository
    repository: busybox
    # -- (string) Test image tag
    tag: 1.37.0
    # -- (string) Test image pull policy
    pullPolicy: IfNotPresent

# -- (object) eRPC configuration
config:
  # -- (string) Log level for eRPC (debug, info, warn, error)
  logLevel: info
  # -- (object) HTTP server configuration
  server:
    # -- (string) IPv4 address to bind HTTP server to
    httpHostV4: 0.0.0.0
    # -- (int) HTTP server port
    httpPort: 4000
    # -- (string) Duration to wait before starting graceful shutdown
    waitBeforeShutdown: 30s
    # -- (string) Duration to wait after graceful shutdown completes
    waitAfterShutdown: 30s
  # -- (object) Prometheus metrics endpoint configuration
  metrics:
    # -- (bool) Enable metrics endpoint
    enabled: true
    # -- (string) IPv4 address to bind metrics server to
    hostV4: 0.0.0.0
    # -- (int) Metrics server port
    port: 4001
  # -- (list) Array of project configurations (will be overridden by parent chart). Chain IDs default from .Values.global.chainId when omitted (see configmap template).
  projects:
    # -- (object) Project configuration entry
    -
      # -- (string) Unique project identifier
      id: settlemint
      # -- (list) Network configurations for this project
      networks:
        # -- (object) Network configuration entry
        -
          # -- (string) Blockchain architecture type (evm, substrate, etc.)
          architecture: evm
          # -- (object) EVM-specific configuration
          evm:
            # -- (object) Data integrity enforcement rules
            integrity:
              # -- (bool) Enforce consistent highest block number across upstreams
              enforceHighestBlock: true
              # -- (bool) Enforce valid block range for eth_getLogs queries
              enforceGetLogsBlockRange: true
          # -- (object) Default directives applied to all requests
          directiveDefaults:
            # -- (bool) Retry requests that return empty results
            retryEmpty: true
          # -- (list) Failsafe policies for request handling
          failsafe:
            # -- (object) Failsafe policy for eth_getLogs method
            -
              # -- (string) RPC method pattern to match (supports wildcards)
              matchMethod: "eth_getLogs"
              # -- (object) Timeout configuration for this method
              timeout:
                # -- (string) Maximum duration for request completion
                duration: 45s
              # -- (object) Retry configuration for failed requests
              retry:
                # -- (int) Maximum number of retry attempts
                maxAttempts: 3
                # -- (string) Initial delay before first retry
                delay: 500ms
                # -- (int) Multiplicative factor for exponential backoff
                backoffFactor: 2
                # -- (string) Maximum delay between retries
                backoffMaxDelay: 10s
                # -- (string) Random jitter added to retry delay
                jitter: 300ms
              # -- (object) Hedge configuration for parallel requests
              hedge:
                # -- (float) Latency quantile threshold for hedging (0.0-1.0)
                quantile: 0.9
                # -- (string) Minimum delay before sending hedge request
                minDelay: 200ms
                # -- (string) Maximum delay before sending hedge request
                maxDelay: 4s
                # -- (int) Maximum number of concurrent hedge requests
                maxCount: 1
            # -- (object) Failsafe policy for trace/debug methods
            -
              # -- (string) RPC method pattern for trace, debug, and arbtrace methods
              matchMethod: "trace_*|debug_*|arbtrace_*"
              # -- (object) Timeout configuration for trace/debug methods
              timeout:
                # -- (string) Maximum duration for trace/debug requests
                duration: 90s
              # -- (object) Retry configuration for trace/debug methods
              retry:
                # -- (int) Maximum retry attempts for trace/debug (limited to 1)
                maxAttempts: 1
            # -- (object) Failsafe policy for block and transaction queries
            -
              # -- (string) RPC method pattern for getBlock and getTransaction methods
              matchMethod: "eth_getBlock*|eth_getTransaction*"
              # -- (object) Timeout configuration for block/transaction queries
              timeout:
                # -- (string) Maximum duration for block/transaction queries
                duration: 6s
              # -- (object) Retry configuration for block/transaction queries
              retry:
                # -- (int) Maximum retry attempts for block/transaction queries
                maxAttempts: 2
                # -- (string) Initial delay before first retry
                delay: 200ms
                # -- (float) Multiplicative factor for exponential backoff
                backoffFactor: 1.5
                # -- (string) Maximum delay between retries
                backoffMaxDelay: 3s
                # -- (string) Random jitter added to retry delay
                jitter: 150ms
            # -- (object) Failsafe policy for unfinalized/realtime requests
            -
              # -- (string) RPC method pattern matching all methods
              matchMethod: "*"
              # -- (list) Block finality states to match
              matchFinality:
                # -- (string) Match unfinalized blocks
                - unfinalized
                # -- (string) Match realtime blocks
                - realtime
              # -- (object) Timeout configuration for unfinalized requests
              timeout:
                # -- (string) Maximum duration for unfinalized requests
                duration: 4s
              # -- (object) Retry configuration for unfinalized requests
              retry:
                # -- (int) Maximum retry attempts for unfinalized requests
                maxAttempts: 2
                # -- (string) Initial delay before first retry
                delay: 150ms
                # -- (string) Random jitter added to retry delay
                jitter: 150ms
              # -- (object) Hedge configuration for unfinalized requests
              hedge:
                # -- (string) Delay before sending hedge request
                delay: 250ms
                # -- (int) Maximum number of concurrent hedge requests
                maxCount: 1
            # -- (object) Failsafe policy for finalized block requests
            -
              # -- (string) RPC method pattern matching all methods
              matchMethod: "*"
              # -- (list) Block finality states to match (finalized only)
              matchFinality:
                # -- (string) Match finalized blocks
                - finalized
              # -- (object) Timeout configuration for finalized requests
              timeout:
                # -- (string) Maximum duration for finalized requests
                duration: 20s
              # -- (object) Retry configuration for finalized requests
              retry:
                # -- (int) Maximum retry attempts for finalized requests
                maxAttempts: 4
                # -- (string) Initial delay before first retry
                delay: 400ms
                # -- (float) Multiplicative factor for exponential backoff
                backoffFactor: 1.8
                # -- (string) Maximum delay between retries
                backoffMaxDelay: 8s
                # -- (string) Random jitter added to retry delay
                jitter: 250ms
            # -- (object) Default fallback failsafe policy for all methods
            -
              # -- (string) RPC method pattern matching all methods (catch-all)
              matchMethod: "*"
              # -- (object) Timeout configuration for default policy
              timeout:
                # -- (string) Maximum duration for default requests
                duration: 12s
              # -- (object) Retry configuration for default policy
              retry:
                # -- (int) Maximum retry attempts for default policy
                maxAttempts: 3
                # -- (string) Initial delay before first retry
                delay: 300ms
                # -- (float) Multiplicative factor for exponential backoff
                backoffFactor: 1.4
                # -- (string) Maximum delay between retries
                backoffMaxDelay: 5s
                # -- (string) Random jitter added to retry delay
                jitter: 200ms
              # -- (object) Hedge configuration for default policy
              hedge:
                # -- (float) Latency quantile threshold for hedging (0.0-1.0)
                quantile: 0.95
                # -- (string) Minimum delay before sending hedge request
                minDelay: 120ms
                # -- (string) Maximum delay before sending hedge request
                maxDelay: 2s
                # -- (int) Maximum number of concurrent hedge requests
                maxCount: 2
      # -- (list) Upstream RPC node configurations for load balancing
      upstreams:
        # -- (object) First Besu RPC node upstream
        -
          # -- (string) Unique identifier for this upstream
          id: besu-node-rpc-0
          # -- (string) RPC endpoint URL for this upstream
          endpoint: http://besu-node-rpc-0.besu-node-rpc:8545
          # -- (object) EVM-specific configuration for this upstream
          evm: {}
          # -- (list) Failsafe policies for this upstream
          failsafe:
            # -- (object) Circuit breaker policy for this upstream
            -
              # -- (string) RPC method pattern matching all methods
              matchMethod: "*"
              # -- (object) Circuit breaker configuration
              circuitBreaker:
                # -- (int) Number of failures before opening circuit
                failureThresholdCount: 40
                # -- (int) Capacity of failure counter window
                failureThresholdCapacity: 80
                # -- (string) Duration before attempting to close circuit
                halfOpenAfter: 120s
                # -- (int) Number of successes needed to close circuit
                successThresholdCount: 3
                # -- (int) Capacity of success counter window
                successThresholdCapacity: 10
        # -- (object) Second Besu RPC node upstream
        -
          # -- (string) Unique identifier for this upstream
          id: besu-node-rpc-1
          # -- (string) RPC endpoint URL for this upstream
          endpoint: http://besu-node-rpc-1.besu-node-rpc:8545
          # -- (object) EVM-specific configuration for this upstream
          evm: {}
          # -- (list) Failsafe policies for this upstream
          failsafe:
            # -- (object) Circuit breaker policy for this upstream
            -
              # -- (string) RPC method pattern matching all methods
              matchMethod: "*"
              # -- (object) Circuit breaker configuration
              circuitBreaker:
                # -- (int) Number of failures before opening circuit
                failureThresholdCount: 40
                # -- (int) Capacity of failure counter window
                failureThresholdCapacity: 80
                # -- (string) Duration before attempting to close circuit
                halfOpenAfter: 120s
                # -- (int) Number of successes needed to close circuit
                successThresholdCount: 3
                # -- (int) Capacity of success counter window
                successThresholdCapacity: 10
  # -- (object) Database configuration for caching and shared state
  database:
    # -- (object) EVM JSON-RPC response caching configuration
    evmJsonRpcCache:
      # -- (list) Cache connector configurations
      connectors:
        # -- (object) Redis cache connector
        -
          # -- (string) Unique identifier for this connector
          id: redis-cache
          # -- (string) Database driver type
          driver: redis
          # -- (object) Redis-specific configuration
          redis:
            # -- (string) Redis connection URI (template rendered)
            uri: '{{ include "erpc.redis.uriFor" (dict "context" $ "dbKey" "cacheDb" "queryKey" "cacheQuery") }}'
      # -- (object) Compression configuration for cached data
      compression:
        # -- (bool) Enable compression for cached responses
        enabled: true
        # -- (string) Compression algorithm to use (zstd, gzip, lz4)
        algorithm: zstd
        # -- (string) Compression level for zstd (fastest, default, better, best)
        zstdLevel: default
        # -- (int) Minimum response size in bytes before applying compression
        threshold: 1024
      # -- (list) Cache policies defining what to cache and for how long
      policies:
        # -- (object) Cache policy for finalized blocks
        -
          # -- (string) Network pattern to match (supports wildcards)
          network: "*"
          # -- (string) RPC method pattern to match (supports wildcards)
          method: "*"
          # -- (string) Block finality state to match
          finality: finalized
          # -- (string) Connector ID to use for this policy
          connector: redis-cache
          # -- (int) Time-to-live in seconds (0 = infinite)
          ttl: 0
        # -- (object) Cache policy for unfinalized blocks
        -
          # -- (string) Network pattern to match (supports wildcards)
          network: "*"
          # -- (string) RPC method pattern to match (supports wildcards)
          method: "*"
          # -- (string) Block finality state to match
          finality: unfinalized
          # -- (string) Connector ID to use for this policy
          connector: redis-cache
          # -- (string) Time-to-live duration
          ttl: 5s
        # -- (object) Cache policy for realtime blocks
        -
          # -- (string) Network pattern to match (supports wildcards)
          network: "*"
          # -- (string) RPC method pattern to match (supports wildcards)
          method: "*"
          # -- (string) Block finality state to match
          finality: realtime
          # -- (string) Connector ID to use for this policy
          connector: redis-cache
          # -- (string) Time-to-live duration
          ttl: 5s
    # -- (object) Shared state configuration for distributed coordination
    sharedState:
      # -- (string) Unique key prefix for this cluster's shared state
      clusterKey: "atk-erpc-shared"
      # -- (object) Connector configuration for shared state storage
      connector:
        # -- (string) Database driver type
        driver: redis
        # -- (object) Redis-specific configuration
        redis:
          # -- (string) Redis connection URI (template rendered)
          uri: '{{ include "erpc.redis.uriFor" (dict "context" $ "dbKey" "sharedStateDb" "queryKey" "sharedStateQuery") }}'
      # -- (string) Timeout for fallback when shared state is unavailable
      fallbackTimeout: 5s
      # -- (string) Time-to-live for distributed locks
      lockTtl: 30s
