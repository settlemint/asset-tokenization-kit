# -- (object) Global Docker image registry
global:
  # -- (string) Global Docker image registry
  imageRegistry: ""
  # -- (list) Global Docker registry secret names as an array
  imagePullSecrets: []
  # -- (string) Global StorageClass for Persistent Volume(s)
  storageClass: ""
  labels:
    kots.io/app-slug: settlemint-atk

# -- (string) String to fully override common.names.fullname
fullnameOverride: "portal"

# -- (string) String to partially override common.names.fullname template (will maintain the release name)
nameOverride: ""

# -- (object) Labels to add to all deployed objects
commonLabels: {}

# -- (object) Annotations to add to all deployed objects
commonAnnotations: {}

# -- (object) Portal image
image:
  # -- (string) Portal image registry
  registry: ghcr.io
  # -- (string) Portal image repository
  repository: settlemint/btp-scs-portal
  # -- (string) Portal image tag (immutable tags are recommended)
  tag: "8.6.8"
  # -- (string) Portal image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  digest: ""
  # -- (string) Portal image pull policy
  pullPolicy: IfNotPresent
  # -- (list) Portal image pull secrets
  pullSecrets: []

# -- (int) Number of Portal replicas to deploy
replicaCount: 1

# -- (object) Update strategy configuration for Portal deployment
updateStrategy:
  # -- (string) Portal deployment strategy type
  type: RollingUpdate
  # -- (object) Portal deployment rolling update configuration parameters
  rollingUpdate: {}

# -- (string) Alternate scheduler
schedulerName: ""

# -- (string) Portal pods' priority class name
priorityClassName: ""

# -- (list) Topology Spread Constraints for pod assignment
topologySpreadConstraints: []

# -- (object) Extra labels for Portal pods
podLabels:
  app.kubernetes.io/component: portal

# -- (object) Annotations for Portal pods
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "3000"
  prometheus.io/path: "/portal-metrics"

# -- (string) Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
podAffinityPreset: ""

# -- (string) Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
podAntiAffinityPreset: soft

# -- (object) Node affinity preset configuration
nodeAffinityPreset:
  # -- (string) Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  type: ""
  # -- (string) Node label key to match. Ignored if `affinity` is set
  key: ""
  # -- (list) Node label values to match. Ignored if `affinity` is set
  values: []

# -- (object) Affinity for pod assignment
affinity: {}

# -- (object) Node labels for pod assignment
nodeSelector: {}

# -- (list) Tolerations for pod assignment
tolerations: []

# -- (object) Pod Security Context configuration (overrides global.securityContexts.pod)
podSecurityContext: {}

# -- (object) Container Security Context configuration (overrides global.securityContexts.container)
containerSecurityContext: {}

# -- (object) Portal containers resource requests and limits
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- (object) Configure Portal containers' liveness probe
livenessProbe:
  # -- (bool) Enable livenessProbe on Portal containers
  enabled: true
  # -- (int) Initial delay seconds for livenessProbe
  initialDelaySeconds: 10
  # -- (int) Period seconds for livenessProbe
  periodSeconds: 10
  # -- (int) Timeout seconds for livenessProbe
  timeoutSeconds: 5
  # -- (int) Failure threshold for livenessProbe
  failureThreshold: 3
  # -- (int) Success threshold for livenessProbe
  successThreshold: 1
  # -- (object) TCP socket parameters for livenessProbe
  tcpSocket:
    # -- (string) Port for tcpSocket livenessProbe
    port: http

# -- (object) Configure Portal containers' readiness probe
readinessProbe:
  # -- (bool) Enable readinessProbe on Portal containers
  enabled: true
  # -- (int) Initial delay seconds for readinessProbe
  initialDelaySeconds: 5
  # -- (int) Period seconds for readinessProbe
  periodSeconds: 10
  # -- (int) Timeout seconds for readinessProbe
  timeoutSeconds: 5
  # -- (int) Failure threshold for readinessProbe
  failureThreshold: 3
  # -- (int) Success threshold for readinessProbe
  successThreshold: 1
  # -- (object) TCP socket parameters for readinessProbe
  tcpSocket:
    # -- (string) Port for tcpSocket readinessProbe
    port: http

# -- (object) Configure Portal containers' startup probe
startupProbe:
  # -- (bool) Enable startupProbe on Portal containers
  enabled: false
  # -- (int) Initial delay seconds for startupProbe
  initialDelaySeconds: 30
  # -- (int) Period seconds for startupProbe
  periodSeconds: 10
  # -- (int) Timeout seconds for startupProbe
  timeoutSeconds: 5
  # -- (int) Failure threshold for startupProbe
  failureThreshold: 10
  # -- (int) Success threshold for startupProbe
  successThreshold: 1

# -- (object) lifecycleHooks for the Portal container(s) to automate configuration before or after startup
lifecycleHooks: {}

# -- (list) Optionally specify extra list of additional volumes for the Portal pod(s)
extraVolumes: []

# -- (list) Optionally specify extra list of additional volumeMounts for the Portal container(s)
extraVolumeMounts: []

# -- (list) Array with extra environment variables to add to Portal nodes
extraEnvVars: []

# -- (string) Name of existing ConfigMap containing extra env vars for Portal nodes
extraEnvVarsCM: ""

# -- (string) Name of existing Secret containing extra env vars for Portal nodes
extraEnvVarsSecret: ""

initContainer:
  downloadAbi:
    # -- (bool) Enable the ABI download init container that syncs ConfigMaps via network-bootstrapper.
    enabled: true
    # -- (string) Directory where ABI files are written before being shared with the portal container.
    outputDirectory: /shared-abis
    image:
      # -- (string) OCI image hosting the network-bootstrapper CLI.
      repository: ghcr.io/settlemint/network-bootstrapper
      # -- (string) Image tag for the network-bootstrapper CLI.
      tag: "1.2.3"
      # -- (string) Image pull policy for the ABI download init container.
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 150m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi
    securityContext: {}

  tcpCheck:
    enabled: true
    image:
      repository: ghcr.io/settlemint/btp-waitforit
      tag: v7.7.10
      pullPolicy: IfNotPresent
    timeout: 120
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
      requests:
        cpu: 10m
        memory: 32Mi
    dependencies:
      - name: postgresql
        endpoint: "postgresql:5432"

extraInitContainers: []

# -- (object) RBAC configuration controlling whether Role/RoleBinding resources are rendered.
rbac:
  # -- (bool) Create Role/RoleBinding granting the portal access to ABI ConfigMaps.
  create: true

# -- (object) Service parameters
service:
  # -- (string) Portal service type
  type: ClusterIP
  # -- (int) Portal service HTTP port
  port: 3000
  # -- (int) Portal service GraphQL port
  graphqlPort: 3001
  # -- (string) Node port for HTTP
  nodePort: ""
  # -- (string) Node port for GraphQL
  graphqlNodePort: ""
  # -- (string) Portal service Cluster IP
  clusterIP: ""
  # -- (string) Portal service Load Balancer IP
  loadBalancerIP: ""
  # -- (list) Portal service Load Balancer sources
  loadBalancerSourceRanges: []
  # -- (string) Portal service external traffic policy
  externalTrafficPolicy: Cluster
  # -- (object) Additional custom annotations for Portal service
  annotations: {}
  # -- (list) Extra ports to expose in the Portal service (normally used with the `sidecar` value)
  extraPorts: []
  # -- (string) Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  sessionAffinity: None
  # -- (object) Additional settings for the sessionAffinity
  sessionAffinityConfig: {}

# -- (object) Ingress parameters
ingress:
  # -- (bool) Enable ingress record generation for Portal
  enabled: true
  # -- (string) Ingress path type
  pathType: ImplementationSpecific
  # -- (string) Force Ingress API version (automatically detected if not set)
  apiVersion: ""
  # -- (string) Default host for the ingress record
  hostname: portal.k8s.orb.local
  # -- (string) IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ingressClassName: "atk-nginx"
  # -- (string) Default path for the ingress record
  path: /
  # -- (string) Additional path for GraphQL endpoint
  graphqlPath: /graphql
  # -- (object) Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  annotations: {}
  # -- (bool) Enable TLS configuration for the host defined at `ingress.hostname` parameter
  tls: false
  # -- (bool) Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  selfSigned: false
  # -- (list) An array with additional hostname(s) to be covered with the ingress record
  extraHosts: []
  # -- (list) An array with additional arbitrary paths that may need to be added to the ingress under the main host
  extraPaths: []
  # -- (list) TLS configuration for additional hostname(s) to be covered with this ingress record
  extraTls: []
  # -- (list) Custom TLS certificates as secrets
  secrets: []
  # -- (list) Additional rules to be covered with this ingress record
  extraRules: []

# -- (object) OpenShift Route parameters
openShiftRoute:
  # -- (bool) Enable OpenShift route creation for Portal
  enabled: false
  # -- (object) Additional annotations for the OpenShift route resource
  annotations: {}
  # -- (string) Hostname exposed via the OpenShift route
  host: portal.k8s.orb.local
  # -- (string) HTTP path exposed via the OpenShift route
  path: /
  # -- (string) Wildcard policy to apply to the route
  wildcardPolicy: None
  # -- (object) Service port configuration for the route target
  port:
    # -- (string) Service target port name (must exist on the Portal service)
    targetPort: http
  # -- (object) Primary service weight configuration
  to:
    # -- (int) Weight assigned to the Portal service backend
    weight: 100
  # -- (list) Additional backends for weighted routing
  alternateBackends: []
  # -- (object) TLS configuration for the OpenShift route
  tls: null
  # -- (object) GraphQL route specific configuration
  graphql:
    # -- (bool) Enable a dedicated route for the GraphQL endpoint
    enabled: true
    # -- (object) Additional annotations for the GraphQL route resource
    annotations: {}
    # -- (string) Hostname exposed via the GraphQL route (defaults to openShiftRoute.host when empty)
    host: ""
    # -- (string) HTTP path exposed via the GraphQL route (defaults to ingress.graphqlPath)
    path: ""
    # -- (string) Wildcard policy to apply to the GraphQL route (defaults to openShiftRoute.wildcardPolicy)
    wildcardPolicy: ""
    # -- (object) Service port configuration for the GraphQL route target
    port:
      # -- (string) Service target port name (defaults to `graphql`)
      targetPort: ""
    # -- (object) Primary service weight configuration for the GraphQL route
    to:
      # -- (string) Weight assigned to the Portal service backend (defaults to openShiftRoute.to.weight)
      weight: ""
    # -- (list) Additional backends for weighted routing (same structure as openShiftRoute.alternateBackends)
    alternateBackends: []
    # -- (object) TLS configuration for the GraphQL route
    tls: null

# -- (object) Service account for Portal pods
serviceAccount:
  # -- (bool) Specifies whether a ServiceAccount should be created
  create: true
  # -- (string) The name of the ServiceAccount to use.
  name: ""
  # -- (bool) Automount service account token for the deployment controller service account
  automountServiceAccountToken: true
  # -- (object) Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
  annotations: {}
  # -- (object) Extra labels to be added to the service account
  labels: {}

# -- (object) Autoscaling configuration for Portal
autoscaling:
  # -- (bool) Enable autoscaling for Portal
  enabled: false
  # -- (int) Maximum number of Portal replicas
  maxReplicas: 3
  # -- (int) Minimum number of Portal replicas
  minReplicas: 1
  # -- (list) Built-in metrics configuration
  builtInMetrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  # -- (list) Custom metrics configuration
  customMetrics: []

# -- (object) Pod disruption budget configuration
pdb:
  # -- (bool) If true, create a pod disruption budget for pods.
  enabled: false
  # -- (string) Minimum number/percentage of pods that should remain scheduled
  minAvailable: ""
  # -- (string) Maximum number/percentage of pods that may be made unavailable. Defaults to 1 if both pdb.minAvailable and pdb.maxUnavailable are empty.
  maxUnavailable: ""

# -- (object) Network policies configuration
networkPolicy:
  # -- (bool) Enable creation of NetworkPolicy resources
  enabled: false
  # -- (bool) The Policy model to apply
  allowExternal: true
  # -- (bool) Allow the pod to access any range of port and all destinations.
  allowExternalEgress: true
  # -- (bool) Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
  addExternalClientAccess: true
  # -- (list) Add extra ingress rules to the NetworkPolicy
  extraIngress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: dapp
        - podSelector: {}  # Same namespace
      ports:
        - protocol: TCP
          port: 3000  # HTTP port
        - protocol: TCP
          port: 3001  # GraphQL port
  # -- (list) Add extra egress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
  extraEgress:
    # Allow DNS resolution
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
    # Allow access to PostgreSQL
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: postgresql-ha
      ports:
        - protocol: TCP
          port: 5432
    # Allow access to Redis
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: redis
      ports:
        - protocol: TCP
          port: 6379
    # Allow external HTTPS (for external APIs if needed)
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
  # -- (object) Ingress rules configuration
  ingressRules:
    # -- (object) Access restrictions configuration
    accessOnlyFrom:
      # -- (bool) Enable ingress rule that makes Portal only accessible from a particular origin.
      enabled: false
      # -- (object) Namespace selector label that is allowed to access Portal. This label will be used to identified allowed namespace(s).
      namespaceSelector: {}
      # -- (object) Pods selector label that is allowed to access Portal. This label will be used to identified allowed pod(s).
      podSelector: {}

# -- (object) Test parameters
tests:
  # -- (object) Image for test pods
  image:
    # -- (string) Test image registry
    registry: docker.io
    # -- (string) Test image repository
    repository: busybox
    # -- (string) Test image tag
    tag: 1.37.0
    # -- (string) Test image pull policy
    pullPolicy: IfNotPresent

# -- (object) Portal configuration
config:
  # -- (object) Network configuration
  network:
    # -- (string) Network ID (defaults to global.chainId when unset)
    networkId:
    # -- (string) Network name (defaults to global.chainName when unset)
    networkName:
    # -- (string) Node RPC URL
    nodeRpcUrl: "http://txsigner:3000"

  # -- (object) PostgreSQL overrides merged with global.datastores.portal.postgresql
  postgresql: {}

  # -- (object) Redis overrides merged with global.datastores.portal.redis
  redis: {}
