{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "portal values",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "imageRegistry": {
          "type": "string",
          "default": ""
        },
        "imagePullSecrets": {
          "type": "array",
          "description": "Global Docker registry secret names as an array",
          "items": {}
        },
        "storageClass": {
          "description": "Global StorageClass for Persistent Volume(s)",
          "type": "string",
          "default": ""
        },
        "labels": {
          "type": "object",
          "properties": {
            "kots.io/app-slug": {
              "type": "string",
              "default": "settlemint-atk"
            }
          },
          "description": "Global labels to add to all resources",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Global Docker image registry",
      "additionalProperties": false
    },
    "fullnameOverride": {
      "description": "String to fully override common.names.fullname",
      "type": "string",
      "default": "portal"
    },
    "nameOverride": {
      "description": "String to partially override common.names.fullname template (will maintain the release name)",
      "type": "string",
      "default": ""
    },
    "commonLabels": {
      "type": "object",
      "properties": {},
      "description": "Labels to add to all deployed objects",
      "additionalProperties": true
    },
    "commonAnnotations": {
      "type": "object",
      "properties": {},
      "description": "Annotations to add to all deployed objects",
      "additionalProperties": true
    },
    "image": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "default": "ghcr.io"
        },
        "repository": {
          "description": "Portal image repository",
          "type": "string",
          "default": "settlemint/btp-scs-portal"
        },
        "tag": {
          "description": "Portal image tag (immutable tags are recommended)",
          "type": "string",
          "default": "8.6.9"
        },
        "digest": {
          "description": "Portal image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
          "type": "string",
          "default": ""
        },
        "pullPolicy": {
          "description": "Portal image pull policy",
          "type": "string",
          "default": "IfNotPresent"
        },
        "pullSecrets": {
          "type": "array",
          "description": "Portal image pull secrets",
          "items": {}
        }
      },
      "description": "Portal image",
      "additionalProperties": false
    },
    "replicaCount": {
      "description": "Number of Portal replicas to deploy",
      "type": "integer",
      "default": 1
    },
    "updateStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "RollingUpdate"
        },
        "rollingUpdate": {
          "type": "object",
          "properties": {},
          "description": "Portal deployment rolling update configuration parameters",
          "additionalProperties": true
        }
      },
      "description": "Update strategy configuration for Portal deployment",
      "additionalProperties": false
    },
    "schedulerName": {
      "description": "Alternate scheduler",
      "type": "string",
      "default": ""
    },
    "priorityClassName": {
      "description": "Portal pods' priority class name",
      "type": "string",
      "default": ""
    },
    "topologySpreadConstraints": {
      "type": "array",
      "description": "Topology Spread Constraints for pod assignment",
      "items": {}
    },
    "podLabels": {
      "type": "object",
      "properties": {
        "app.kubernetes.io/component": {
          "type": "string",
          "default": "portal"
        }
      },
      "description": "Extra labels for Portal pods",
      "additionalProperties": {
        "type": "string"
      }
    },
    "podAnnotations": {
      "type": "object",
      "properties": {
        "prometheus.io/scrape": {
          "type": "string",
          "default": "true"
        },
        "prometheus.io/port": {
          "type": "string",
          "default": "3000"
        },
        "prometheus.io/path": {
          "type": "string",
          "default": "/portal-metrics"
        }
      },
      "description": "Annotations for Portal pods",
      "additionalProperties": {
        "type": "string"
      }
    },
    "podAffinityPreset": {
      "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
      "type": "string",
      "default": ""
    },
    "podAntiAffinityPreset": {
      "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
      "type": "string",
      "default": "soft"
    },
    "nodeAffinityPreset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": ""
        },
        "key": {
          "description": "Node label key to match. Ignored if `affinity` is set",
          "type": "string",
          "default": ""
        },
        "values": {
          "type": "array",
          "description": "Node label values to match. Ignored if `affinity` is set",
          "items": {}
        }
      },
      "description": "Node affinity preset configuration",
      "additionalProperties": false
    },
    "affinity": {
      "type": "object",
      "properties": {},
      "description": "Affinity for pod assignment",
      "additionalProperties": true
    },
    "nodeSelector": {
      "type": "object",
      "properties": {},
      "description": "Node labels for pod assignment",
      "additionalProperties": true
    },
    "tolerations": {
      "type": "array",
      "description": "Tolerations for pod assignment",
      "items": {}
    },
    "podSecurityContext": {
      "type": "object",
      "properties": {},
      "description": "Pod Security Context configuration (overrides global.securityContexts.pod)",
      "additionalProperties": true
    },
    "containerSecurityContext": {
      "type": "object",
      "properties": {},
      "description": "Container Security Context configuration (overrides global.securityContexts.container)",
      "additionalProperties": true
    },
    "resources": {
      "type": "object",
      "properties": {},
      "description": "Portal containers resource requests and limits",
      "additionalProperties": true
    },
    "livenessProbe": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "initialDelaySeconds": {
          "description": "Initial delay seconds for livenessProbe",
          "type": "integer",
          "default": 10
        },
        "periodSeconds": {
          "description": "Period seconds for livenessProbe",
          "type": "integer",
          "default": 10
        },
        "timeoutSeconds": {
          "description": "Timeout seconds for livenessProbe",
          "type": "integer",
          "default": 5
        },
        "failureThreshold": {
          "description": "Failure threshold for livenessProbe",
          "type": "integer",
          "default": 3
        },
        "successThreshold": {
          "description": "Success threshold for livenessProbe",
          "type": "integer",
          "default": 1
        },
        "tcpSocket": {
          "type": "object",
          "properties": {
            "port": {
              "type": "string",
              "default": "http"
            }
          },
          "description": "TCP socket parameters for livenessProbe",
          "additionalProperties": false
        }
      },
      "description": "Configure Portal containers' liveness probe",
      "additionalProperties": false
    },
    "readinessProbe": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "initialDelaySeconds": {
          "description": "Initial delay seconds for readinessProbe",
          "type": "integer",
          "default": 5
        },
        "periodSeconds": {
          "description": "Period seconds for readinessProbe",
          "type": "integer",
          "default": 10
        },
        "timeoutSeconds": {
          "description": "Timeout seconds for readinessProbe",
          "type": "integer",
          "default": 5
        },
        "failureThreshold": {
          "description": "Failure threshold for readinessProbe",
          "type": "integer",
          "default": 3
        },
        "successThreshold": {
          "description": "Success threshold for readinessProbe",
          "type": "integer",
          "default": 1
        },
        "tcpSocket": {
          "type": "object",
          "properties": {
            "port": {
              "type": "string",
              "default": "http"
            }
          },
          "description": "TCP socket parameters for readinessProbe",
          "additionalProperties": false
        }
      },
      "description": "Configure Portal containers' readiness probe",
      "additionalProperties": false
    },
    "startupProbe": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "initialDelaySeconds": {
          "description": "Initial delay seconds for startupProbe",
          "type": "integer",
          "default": 30
        },
        "periodSeconds": {
          "description": "Period seconds for startupProbe",
          "type": "integer",
          "default": 10
        },
        "timeoutSeconds": {
          "description": "Timeout seconds for startupProbe",
          "type": "integer",
          "default": 5
        },
        "failureThreshold": {
          "description": "Failure threshold for startupProbe",
          "type": "integer",
          "default": 10
        },
        "successThreshold": {
          "description": "Success threshold for startupProbe",
          "type": "integer",
          "default": 1
        }
      },
      "description": "Configure Portal containers' startup probe",
      "additionalProperties": false
    },
    "lifecycleHooks": {
      "type": "object",
      "properties": {},
      "description": "lifecycleHooks for the Portal container(s) to automate configuration before or after startup",
      "additionalProperties": true
    },
    "extraVolumes": {
      "type": "array",
      "description": "Optionally specify extra list of additional volumes for the Portal pod(s)",
      "items": {}
    },
    "extraVolumeMounts": {
      "type": "array",
      "description": "Optionally specify extra list of additional volumeMounts for the Portal container(s)",
      "items": {}
    },
    "extraEnvVars": {
      "type": "array",
      "description": "Array with extra environment variables to add to Portal nodes",
      "items": {}
    },
    "extraEnvVarsCM": {
      "description": "Name of existing ConfigMap containing extra env vars for Portal nodes",
      "type": "string",
      "default": ""
    },
    "extraEnvVarsSecret": {
      "description": "Name of existing Secret containing extra env vars for Portal nodes",
      "type": "string",
      "default": ""
    },
    "initContainer": {
      "type": "object",
      "properties": {
        "downloadAbi": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "outputDirectory": {
              "description": "Directory where ABI files are written before being shared with the portal container.",
              "type": "string",
              "default": "/shared-abis"
            },
            "image": {
              "type": "object",
              "properties": {
                "repository": {
                  "type": "string",
                  "default": "ghcr.io/settlemint/network-bootstrapper"
                },
                "tag": {
                  "description": "Image tag for the network-bootstrapper CLI.",
                  "type": "string",
                  "default": "1.2.3"
                },
                "pullPolicy": {
                  "description": "Image pull policy for the ABI download init container.",
                  "type": "string",
                  "default": "IfNotPresent"
                }
              },
              "description": "Container image configuration for the ABI downloader",
              "additionalProperties": false
            },
            "resources": {
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "string",
                      "default": "450m"
                    },
                    "memory": {
                      "description": "Memory limit for the ABI download init container",
                      "type": "string",
                      "default": "128Mi"
                    }
                  },
                  "description": "CPU limit for the ABI download init container",
                  "additionalProperties": false
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "string",
                      "default": "25m"
                    },
                    "memory": {
                      "description": "Memory request for the ABI download init container",
                      "type": "string",
                      "default": "64Mi"
                    }
                  },
                  "description": "Resource requests for the ABI download init container",
                  "additionalProperties": false
                }
              },
              "description": "Resource requests and limits for the ABI download init container",
              "additionalProperties": false
            },
            "securityContext": {
              "type": "object",
              "properties": {},
              "description": "Security context for the ABI download init container",
              "additionalProperties": true
            }
          },
          "description": "Enable the ABI download init container that syncs ConfigMaps via network-bootstrapper.",
          "additionalProperties": false
        },
        "tcpCheck": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "image": {
              "type": "object",
              "properties": {
                "repository": {
                  "type": "string",
                  "default": "ghcr.io/settlemint/btp-waitforit"
                },
                "tag": {
                  "description": "Image tag for the TCP check init container",
                  "type": "string",
                  "default": "v7.7.10"
                },
                "pullPolicy": {
                  "description": "Image pull policy for the TCP check init container",
                  "type": "string",
                  "default": "IfNotPresent"
                }
              },
              "description": "Container image configuration for TCP check",
              "additionalProperties": false
            },
            "timeout": {
              "description": "Timeout in seconds for TCP connectivity checks",
              "type": "integer",
              "default": 120
            },
            "resources": {
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "string",
                      "default": "300m"
                    },
                    "memory": {
                      "description": "Memory limit for the TCP check init container",
                      "type": "string",
                      "default": "64Mi"
                    }
                  },
                  "description": "CPU limit for the TCP check init container",
                  "additionalProperties": false
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "string",
                      "default": "10m"
                    },
                    "memory": {
                      "description": "Memory request for the TCP check init container",
                      "type": "string",
                      "default": "32Mi"
                    }
                  },
                  "description": "Resource requests for the TCP check init container",
                  "additionalProperties": false
                }
              },
              "description": "Resource requests and limits for the TCP check init container",
              "additionalProperties": false
            },
            "dependencies": {
              "type": "array",
              "description": "List of service dependencies to verify before starting portal",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "postgresql"
                  },
                  "endpoint": {
                    "description": "TCP endpoint to check (format: host:port)",
                    "type": "string",
                    "default": "postgresql:5432"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "description": "TCP check init container configuration for service dependency verification",
          "additionalProperties": false
        }
      },
      "description": "Init container configurations for dependency management and pre-start tasks",
      "additionalProperties": false
    },
    "extraInitContainers": {
      "type": "array",
      "description": "Additional init containers to add to the Portal pod",
      "items": {}
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "default": true
        }
      },
      "description": "RBAC configuration controlling whether Role/RoleBinding resources are rendered.",
      "additionalProperties": false
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "ClusterIP"
        },
        "port": {
          "description": "Portal service HTTP port",
          "type": "integer",
          "default": 3000
        },
        "graphqlPort": {
          "description": "Portal service GraphQL port",
          "type": "integer",
          "default": 3001
        },
        "nodePort": {
          "description": "Node port for HTTP",
          "type": "string",
          "default": ""
        },
        "graphqlNodePort": {
          "description": "Node port for GraphQL",
          "type": "string",
          "default": ""
        },
        "clusterIP": {
          "description": "Portal service Cluster IP",
          "type": "string",
          "default": ""
        },
        "loadBalancerIP": {
          "description": "Portal service Load Balancer IP",
          "type": "string",
          "default": ""
        },
        "loadBalancerSourceRanges": {
          "type": "array",
          "description": "Portal service Load Balancer sources",
          "items": {}
        },
        "externalTrafficPolicy": {
          "description": "Portal service external traffic policy",
          "type": "string",
          "default": "Cluster"
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Additional custom annotations for Portal service",
          "additionalProperties": true
        },
        "extraPorts": {
          "type": "array",
          "description": "Extra ports to expose in the Portal service (normally used with the `sidecar` value)",
          "items": {}
        },
        "sessionAffinity": {
          "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
          "type": "string",
          "default": "None"
        },
        "sessionAffinityConfig": {
          "type": "object",
          "properties": {},
          "description": "Additional settings for the sessionAffinity",
          "additionalProperties": true
        }
      },
      "description": "Service parameters",
      "additionalProperties": false
    },
    "ingress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "pathType": {
          "description": "Ingress path type",
          "type": "string",
          "default": "ImplementationSpecific"
        },
        "apiVersion": {
          "description": "Force Ingress API version (automatically detected if not set)",
          "type": "string",
          "default": ""
        },
        "hostname": {
          "description": "Default host for the ingress record",
          "type": "string",
          "default": "portal.k8s.orb.local"
        },
        "ingressClassName": {
          "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
          "type": "string",
          "default": "atk-nginx"
        },
        "path": {
          "description": "Default path for the ingress record",
          "type": "string",
          "default": "/"
        },
        "graphqlPath": {
          "description": "Additional path for GraphQL endpoint",
          "type": "string",
          "default": "/graphql"
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
          "additionalProperties": true
        },
        "tls": {
          "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
          "type": "boolean",
          "default": false
        },
        "selfSigned": {
          "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
          "type": "boolean",
          "default": false
        },
        "extraHosts": {
          "type": "array",
          "description": "An array with additional hostname(s) to be covered with the ingress record",
          "items": {}
        },
        "extraPaths": {
          "type": "array",
          "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
          "items": {}
        },
        "extraTls": {
          "type": "array",
          "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
          "items": {}
        },
        "secrets": {
          "type": "array",
          "description": "Custom TLS certificates as secrets",
          "items": {}
        },
        "extraRules": {
          "type": "array",
          "description": "Additional rules to be covered with this ingress record",
          "items": {}
        }
      },
      "description": "Ingress parameters",
      "additionalProperties": false
    },
    "openShiftRoute": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Additional annotations for the OpenShift route resource",
          "additionalProperties": true
        },
        "host": {
          "description": "Hostname exposed via the OpenShift route",
          "type": "string",
          "default": "portal.k8s.orb.local"
        },
        "path": {
          "description": "HTTP path exposed via the OpenShift route",
          "type": "string",
          "default": "/"
        },
        "wildcardPolicy": {
          "description": "Wildcard policy to apply to the route",
          "type": "string",
          "default": "None"
        },
        "port": {
          "type": "object",
          "properties": {
            "targetPort": {
              "type": "string",
              "default": "http"
            }
          },
          "description": "Service port configuration for the route target",
          "additionalProperties": false
        },
        "to": {
          "type": "object",
          "properties": {
            "weight": {
              "type": "integer",
              "default": 100
            }
          },
          "description": "Primary service weight configuration",
          "additionalProperties": false
        },
        "alternateBackends": {
          "type": "array",
          "description": "Additional backends for weighted routing",
          "items": {}
        },
        "tls": {
          "description": "TLS configuration for the OpenShift route",
          "type": [
            "object",
            "null"
          ],
          "default": null
        },
        "graphql": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "annotations": {
              "type": "object",
              "properties": {},
              "description": "Additional annotations for the GraphQL route resource",
              "additionalProperties": true
            },
            "host": {
              "description": "Hostname exposed via the GraphQL route (defaults to openShiftRoute.host when empty)",
              "type": "string",
              "default": ""
            },
            "path": {
              "description": "HTTP path exposed via the GraphQL route (defaults to ingress.graphqlPath)",
              "type": "string",
              "default": ""
            },
            "wildcardPolicy": {
              "description": "Wildcard policy to apply to the GraphQL route (defaults to openShiftRoute.wildcardPolicy)",
              "type": "string",
              "default": ""
            },
            "port": {
              "type": "object",
              "properties": {
                "targetPort": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "Service port configuration for the GraphQL route target",
              "additionalProperties": false
            },
            "to": {
              "type": "object",
              "properties": {
                "weight": {
                  "type": "string",
                  "default": ""
                }
              },
              "description": "Primary service weight configuration for the GraphQL route",
              "additionalProperties": false
            },
            "alternateBackends": {
              "type": "array",
              "description": "Additional backends for weighted routing (same structure as openShiftRoute.alternateBackends)",
              "items": {}
            },
            "tls": {
              "description": "TLS configuration for the GraphQL route",
              "type": [
                "object",
                "null"
              ],
              "default": null
            }
          },
          "description": "GraphQL route specific configuration",
          "additionalProperties": false
        }
      },
      "description": "OpenShift Route parameters",
      "additionalProperties": false
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "default": true
        },
        "name": {
          "description": "The name of the ServiceAccount to use.",
          "type": "string",
          "default": ""
        },
        "automountServiceAccountToken": {
          "description": "Automount service account token for the deployment controller service account",
          "type": "boolean",
          "default": true
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
          "additionalProperties": true
        },
        "labels": {
          "type": "object",
          "properties": {},
          "description": "Extra labels to be added to the service account",
          "additionalProperties": true
        }
      },
      "description": "Service account for Portal pods",
      "additionalProperties": false
    },
    "autoscaling": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "maxReplicas": {
          "description": "Maximum number of Portal replicas",
          "type": "integer",
          "default": 3
        },
        "minReplicas": {
          "description": "Minimum number of Portal replicas",
          "type": "integer",
          "default": 1
        },
        "builtInMetrics": {
          "type": "array",
          "description": "Built-in metrics configuration for CPU and memory based scaling",
          "items": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "default": "Resource"
                  },
                  "resource": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "default": "cpu"
                      },
                      "target": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "Utilization"
                          },
                          "averageUtilization": {
                            "description": "Target average CPU utilization percentage",
                            "type": "integer",
                            "default": 80
                          }
                        },
                        "description": "Target metric threshold configuration",
                        "additionalProperties": false
                      }
                    },
                    "description": "Resource metric configuration",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "default": "Resource"
                  },
                  "resource": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "default": "memory"
                      },
                      "target": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "Utilization"
                          },
                          "averageUtilization": {
                            "description": "Target average memory utilization percentage",
                            "type": "integer",
                            "default": 80
                          }
                        },
                        "description": "Target metric threshold configuration",
                        "additionalProperties": false
                      }
                    },
                    "description": "Resource metric configuration",
                    "additionalProperties": false
                  }
                },
                "description": "Metric type (Resource, Pods, Object, or External)",
                "additionalProperties": false
              }
            ]
          }
        },
        "customMetrics": {
          "type": "array",
          "description": "Custom metrics configuration",
          "items": {}
        }
      },
      "description": "Autoscaling configuration for Portal",
      "additionalProperties": false
    },
    "pdb": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "minAvailable": {
          "description": "Minimum number/percentage of pods that should remain scheduled",
          "type": "string",
          "default": ""
        },
        "maxUnavailable": {
          "description": "Maximum number/percentage of pods that may be made unavailable. Defaults to 1 if both pdb.minAvailable and pdb.maxUnavailable are empty.",
          "type": "string",
          "default": ""
        }
      },
      "description": "Pod disruption budget configuration",
      "additionalProperties": false
    },
    "networkPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "allowExternal": {
          "description": "The Policy model to apply",
          "type": "boolean",
          "default": true
        },
        "allowExternalEgress": {
          "description": "Allow the pod to access any range of port and all destinations.",
          "type": "boolean",
          "default": true
        },
        "addExternalClientAccess": {
          "description": "Allow access from pods with client label set to \"true\". Ignored if `networkPolicy.allowExternal` is true.",
          "type": "boolean",
          "default": true
        },
        "extraIngress": {
          "type": "array",
          "description": "Add extra ingress rules to the NetworkPolicy",
          "items": {
            "type": "object",
            "properties": {
              "from": {
                "type": "array",
                "description": "Namespace selector for ingress-nginx",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "namespaceSelector": {
                          "type": "object",
                          "properties": {
                            "matchLabels": {
                              "type": "object",
                              "properties": {
                                "kubernetes.io/metadata.name": {
                                  "type": "string",
                                  "default": "ingress-nginx"
                                }
                              },
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Labels to match ingress-nginx namespace",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "podSelector": {
                          "type": "object",
                          "properties": {
                            "matchLabels": {
                              "type": "object",
                              "properties": {
                                "app.kubernetes.io/name": {
                                  "type": "string",
                                  "default": "dapp"
                                }
                              },
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Labels to match dapp pods",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "description": "Pod selector for dapp pods",
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "podSelector": {
                          "type": "object",
                          "properties": {},
                          "description": "Same namespace",
                          "additionalProperties": true
                        }
                      },
                      "description": "Pod selector for same namespace pods",
                      "additionalProperties": false
                    }
                  ]
                }
              },
              "ports": {
                "type": "array",
                "description": "Allowed ports for ingress traffic",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "default": "TCP"
                        },
                        "port": {
                          "description": "HTTP port number",
                          "type": "integer",
                          "default": 3000
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "default": "TCP"
                        },
                        "port": {
                          "description": "GraphQL port number",
                          "type": "integer",
                          "default": 3001
                        }
                      },
                      "description": "Protocol for GraphQL port",
                      "additionalProperties": false
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          }
        },
        "extraEgress": {
          "type": "array",
          "description": "Add extra egress rules to the NetworkPolicy (ignored if allowExternalEgress=true)",
          "items": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "array",
                    "description": "Namespace selector for kube-dns",
                    "items": {
                      "type": "object",
                      "properties": {
                        "namespaceSelector": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": true
                        },
                        "podSelector": {
                          "type": "object",
                          "properties": {
                            "matchLabels": {
                              "type": "object",
                              "properties": {
                                "k8s-app": {
                                  "type": "string",
                                  "default": "kube-dns"
                                }
                              },
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Pod selector for kube-dns",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ports": {
                    "type": "array",
                    "description": "Allowed ports for DNS traffic",
                    "items": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "default": "UDP"
                        },
                        "port": {
                          "description": "DNS port number",
                          "type": "integer",
                          "default": 53
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "array",
                    "description": "Pod selector for PostgreSQL",
                    "items": {
                      "type": "object",
                      "properties": {
                        "podSelector": {
                          "type": "object",
                          "properties": {
                            "matchLabels": {
                              "type": "object",
                              "properties": {
                                "app.kubernetes.io/name": {
                                  "type": "string",
                                  "default": "postgresql-ha"
                                }
                              },
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Labels to match PostgreSQL pods",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ports": {
                    "type": "array",
                    "description": "Allowed ports for PostgreSQL traffic",
                    "items": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "default": "TCP"
                        },
                        "port": {
                          "description": "PostgreSQL port number",
                          "type": "integer",
                          "default": 5432
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "description": "Destination selectors for PostgreSQL access",
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "array",
                    "description": "Pod selector for Redis",
                    "items": {
                      "type": "object",
                      "properties": {
                        "podSelector": {
                          "type": "object",
                          "properties": {
                            "matchLabels": {
                              "type": "object",
                              "properties": {
                                "app.kubernetes.io/name": {
                                  "type": "string",
                                  "default": "redis"
                                }
                              },
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Labels to match Redis pods",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ports": {
                    "type": "array",
                    "description": "Allowed ports for Redis traffic",
                    "items": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "default": "TCP"
                        },
                        "port": {
                          "description": "Redis port number",
                          "type": "integer",
                          "default": 6379
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "description": "Destination selectors for Redis access",
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "array",
                    "description": "Namespace selector for all namespaces",
                    "items": {
                      "type": "object",
                      "properties": {
                        "namespaceSelector": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ports": {
                    "type": "array",
                    "description": "Allowed ports for external HTTPS traffic",
                    "items": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "default": "TCP"
                        },
                        "port": {
                          "description": "HTTPS port number",
                          "type": "integer",
                          "default": 443
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "description": "(list) Destination selectors for external HTTPS access",
                "additionalProperties": false
              }
            ]
          }
        },
        "ingressRules": {
          "type": "object",
          "properties": {
            "accessOnlyFrom": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "namespaceSelector": {
                  "type": "object",
                  "properties": {},
                  "description": "Namespace selector label that is allowed to access Portal. This label will be used to identified allowed namespace(s).",
                  "additionalProperties": true
                },
                "podSelector": {
                  "type": "object",
                  "properties": {},
                  "description": "Pods selector label that is allowed to access Portal. This label will be used to identified allowed pod(s).",
                  "additionalProperties": true
                }
              },
              "description": "Enable ingress rule that makes Portal only accessible from a particular origin.",
              "additionalProperties": false
            }
          },
          "description": "Ingress rules configuration",
          "additionalProperties": false
        }
      },
      "description": "Network policies configuration",
      "additionalProperties": false
    },
    "tests": {
      "type": "object",
      "properties": {
        "image": {
          "type": "object",
          "properties": {
            "registry": {
              "type": "string",
              "default": "docker.io"
            },
            "repository": {
              "description": "Test image repository",
              "type": "string",
              "default": "busybox"
            },
            "tag": {
              "description": "Test image tag",
              "type": "string",
              "default": "1.37.0"
            },
            "pullPolicy": {
              "description": "Test image pull policy",
              "type": "string",
              "default": "IfNotPresent"
            }
          },
          "description": "Test image registry",
          "additionalProperties": false
        }
      },
      "description": "Test parameters",
      "additionalProperties": false
    },
    "config": {
      "type": "object",
      "properties": {
        "network": {
          "type": "object",
          "properties": {
            "networkId": {
              "description": "Network name (defaults to global.chainName when unset)",
              "type": [
                "string",
                "null"
              ],
              "default": null
            },
            "networkName": {
              "description": "Node RPC URL",
              "type": [
                "string",
                "null"
              ],
              "default": null
            },
            "nodeRpcUrl": {
              "type": "string",
              "default": "http://txsigner:3000"
            }
          },
          "description": "Network ID (defaults to global.chainId when unset)",
          "additionalProperties": false
        },
        "postgresql": {
          "type": "object",
          "properties": {},
          "description": "PostgreSQL overrides merged with global.datastores.portal.postgresql",
          "additionalProperties": true
        },
        "redis": {
          "type": "object",
          "properties": {},
          "description": "Redis overrides merged with global.datastores.portal.redis",
          "additionalProperties": true
        }
      },
      "description": "Portal configuration",
      "additionalProperties": {
        "type": "object"
      }
    }
  },
  "additionalProperties": false
}
