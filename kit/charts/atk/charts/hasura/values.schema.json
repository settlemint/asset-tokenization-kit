{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "hasura values",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "description": "Global configuration",
      "additionalProperties": false
    },
    "replicaCount": {
      "description": "Number of Hasura replicas to deploy",
      "type": "integer",
      "default": 1
    },
    "nameOverride": {
      "description": "Override name for the chart",
      "type": "string",
      "default": ""
    },
    "fullnameOverride": {
      "description": "Override fullname for the chart",
      "type": "string",
      "default": ""
    },
    "image": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "default": "docker.io"
        },
        "repository": {
          "description": "Hasura image repository",
          "type": "string",
          "default": "hasura/graphql-engine"
        },
        "tag": {
          "description": "Hasura image tag",
          "type": "string",
          "default": "v2.48.6"
        },
        "pullPolicy": {
          "description": "Hasura image pull policy",
          "type": "string",
          "default": "IfNotPresent"
        }
      },
      "description": "Hasura image configuration",
      "additionalProperties": false
    },
    "imagePullSecrets": {
      "type": "array",
      "description": "Docker registry secret names as an array",
      "items": {}
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "default": false
        },
        "automount": {
          "description": "Automatically mount ServiceAccount's API credentials",
          "type": "boolean",
          "default": false
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Annotations to add to the service account",
          "additionalProperties": true
        },
        "name": {
          "description": "The name of the service account to use",
          "type": "string",
          "default": ""
        }
      },
      "description": "Service account configuration",
      "additionalProperties": false
    },
    "config": {
      "type": "object",
      "properties": {
        "enableConsole": {
          "type": "boolean",
          "default": true
        },
        "devMode": {
          "description": "Enable development mode",
          "type": "boolean",
          "default": true
        },
        "enableConsoleAssets": {
          "description": "Enable console assets (for offline usage)",
          "type": "boolean",
          "default": true
        },
        "enableTelemetry": {
          "description": "Enable telemetry",
          "type": "boolean",
          "default": false
        },
        "logLevel": {
          "description": "Log level (debug, info, warn, error)",
          "type": "string",
          "default": "info"
        },
        "serverPort": {
          "description": "Server port",
          "type": "integer",
          "default": 8080
        },
        "enableRemoteSchemaPermissions": {
          "description": "Enable remote schema permissions",
          "type": "boolean",
          "default": false
        },
        "enableAllowlist": {
          "description": "Enable allowlist",
          "type": "boolean",
          "default": false
        },
        "corsDomain": {
          "description": "CORS domain configuration",
          "type": "string",
          "default": "*"
        },
        "disableCors": {
          "description": "Disable CORS",
          "type": "boolean",
          "default": false
        },
        "wsKeepAlive": {
          "description": "WebSocket keepalive interval (seconds)",
          "type": "integer",
          "default": 5
        },
        "inferFunctionPermissions": {
          "description": "Infer function permissions",
          "type": "boolean",
          "default": true
        },
        "schemaIntrospectionDisabled": {
          "description": "Enable schema introspection for specified roles",
          "type": "boolean",
          "default": false
        }
      },
      "description": "Hasura configuration options",
      "additionalProperties": true
    },
    "database": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "default": ""
        },
        "port": {
          "description": "Database port (uses global datastores if not set)",
          "type": [
            "integer",
            "string"
          ],
          "default": ""
        },
        "username": {
          "description": "Database username (uses global datastores if not set)",
          "type": "string",
          "default": ""
        },
        "password": {
          "description": "Database password (uses global datastores if not set)",
          "type": "string",
          "default": ""
        },
        "database": {
          "description": "Database name (uses global datastores if not set)",
          "type": "string",
          "default": ""
        },
        "sslMode": {
          "description": "SSL mode (uses global datastores if not set)",
          "type": "string",
          "default": ""
        },
        "connections": {
          "description": "Maximum connections",
          "type": "integer",
          "default": 50
        },
        "idleTimeout": {
          "description": "Idle timeout (seconds)",
          "type": "integer",
          "default": 180
        },
        "connLifetime": {
          "description": "Connection lifetime (seconds)",
          "type": "integer",
          "default": 600
        },
        "usePreparedStatements": {
          "description": "Use prepared statements",
          "type": "boolean",
          "default": true
        },
        "txIsolation": {
          "description": "Transaction isolation level (read-committed, repeatable-read, serializable)",
          "type": "string",
          "default": "read-committed"
        },
        "enablePooling": {
          "description": "Enable connection pooling",
          "type": "boolean",
          "default": true
        }
      },
      "description": "Database configuration",
      "additionalProperties": false
    },
    "adminSecret": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "key": {
          "description": "Admin secret key (auto-generated if empty)",
          "type": "string",
          "default": "atk"
        },
        "existingSecret": {
          "description": "Use existing secret",
          "type": "string",
          "default": ""
        },
        "existingSecretKey": {
          "description": "Key in existing secret",
          "type": "string",
          "default": "admin-secret"
        }
      },
      "description": "Admin secret configuration",
      "additionalProperties": false
    },
    "jwtSecrets": {
      "type": "array",
      "description": "JWT secrets configuration",
      "items": {}
    },
    "unauthorizedRole": {
      "description": "Unauthorized role configuration",
      "type": [
        "object",
        "string"
      ],
      "default": "anonymous"
    },
    "authHook": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "url": {
          "description": "Webhook URL",
          "type": "string",
          "default": ""
        },
        "mode": {
          "description": "Webhook mode (GET or POST)",
          "type": "string",
          "default": "POST"
        }
      },
      "description": "Authentication webhook configuration",
      "additionalProperties": false
    },
    "actions": {
      "type": "object",
      "properties": {
        "baseUrl": {
          "type": "string",
          "default": ""
        },
        "handlerWebhookBaseUrl": {
          "description": "Action handler webhook base URL",
          "type": "string",
          "default": ""
        }
      },
      "description": "Action configuration",
      "additionalProperties": false
    },
    "events": {
      "type": "object",
      "properties": {
        "fetchInterval": {
          "type": "integer",
          "default": 10
        }
      },
      "description": "Events configuration",
      "additionalProperties": false
    },
    "cronTriggers": {
      "type": "object",
      "properties": {
        "includeInMetadata": {
          "type": "boolean",
          "default": false
        }
      },
      "description": "Cron triggers configuration",
      "additionalProperties": false
    },
    "redis": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "host": {
          "description": "Redis host (uses global datastores if not set)",
          "type": "string",
          "default": ""
        },
        "port": {
          "description": "Redis port (uses global datastores if not set)",
          "type": [
            "integer",
            "string"
          ],
          "default": ""
        },
        "username": {
          "description": "Redis username (uses global datastores if not set)",
          "type": "string",
          "default": ""
        },
        "password": {
          "description": "Redis password (uses global datastores if not set)",
          "type": "string",
          "default": ""
        },
        "cacheDb": {
          "description": "Redis database index for caching (uses global datastores if not set)",
          "type": [
            "integer",
            "string"
          ],
          "default": ""
        },
        "rateLimitDb": {
          "description": "Redis database index for rate limiting (uses global datastores if not set)",
          "type": [
            "integer",
            "string"
          ],
          "default": ""
        },
        "cacheTtl": {
          "description": "Cache TTL in seconds",
          "type": "integer",
          "default": 60
        }
      },
      "description": "Redis configuration for caching and rate limiting",
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "properties": {
        "databaseUrl": {
          "type": "string",
          "default": ""
        }
      },
      "description": "Metadata database configuration",
      "additionalProperties": {
        "type": "string"
      }
    },
    "extraEnvs": {
      "type": "array",
      "description": "Additional environment variables",
      "items": {}
    },
    "extraEnvFrom": {
      "type": "array",
      "description": "Additional environment variables from secrets/configmaps",
      "items": {}
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "ClusterIP"
        },
        "port": {
          "description": "Service port",
          "type": "integer",
          "default": 8080
        },
        "targetPort": {
          "description": "Target port",
          "type": "integer",
          "default": 8080
        },
        "nodePort": {
          "description": "Node port (if type is NodePort)",
          "type": "string",
          "default": ""
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Additional service annotations",
          "additionalProperties": true
        },
        "labels": {
          "type": "object",
          "properties": {},
          "description": "Additional service labels",
          "additionalProperties": true
        }
      },
      "description": "Service configuration",
      "additionalProperties": false
    },
    "ingress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "className": {
          "description": "Ingress class name",
          "type": "string",
          "default": "atk-nginx"
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Ingress annotations",
          "additionalProperties": true
        },
        "hostName": {
          "description": "Ingress hostname",
          "type": "string",
          "default": "hasura.k8s.orb.local"
        },
        "path": {
          "description": "Ingress path",
          "type": "string",
          "default": "/"
        },
        "pathType": {
          "description": "Ingress path type",
          "type": "string",
          "default": "Prefix"
        },
        "extraHosts": {
          "type": "array",
          "description": "Additional hosts",
          "items": {}
        },
        "tls": {
          "type": "array",
          "description": "TLS configuration",
          "items": {}
        }
      },
      "description": "Ingress configuration",
      "additionalProperties": false
    },
    "openShiftRoute": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Route annotations",
          "additionalProperties": true
        },
        "host": {
          "description": "Route hostname",
          "type": "string",
          "default": "hasura.k8s.orb.local"
        },
        "path": {
          "description": "Route path",
          "type": "string",
          "default": "/"
        },
        "wildcardPolicy": {
          "description": "Wildcard policy",
          "type": "string",
          "default": "None"
        },
        "tls": {
          "description": "TLS configuration",
          "type": [
            "object",
            "null"
          ],
          "default": null
        },
        "to": {
          "type": "object",
          "properties": {
            "weight": {
              "type": "integer",
              "default": 100
            }
          },
          "description": "Service weight configuration",
          "additionalProperties": false
        },
        "alternateBackends": {
          "type": "array",
          "description": "Alternate backends",
          "items": {}
        }
      },
      "description": "OpenShift Route configuration",
      "additionalProperties": false
    },
    "healthChecks": {
      "type": "object",
      "properties": {
        "livenessProbe": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "httpGet": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "/healthz"
                },
                "port": {
                  "description": "Port name or number",
                  "type": "string",
                  "default": "http"
                }
              },
              "description": "HTTP GET configuration",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Initial delay seconds",
              "type": "integer",
              "default": 30
            },
            "periodSeconds": {
              "description": "Period seconds",
              "type": "integer",
              "default": 10
            },
            "timeoutSeconds": {
              "description": "Timeout seconds",
              "type": "integer",
              "default": 5
            },
            "successThreshold": {
              "description": "Success threshold",
              "type": "integer",
              "default": 1
            },
            "failureThreshold": {
              "description": "Failure threshold",
              "type": "integer",
              "default": 3
            }
          },
          "description": "Enable liveness probe",
          "additionalProperties": false
        },
        "readinessProbe": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "httpGet": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "/healthz"
                },
                "port": {
                  "description": "Port name or number",
                  "type": "string",
                  "default": "http"
                }
              },
              "description": "HTTP GET configuration",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Initial delay seconds",
              "type": "integer",
              "default": 10
            },
            "periodSeconds": {
              "description": "Period seconds",
              "type": "integer",
              "default": 10
            },
            "timeoutSeconds": {
              "description": "Timeout seconds",
              "type": "integer",
              "default": 5
            },
            "successThreshold": {
              "description": "Success threshold",
              "type": "integer",
              "default": 1
            },
            "failureThreshold": {
              "description": "Failure threshold",
              "type": "integer",
              "default": 3
            }
          },
          "description": "Readiness probe configuration",
          "additionalProperties": false
        },
        "startupProbe": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "httpGet": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "default": "/healthz"
                },
                "port": {
                  "description": "Port name or number",
                  "type": "string",
                  "default": "http"
                }
              },
              "description": "HTTP GET configuration",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Initial delay seconds",
              "type": "integer",
              "default": 0
            },
            "periodSeconds": {
              "description": "Period seconds",
              "type": "integer",
              "default": 10
            },
            "timeoutSeconds": {
              "description": "Timeout seconds",
              "type": "integer",
              "default": 5
            },
            "successThreshold": {
              "description": "Success threshold",
              "type": "integer",
              "default": 1
            },
            "failureThreshold": {
              "description": "Failure threshold",
              "type": "integer",
              "default": 30
            }
          },
          "description": "Startup probe configuration",
          "additionalProperties": false
        }
      },
      "description": "Health check configuration",
      "additionalProperties": false
    },
    "resources": {
      "type": "object",
      "properties": {},
      "description": "Resource limits and requests",
      "additionalProperties": true
    },
    "autoscaling": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "minReplicas": {
          "description": "Minimum replicas",
          "type": "integer",
          "default": 1
        },
        "maxReplicas": {
          "description": "Maximum replicas",
          "type": "integer",
          "default": 10
        },
        "targetCPUUtilizationPercentage": {
          "description": "Target CPU utilization percentage",
          "type": "integer",
          "default": 80
        },
        "targetMemoryUtilizationPercentage": {
          "description": "Target memory utilization percentage",
          "type": "integer",
          "default": 80
        }
      },
      "description": "Horizontal pod autoscaler configuration",
      "additionalProperties": false
    },
    "initContainers": {
      "type": "array",
      "description": "Init containers",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "wait-for-postgresql"
          },
          "image": {
            "description": "Container image",
            "type": "string",
            "default": "ghcr.io/settlemint/btp-waitforit:v7.7.10"
          },
          "imagePullPolicy": {
            "description": "Image pull policy",
            "type": "string",
            "default": "IfNotPresent"
          },
          "command": {
            "type": "array",
            "description": "Container command",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "default": "/usr/bin/wait-for-it"
                },
                {
                  "type": "string",
                  "default": "postgresql:5432"
                },
                {
                  "type": "string",
                  "default": "-t"
                },
                {
                  "type": "string",
                  "default": "120"
                }
              ]
            }
          },
          "resources": {
            "type": "object",
            "properties": {
              "limits": {
                "type": "object",
                "properties": {
                  "cpu": {
                    "type": "string",
                    "default": "300m"
                  },
                  "memory": {
                    "description": "Memory limit",
                    "type": "string",
                    "default": "64Mi"
                  }
                },
                "description": "CPU limit",
                "additionalProperties": false
              },
              "requests": {
                "type": "object",
                "properties": {
                  "cpu": {
                    "type": "string",
                    "default": "10m"
                  },
                  "memory": {
                    "description": "Memory request",
                    "type": "string",
                    "default": "32Mi"
                  }
                },
                "description": "Resource requests",
                "additionalProperties": false
              }
            },
            "description": "Resource limits and requests",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "podAnnotations": {
      "type": "object",
      "properties": {},
      "description": "Pod annotations",
      "additionalProperties": true
    },
    "podLabels": {
      "type": "object",
      "properties": {},
      "description": "Pod labels",
      "additionalProperties": true
    },
    "podSecurityContext": {
      "type": "object",
      "properties": {},
      "description": "Pod security context",
      "additionalProperties": true
    },
    "securityContext": {
      "type": "object",
      "properties": {},
      "description": "Container security context",
      "additionalProperties": true
    },
    "nodeSelector": {
      "type": "object",
      "properties": {},
      "description": "Node selector",
      "additionalProperties": true
    },
    "tolerations": {
      "type": "array",
      "description": "Tolerations",
      "items": {}
    },
    "affinity": {
      "type": "object",
      "properties": {},
      "description": "Pod affinity",
      "additionalProperties": true
    },
    "podDisruptionBudget": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "minAvailable": {
          "description": "Minimum available pods",
          "type": "integer",
          "default": 1
        },
        "maxUnavailable": {
          "description": "Maximum unavailable pods",
          "type": [
            "integer",
            "string"
          ],
          "default": ""
        }
      },
      "description": "Pod disruption budget",
      "additionalProperties": false
    },
    "volumeMounts": {
      "type": "array",
      "description": "Volume mounts for the container",
      "items": {}
    },
    "volumes": {
      "type": "array",
      "description": "Volumes for the pod",
      "items": {}
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "metricsSecret": {
          "description": "Secret for metrics endpoint (optional)",
          "type": "string",
          "default": ""
        },
        "serviceMonitor": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "namespace": {
              "description": "Monitoring namespace",
              "type": "string",
              "default": ""
            },
            "labels": {
              "type": "object",
              "properties": {},
              "description": "Additional labels for ServiceMonitor",
              "additionalProperties": true
            },
            "interval": {
              "description": "Scrape interval",
              "type": [
                "integer",
                "string"
              ],
              "default": "30s"
            },
            "scrapeTimeout": {
              "description": "Scrape timeout",
              "type": [
                "integer",
                "string"
              ],
              "default": "10s"
            },
            "path": {
              "description": "Metrics path",
              "type": "string",
              "default": "/v1/metrics"
            }
          },
          "description": "Service monitor configuration",
          "additionalProperties": false
        }
      },
      "description": "Monitoring configuration",
      "additionalProperties": false
    },
    "networkPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "podSelector": {
          "type": "object",
          "properties": {},
          "description": "Pod selector match labels",
          "additionalProperties": true
        },
        "ingress": {
          "type": "array",
          "description": "Ingress rules",
          "items": {}
        },
        "egress": {
          "type": "array",
          "description": "Egress rules",
          "items": {}
        }
      },
      "description": "Network policy configuration",
      "additionalProperties": false
    },
    "priorityClassName": {
      "description": "Priority class configuration",
      "type": [
        "object",
        "string"
      ],
      "default": ""
    },
    "topologySpreadConstraints": {
      "type": "array",
      "description": "Topology spread constraints",
      "items": {}
    },
    "labels": {
      "type": "object",
      "properties": {},
      "description": "Labels to add to all resources",
      "additionalProperties": true
    }
  },
  "additionalProperties": false
}
