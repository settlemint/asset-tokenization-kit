# Default configuration values for the network-nodes subchart. All keys include helm-docs compatible annotations.

# -- (object) Global configuration values inherited from parent charts.
global:
  # -- (object) Kubernetes labels applied to all resources across the installation.
  labels:
    # -- (string) KOTS application slug identifier for Replicated application management.
    kots.io/app-slug: settlemint-atk



# -- (int) Total number of Besu pods (validators + RPC). Used for documentation summaries.
replicaCount: 6

# -- (int) Number of RPC node replicas provisioned via StatefulSet.
rpcReplicaCount: 2

# -- (int) Number of validator node replicas participating in consensus. Leave unset to derive from global.validatorReplicaCount.
validatorReplicaCount: 4

# -- (object) Container image configuration shared by validator and RPC pods.
image:
  # -- (string) OCI image repository hosting Hyperledger Besu.
  repository: docker.io/hyperledger/besu
  # -- (string) Kubernetes image pull policy for Besu containers.
  pullPolicy: IfNotPresent
  # -- (string) Specific Besu image tag to deploy.
  tag: "25.9.0"

# -- (list) Image pull secrets granting registry access for the Besu image.
imagePullSecrets: []

# -- (string) Override for the short chart name used in resource naming.
nameOverride: ""

# -- (string) Override for the fully qualified release name used in resource naming.
fullnameOverride: "besu-node"

# -- (object) Kubernetes ServiceAccount configuration applied to Besu pods.
serviceAccount:
  # -- (bool) Create a ServiceAccount resource automatically for the release.
  create: true
  # -- (bool) Mount the ServiceAccount token volume into pods.
  automount: true
  # -- (object) Metadata annotations applied to the ServiceAccount.
  annotations: {}
  # -- (string) Existing ServiceAccount name to reuse when creation is disabled.
  name: ""

# -- (object) RBAC configuration controlling Role/RoleBinding creation for accessing Besu artifacts.
rbac:
  # -- (bool) Create Role and RoleBinding granting pods read access to ConfigMaps/Secrets.
  create: true

# -- (object) Pod annotations merged onto all Besu pods.
podAnnotations:
  # -- (string) Enables Prometheus scraping of the Besu metrics endpoint.
  prometheus.io/scrape: "true"
  # -- (string) HTTP path exposing Prometheus-formatted metrics.
  prometheus.io/path: /metrics
  # -- (string) Container port value used by Prometheus to scrape metrics.
  prometheus.io/port: "9545"
  # -- (string) HTTP scheme (http or https) used for metrics scraping.
  prometheus.io/scheme: http

# -- (object) Additional labels applied to all Besu pods.
podLabels: {}

# -- (object) PodDisruptionBudget configuration for validator and RPC workloads.
podDisruptionBudgets:
  # -- (object) PodDisruptionBudget controlling voluntary disruptions for validator pods.
  validator:
    # -- (bool) Enable the validator PodDisruptionBudget.
    enabled: false
    # -- (int) Minimum validator pods that must remain available. Mutually exclusive with maxUnavailable.
    minAvailable: 1
    # -- (int) Maximum validator pods that can be disrupted at once. Mutually exclusive with minAvailable.
    maxUnavailable:
    # -- (string) Optional unhealthy pod eviction policy (Default or AlwaysAllow).
    unhealthyPodEvictionPolicy: ""
    # -- (object) Additional annotations applied to the validator PodDisruptionBudget.
    annotations: {}
    # -- (object) Additional labels applied to the validator PodDisruptionBudget.
    labels: {}
  # -- (object) PodDisruptionBudget governing RPC pods.
  rpc:
    # -- (bool) Enable the RPC PodDisruptionBudget.
    enabled: false
    # -- (int) Minimum RPC pods that must remain available. Mutually exclusive with maxUnavailable.
    minAvailable: 1
    # -- (int) Maximum RPC pods that can be disrupted at once. Mutually exclusive with minAvailable.
    maxUnavailable:
    # -- (string) Optional unhealthy pod eviction policy (Default or AlwaysAllow).
    unhealthyPodEvictionPolicy: ""
    # -- (object) Additional annotations applied to the RPC PodDisruptionBudget.
    annotations: {}
    # -- (object) Additional labels applied to the RPC PodDisruptionBudget.
    labels: {}

# -- (object) NetworkPolicy configuration applied to Besu pods.
networkPolicy:
  # -- (bool) Create a NetworkPolicy restricting Besu pod ingress and egress.
  enabled: false
  # -- (object) Optional override for the default pod selector; defaults to Besu workload labels when empty.
  podSelector: {}
  # -- (list) Policy types enforced by the NetworkPolicy. When empty, inferred from ingress/egress rules or defaults to both.
  policyTypes: []
  # -- (object) Additional labels to add to the NetworkPolicy metadata.
  labels: {}
  # -- (object) Additional annotations to add to the NetworkPolicy metadata.
  annotations: {}
  # -- (list) NetworkPolicy ingress rules. Leave empty to deny all ingress when enabled.
  ingress:
    # -- (object) Allow blockchain clients to reach RPC, WS, GraphQL, and metrics endpoints.
    -
      # -- (list) Source pod selectors allowed to connect to Besu services.
      from:
        -
          # -- (object) Pod selector allowing txsigner pods ingress access.
          podSelector:
            # -- (object) Label matchers selecting txsigner pods.
            matchLabels:
              # -- (string) Application name label for txsigner.
              app.kubernetes.io/name: txsigner
        -
          # -- (object) Pod selector allowing erpc pods ingress access.
          podSelector:
            # -- (object) Label matchers selecting erpc pods.
            matchLabels:
              # -- (string) Application name label for erpc.
              app.kubernetes.io/name: erpc
        -
          # -- (object) Pod selector allowing blockscout-stack pods ingress access.
          podSelector:
            # -- (object) Label matchers selecting blockscout-stack pods.
            matchLabels:
              # -- (string) Application name label for blockscout-stack.
              app.kubernetes.io/name: blockscout-stack
        -
          # -- (object) Pod selector allowing graph-node pods ingress access.
          podSelector:
            # -- (object) Label matchers selecting graph-node pods.
            matchLabels:
              # -- (string) Application name label for graph-node.
              app.kubernetes.io/name: graph-node
        # - podSelector: {} # Uncomment to allow any pod within the namespace.
      # -- (list) Target ports exposed to the selected sources.
      ports:
        -
          # -- (string) Protocol type for HTTP JSON-RPC port.
          protocol: TCP
          # -- (int) HTTP JSON-RPC port number.
          port: 8545
        -
          # -- (string) Protocol type for WebSocket JSON-RPC port.
          protocol: TCP
          # -- (int) WebSocket JSON-RPC port number.
          port: 8546
        -
          # -- (string) Protocol type for GraphQL API port.
          protocol: TCP
          # -- (int) GraphQL API port number.
          port: 8547
        -
          # -- (string) Protocol type for metrics port.
          protocol: TCP
          # -- (int) Prometheus metrics port number.
          port: 9545
    # -- (object) Permit intra-cluster P2P traffic among Besu nodes.
    -
      # -- (list) Source pod selectors for P2P communication.
      from:
        -
          # -- (object) Pod selector for Besu StatefulSet pods.
          podSelector:
            # -- (object) Label matchers selecting Besu StatefulSet pods.
            matchLabels:
              # -- (string) Application name label for Besu StatefulSet.
              app.kubernetes.io/name: besu-statefulset
      # -- (list) P2P port exposed to Besu peers.
      ports:
        -
          # -- (string) Protocol type for P2P port.
          protocol: TCP
          # -- (int) RLPx P2P port number.
          port: 30303

  # -- (list) NetworkPolicy egress rules. Leave empty to deny all egress when enabled.
  egress:
    # -- (object) Allow DNS resolution for outbound hosts.
    -
      # -- (list) Destination selectors for DNS egress.
      to:
        -
          # -- (object) Namespace selector for DNS pods (empty matches all namespaces).
          namespaceSelector: {}
          # -- (object) Pod selector for kube-dns pods.
          podSelector:
            # -- (object) Label matchers selecting kube-dns pods.
            matchLabels:
              # -- (string) Kubernetes DNS application label.
              k8s-app: kube-dns
      # -- (list) DNS port configuration.
      ports:
        -
          # -- (string) Protocol type for DNS (UDP).
          protocol: UDP
          # -- (int) DNS port number.
          port: 53
    # -- (object) Permit Besu pods to speak to peers inside the namespace.
    -
      # -- (list) Destination pod selectors for internal P2P egress.
      to:
        -
          # -- (object) Pod selector for Besu StatefulSet pods.
          podSelector:
            # -- (object) Label matchers selecting Besu StatefulSet pods.
            matchLabels:
              # -- (string) Application name label for Besu StatefulSet.
              app.kubernetes.io/name: besu-statefulset
      # -- (list) P2P port for internal communication.
      ports:
        -
          # -- (string) Protocol type for internal P2P.
          protocol: TCP
          # -- (int) RLPx P2P port number.
          port: 30303
    # -- (object) Allow outbound P2P connections to external peers (public networks).
    -
      # -- (list) IP block selectors for external P2P egress.
      to:
        -
          # -- (object) IP block configuration for external network access.
          ipBlock:
            # -- (string) CIDR range allowing all external IPs.
            cidr: 0.0.0.0/0
            # -- (list) Exception list blocking private IP ranges from egress.
            except:
              # -- (string) Private IP range 10.0.0.0/8.
              - 10.0.0.0/8
              # -- (string) Private IP range 172.16.0.0/12.
              - 172.16.0.0/12
              # -- (string) Private IP range 192.168.0.0/16.
              - 192.168.0.0/16
            # Adjust the except list to match internal cluster CIDRs to avoid bypassing other policies.
      # -- (list) P2P port for external communication.
      ports:
        -
          # -- (string) Protocol type for external P2P.
          protocol: TCP
          # -- (int) RLPx P2P port number.
          port: 30303

# -- (object) PriorityClass configuration applied to Besu workloads.
priorityClassNames:
  # -- (string) PriorityClass name assigned to validator pods. Leave empty to inherit namespace defaults.
  validator: ""
  # -- (string) PriorityClass name assigned to RPC pods. Leave empty to inherit namespace defaults.
  rpc: ""

# -- (object) Pod-level security context shared by all containers.
podSecurityContext:
  {}
  # -- (int) Leave empty to inherit from global.securityContexts.pod. Example: fsGroup: 2000

# -- (object) Container-level security context applied to Besu containers.
securityContext:
  {}
  # -- Leave empty to inherit from global.securityContexts.container.
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- (object) Kubernetes Service definition exposing Besu endpoints.
service:
  # -- (string) Service type controlling how endpoints are published (ClusterIP, NodePort, etc.).
  type: ClusterIP
  # -- (object) Named Service ports exposing Besu interfaces.
  ports:
    # -- (int) HTTP JSON-RPC port.
    rpc: 8545
    # -- (int) WebSocket JSON-RPC port.
    ws: 8546
    # -- (int) GraphQL API port.
    graphql: 8547
    # -- (int) RLPx TCP peer-to-peer port.
    rlpx: 30303
    # -- (int) Discovery UDP port used by devp2p.
    discovery: 30303
    # -- (int) Prometheus metrics port.
    metrics: 9545

# -- (object) Core Besu configuration persisted as besu.conf for both validators and RPC nodes.
config:
  # -- (string) Filesystem path where Besu loads the merged genesis JSON produced at runtime.
  genesisFile: /etc/besu/genesis.json
  # -- (string) Log verbosity level for Besu components.
  logging: INFO
  # -- (string) Log output format. Supports "plain" (default) or "json".
  logFormat: plain
  # -- (string) Ledger storage backend (FOREST or BONSAI).
  dataStorageFormat: FOREST
  # -- (string) Filename containing each node's private key within mounted secrets.
  privateKeyFilename: privateKey
  # -- (bool) Emit Bonsai limit trie logs for debugging state transitions.
  bonsaiLimitTrieLogsEnabled: false
  # -- (int) Number of recent blocks cached in memory.
  cacheLastBlocks: 1024
  # -- (int) Minimum gas price accepted for transactions (wei).
  minGasPrice: 0
  # -- (object) Transaction pool configuration for ingress and prioritisation.
  txPool:
    # -- (string) Transaction ordering strategy (e.g., SEQUENCED).
    type: SEQUENCED
    # -- (int) Maximum transactions retained in the pool.
    maxSize: 100000
    # -- (bool) Disable preferential treatment of locally submitted transactions.
    noLocalPriority: true
    # -- (int) Maximum percentage of the pool allowed per account.
    limitByAccountPercentage: 1
    # -- (bool) Persist the transaction pool to disk between restarts.
    enableSaveRestore: true
  # -- (object) Peer-to-peer networking settings.
  p2p:
    # -- (bool) Enable the devp2p networking subsystem.
    enabled: true
    # -- (bool) Enable the discovery protocol for automatic peer finding.
    discoveryEnabled: true
    # -- (string) Path to the static-nodes.json file providing fixed peers.
    staticNodesFile: "/etc/besu/static-nodes.json"
    # -- (string) Network interface the P2P server binds to.
    interface: "0.0.0.0"
    # -- (int) Maximum simultaneous peer connections.
    maxPeers: 25
  # -- (object) JSON-RPC subsystem configuration shared by HTTP and WebSocket servers.
  rpc:
    # -- (int) Maximum fee per gas accepted for transactions submitted via RPC (0 disables the cap).
    txFeecap: 0
  # -- (object) Chain synchronisation controls.
  sync:
    # -- (int) Minimum number of peers required before synchronisation starts.
    minPeers: 1
    # -- (string) Synchronisation mode (FULL, FAST, SNAP, etc.).
    mode: FULL
  # -- (bool) Enable limits on concurrent remote JSON-RPC connections.
  remoteConnectionsLimitEnabled: false
  # -- (bool) Randomise peer priority to avoid deterministic ordering.
  randomPeerPriorityEnabled: true
  # -- (bool) Enable receipt compaction to reduce disk usage.
  receiptCompactionEnabled: true
  # -- (list) Hostnames allowed to access the RPC interfaces; `*` permits all.
  hostAllowlist:
    - "*"
  # -- (object) HTTP JSON-RPC server configuration.
  http:
    # -- (bool) Enable the HTTP JSON-RPC listener.
    enabled: true
    # -- (string) Network interface for the HTTP JSON-RPC listener.
    host: "0.0.0.0"
    # -- (list) Enabled JSON-RPC API namespaces exposed over HTTP.
    api:
      - DEBUG
      - ETH
      - ADMIN
      - WEB3
      - IBFT
      - NET
      - TRACE
      - QBFT
      - PERM
      - TXPOOL
      - PLUGINS
    # -- (list) Allowed CORS origins for HTTP JSON-RPC requests.
    corsOrigins:
      - all
    # -- (bool) Enable JWT authentication for HTTP JSON-RPC requests.
    authenticationEnabled: false
    # -- (int) Maximum concurrent HTTP JSON-RPC connections.
    maxActiveConnections: 2000
    # -- (int) Maximum HTTP request body size in bytes.
    maxRequestContentLength: 524288000
    # -- (int) Maximum number of batched JSON-RPC calls per request.
    maxBatchSize: 512
  # -- (object) WebSocket JSON-RPC server configuration.
  ws:
    # -- (bool) Enable the WebSocket JSON-RPC listener.
    enabled: true
    # -- (string) Network interface for the WebSocket listener.
    host: "0.0.0.0"
    # -- (list) Enabled JSON-RPC API namespaces exposed over WebSockets.
    api:
      - DEBUG
      - ETH
      - ADMIN
      - WEB3
      - IBFT
      - NET
      - TRACE
      - QBFT
      - PERM
      - TXPOOL
      - PLUGINS
    # -- (bool) Enable JWT authentication for WebSocket requests.
    authenticationEnabled: false
    # -- (int) Maximum concurrent WebSocket connections.
    maxActiveConnections: 2000
    # -- (int) Maximum WebSocket frame size in bytes.
    maxFrameSize: 2097152
  # -- (object) GraphQL server configuration.
  graphql:
    # -- (bool) Enable the GraphQL API server.
    enabled: true
    # -- (string) Network interface for the GraphQL server.
    host: "0.0.0.0"
    # -- (list) Allowed CORS origins for GraphQL requests.
    corsOrigins:
      - all
  # -- (object) Prometheus metrics export configuration.
  metrics:
    # -- (bool) Enable the Prometheus metrics endpoint.
    enabled: true
    # -- (string) Network interface for the metrics endpoint.
    host: "0.0.0.0"
    # -- (list) Metrics categories exposed to Prometheus.
    categories:
      - BLOCKCHAIN
      - ETHEREUM
      - EXECUTORS
      - JVM
      - NETWORK
      - PEERS
      - PROCESS
      - PRUNER
      - RPC
      - SYNCHRONIZER
      - TRANSACTION_POOL
  # -- (bool) Include revert reasons in RPC responses when failures occur.
  revertReasonEnabled: true

# -- (object) Ingress configuration used to expose RPC services via Kubernetes Ingress resources.
ingress:
  # -- (bool) Enable creation of an Ingress resource.
  enabled: false
  # -- (string) ingressClassName assigned to the Ingress for controller selection.
  className: ""
  # -- (object) Metadata annotations applied to the Ingress resource.
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- (list) Hostname and path routing rules for the Ingress.
  hosts:
    -
      # -- (string) Hostname for the Ingress rule.
      host: chart-example.local
      # -- (list) Path-based routing rules for the host.
      paths:
        -
          # -- (string) URL path prefix.
          path: /
          # -- (string) Path matching type (Exact, Prefix, or ImplementationSpecific).
          pathType: ImplementationSpecific
  # -- (list) TLS configuration for Ingress hosts.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- (object) Gateway API HTTPRoute configuration for clusters with gateway-api controllers.
httpRoute:
  # -- (bool) Enable rendering of an HTTPRoute resource.
  enabled: false
  # -- (object) Metadata annotations applied to the HTTPRoute.
  annotations: {}
  # -- (list) Gateway references that should accept this route.
  parentRefs:
    -
      # -- (string) Gateway name.
      name: gateway
      # -- (string) Listener section name within the Gateway.
      sectionName: http
      # namespace: default
  # -- (list) HTTP hostnames matched by the route.
  hostnames:
    - chart-example.local
  # -- (list) Rules containing matches and optional filters evaluated by the Gateway.
  rules:
    -
      # -- (list) Match conditions evaluated for each request.
      matches:
        -
          # -- (object) Path matching condition for the request.
          path:
            # -- (string) Path match type (Exact, PathPrefix, or RegularExpression).
            type: PathPrefix
            # -- (string) Path value used when evaluating the request URL.
            value: /headers
      # filters can be enabled to mutate headers or other request properties.
      # - type: RequestHeaderModifier
      #   requestHeaderModifier:
      #     set:
      #       - name: My-Overwrite-Header
      #         value: this-is-the-only-value
      #     remove:
      #       - User-Agent
      # Additional matches can be added as required by traffic patterns.
      # - matches:
      #     - path:
      #         type: PathPrefix
      #         value: /echo
      #       headers:
      #         - name: version
      #           value: v2

# -- (object) OpenShift Route configuration for exposing services through the OpenShift router.
openShiftRoute:
  # -- (bool) Enable creation of an OpenShift Route resource.
  enabled: false
  # -- (object) Metadata annotations applied to the Route.
  annotations: {}
  # -- (string) Desired external hostname for the Route; leave empty for automatic assignment.
  host: ""
  # -- (string) URL path prefix handled by the Route.
  path: ""
  # -- (string) Wildcard policy controlling subdomain routing (None or Subdomain).
  wildcardPolicy: ""
  # -- (object) Target service port configuration for the Route.
  port:
    # -- (string) Named service port exposed through the Route.
    targetPort: http
  # -- (object) Primary backend configuration for the Route.
  to:
    # -- (int) Backend weight determining traffic distribution.
    weight: 100
  # -- (list) Additional backend references to balance traffic across services.
  alternateBackends: []
  # -- (object|null) TLS termination settings; set to null to disable TLS.
  tls: null

# -- (object) CPU and memory requests or limits for Besu containers.
resources:
  requests:
    # -- (string) CPU request per Besu pod
    cpu: "60m"
    # -- (string) Memory request per Besu pod
    memory: "512Mi"
  limits:
    # -- (string) CPU limit per Besu pod (approx. 3x request to target ~33% utilization).
    cpu: "180m"
    # -- (string) Memory limit per Besu pod
    memory: "1024Mi"

# -- (object) Liveness probe configuration ensuring containers restart when unhealthy.
livenessProbe:
  # -- (object) HTTP GET probe configuration hitting the Besu liveness endpoint.
  httpGet:
    # -- (string) HTTP path used for liveness probing.
    path: /readiness?minPeers=1&maxBlocksBehind=10000
    # -- (string|int) Target container port serving the liveness endpoint.
    port: json-rpc
  # -- (int) Seconds to wait before starting liveness checks.
  initialDelaySeconds: 30
  # -- (int) Frequency of liveness checks in seconds.
  periodSeconds: 10
  # -- (int) Timeout in seconds before marking the probe as failed.
  timeoutSeconds: 2
  # -- (int) Consecutive failures required before the container is restarted.
  failureThreshold: 3

# -- (object) Readiness probe configuration signalling when pods can accept traffic.
readinessProbe:
  # # HTTP GET probe configuration hitting the Besu readiness endpoint.
  # httpGet:
  #   # -- (string) HTTP path used for readiness probing, including peer/sync thresholds.
  #   path: /liveness
  #   # -- (string|int) Target container port serving the readiness endpoint.
  #   port: json-rpc
  # # -- (int) Seconds to wait before starting readiness checks.
  # initialDelaySeconds: 15
  # # -- (int) Frequency of readiness checks in seconds.
  # periodSeconds: 5
  # # -- (int) Timeout in seconds before marking the probe as failed.
  # timeoutSeconds: 2
  # # -- (int) Consecutive failures required before the pod is considered unready.
  # failureThreshold: 3

# -- (object) Persistent storage configuration for both validator and RPC StatefulSets.
persistence:
  # -- (bool) Enable persistent volume claims for ledger data.
  enabled: true
  # -- (string) Container path where the persistent volume is mounted.
  mountPath: /data
  # -- (string) Logical name for the volume when using volumeClaimTemplates.
  volumeName: data
  # -- (list) Requested access modes for the PersistentVolumeClaim.
  accessModes:
    - ReadWriteOnce
  # -- (string) Requested storage capacity for each PersistentVolumeClaim.
  size: 20Gi
  # -- (string) StorageClass name used for provisioning volumes; empty selects the cluster default.
  storageClass: ""
  # -- (string) Volume mode (Filesystem or Block) requested for the PVC.
  volumeMode: ""
  # -- (string) Name of an existing PersistentVolumeClaim to reuse instead of creating new PVCs.
  existingClaim: ""
  # -- (object) Metadata annotations applied to generated PVCs.
  annotations: {}
  # -- (object) PVC selector allowing binding to specific PersistentVolumes.
  selector: {}
  # -- (object) Retention policy controlling PVC lifecycle on delete or scale operations.
  retention:
    # -- (string) Behaviour of PVCs when the Helm release is deleted.
    whenDeleted: Retain
    # -- (string) Behaviour of PVCs when the StatefulSet scales down.
    whenScaled: Retain
  # -- (string) Subdirectory of the volume to mount instead of the root.
  subPath: ""
  # -- (bool) Mount the volume read-only when true.
  readOnly: false

# -- (list) Extra volumes attached to Besu pods for custom configuration or secrets.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- (list) Additional volume mounts applied to Besu containers.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- (object) Init container configuration shared across validator and RPC workloads.
initContainer:
  # -- (object) TCP check init container configuration for validating service dependencies.
  tcpCheck:
    # -- (bool) Enable a tcp-check init container before Besu pods start.
    enabled: false
    # -- (object) Container image configuration for the tcp-check init container.
    image:
      # -- (string) OCI image hosting the tcp-check utility.
      repository: ghcr.io/settlemint/btp-waitforit
      # -- (string) Image tag for the tcp-check utility.
      tag: v7.7.11
      # -- (string) Image pull policy for the tcp-check init container.
      pullPolicy: IfNotPresent
    # -- (int) Timeout in seconds applied to each dependency probe.
    timeout: 120
    # -- (object) Resource requests and limits for the tcp-check init container.
    resources:
      # -- (object) Maximum resource limits.
      limits:
        # -- (string) CPU limit.
        cpu: 300m
        # -- (string) Memory limit.
        memory: 64Mi
      # -- (object) Minimum resource requests.
      requests:
        # -- (string) CPU request.
        cpu: 10m
        # -- (string) Memory request.
        memory: 32Mi
    # -- (list) TCP dependencies expressed as name/endpoint pairs (host:port strings).
    dependencies: []
  # -- (object) Compile-genesis init container configuration for merging allocation ConfigMaps.
  compileGenesis:
    # -- (bool) Enable the compile-genesis init container that merges allocation ConfigMaps into the runtime genesis file.
    enabled: true
    # -- (object) Container image configuration for the compile-genesis init container.
    image:
      # -- (string) OCI image hosting the network-bootstrapper CLI used for genesis compilation.
      repository: ghcr.io/settlemint/network-bootstrapper
      # -- (string) Image tag for the network-bootstrapper CLI.
      tag: 1.2.3
      # -- (string) Image pull policy for the compile-genesis init container.
      pullPolicy: IfNotPresent
    # -- (string) Filesystem path populated with the compiled genesis JSON. Leave empty to mirror config.genesisFile.
    outputPath: ""
    # -- (object) Optional Kubernetes resource requests/limits for the compile-genesis init container.
    resources: {}

# -- (list) Additional init containers appended verbatim to both StatefulSets.
extraInitContainers: []

# -- (object) Node selector constraints influencing where Besu pods can schedule.
nodeSelector: {}

# -- (list) Tolerations allowing pods to run on nodes with matching taints.
tolerations: []

# -- (object) Node and pod affinity or anti-affinity rules affecting scheduling decisions.
affinity: {}
