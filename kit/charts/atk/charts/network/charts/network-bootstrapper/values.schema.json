{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "network-bootstrapper values",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "chainId": {
          "description": "Explicit chain ID embedded into the generated genesis artefacts when provided.",
          "type": [
            "string",
            "integer",
            "null"
          ],
          "default": null
        },
        "labels": {
          "type": "object",
          "properties": {
            "kots.io/app-slug": {
              "type": "string",
              "default": "settlemint-atk"
            }
          },
          "description": "KOTS application slug for Replicated platform integration.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "artifacts": {
          "type": "object",
          "properties": {
            "image": {
              "type": "object",
              "properties": {
                "registry": {
                  "type": "string",
                  "default": "ghcr.io"
                },
                "repository": {
                  "description": "Repository path for the artifacts container image.",
                  "type": "string",
                  "default": "settlemint/asset-tokenization-kit-artifacts"
                },
                "pullPolicy": {
                  "description": "Image pull policy for the artifacts container.",
                  "type": "string",
                  "default": "IfNotPresent"
                },
                "tag": {
                  "description": "Image tag for the artifacts container; leave empty to use chart default.",
                  "type": "string",
                  "default": ""
                }
              },
              "description": "OCI registry hosting the artifacts image.",
              "additionalProperties": false
            }
          },
          "description": "Container artifacts configuration for contract ABIs and genesis files.",
          "additionalProperties": false
        }
      },
      "description": "Global values inherited from the parent chart.",
      "additionalProperties": false
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "default": "ghcr.io/settlemint/network-bootstrapper"
        },
        "pullPolicy": {
          "description": "Image pull policy controlling when Kubernetes fetches updated image layers.",
          "type": "string",
          "default": "IfNotPresent"
        },
        "tag": {
          "description": "Image tag override; leave empty to inherit the chart appVersion.",
          "type": "string",
          "default": "1.2.3"
        }
      },
      "description": "Container image configuration for the network bootstrapper.",
      "additionalProperties": false
    },
    "imagePullSecrets": {
      "type": "array",
      "description": "Image pull secrets enabling access to private registries.",
      "items": {}
    },
    "nameOverride": {
      "description": "Override for the short release name used by name templates.",
      "type": "string",
      "default": ""
    },
    "fullnameOverride": {
      "description": "Override for the fully qualified resource name generated by helpers.",
      "type": "string",
      "default": "bootstrapper"
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "default": true
        },
        "automount": {
          "description": "Mount the ServiceAccount token into the bootstrapper pod.",
          "type": "boolean",
          "default": true
        },
        "annotations": {
          "type": "object",
          "properties": {},
          "description": "Metadata annotations applied to the ServiceAccount.",
          "additionalProperties": true
        },
        "name": {
          "description": "Existing ServiceAccount name to reuse instead of creating one.",
          "type": "string",
          "default": ""
        }
      },
      "description": "ServiceAccount configuration associated with the bootstrapper job.",
      "additionalProperties": false
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "default": true
        }
      },
      "description": "RBAC settings that provision Role and RoleBinding for Kubernetes output.",
      "additionalProperties": false
    },
    "podAnnotations": {
      "type": "object",
      "properties": {},
      "description": "Additional annotations merged onto the bootstrapper pod template.",
      "additionalProperties": true
    },
    "podLabels": {
      "type": "object",
      "properties": {},
      "description": "Extra labels merged onto the bootstrapper pod template.",
      "additionalProperties": true
    },
    "podSecurityContext": {
      "type": "object",
      "properties": {},
      "description": "Pod-level security context applied to all containers in the pod.",
      "additionalProperties": true
    },
    "securityContext": {
      "type": "object",
      "properties": {},
      "description": "Container security context applied to the bootstrapper container.",
      "additionalProperties": true
    },
    "initContainer": {
      "type": "object",
      "properties": {
        "tcpCheck": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "image": {
              "type": "object",
              "properties": {
                "repository": {
                  "type": "string",
                  "default": "ghcr.io/settlemint/btp-waitforit"
                },
                "tag": {
                  "description": "Image tag for the tcp-check utility.",
                  "type": "string",
                  "default": "v7.7.10"
                },
                "pullPolicy": {
                  "description": "Image pull policy for the tcp-check init container.",
                  "type": "string",
                  "default": "IfNotPresent"
                }
              },
              "description": "Container image configuration for the tcp-check init container.",
              "additionalProperties": false
            },
            "timeout": {
              "description": "Timeout in seconds applied to each dependency probe.",
              "type": "integer",
              "default": 120
            },
            "resources": {
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "string",
                      "default": "300m"
                    },
                    "memory": {
                      "description": "Maximum memory allocation for the tcp-check init container.",
                      "type": "string",
                      "default": "64Mi"
                    }
                  },
                  "description": "Maximum CPU allocation for the tcp-check init container.",
                  "additionalProperties": false
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "string",
                      "default": "10m"
                    },
                    "memory": {
                      "description": "Minimum memory request for the tcp-check init container.",
                      "type": "string",
                      "default": "32Mi"
                    }
                  },
                  "description": "Minimum resource requests for the tcp-check init container.",
                  "additionalProperties": false
                }
              },
              "description": "CPU and memory resource constraints for the tcp-check init container.",
              "additionalProperties": false
            },
            "dependencies": {
              "type": "array",
              "description": "TCP dependencies expressed as name/endpoint pairs (host:port strings).",
              "items": {}
            }
          },
          "description": "Enable a tcp-check init container before the bootstrapper job starts.",
          "additionalProperties": false
        }
      },
      "description": "Init container configuration shared across the bootstrapper job.",
      "additionalProperties": false
    },
    "extraInitContainers": {
      "type": "array",
      "description": "Additional init containers appended verbatim to the job pod spec.",
      "items": {}
    },
    "resources": {
      "type": "object",
      "properties": {},
      "description": "CPU and memory requests or limits for the bootstrapper container.",
      "additionalProperties": true
    },
    "volumes": {
      "type": "array",
      "description": "Additional volumes attached to the bootstrapper pod.",
      "items": {}
    },
    "subgraph": {
      "type": "object",
      "properties": {
        "fallbackHash": {
          "type": "string",
          "default": "QmRU9F9d7kuDVVzqVF5ig1SibWSEWLYvurR8yz7dyrEUnx"
        }
      },
      "description": "Subgraph handling controls for fallback scenarios.",
      "additionalProperties": false
    },
    "volumeMounts": {
      "type": "array",
      "description": "Extra volume mounts applied to the bootstrapper container.",
      "items": {}
    },
    "nodeSelector": {
      "type": "object",
      "properties": {},
      "description": "Node selector constraints for scheduling the bootstrapper pod.",
      "additionalProperties": true
    },
    "tolerations": {
      "type": "array",
      "description": "Tolerations allowing the bootstrapper pod onto tainted nodes.",
      "items": {}
    },
    "affinity": {
      "type": "object",
      "properties": {},
      "description": "Affinity and anti-affinity rules influencing pod placement.",
      "additionalProperties": true
    },
    "settings": {
      "type": "object",
      "properties": {
        "clusterDomain": {
          "type": "string",
          "default": "svc.cluster.local"
        },
        "defaultStaticNodePort": {
          "description": "Default TCP P2P port used in generated enode URIs when no override is provided.",
          "type": "integer",
          "default": 30303
        },
        "defaultStaticNodeDiscoveryPort": {
          "description": "Default UDP discovery port used in generated enode URIs when no override is provided.",
          "type": "integer",
          "default": 30303
        },
        "validators": {
          "description": "Number of validator identities to generate when building the genesis (default 4).",
          "type": [
            "integer",
            "null"
          ],
          "default": 4
        },
        "staticNodeDomain": {
          "description": "DNS suffix appended to generated static node hostnames.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "staticNodeNamespace": {
          "description": "Namespace component inserted between service name and domain in static node hostnames.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "staticNodePort": {
          "description": "TCP P2P port embedded in static node enode URIs.",
          "type": [
            "integer",
            "null"
          ],
          "default": null
        },
        "staticNodeDiscoveryPort": {
          "description": "UDP discovery port embedded in static node enode URIs.",
          "type": [
            "integer",
            "null"
          ],
          "default": null
        },
        "staticNodeServiceName": {
          "description": "Headless Service name used when constructing static node hostnames.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "staticNodePodPrefix": {
          "description": "StatefulSet prefix applied to validator pod hostnames.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "genesisConfigMapName": {
          "description": "ConfigMap name storing the generated genesis.json payload.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "staticNodesConfigMapName": {
          "description": "ConfigMap name storing the generated static-nodes.json payload.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "faucetArtifactPrefix": {
          "description": "Prefix used for faucet ConfigMaps and Secrets.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "allocations": {
          "description": "Path to a JSON allocations file providing pre-funded accounts.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "outputType": {
          "type": "string",
          "default": "kubernetes"
        },
        "consensus": {
          "description": "Consensus engine to configure (QBFT or IBFTv2).",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "chainId": {
          "description": "Explicit chain ID to encode into the genesis file. Leave unset to inherit from global.chainId.",
          "type": [
            "integer",
            "null"
          ],
          "default": null
        },
        "secondsPerBlock": {
          "description": "Block interval in seconds for the genesis configuration.",
          "type": [
            "integer",
            "null"
          ],
          "default": null
        },
        "gasLimit": {
          "description": "Genesis block gas limit expressed as a decimal number.",
          "type": [
            "integer",
            "null"
          ],
          "default": null
        },
        "gasPrice": {
          "description": "Base gas price in wei applied across the network.",
          "type": [
            "integer",
            "null"
          ],
          "default": null
        },
        "evmStackSize": {
          "description": "Maximum EVM stack size permitted for contract execution.",
          "type": [
            "integer",
            "null"
          ],
          "default": null
        },
        "contractSizeLimit": {
          "description": "Maximum smart-contract bytecode size accepted by the EVM.",
          "type": [
            "integer",
            "null"
          ],
          "default": null
        }
      },
      "description": "Settings passed to the network-bootstrapper CLI executed by the job.",
      "additionalProperties": false
    },
    "artifacts": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "default": "generated"
        },
        "external": {
          "type": "object",
          "properties": {
            "genesis": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            },
            "staticNodes": {
              "type": "array",
              "description": "Collection of enode URIs persisted to the `besu-static-nodes` ConfigMap when `source` equals `external`.",
              "items": {}
            },
            "validators": {
              "type": "array",
              "description": "Validator node definitions providing the data expected by the nodes chart. Each entry must include `address`, `publicKey`, `privateKey`, and `enode`.",
              "items": {}
            },
            "faucet": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "default": ""
                },
                "publicKey": {
                  "description": "Faucet account public key stored in the `besu-faucet-pubkey` ConfigMap when `source` equals `external`.",
                  "type": "string",
                  "default": ""
                },
                "privateKey": {
                  "description": "Faucet private key stored in the `besu-faucet-private-key` Secret when `source` equals `external`.",
                  "type": "string",
                  "default": ""
                }
              },
              "description": "Faucet account credentials stored in ConfigMaps and Secrets when `source` equals `external`.",
              "additionalProperties": false
            }
          },
          "description": "External artifact values used when `source` equals `external`.",
          "additionalProperties": false
        }
      },
      "description": "Determines how Besu network artifacts are populated. Use `generated` to render the bootstrap Job on fresh installs or `external` to supply values manually.",
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
