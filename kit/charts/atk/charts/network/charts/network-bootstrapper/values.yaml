# Default configuration values for the network-bootstrapper subchart. Each key is annotated for helm-docs output.

# -- (object) Global values inherited from the parent chart.
global:
  # -- (int) Chain ID applied when `settings.chainId` is unset.
  chainId:
  # -- (object) Common labels applied to all resources in the release.
  labels:
    # -- (string) KOTS application slug for Replicated platform integration.
    kots.io/app-slug: settlemint-atk
  # -- (object) Container artifacts configuration for contract ABIs and genesis files.
  artifacts:
    # -- (object) Image containing contract ABIs and genesis files.
    image:
      # -- (string) OCI registry hosting the artifacts image.
      registry: ghcr.io
      # -- (string) Repository path for the artifacts container image.
      repository: settlemint/asset-tokenization-kit-artifacts
      # -- (string) Image pull policy for the artifacts container.
      pullPolicy: IfNotPresent
      # -- (string) Image tag for the artifacts container; leave empty to use chart default.
      tag: ""
# -- (object) Container image configuration for the network bootstrapper.
image:
  # -- (string) OCI registry path hosting the network bootstrapper image.
  repository: ghcr.io/settlemint/network-bootstrapper
  # -- (string) Image pull policy controlling when Kubernetes fetches updated image layers.
  pullPolicy: IfNotPresent
  # -- (string) Image tag override; leave empty to inherit the chart appVersion.
  tag: "1.2.3"
# -- (list) Image pull secrets enabling access to private registries.
imagePullSecrets: []
# -- (string) Override for the short release name used by name templates.
nameOverride: ""
# -- (string) Override for the fully qualified resource name generated by helpers.
fullnameOverride: "bootstrapper"
# -- (object) ServiceAccount configuration associated with the bootstrapper job.
serviceAccount:
  # -- (bool) Create a ServiceAccount resource for the release automatically.
  create: true
  # -- (bool) Mount the ServiceAccount token into the bootstrapper pod.
  automount: true
  # -- (object) Metadata annotations applied to the ServiceAccount.
  annotations: {}
  # -- (string) Existing ServiceAccount name to reuse instead of creating one.
  name: ""
# -- (object) RBAC settings that provision Role and RoleBinding for Kubernetes output.
rbac:
  # -- (bool) Render Role and RoleBinding resources tied to the ServiceAccount.
  create: true
# -- (object) Additional annotations merged onto the bootstrapper pod template.
podAnnotations: {}
# -- (object) Extra labels merged onto the bootstrapper pod template.
podLabels: {}
# -- (object) Pod-level security context applied to all containers in the pod.
podSecurityContext: {}
# -- Leave empty to inherit from global.securityContexts.pod.
# fsGroup: 2000

# -- (object) Container security context applied to the bootstrapper container.
securityContext: {}
# -- Leave empty to inherit from global.securityContexts.container.
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

# -- (object) Init container configuration shared across the bootstrapper job.
initContainer:
  # -- (object) TCP health check init container that waits for dependencies to be ready.
  tcpCheck:
    # -- (bool) Enable a tcp-check init container before the bootstrapper job starts.
    enabled: false
    # -- (object) Container image configuration for the tcp-check init container.
    image:
      # -- (string) OCI image hosting the tcp-check utility.
      repository: ghcr.io/settlemint/btp-waitforit
      # -- (string) Image tag for the tcp-check utility.
      tag: v7.7.10
      # -- (string) Image pull policy for the tcp-check init container.
      pullPolicy: IfNotPresent
    # -- (int) Timeout in seconds applied to each dependency probe.
    timeout: 120
    # -- (object) CPU and memory resource constraints for the tcp-check init container.
    resources:
      # -- (object) Maximum resource limits for the tcp-check init container.
      limits:
        # -- (string) Maximum CPU allocation for the tcp-check init container.
        cpu: 100m
        # -- (string) Maximum memory allocation for the tcp-check init container.
        memory: 64Mi
      # -- (object) Minimum resource requests for the tcp-check init container.
      requests:
        # -- (string) Minimum CPU request for the tcp-check init container.
        cpu: 10m
        # -- (string) Minimum memory request for the tcp-check init container.
        memory: 32Mi
    # -- (list) TCP dependencies expressed as name/endpoint pairs (host:port strings).
    dependencies: []
# -- (list) Additional init containers appended verbatim to the job pod spec.
extraInitContainers: []
# -- (object) CPU and memory requests or limits for the bootstrapper container.
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# -- (list) Additional volumes attached to the bootstrapper pod.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- (object) Subgraph handling controls for fallback scenarios.
subgraph:
  # -- (string) IPFS hash used when the artifacts image does not contain subgraph metadata.
  fallbackHash: QmRU9F9d7kuDVVzqVF5ig1SibWSEWLYvurR8yz7dyrEUnx
# -- (list) Extra volume mounts applied to the bootstrapper container.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- (object) Node selector constraints for scheduling the bootstrapper pod.
nodeSelector: {}
# -- (list) Tolerations allowing the bootstrapper pod onto tainted nodes.
tolerations: []
# -- (object) Affinity and anti-affinity rules influencing pod placement.
affinity: {}
# -- (object) Settings passed to the network-bootstrapper CLI executed by the job.
settings:
  # -- (string) Kubernetes DNS suffix appended to generated static node hostnames when unset by the CLI.
  clusterDomain: svc.cluster.local
  # -- (int) Default TCP P2P port used in generated enode URIs when no override is provided.
  defaultStaticNodePort: 30303
  # -- (int) Default UDP discovery port used in generated enode URIs when no override is provided.
  defaultStaticNodeDiscoveryPort: 30303
  # -- (int) Number of validator identities to generate (default 4).
  validators:
  # -- (string) DNS suffix appended to generated static node hostnames.
  staticNodeDomain:
  # -- (string) Namespace component inserted between service name and domain in static node hostnames.
  staticNodeNamespace:
  # -- (int) TCP P2P port embedded in static node enode URIs.
  staticNodePort:
  # -- (int) UDP discovery port embedded in static node enode URIs.
  staticNodeDiscoveryPort:
  # -- (string) Headless Service name used when constructing static node hostnames.
  staticNodeServiceName:
  # -- (string) StatefulSet prefix applied to validator pod hostnames.
  staticNodePodPrefix:
  # -- (string) ConfigMap name storing the generated genesis.json payload.
  genesisConfigMapName:
  # -- (string) ConfigMap name storing the generated static-nodes.json payload.
  staticNodesConfigMapName:
  # -- (string) Prefix used for faucet ConfigMaps and Secrets.
  faucetArtifactPrefix:
  # -- (string) Path to a JSON allocations file providing pre-funded accounts.
  allocations:
  # -- (string) Output target for generated artefacts: screen, file, or kubernetes.
  outputType: kubernetes
  # -- (string) Consensus engine to configure (QBFT or IBFTv2).
  consensus:
  # -- (int) Explicit chain ID to encode into the genesis file. Leave unset to inherit from global.chainId.
  chainId:
  # -- (int) Block interval in seconds for the genesis configuration.
  secondsPerBlock:
  # -- (int) Genesis block gas limit expressed as a decimal number.
  gasLimit:
  # -- (int) Base gas price in wei applied across the network.
  gasPrice:
  # -- (int) Maximum EVM stack size permitted for contract execution.
  evmStackSize:
  # -- (int) Maximum smart-contract bytecode size accepted by the EVM.
  contractSizeLimit:
# -- (object) Artifact sourcing controls for bootstrap data used by the nodes chart.
artifacts:
  # -- (string) Determines how Besu network artifacts are populated. Use `generated` to render the bootstrap Job on fresh installs or `external` to supply values manually.
  source: generated
  # -- (object) External artifact values used when `source` equals `external`.
  external:
    # -- (object) Besu genesis document rendered into the `besu-genesis` ConfigMap when `source` equals `external`.
    genesis: {}
    # -- (list) Collection of enode URIs persisted to the `besu-static-nodes` ConfigMap when `source` equals `external`.
    staticNodes: []
    # -- (list) Validator node definitions providing the data expected by the nodes chart. Each entry must include `address`, `publicKey`, `privateKey`, and `enode`.
    validators: []
    # -- (object) Faucet account credentials stored in ConfigMaps and Secrets when `source` equals `external`.
    faucet:
      # -- (string) Faucet account address stored in the `besu-faucet-address` ConfigMap when `source` equals `external`.
      address: ""
      # -- (string) Faucet account public key stored in the `besu-faucet-pubkey` ConfigMap when `source` equals `external`.
      publicKey: ""
      # -- (string) Faucet private key stored in the `besu-faucet-private-key` Secret when `source` equals `external`.
      privateKey: ""
