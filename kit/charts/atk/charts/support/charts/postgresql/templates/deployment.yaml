apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgresql.fullname" . }}
  labels:
    {{- include "postgresql.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "postgresql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgresql.selectorLabels" . | nindent 8 }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "atk.common.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- if .Values.global.openshift.enabled }}
        fsGroup: {{ .Values.global.openshift.fsGroup | default 1000640000 }}
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        {{- else }}
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        seccompProfile:
          type: RuntimeDefault
        {{- end }}
      containers:
        - name: postgresql
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            {{- if not .Values.global.openshift.enabled }}
            {{- with .Values.securityContext }}
            {{- if .runAsUser }}
            runAsUser: {{ .runAsUser }}
            {{- end }}
            {{- if .runAsGroup }}
            runAsGroup: {{ .runAsGroup }}
            {{- end }}
            {{- end }}
            {{- end }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.fullname" . }}
                  key: postgres-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.fullname" . }}
                  key: postgres-password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.fullname" . }}
                  key: postgres-database
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "${POSTGRES_USER}" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "${POSTGRES_USER}" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            {{- if .Values.initdb.scripts }}
            - name: initdb-scripts
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
            - name: postgresql-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "postgresql.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.initdb.scripts }}
        - name: initdb-scripts
          configMap:
            name: {{ include "postgresql.fullname" . }}-initdb
        {{- end }}
        - name: postgresql-config
          configMap:
            name: {{ include "postgresql.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}