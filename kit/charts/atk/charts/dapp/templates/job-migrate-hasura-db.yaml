{{- if .Values.job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: job-{{ .Values.fullnameOverride }}-migrate-hasura-db
  labels:
    {{- include "dapp.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      {{- with .Values.job.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dapp.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- include "atk.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.job.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.job.podSecurityContext | nindent 8 }}
      {{- end }}
      initContainers:
        - name: clone-repo
          image: "{{ $.Values.job.initContainer.cloneRepo.image.registry }}/{{ $.Values.job.initContainer.cloneRepo.image.repository }}:{{ $.Values.job.initContainer.cloneRepo.image.tag }}"
          imagePullPolicy: {{ $.Values.job.initContainer.cloneRepo.image.pullPolicy }}
          resources:
            {{- toYaml .Values.job.resources | nindent 12 }}
          command:
            - /bin/sh
            - -c
            - |
              set -ex
              if [ -z "$(ls -A /workspace)" ]; then
                git clone https://github.com/settlemint/asset-tokenization-kit.git /workspace
                cd /workspace
                {{- if contains "main" .Values.image.tag }}
                git checkout main
                {{- else }}
                git checkout v{{ .Values.image.tag }}
                {{- end }}
              else
                cd /workspace
                {{- if contains "main" .Values.image.tag }}
                git restore .
                git checkout main
                {{- else }}
                git checkout v{{ .Values.image.tag }}
                {{- end }}
                git pull
              fi
          volumeMounts:
            - name: workspace
              mountPath: /workspace
        - name: wait-for-hasura
          image: "{{ $.Values.job.initContainer.hasuraCheck.image.repository }}:{{ $.Values.job.initContainer.hasuraCheck.image.tag }}"
          imagePullPolicy: {{ $.Values.job.initContainer.hasuraCheck.image.pullPolicy }}
          command: ['/usr/bin/wait-for-it', '{{ $.Values.job.initContainer.hasuraCheck.endpoint }}', '-t', '{{ $.Values.job.initContainer.hasuraCheck.timeout }}']
          resources:
            {{- toYaml .Values.job.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.job.securityContext | nindent 12 }}
          image: {{ .Values.job.image.repository }}:{{ .Values.job.image.tag }}
          imagePullPolicy: {{ .Values.job.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "dapp.fullname" . }}-env
          resources:
            {{- toYaml .Values.job.resources | nindent 12 }}
          command:
            - /bin/sh
            - -c
            - |
              set -ex

              echo "Updating apt..."
              apt-get update
              apt-get install -y jq yq curl git

              echo "Installing Bun..."
              npm install -g bun

              # Verify Bun installation
              bun --version

              echo "Installing dependencies..."
              cd /workspace
              bun install

              echo "Migrating Hasura DB..."
              cd kit/dapp
              bun db:push

              echo "Track tables..."
              bunx settlemint hasura track -a
          volumeMounts:
            - name: workspace
              mountPath: /workspace
      volumes:
        - name: workspace
          persistentVolumeClaim:
            claimName: {{ include "dapp.fullname" . }}-workspace
  backoffLimit: 0
{{- end }}