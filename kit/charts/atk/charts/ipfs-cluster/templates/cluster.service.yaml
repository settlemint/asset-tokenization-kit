{{- $replicas := int .Values.replicaCount -}}
{{- range $i, $_ := until $replicas }}
{{- if gt $i 0 }}---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-%d" (include "ipfs-cluster.clusterFullname" $) $i }}
  labels:
    {{- include "ipfs-cluster.labels" $ | nindent 4 }}
    app.kubernetes.io/component: cluster
    app.kubernetes.io/instance-index: "{{ $i }}"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    {{- include "ipfs-cluster.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/component: cluster
    app.kubernetes.io/instance-index: "{{ $i }}"
  ports:
    - name: p2p
      port: {{ $.Values.cluster.service.ports.p2p }}
      targetPort: p2p
      protocol: TCP
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ipfs-cluster.clusterFullname" . }}
  labels:
    {{- include "ipfs-cluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: cluster
  {{- $serviceAnnotations := include "common.tplvalues.merge" (dict "values" (list .Values.commonAnnotations .Values.cluster.service.annotations) "context" .) | fromYaml }}
  {{- if not $serviceAnnotations }}
    {{- $serviceAnnotations = dict -}}
  {{- end }}
  {{- $metricsPortStr := printf "%d" (int .Values.cluster.service.ports.metrics) }}
  {{- if not (hasKey $serviceAnnotations "prometheus.io/scrape") }}
    {{- $_ := set $serviceAnnotations "prometheus.io/scrape" "true" -}}
  {{- end }}
  {{- if not (hasKey $serviceAnnotations "prometheus.io/port") }}
    {{- $_ := set $serviceAnnotations "prometheus.io/port" $metricsPortStr -}}
  {{- end }}
  {{- if not (hasKey $serviceAnnotations "prometheus.io/path") }}
    {{- $_ := set $serviceAnnotations "prometheus.io/path" "/metrics" -}}
  {{- end }}
  annotations:
{{ toYaml $serviceAnnotations | nindent 4 }}
spec:
  type: {{ .Values.cluster.service.type }}
  selector:
    {{- include "ipfs-cluster.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: cluster
  ports:
    - name: api
      port: {{ .Values.cluster.service.ports.api }}
      targetPort: api
      protocol: TCP
    - name: proxy
      port: {{ .Values.cluster.service.ports.proxy }}
      targetPort: proxy
      protocol: TCP
    - name: metrics
      port: {{ .Values.cluster.service.ports.metrics }}
      targetPort: metrics
      protocol: TCP
    - name: p2p
      port: {{ .Values.cluster.service.ports.p2p }}
      targetPort: p2p
      protocol: TCP
    - name: pinning
      port: {{ .Values.cluster.service.ports.pinning }}
      targetPort: pinning
      protocol: TCP
