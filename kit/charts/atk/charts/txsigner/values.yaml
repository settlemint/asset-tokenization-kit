# Default values for txsigner.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/settlemint/btp-signer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "7.13.0" # Default tag from the example

imagePullSecrets:
  - name: image-pull-secret-docker
  - name: image-pull-secret-ghcr
  - name: image-pull-secret-harbor
nameOverride: ""
fullnameOverride: "txsigner"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 2016
  fsGroup: 2016

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 2016

service:
  type: ClusterIP
  port: 3000 # Default txsigner port

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local # Needs to be configured
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

livenessProbe:
  tcpSocket:
    port: txsigner
  initialDelaySeconds: 1
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1

readinessProbe:
  tcpSocket:
    port: txsigner
  initialDelaySeconds: 1
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 60
  successThreshold: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# PodDisruptionBudget configuration
podDisruptionBudget:
  enabled: false
  # Minimum number of pods that must be available during disruption
  minAvailable: 1
  # Maximum number of pods that can be unavailable during disruption
  # maxUnavailable: 1

# Additional volumes on the output Deployment definition.
volumes:
  - name: tx-signer-cache
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: tx-signer-cache
    mountPath: /signer/.cache

nodeSelector: {}

tolerations: []

affinity: {}

# NetworkPolicy configuration
networkPolicy:
  enabled: false
  # Ingress rules
  ingress:
    # Allow from portal
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: portal
      ports:
        - protocol: TCP
          port: 3000
    # Allow from dapp
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: dapp
      ports:
        - protocol: TCP
          port: 3000
    # Allow from same namespace
    - from:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 3000

  # Egress rules
  egress:
    # Allow DNS resolution
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
    # Allow access to PostgreSQL
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: postgresql-ha
      ports:
        - protocol: TCP
          port: 5432
    # Allow access to Besu nodes
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: besu-statefulset
      ports:
        - protocol: TCP
          port: 8545  # RPC
        - protocol: TCP
          port: 8546  # WebSocket
    # Allow access to ERPC
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: erpc
      ports:
        - protocol: TCP
          port: 4000

tests:
  image:
    registry: docker.io
    repository: busybox
    tag: 1.37.0
    pullPolicy: IfNotPresent

initContainers:
  - name: wait-for-postgres
    image: ghcr.io/settlemint/btp-waitforit:v7.7.5
    command: ["/usr/bin/wait-for-it", "postgresql-pgpool:5432", "-t", "0"]

network:
  nodeRpcUrl: http://erpc:4000

privateKey:
  existingSecret: "" # Set a value if you want to use an existing secret
  mnemonic: "" # Mnemonic to use for the private key
  derivationPath: "" # Derivation path to use for the private key

postgresql: postgresql://txsigner:atk@postgresql-pgpool:5432/txsigner?sslmode=disable

