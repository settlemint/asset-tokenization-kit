# -- (object) Global Docker image registry
global:
  # -- (string) Global Docker image registry
  imageRegistry: ""
  # -- (list) Global Docker registry secret names as an array
  imagePullSecrets: []
  # -- (string) Global StorageClass for Persistent Volume(s)
  storageClass: ""
  labels:
    kots.io/app-slug: settlemint-atk

# -- String to fully override common.names.fullname (string)
fullnameOverride: "txsigner"

# -- Labels to add to all deployed objects (object)
commonLabels: {}

# -- Annotations to add to all deployed objects (object)
commonAnnotations: {}

# -- (object) TxSigner image
image:
  # -- (string) TxSigner image registry
  registry: ghcr.io
  # -- (string) TxSigner image repository
  repository: settlemint/btp-signer
  # -- (string) TxSigner image tag (immutable tags are recommended)
  tag: "7.15.13"
  # -- (string) TxSigner image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  digest: ""
  # -- (string) TxSigner image pull policy
  pullPolicy: IfNotPresent
  # -- TxSigner image pull secrets (list)
  pullSecrets: []

# -- Number of TxSigner replicas to deploy (int)
replicaCount: 1

# -- (object) Update strategy configuration for TxSigner deployment
updateStrategy:
  # -- (string) TxSigner deployment strategy type
  type: RollingUpdate
  # -- (object) TxSigner deployment rolling update configuration parameters
  rollingUpdate: {}

# -- Alternate scheduler (string)
schedulerName: ""

# -- TxSigner pods' priority class name (string)
priorityClassName: ""

# -- Topology Spread Constraints for pod assignment (list)
topologySpreadConstraints: []

# -- (object) Extra labels for TxSigner pods
podLabels: {}

# -- Annotations for TxSigner pods (object)
podAnnotations:
  # -- (string) Enable prometheus scraping
  prometheus.io/scrape: "true"
  # -- (string) Prometheus metrics port
  prometheus.io/port: "3001"
  # -- (string) Prometheus metrics path
  prometheus.io/path: "/metrics"

# -- (string) Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
podAffinityPreset: ""

# -- (string) Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
podAntiAffinityPreset: soft

# -- Node affinity preset configuration (object)
nodeAffinityPreset:
  # -- Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard` (object)
  type: ""
  # -- Node label key to match. Ignored if `affinity` is set (object)
  key: ""
  # -- Node label values to match. Ignored if `affinity` is set (object)
  values: []

# -- Affinity for pod assignment (object)
affinity: {}

# -- Node labels for pod assignment (object)
nodeSelector: {}

# -- Tolerations for pod assignment (list)
tolerations: []

# -- Pod Security Context configuration (object)
podSecurityContext: {}

# -- Container Security Context configuration (object)
containerSecurityContext: {}

# -- TxSigner containers resource requests and limits
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Configure TxSigner containers' liveness probe (object)
livenessProbe:
  # -- Enable livenessProbe on TxSigner containers (bool)
  enabled: true
  # -- Initial delay seconds for livenessProbe (int)
  initialDelaySeconds: 1
  # -- Period seconds for livenessProbe (int)
  periodSeconds: 10
  # -- Timeout seconds for livenessProbe (int)
  timeoutSeconds: 5
  # -- Failure threshold for livenessProbe (int)
  failureThreshold: 30
  # -- Success threshold for livenessProbe (int)
  successThreshold: 1
  # -- TCP socket parameters for livenessProbe (object)
  tcpSocket:
    # -- (string) Port for tcpSocket livenessProbe
    port: http

# -- Configure TxSigner containers' readiness probe (object)
readinessProbe:
  # -- Enable readinessProbe on TxSigner containers (bool)
  enabled: true
  # -- Initial delay seconds for readinessProbe (int)
  initialDelaySeconds: 1
  # -- Period seconds for readinessProbe (int)
  periodSeconds: 5
  # -- Timeout seconds for readinessProbe (int)
  timeoutSeconds: 5
  # -- Failure threshold for readinessProbe (int)
  failureThreshold: 60
  # -- Success threshold for readinessProbe (int)
  successThreshold: 1
  # -- TCP socket parameters for readinessProbe (object)
  tcpSocket:
    # -- (string) Port for tcpSocket readinessProbe
    port: http

# -- Configure TxSigner containers' startup probe (object)
startupProbe:
  # -- Enable startupProbe on TxSigner containers (bool)
  enabled: false
  # -- Initial delay seconds for startupProbe (int)
  initialDelaySeconds: 30
  # -- Period seconds for startupProbe (int)
  periodSeconds: 10
  # -- Timeout seconds for startupProbe (int)
  timeoutSeconds: 5
  # -- Failure threshold for startupProbe (int)
  failureThreshold: 10
  # -- Success threshold for startupProbe (int)
  successThreshold: 1

# -- (object) lifecycleHooks for the TxSigner container(s) to automate configuration before or after startup
lifecycleHooks: {}

# -- (list) Optionally specify extra list of additional volumes for the TxSigner pod(s)
extraVolumes:
  - name: tx-signer-cache
    emptyDir: {}

# -- (list) Optionally specify extra list of additional volumeMounts for the TxSigner container(s)
extraVolumeMounts:
  - name: tx-signer-cache
    mountPath: /signer/.cache

# -- Array with extra environment variables to add to TxSigner nodes (list)
extraEnvVars: []

# -- (string) Name of existing ConfigMap containing extra env vars for TxSigner nodes
extraEnvVarsCM: ""

# -- (string) Name of existing Secret containing extra env vars for TxSigner nodes
extraEnvVarsSecret: ""

# -- Service parameters (object)
service:
  # -- (string) TxSigner service type
  type: ClusterIP
  # -- (int) TxSigner service HTTP port
  port: 3000
  # -- (int) TxSigner service metrics port
  metricsPort: 3001
  # -- (string) Node port for HTTP
  nodePort: ""
  # -- (string) Node port for metrics
  metricsNodePort: ""
  # -- (string) TxSigner service Cluster IP
  clusterIP: ""
  # -- (string) TxSigner service Load Balancer IP
  loadBalancerIP: ""
  # -- TxSigner service Load Balancer sources (list)
  loadBalancerSourceRanges: []
  # -- (string) TxSigner service external traffic policy
  externalTrafficPolicy: Cluster
  # -- (object) Additional custom annotations for TxSigner service
  annotations: {}
  # -- (list) Extra ports to expose in the TxSigner service (normally used with the `sidecar` value)
  extraPorts: []
  # -- (string) Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  sessionAffinity: None
  # -- (object) Additional settings for the sessionAffinity
  sessionAffinityConfig: {}

# -- Ingress parameters (object)
ingress:
  # -- Enable ingress record generation for TxSigner (bool)
  enabled: false
  # -- (string) Ingress path type
  pathType: ImplementationSpecific
  # -- (string) Force Ingress API version (automatically detected if not set)
  apiVersion: ""
  # -- (string) Default host for the ingress record
  hostname: txsigner.k8s.orb.local
  # -- (string) IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ingressClassName: "atk-nginx"
  # -- (string) Default path for the ingress record
  path: /
  # -- (object) Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  annotations: {}
  # -- (bool) Enable TLS configuration for the host defined at `ingress.hostname` parameter
  tls: false
  # -- (bool) Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  selfSigned: false
  # -- (list) An array with additional hostname(s) to be covered with the ingress record
  extraHosts: []
  # -- (list) An array with additional arbitrary paths that may need to be added to the ingress under the main host
  extraPaths: []
  # -- (list) TLS configuration for additional hostname(s) to be covered with this ingress record
  extraTls: []
  # -- Custom TLS certificates as secrets (list)
  secrets: []
  # -- Additional rules to be covered with this ingress record (list)
  extraRules: []

# -- OpenShift Route parameters
openShiftRoute:
  # -- Enable OpenShift route creation for TxSigner
  enabled: false
  # -- Additional annotations for the OpenShift route resource
  annotations: {}
  # -- Hostname exposed via the OpenShift route
  host: txsigner.k8s.orb.local
  # -- HTTP path exposed via the OpenShift route
  path: /
  # -- Wildcard policy to apply to the route
  wildcardPolicy: None
  # -- Service port configuration for the route target
  port:
    # -- Service target port name (must exist on the TxSigner service)
    targetPort: http
  # -- Primary service weight configuration
  to:
    # -- Weight assigned to the TxSigner service backend
    weight: 100
  # -- Additional backends for weighted routing
  alternateBackends: []
  # -- TLS configuration for the OpenShift route
  tls: null

# -- Service account for TxSigner pods
serviceAccount:
  # -- (bool) Specifies whether a ServiceAccount should be created
  create: true
  # -- (string) The name of the ServiceAccount to use.
  name: ""
  # -- (bool) Automount service account token for the deployment controller service account
  automountServiceAccountToken: false
  # -- (object) Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
  annotations: {}
  # -- (object) Extra labels to be added to the service account
  labels: {}

# -- Autoscaling configuration for TxSigner (object)
autoscaling:
  # -- Enable autoscaling for TxSigner (bool)
  enabled: false
  # -- Maximum number of TxSigner replicas (int)
  maxReplicas: 3
  # -- Minimum number of TxSigner replicas (int)
  minReplicas: 1
  # -- Built-in metrics configuration (list)
  builtInMetrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  # -- Custom metrics configuration (list)
  customMetrics: []

# -- Pod disruption budget configuration (object)
pdb:
  # -- (bool) If true, create a pod disruption budget for pods.
  enabled: false
  # -- (string) Minimum number/percentage of pods that should remain scheduled
  minAvailable: ""
  # -- (string) Maximum number/percentage of pods that may be made unavailable. Defaults to 1 if both pdb.minAvailable and pdb.maxUnavailable are empty.
  maxUnavailable: ""

# -- Network policies configuration (object)
networkPolicy:
  # -- Enable creation of NetworkPolicy resources (bool)
  enabled: false
  # -- (bool) The Policy model to apply
  allowExternal: true
  # -- (bool) Allow the pod to access any range of port and all destinations.
  allowExternalEgress: true
  # -- (bool) Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
  addExternalClientAccess: true
  # -- Add extra ingress rules to the NetworkPolicy (list)
  extraIngress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: dapp
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: portal
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
        - podSelector: {} # Same namespace
      ports:
        - protocol: TCP
          port: 3000 # HTTP port
        - protocol: TCP
          port: 3001 # Metrics port
  # -- (list) Add extra egress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
  extraEgress:
    # Allow DNS resolution
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
    # Allow access to Besu nodes
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: besu-statefulset
      ports:
        - protocol: TCP
          port: 8545 # RPC
    # Allow access to external HTTPS APIs (for signing services)
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
  # -- (object) Ingress rules configuration
  ingressRules:
    # -- (object) Access restrictions configuration
    accessOnlyFrom:
      # -- (bool) Enable ingress rule that makes TxSigner only accessible from a particular origin.
      enabled: false
      # -- (object) Namespace selector label that is allowed to access TxSigner. This label will be used to identified allowed namespace(s).
      namespaceSelector: {}
      # -- (object) Pods selector label that is allowed to access TxSigner. This label will be used to identified allowed pod(s).
      podSelector: {}

# -- Test parameters (object)
tests:
  # -- (object) Image for test pods
  image:
    # -- (string) Test image registry
    registry: docker.io
    # -- (string) Test image repository
    repository: busybox
    # -- (string) Test image tag
    tag: 1.37.0
    # -- (string) Test image pull policy
    pullPolicy: IfNotPresent

# -- TxSigner configuration (object)
config:
  # -- (string) Operation mode (standalone or integrated)
  mode: "standalone"
  # -- (bool) Enable debug mode
  debug: false
  # -- (string) Log level for TxSigner
  logLevel: info
  # -- (string) RPC endpoint URL
  rpcUrl: "http://erpc:4000"
  # -- (string) Chain ID for the network
  chainId: "53771311147"
  # -- Port for the HTTP server (int)
  port: 3000
  # -- Port for the metrics server (int)
  metricsPort: 3001
  # -- (string) Signing strategy (local, kms, hsm)
  signingStrategy: "local"
  # -- (string) Private key for local signing (use with caution, prefer secrets)
  privateKey: ""
  # -- (string) Mnemonic to use for the private key
  mnemonic: ""
  # -- (string) Derivation path to use for the private key
  derivationPath: ""
  # -- (string) Use existing secret for private key
  existingSecret: ""
  # -- (string) Key within the existing secret
  existingSecretKey: "private-key"
  # -- (object) KMS configuration (if signingStrategy is kms)
  kms:
    # -- (string) KMS provider (aws, azure, gcp)
    provider: ""
    # -- (string) KMS key ID
    keyId: ""
    # -- (string) KMS region
    region: ""
  # -- (object) HSM configuration (if signingStrategy is hsm)
  hsm:
    # -- (string) HSM module path
    module: ""
    # -- (string) HSM slot
    slot: ""
    # -- (string) HSM PIN
    pin: ""
  # -- Rate limiting configuration (object)
  rateLimit:
    # -- Enable rate limiting (bool)
    enabled: true
    # -- Maximum requests per minute (int)
    maxRequestsPerMinute: 60
    # -- Maximum requests per hour (int)
    maxRequestsPerHour: 1000
  # -- Transaction queue configuration (object)
  queue:
    # -- Maximum queue size (int)
    maxSize: 1000
    # -- Queue processing interval in milliseconds (int)
    processingInterval: 1000
  # -- Gas configuration (object)
  gas:
    # -- (string) Gas price strategy (fixed, oracle, estimator)
    priceStrategy: "estimator"
    # -- (int) Fixed gas price in Gwei (if priceStrategy is fixed)
    fixedPrice: 20
    # -- (int) Gas limit
    limit: 3000000
    # -- (float) Gas price multiplier for estimator strategy
    multiplier: 1.1
  # -- (object) Nonce management
  nonce:
    # -- (string) Nonce management strategy (sequential, parallel)
    strategy: "sequential"
    # -- (int) Maximum pending transactions
    maxPending: 10
  # -- (object) Audit logging
  audit:
    # -- (bool) Enable audit logging
    enabled: true
    # -- (int) Audit log retention days
    retentionDays: 30
  # -- (list) Allowed contracts for interaction
  allowedContracts: []
  # -- (list) Allowed methods for execution
  allowedMethods: []
  # -- CORS configuration (object)
  cors:
    # -- (bool) Enable CORS
    enabled: false
    # -- (list) Allowed origins
    origins: []
    # -- (list) Allowed methods
    methods: ["GET", "POST"]
    # -- (list) Allowed headers
    headers: ["Content-Type", "Authorization"]
  # -- (object) Additional secret environment variables to add to the txsigner
  extraSecretEnv: {}

# -- (object) Init container configuration
initContainer:
  tcpCheck:
    enabled: true
    image:
      repository: ghcr.io/settlemint/btp-waitforit
      tag: v7.7.10
      pullPolicy: IfNotPresent
    timeout: 120
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
      requests:
        cpu: 10m
        memory: 32Mi
    dependencies:
      - name: postgresql
        endpoint: "{{ include \"atk.postgresql.endpoint\" (dict \"context\" $ \"chartKey\" \"txsigner\") }}"

# -- (list) Additional init containers
extraInitContainers: []