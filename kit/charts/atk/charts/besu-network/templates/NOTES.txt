{{/*
NOTES.txt for the Besu Network subchart.
*/}}
{{- $serviceConfig := .Values.service | default dict -}}
{{- $genesisConfig := .Values.genesis | default dict -}}
{{- $ingressConfig := .Values.ingress | default dict -}}
========================================================================
  Besu Network Deployed
========================================================================

Your Besu network components have been deployed in the '{{ .Release.Namespace }}' namespace.

------------------------------------------------------------------------
  Access Information
------------------------------------------------------------------------

Internal Endpoints (within Kubernetes cluster):
  - JSON-RPC:   http://{{ .Release.Name }}-besu-network:{{ $serviceConfig.rpcPort | default "8545" }}
  {{- if $serviceConfig.wsEnabled }}
  - WebSocket:  ws://{{ .Release.Name }}-besu-network:{{ $serviceConfig.wsPort | default "8546" }}
  {{- end }}
  {{- if $serviceConfig.metricsEnabled }}
  - Metrics:    http://{{ .Release.Name }}-besu-network:{{ $serviceConfig.metricsPort | default "9545" }}/metrics
  {{- end }}

External Endpoints (if Ingress is configured in the main chart):
  - JSON-RPC:   Refer to the main ATK chart NOTES.txt (typically https://rpc.{{ .Values.global.domain }})
  {{- if and $serviceConfig.wsEnabled $ingressConfig.ws.enabled }}
  - WebSocket:  Refer to the main ATK chart NOTES.txt (typically wss://rpc.{{ .Values.global.domain }}/ws)
  {{- end }}

Network Details:
  - Network ID: {{ $genesisConfig.networkId | default "1337" }}
  - Chain ID:   {{ $genesisConfig.chainId | default "1337" }}

------------------------------------------------------------------------
  Health Checks & Status
------------------------------------------------------------------------

Check Pod Status:
  - To view the status of the Besu pods:
    kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/name=besu

Check Node Sync Status:
  - Connect to a Besu pod and use curl, or port-forward the RPC port:
    curl -X POST --data '{ "jsonrpc":"2.0", "method":"eth_syncing", "params":[], "id":1 }' -H "Content-Type: application/json" http://localhost:{{ $serviceConfig.rpcPort | default "8545" }}
  - If the result is 'false', the node is synced.

Check Validator Status (for IBFT/QBFT):
  - Use the 'ibft_getValidatorsByBlockNumber' or 'qbft_getValidatorsByBlockNumber' method:
    curl -X POST --data '{ "jsonrpc":"2.0", "method":"ibft_getValidatorsByBlockNumber", "params":["latest"], "id":1 }' -H "Content-Type: application/json" http://localhost:{{ $serviceConfig.rpcPort | default "8545" }}

------------------------------------------------------------------------
  Configuration
------------------------------------------------------------------------

Genesis File:
  - The genesis configuration is stored in the ConfigMap: '{{ .Release.Name }}-besu-network-genesis'

Node Keys & Configuration:
  - Node keys are typically generated or provided via Secrets.
  - Key configuration parameters are set in the 'besu-network' section of the main chart's 'values.yaml'. Check parameters like:
    - `replicaCount`: Number of nodes.
    - `genesis.networkId`, `genesis.chainId`
    - `rpcHttpEnabled`, `rpcWsEnabled`, `metricsEnabled`
    - `persistence.enabled`, `persistence.size`
    - Bootnode configuration (`bootnodes`)

------------------------------------------------------------------------
  Troubleshooting
------------------------------------------------------------------------

Check Logs:
  - To view logs for a specific Besu node pod (replace <pod-name>):
    kubectl logs -n {{ .Release.Namespace }} <pod-name>
  - To follow logs:
    kubectl logs -f -n {{ .Release.Namespace }} <pod-name>

Common Issues:
  - Nodes Not Peering: Check bootnode configuration, network policies, and logs for connection errors. Ensure `discoveryEnabled` is true if needed.
  - Syncing Stalled: Verify peer connections, check resource limits (CPU/memory) on pods, and inspect logs for errors.
  - Connection Refused (RPC/WS): Ensure the services (`kubectl get svc -n {{ .Release.Namespace }}`) and pods are running. Check if the correct ports are enabled in the configuration.

========================================================================