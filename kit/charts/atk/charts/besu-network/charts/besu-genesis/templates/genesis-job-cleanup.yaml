---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "besu-genesis.name" . }}-cleanup
  labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
    azure.workload.identity/use: "true"
{{- end }}
    app.kubernetes.io/name: besu-genesis-job-cleanup
    app.kubernetes.io/component: genesis-job-cleanup
    app.kubernetes.io/part-of: {{ include "besu-genesis.fullname" . }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/managed-by: helm
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook: "pre-delete"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  backoffLimit: 3
  completions: 1
  template:
    metadata:
      labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
        azure.workload.identity/use: "true"
{{- end}}
        app.kubernetes.io/name: besu-genesis-job-cleanup
        app.kubernetes.io/component: genesis-job-cleanup
        app.kubernetes.io/part-of: {{ include "besu-genesis.fullname" . }}
        app.kubernetes.io/namespace: {{ .Release.Namespace }}
        app.kubernetes.io/managed-by: helm
    spec:
      restartPolicy: Never
      {{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
      serviceAccountName: {{ .Values.azure.serviceAccountName }}
     {{- else if and (eq .Values.cluster.provider "aws") (.Values.cluster.cloudNativeServices) }}
      serviceAccountName: {{ .Values.aws.serviceAccountName }}
      {{- else }}
      serviceAccountName: {{ include "besu-genesis.name" . }}-sa
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: delete-genesis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.cleanupJob.resources }}
          resources:
{{ toYaml . | nindent 12 }}
          {{- end }}
          command:
            - /bin/bash
            - -c
          args:
            - |

{{- if .Values.quorumFlags.removeGenesisOnDelete }}

              echo "Checking and deleting genesis PVC in k8s ..."
              if kubectl get pvc --namespace {{ .Release.Namespace }} besu-genesis-pvc &>/dev/null; then
                kubectl delete pvc --namespace {{ .Release.Namespace }} besu-genesis-pvc
                echo "Genesis PVC deleted"
              else
                echo "Genesis PVC not found, skipping"
              fi

              echo "Checking and deleting bootnodes configmap in k8s ..."
              if kubectl get configmap --namespace {{ .Release.Namespace }} besu-bootnodes &>/dev/null; then
                kubectl delete configmap --namespace {{ .Release.Namespace }} besu-bootnodes
                echo "Bootnodes configmap deleted"
              else
                echo "Bootnodes configmap not found, skipping"
              fi

              echo "Checking and deleting node-enodes configmap in k8s ..."
              if kubectl get configmap --namespace {{ .Release.Namespace }} besu-peers &>/dev/null; then
                kubectl delete configmap --namespace {{ .Release.Namespace }} besu-peers
                echo "Node-enodes configmap deleted"
              else
                echo "Node-enodes configmap not found, skipping"
              fi

              echo "Checking and deleting contracts genesis configmap in k8s ..."
              if kubectl get configmap --namespace {{ .Release.Namespace }} contracts-genesis &>/dev/null; then
                kubectl delete configmap --namespace {{ .Release.Namespace }} contracts-genesis
                echo "Contracts genesis configmap deleted"
              else
                echo "Contracts genesis configmap not found, skipping"
              fi

              echo "Checking and deleting genesis server resources in k8s ..."
              if kubectl get deployment --namespace {{ .Release.Namespace }} besu-genesis-server &>/dev/null; then
                kubectl delete deployment --namespace {{ .Release.Namespace }} besu-genesis-server
                echo "Genesis server deployment deleted"
              else
                echo "Genesis server deployment not found, skipping"
              fi

              if kubectl get service --namespace {{ .Release.Namespace }} besu-genesis-server &>/dev/null; then
                kubectl delete service --namespace {{ .Release.Namespace }} besu-genesis-server
                echo "Genesis server service deleted"
              else
                echo "Genesis server service not found, skipping"
              fi

              if kubectl get configmap --namespace {{ .Release.Namespace }} besu-genesis-nginx-config &>/dev/null; then
                kubectl delete configmap --namespace {{ .Release.Namespace }} besu-genesis-nginx-config
                echo "Genesis server nginx config deleted"
              else
                echo "Genesis server nginx config not found, skipping"
              fi

{{- end}}
