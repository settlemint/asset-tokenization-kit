---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: besu-genesis-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "besu-genesis.labels" . | nindent 4 }}
    app.kubernetes.io/component: genesis-server
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "-5"
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "besu-genesis.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: genesis-server
  template:
    metadata:
      labels:
        {{- include "besu-genesis.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: genesis-server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      containers:
      - name: genesis-server
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: genesis-pvc
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        livenessProbe:
          httpGet:
            path: /genesis.json
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /genesis.json
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: genesis-pvc
        persistentVolumeClaim:
          claimName: besu-genesis-pvc
      - name: nginx-config
        configMap:
          name: besu-genesis-nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: besu-genesis-nginx-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "besu-genesis.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-15"
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index genesis.json;
            
            # Enable CORS for cross-origin requests
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: besu-genesis-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "besu-genesis.labels" . | nindent 4 }}
    app.kubernetes.io/component: genesis-server
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "-4"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    {{- include "besu-genesis.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: genesis-server 