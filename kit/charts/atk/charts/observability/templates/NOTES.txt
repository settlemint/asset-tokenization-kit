{{/*
NOTES.txt for the Observability subchart (Grafana, VictoriaMetrics, Loki).
*/}}
{{- $grafanaValues := .Values.grafana | default dict -}}
{{- $grafanaService := $grafanaValues.service | default dict -}}
{{- $grafanaIngress := $grafanaValues.ingress | default dict -}}
{{- $victoriaMetricsValues := .Values.victoriaMetrics | default dict -}}
{{- $vmsingleValues := $victoriaMetricsValues.vmsingle | default dict -}}
{{- $vmsingleService := $vmsingleValues.service | default dict -}}
{{- $vmalertValues := $victoriaMetricsValues.vmalert | default dict -}}
{{- $vmalertService := $vmalertValues.service | default dict -}}
{{- $lokiValues := .Values.loki | default dict -}}
{{- $lokiService := $lokiValues.service | default dict -}}
========================================================================
  Observability Stack Deployed
========================================================================

Your observability components (Grafana, VictoriaMetrics, Loki) have been deployed in the '{{ .Release.Namespace }}' namespace.

------------------------------------------------------------------------
  Access Information
------------------------------------------------------------------------

Grafana:
  - URL (External via Ingress): https://{{ if $grafanaIngress.hosts }}{{ index $grafanaIngress.hosts 0 }}{{ else }}{{ printf "grafana.%s" .Values.global.domain }}{{ end }}
  - Default Admin User: {{ $grafanaValues.adminUser | default "admin" }}
  - Getting the Admin Password:
    kubectl get secret -n {{ .Release.Namespace }} {{ .Release.Name }}-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
    (Note: If you set adminPassword in values.yaml, use that password instead.)

VictoriaMetrics (Metrics Storage):
  - vmsingle Write Endpoint (Internal): http://{{ .Release.Name }}-victoria-metrics-single:{{ $vmsingleService.port | default "8429" }}/api/v1/write
  - vmsingle Read Endpoint (Internal): http://{{ .Release.Name }}-victoria-metrics-single:{{ $vmsingleService.port | default "8429" }}/api/v1/query
  - vmalert Endpoint (Internal, if enabled): http://{{ .Release.Name }}-victoria-metrics-alert:{{ $vmalertService.port | default "8080" }}
  - Note: These are typically accessed internally by Grafana (datasource) and vmagent/prometheus.

Loki (Log Aggregation):
  - Write Endpoint (Internal): http://{{ .Release.Name }}-loki:{{ $lokiService.port | default "3100" }}/loki/api/v1/push
  - Read Endpoint (Internal): http://{{ .Release.Name }}-loki:{{ $lokiService.port | default "3100" }}/loki/api/v1/query
  - Note: These are typically accessed internally by Grafana (datasource) and promtail/log agents.

------------------------------------------------------------------------
  Health Checks & Status
------------------------------------------------------------------------

Check Pod Status:
  - Grafana:         kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/name=grafana
  - VictoriaMetrics (vmsingle): kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/name=victoria-metrics-single
  - Loki:            kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/name=loki
  - Promtail (if enabled): kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/name=promtail
  - vmagent (if enabled): kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/name=victoria-metrics-agent

Service Health Endpoints (Internal):
  - Grafana:      http://{{ .Release.Name }}-grafana:{{ $grafanaService.port | default "3000" }}/api/health
  - vmsingle:     http://{{ .Release.Name }}-victoria-metrics-single:{{ $vmsingleService.port | default "8429" }}/health
  - Loki:         http://{{ .Release.Name }}-loki:{{ $lokiService.port | default "3100" }}/ready

------------------------------------------------------------------------
  Configuration
------------------------------------------------------------------------

Key Configuration Values (from 'values.yaml'):
  - Grafana: Ingress settings, admin credentials, persistence, datasources, dashboards.
  - VictoriaMetrics: Persistence settings for vmsingle, retention period, vmagent scrape configs.
  - Loki: Persistence settings, retention period, promtail scrape configs.

Default Dashboards & Datasources:
  - Grafana is likely pre-configured with datasources for VictoriaMetrics and Loki.
  - Default dashboards might be provisioned. Check the Grafana UI under 'Dashboards'.

Log & Metric Collection:
  - Check vmagent configuration (ConfigMap: `{{ .Release.Name }}-victoria-metrics-agent`) for metrics scrape targets.
  - Check promtail configuration (ConfigMap: `{{ .Release.Name }}-loki-promtail-config`) for log scrape targets.

------------------------------------------------------------------------
  Troubleshooting
------------------------------------------------------------------------

Check Logs:
  - Use 'kubectl logs -n {{ .Release.Namespace }} -l <label-selector>' for the respective components (Grafana, vmsingle, Loki, Promtail, vmagent).

Common Issues:
  - Grafana Login Failed: Verify the method used to get the admin password. Check Grafana pod logs.
  - No Data in Grafana (Metrics): Verify vmsingle is running. Check vmagent pods are running and scraping targets successfully (check vmagent logs). Ensure the Grafana datasource connection to VictoriaMetrics is working.
  - No Data in Grafana (Logs): Verify Loki is running. Check Promtail pods are running and scraping logs successfully (check Promtail logs). Ensure the Grafana datasource connection to Loki is working.
  - Pods Crashing/Not Ready: Use 'kubectl describe pod' to investigate events and check resource limits.

Example Log Query (Grafana Explore with Loki datasource):
  - To find logs for a specific pod:
    {namespace="{{ .Release.Namespace }}", pod="<pod-name>"}
  - To find logs containing an error message:
    {namespace="{{ .Release.Namespace }}"} |= "error"

========================================================================