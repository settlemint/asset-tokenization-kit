# OpenShift-specific values override for ATK
#
# This file overrides specific security context values for OpenShift environments.
# Use this file with: helm install atk ./atk -f values.yaml -f values-openshift.yaml
#
# Key principle: Templates are the same for both Kubernetes and OpenShift.
# The only difference is in the values - OpenShift doesn't set runAsUser/runAsGroup/fsGroup
# because OpenShift assigns these automatically based on the project's UID range.

# Global security contexts for OpenShift
global:
  securityContexts:
    pod:
      fsGroup: null
      runAsUser: null
      runAsGroup: null
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    container:
      runAsNonRoot: true
      runAsUser: null
      runAsGroup: null
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault

# Graph Node security contexts for OpenShift
graph-node:
  ingress:
    enabled: false

  openShiftRoute:
    enabled: true
    host: graph.apps-crc.testing
    wildcardPolicy: None
    tls: null
    to:
      weight: 100
    alternateBackends: []
    routes:
      - nameSuffix: ""
        host: ""
        path: /
        targetPort: http-query
        annotations: {}
      - nameSuffix: ws
        host: ""
        path: /ws
        targetPort: http-queryws
        annotations:
          haproxy.router.openshift.io/rewrite-target: /
      - nameSuffix: admin
        host: ""
        path: /admin
        targetPort: http-admin
        annotations:
          haproxy.router.openshift.io/rewrite-target: /
      - nameSuffix: indexer
        host: ""
        path: /indexer
        targetPort: http-status
        annotations:
          haproxy.router.openshift.io/rewrite-target: /
      - nameSuffix: graphman
        host: ""
        path: /graphman
        targetPort: http-status
        annotations:
          haproxy.router.openshift.io/rewrite-target: /

# Portal security contexts for OpenShift
portal:
  ingress:
    enabled: false
# Transaction Signer security contexts for OpenShift
txsigner:
  openShiftRoute:
    enabled: true
    host: txsigner.apps-crc.testing
    path: /
    tls: null

# ERPC security contexts for OpenShift
erpc:
  ingress:
    enabled: false

  openShiftRoute:
    enabled: true
    host: rpc.apps-crc.testing
    path: /
    wildcardPolicy: None
    tls: null

# DApp security contexts for OpenShift
dapp:
  ingress:
    enabled: false

  openShiftRoute:
    enabled: true
    host: dapp.apps-crc.testing
    path: /
    tls: null

# Support services security contexts for OpenShift
support:
  # PostgreSQL configuration for OpenShift
  # postgresql:
  #   podSecurityContext: {}
  #   securityContext: {}

  # Redis - clear default security contexts to use global ones
  # redis:
  #   podSecurityContext: {}
  #   containerSecurityContext: {}

  # Nginx Ingress Controller adjustments for OpenShift (if used)
  ingress-nginx:
    enabled: false

  reloader:
    reloader:
      deployment:
        securityContext:
          runAsUser: null
  minio:
    ingress:
      enabled: false

observability:
  grafana:
    securityContext:
      runAsNonRoot: true
      runAsUser: null
      runAsGroup: null
      fsGroup: null
  kube-state-metrics:
    securityContext:
      enabled: true
      runAsGroup: null
      runAsUser: null
      fsGroup: null
  prometheus-node-exporter:
    enabled: false
  loki:
    loki:
      podSecurityContext:
        fsGroup: null
        runAsGroup: null
        runAsNonRoot: true
        runAsUser: null
    gateway:
      enabled: false
  tempo:
    securityContext:
      runAsUser: null
      runAsGroup: null
      fsGroup: null
  metrics-server:
    securityContext:
      runAsUser: null

# Hasura configuration for OpenShift
hasura:
  # -- (object) Ingress configuration
  ingress:
    # -- (bool) Disable ingress in OpenShift (using routes instead)
    enabled: false

  # -- (object) OpenShift Route configuration
  openShiftRoute:
    # -- (bool) Enable OpenShift route
    enabled: true
    # -- (string) Route hostname
    host: hasura.apps-crc.testing
    # -- (string) Route path
    path: /
    # -- (string) Wildcard policy
    wildcardPolicy: None
    # -- (object) TLS configuration
    tls: null
    # -- (object) Service weight configuration
    to:
      # -- (int) Weight for the service
      weight: 100
    # -- (list) Alternate backends
    alternateBackends: []

# Blockscout configuration for OpenShift
blockscout:
  blockscout:
    ingress:
      enabled: false

    openShiftRoute:
      enabled: true
      host: explorer.apps-crc.testing
      path: /api
      wildcardPolicy: None

    env:
      API_URL: https://explorer.apps-crc.testing
      WEBAPP_URL: https://explorer.apps-crc.testing

  frontend:
    ingress:
      enabled: false

    openShiftRoute:
      enabled: true
      host: explorer.apps-crc.testing
      path: /
      wildcardPolicy: None
    podSecurityContext:
      fsGroup: null
      runAsUser: null
      runAsGroup: null
    containerSecurityContext:
      runAsUser: null
      runAsGroup: null
      fsGroup: null

