# Default values for atk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullCredentials:
  registries:
    # -- lowercase, no points or special caracters unique identifier for the registry, harbor, ghcr and docker have special meaning, but you can add more
    harbor:
      # -- Enable this if you want this chart to create an image pull secret for you (harbor is the default registry for the platform)
      enabled: false
      # -- The registry hosting the packages, e.g docker.io or ghcr.io
      registryUrl: 'harbor.settlemint.com'
      # -- The username to access the registry
      username: ''
      # -- The password or access token to access the registry
      password: ''
      # -- The email to access the registry
      email: ''
    # -- lowercase, no points or special caracters unique identifier for the registry, harbor, ghcr and docker have special meaning, but you can add more
    ghcr:
      # -- Enable this if you want this chart to create an image pull secret for you
      enabled: false
      # -- The registry hosting the packages, e.g docker.io or ghcr.io
      registryUrl: 'ghcr.io'
      # -- The username to access the registry
      username: ''
      # -- The password or access token to access the registry
      password: ''
      # -- The email to access the registry
      email: ''
    # -- lowercase, no points or special caracters unique identifier for the registry, harbor, ghcr and docker have special meaning, but you can add more
    docker:
      # -- Enable this if you want this chart to create an image pull secret for you
      enabled: false
      # -- The registry hosting the packages, e.g docker.io or ghcr.io
      registryUrl: 'docker.io'
      # -- The username to access the registry
      username: ''
      # -- The password or access token to access the registry
      password: ''
      # -- The email to access the registry
      email: ''

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1


fullnameOverride: ""
nameOverride: ""

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

besu-validator-1:
  enabled: true
  fullnameOverride: besu-node-validator-1

besu-validator-2:
  enabled: true
  fullnameOverride: besu-node-validator-2

besu-validator-3:
  enabled: true
  fullnameOverride: besu-node-validator-3

besu-validator-4:
  enabled: true
  fullnameOverride: besu-node-validator-4

besu-rpc-1:
  enabled: true
  fullnameOverride: besu-node-rpc-1
  node:
    besu:
      account:
        password: "password"

besu-rpc-2:
  enabled: true
  fullnameOverride: besu-node-rpc-2
  node:
    besu:
      account:
        password: "password"

erpc:
  enabled: true
  fullnameOverride: besu-loadbalancer

# https://github.com/blockscout/helm-charts/blob/main/charts/blockscout-stack/values.yaml
blockscout-stack:
  enabled: true
  fullnameOverride: blockscout
  imagePullSecrets:
    - name: image-pull-secret-docker
    - name: image-pull-secret-ghcr
    - name: image-pull-secret-harbor
  config:
    prometheus:
      enabled: false
      blackbox:
        enabled: false
    network:
      id: 53771311147
      name: Asset Tokenization Kit
      shortname: ATK
      currency:
        name: Native Token
        symbol: NT
        decimals: 18
  blockscout:
    replicaCount: 2
    image:
      repository: blockscout/blockscout
      tag: "7.0.2"
    ingress:
      enabled: true
      className: "settlemint-nginx"
      hostname: explorer.k8s.orb.local
    env:
      NETWORK: "mainnet"
      SUBNETWORK: "ATK"
      ETHEREUM_JSONRPC_VARIANT: besu
      ETHEREUM_JSONRPC_HTTP_INSECURE: 'true'
      ETHEREUM_JSONRPC_HTTP_GZIP_ENABLED: 'true'
      SHOW_TXS_CHART: 'true'
      TXS_STATS_ENABLED: 'true'
      OTHER_EXPLORERS: '{}'
      SUPPORTED_CHAINS: '{}'
      ADMIN_PANEL_ENABLED: 'true'
      EMISSION_FORMAT: 'DEFAULT'
      FETCH_REWARDS_WAY: 'trace_block'
      DISABLE_EXCHANGE_RATES: 'true'
      ECTO_USE_SSL: 'false'
      POOL_SIZE: '5'
      POOL_SIZE_API: '5'
      POOL_TIMEOUT: '30000'
      POOL_MAX_OVERFLOW: '40'
      ECTO_ADAPTER_TIMEOUT: '60000'
      DATABASE_TIMEOUT: '60000'
      QUEUE_TARGET: '5000'
      QUEUE_INTERVAL: '1000'
      MIX_ENV: 'prod'
      API_GRAPHQL_MAX_COMPLEXITY: '1000'
      INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER: 'false'
      IPFS_GATEWAY_URL: 'https://ipfs.io/ipfs'
      IPFS_PUBLIC_GATEWAY_URL: 'https://ipfs.io/ipfs'
      INDEXER_TOKEN_INSTANCE_RETRY_MAX_REFETCH_INTERVAL: '1h'
      INDEXER_TOKEN_INSTANCE_USE_BASE_URI_RETRY: 'true'
      API_URL: https://explorer.k8s.orb.local
      WEBAPP_URL: https://explorer.k8s.orb.local
      BLOCKSCOUT_PROTOCOL: 'https'
    envFromSecret:
      DATABASE_URL: postgresql://blockscout:atk@postgresql-pgpool:5432/blockscout?sslmode=disable
      ETHEREUM_JSONRPC_HTTP_URL: http://besu-loadbalancer:4000
      ETHEREUM_JSONRPC_TRACE_URL: http://besu-loadbalancer:4000
      SECRET_KEY_BASE: atk
  frontend:
    image:
      repository: ghcr.io/blockscout/frontend
      tag: "v1.38.2"
    replicaCount: 2
    env:
      NEXT_PUBLIC_IS_ACCOUNT_SUPPORTED: 'false'
      NEXT_PUBLIC_IS_TESTNET: 'false'
      NEXT_PUBLIC_AD_BANNER_PROVIDER: 'none'
      NEXT_PUBLIC_AD_TEXT_PROVIDER: 'none'
      NEXT_PUBLIC_HAS_BEACON_CHAIN: 'false'
      NEXT_PUBLIC_TRANSACTION_INTERPRETATION_PROVIDER: 'blockscout'
      NEXT_PUBLIC_HOMEPAGE_CHARTS: '["daily_txs"]'
      NEXT_PUBLIC_HOMEPAGE_STATS: '["total_blocks","average_block_time","total_txs","wallet_addresses","gas_tracker"]'
      NEXT_PUBLIC_PROMOTE_BLOCKSCOUT_IN_TITLE: 'false'
      NEXT_PUBLIC_OG_ENHANCED_DATA_ENABLED: 'true'
      NEXT_PUBLIC_SEO_ENHANCED_DATA_ENABLED: 'true'
      NEXT_PUBLIC_HAS_CONTRACT_AUDIT_REPORTS: 'true'
      NEXT_PUBLIC_FONT_FAMILY_HEADING: "{'name':'Figtree','url':'https://fonts.googleapis.com/css2?family=Figtree:ital,wght@0,300..900;1,300..900&display=swap'}"
      NEXT_PUBLIC_FONT_FAMILY_BODY: "{'name':'Figtree','url':'https://fonts.googleapis.com/css2?family=Figtree:ital,wght@0,300..900;1,300..900&display=swap'}"
    ingress:
      enabled: true
      className: "settlemint-nginx"
      hostname: explorer.k8s.orb.local


# https://github.com/graphops/launchpad-charts/blob/main/charts/graph-node/values.yaml
graph-node:
  enabled: true
  fullnameOverride: graph-node
  customSecret:
    PGUSER: thegraph
    PGPASSWORD: atk
  graphNodeDefaults:
    imagePullSecrets:
      - name: image-pull-secret-docker
      - name: image-pull-secret-ghcr
      - name: image-pull-secret-harbor
    extraInitContainers:
      - name: wait-for-postgresql
        image: ghcr.io/settlemint/btp-waitforit:v7.7.2
        command: ["/usr/bin/wait-for-it", "postgresql-pgpool:5432", "-t", "0"]
    affinityPresets:
      # -- Create anti-affinity rule to deter scheduling replicas on the same host
      antiAffinityByHostname: false
    # -- Environment variable defaults for all Graph Node groups
    env:
      # -- Hostname of the primary shard PostgreSQL server
      PRIMARY_SUBGRAPH_DATA_PGHOST: postgresql-pgpool
      # -- Port for the primary shard PostgreSQL server
      PRIMARY_SUBGRAPH_DATA_PGPORT: 5432
      # -- Name of the primary shard database to use
      PRIMARY_SUBGRAPH_DATA_PGDATABASE: "thegraph"
      # -- The URL for your IPFS node
      IPFS: "https://ipfs.console.settlemint.com"
    secretEnv:
      PRIMARY_SUBGRAPH_DATA_PGUSER:
        # -- Name of the secret that contains your PG username
        secretName: thegraph-pg-secret
        # -- Name of the data key in the secret that contains your PG username
        key: PGUSER
      PRIMARY_SUBGRAPH_DATA_PGPASSWORD:
        # -- Name of the secret that contains your PG password
        secretName: thegraph-pg-secret
        # -- Name of the data key in the secret that contains your PG password
        key: PGPASSWORD
  graphNodeGroups:
    query:
      enabled: true
      replicaCount: 2
      env:
        node_role: query-node # this key must be lowercase

  # -- Blockchain configuration for Graph Node
  chains:
    # -- Ethereum Mainnet
    settlemint:
      # -- Enable this configuring graph-node with this chain
      enabled: true
      # -- The database shard to use for this chain
      shard: primary
      ## -- A list of JSON-RPC endpoints for this node (you should override this list with your own configuration)
      provider:
        -
          # -- Label for a JSON-RPC endpoint
          label: erpc
          details:
            # -- Type of Provider: web3
            type: web3
            # -- URL for JSON-RPC endpoint
            url: http://besu-loadbalancer:4000
            # -- Data capabilities this node has
            features: [archive, traces]
  ingress:
    enabled: true
    className: "settlemint-nginx"
    annotations:
      nginx.ingress.kubernetes.io/use-regex: 'true'
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    hosts:
      - host: thegraph.k8s.orb.local
        paths:
          - path: /(.*)
            pathType: ImplementationSpecific
            port: 8000
            serviceName: graph-node-query
          - path: /ws/?(.*)
            pathType: ImplementationSpecific
            port: 8001
            serviceName: graph-node-query
          - path: /admin/?(.*)
            pathType: ImplementationSpecific
            port: 8020
            serviceName: graph-node-query
          - path: /indexer/?(.*)
            pathType: ImplementationSpecific
            port: 8030
            serviceName: graph-node-index
          - path: /graphman/?(.*)
            pathType: ImplementationSpecific
            port: 8050
            serviceName: graph-node-index
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local



# https://github.com/hasura/helm-charts/blob/main/charts/graphql-engine/values.yaml
graphql-engine:
  enabled: true
  nameOverride: hasura
  replicas: 2
  ingress:
    enabled: true
    ingressClassName: "settlemint-nginx"
    hostName: "hasura.k8s.orb.local"
  config:
    metadataOnly: false
    enableInternalConsoleAssets: true
    devMode: true
  secret:
    enabled: true
    adminSecret: "atk"
    redisUrl: "redis://redis-master:6379"
    rateLimitRedisUrl: "redis://redis-master:6379"
  extraEnvs:
    - name: HASURA_GRAPHQL_PG_CONNECTIONS
      value: "10"
  global:
    imagePullSecrets:
      - name: image-pull-secret-docker
      - name: image-pull-secret-ghcr
      - name: image-pull-secret-harbor
  postgres:
    name: postgresql-pgpool
    auth:
      username: hasura
      password: "atk"
      database: hasura



support:
  enabled: true