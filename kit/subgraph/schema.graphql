type Account @entity {
  id: Bytes!
  isContract: Boolean!
  asAsset: Asset
  balances: [Balance!]! @derivedFrom(field: "account")
  nativeBalance: BigDecimal!
  nativeBalanceExact: BigInt!
  transferFromEvent: [Event_Transfer!]! @derivedFrom(field: "from")
  transferToEvent: [Event_Transfer!]! @derivedFrom(field: "to")
  blockedAssets: [BlockedAccount!]! @derivedFrom(field: "account")
  roleGranted: [Event_RoleGranted!]! @derivedFrom(field: "account")
  roleRevoked: [Event_RoleRevoked!]! @derivedFrom(field: "account")
}

type BlockedAccount @entity {
  id: Bytes!
  account: Account!
  asset: Asset!
}

type Role @entity(immutable: true) {
  id: Bytes!
  name: String!
  assets: [AssetRole!]! @derivedFrom(field: "role")
}

type AssetRole @entity {
  id: ID!
  asset: Asset!
  role: Role!
  members: [Account!]!
  roleGranted: [Event_RoleGranted!]! @derivedFrom(field: "assetRole")
  roleRevoked: [Event_RoleRevoked!]! @derivedFrom(field: "assetRole")
}

interface Asset {
  id: Bytes!
  asAccount: Account!
  name: String
  symbol: String
  decimals: Int!
  totalSupply: BigDecimal!
  totalSupplyExact: BigInt!
  balances: [Balance!]! @derivedFrom(field: "asset")
  transfers: [Event_Transfer!]! @derivedFrom(field: "emitter")
  roles: [AssetRole!]! @derivedFrom(field: "asset")
}

type Bond implements Asset @entity {
  id: Bytes!
  asAccount: Account!
  name: String
  symbol: String
  decimals: Int!
  totalSupply: BigDecimal!
  totalSupplyExact: BigInt!
  balances: [Balance!]! @derivedFrom(field: "asset")
  transfers: [Event_Transfer!]! @derivedFrom(field: "emitter")
  roles: [AssetRole!]! @derivedFrom(field: "asset")
  maturityDate: BigInt!
  isMatured: Boolean!
  paused: Boolean!
}

type Equity implements Asset @entity {
  id: Bytes!
  asAccount: Account!
  name: String
  symbol: String
  decimals: Int!
  totalSupply: BigDecimal!
  totalSupplyExact: BigInt!
  balances: [Balance!]! @derivedFrom(field: "asset")
  transfers: [Event_Transfer!]! @derivedFrom(field: "emitter")
  roles: [AssetRole!]! @derivedFrom(field: "asset")
  equityClass: String!
  equityCategory: String!
  paused: Boolean!
}

type StableCoin implements Asset @entity {
  id: Bytes!
  asAccount: Account!
  name: String
  symbol: String
  decimals: Int!
  totalSupply: BigDecimal!
  totalSupplyExact: BigInt!
  balances: [Balance!]! @derivedFrom(field: "asset")
  transfers: [Event_Transfer!]! @derivedFrom(field: "emitter")
  roles: [AssetRole!]! @derivedFrom(field: "asset")
  collateral: BigDecimal!
  collateralExact: BigInt!
  paused: Boolean!
}

type CryptoCurrency implements Asset @entity {
  id: Bytes!
  asAccount: Account!
  name: String
  symbol: String
  decimals: Int!
  totalSupply: BigDecimal!
  totalSupplyExact: BigInt!
  balances: [Balance!]! @derivedFrom(field: "asset")
  transfers: [Event_Transfer!]! @derivedFrom(field: "emitter")
  roles: [AssetRole!]! @derivedFrom(field: "asset")
}

type Balance @entity {
  id: Bytes!
  asset: Asset!
  account: Account!
  value: BigDecimal!
  valueExact: BigInt!
  transferFromEvent: [Event_Transfer!]! @derivedFrom(field: "fromBalance")
  transferToEvent: [Event_Transfer!]! @derivedFrom(field: "toBalance")
}

interface Event {
  id: Bytes!
  emitter: Asset!
  timestamp: BigInt!
}

type Event_Transfer implements Event @entity(immutable: true) {
  id: Bytes!
  emitter: Asset!
  timestamp: BigInt!
  asset: Asset!
  from: Account
  fromBalance: Balance
  to: Account
  toBalance: Balance
  value: BigDecimal!
  valueExact: BigInt!
}

type Event_RoleAdminChanged implements Event @entity(immutable: true) {
  id: Bytes!
  emitter: Asset!
  timestamp: BigInt!
  role: AssetRole!
  newAdminRole: AssetRole!
  previousAdminRole: AssetRole!
}

type Event_RoleGranted implements Event @entity(immutable: true) {
  id: Bytes!
  emitter: Asset!
  timestamp: BigInt!
  assetRole: AssetRole!
  account: Account!
  sender: Account!
}

type Event_RoleRevoked implements Event @entity(immutable: true) {
  id: Bytes!
  emitter: Asset!
  timestamp: BigInt!
  assetRole: AssetRole!
  account: Account!
  sender: Account!
}
