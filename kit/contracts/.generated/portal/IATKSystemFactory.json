{
  "abi": [
    {
      "type": "function",
      "name": "atkSystems",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "createSystem",
      "inputs": [],
      "outputs": [
        {
          "name": "systemAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "defaultComplianceImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultIdentityFactoryImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultIdentityImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultIdentityRegistryImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultIdentityRegistryStorageImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultTokenAccessManagerImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultTokenIdentityImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultTopicSchemeRegistryImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultTrustedIssuersRegistryImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "factoryForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSystemAtIndex",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSystemCount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "ATKSystemCreated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "systemAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "atkSystems(uint256)": "cf0da604",
    "createSystem()": "d171da1a",
    "defaultComplianceImplementation()": "0a94adee",
    "defaultIdentityFactoryImplementation()": "e6fea7ac",
    "defaultIdentityImplementation()": "e28a1406",
    "defaultIdentityRegistryImplementation()": "8bb25576",
    "defaultIdentityRegistryStorageImplementation()": "e84b3ceb",
    "defaultTokenAccessManagerImplementation()": "01e08e58",
    "defaultTokenIdentityImplementation()": "cbdd9d51",
    "defaultTopicSchemeRegistryImplementation()": "023fc729",
    "defaultTrustedIssuersRegistryImplementation()": "9ca5f9c7",
    "factoryForwarder()": "0e5f342c",
    "getSystemAtIndex(uint256)": "490e805a",
    "getSystemCount()": "7df56b6c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"}],\"name\":\"ATKSystemCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"atkSystems\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultComplianceImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentityFactoryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentityImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentityRegistryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentityRegistryStorageImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTokenAccessManagerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTokenIdentityImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTopicSchemeRegistryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTrustedIssuersRegistryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSystemAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSystemCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This interface defines all public functions, events, and state variables for the ATKSystemFactory. It supports meta-transactions through ERC2771Context and tracks all deployed ATKSystem instances.\",\"events\":{\"ATKSystemCreated(address,address)\":{\"params\":{\"sender\":\"The address that called the `createSystem` function.\",\"systemAddress\":\"The blockchain address of the newly deployed `ATKSystem` contract.\"}}},\"kind\":\"dev\",\"methods\":{\"atkSystems(uint256)\":{\"details\":\"This allows retrieval of addresses for previously deployed `ATKSystem` contracts.\",\"params\":{\"index\":\"The zero-based index of the desired `ATKSystem` in the `atkSystems` array.\"},\"returns\":{\"_0\":\"address The blockchain address of the `ATKSystem` contract found at the given `index`.\"}},\"createSystem()\":{\"details\":\"When this function is called, a new `ATKSystem` contract is created on the blockchain. The caller of this function (which is `_msgSender()`, resolving to the original user in an ERC2771 meta-transaction context) will be set as the initial administrator (granted `DEFAULT_ADMIN_ROLE`) of the newly created `ATKSystem`. The new system's address is added to the `atkSystems` array for tracking, and a `ATKSystemCreated` event is emitted.\",\"returns\":{\"systemAddress\":\"The blockchain address of the newly created `ATKSystem` contract.\"}},\"defaultComplianceImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial compliance implementation.\",\"returns\":{\"_0\":\"address The default compliance implementation address.\"}},\"defaultIdentityFactoryImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial identity factory implementation.\",\"returns\":{\"_0\":\"address The default identity factory implementation address.\"}},\"defaultIdentityImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial standard identity implementation.\",\"returns\":{\"_0\":\"address The default identity implementation address.\"}},\"defaultIdentityRegistryImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial identity registry implementation.\",\"returns\":{\"_0\":\"address The default identity registry implementation address.\"}},\"defaultIdentityRegistryStorageImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial identity registry storage implementation.\",\"returns\":{\"_0\":\"address The default identity registry storage implementation address.\"}},\"defaultTokenAccessManagerImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial token access manager implementation.\",\"returns\":{\"_0\":\"address The default token access manager implementation address.\"}},\"defaultTokenIdentityImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial token identity implementation.\",\"returns\":{\"_0\":\"address The default token identity implementation address.\"}},\"defaultTopicSchemeRegistryImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial topic scheme registry implementation.\",\"returns\":{\"_0\":\"address The default topic scheme registry implementation address.\"}},\"defaultTrustedIssuersRegistryImplementation()\":{\"details\":\"This address will be passed to newly created `ATKSystem` instances as the initial trusted issuers registry implementation.\",\"returns\":{\"_0\":\"address The default trusted issuers registry implementation address.\"}},\"factoryForwarder()\":{\"details\":\"This same forwarder address will also be passed to each new `ATKSystem` instance created by this factory, enabling them to support meta-transactions as well.\",\"returns\":{\"_0\":\"address The factory forwarder address.\"}},\"getSystemAtIndex(uint256)\":{\"details\":\"This allows retrieval of addresses for previously deployed `ATKSystem` contracts. It will revert with an `IndexOutOfBounds` error if the provided `index` is greater than or equal to the current number of created systems (i.e., if `index >= atkSystems.length`). This is a view function.\",\"params\":{\"index\":\"The zero-based index of the desired `ATKSystem` in the `atkSystems` array.\"},\"returns\":{\"_0\":\"address The blockchain address of the `ATKSystem` contract found at the given `index`.\"}},\"getSystemCount()\":{\"details\":\"This is a view function, meaning it only reads blockchain state and does not cost gas to call (if called externally, not in a transaction).\",\"returns\":{\"_0\":\"uint256 The count of `ATKSystem` instances currently stored in the `atkSystems` array.\"}}},\"title\":\"IATKSystemFactory\",\"version\":1},\"userdoc\":{\"events\":{\"ATKSystemCreated(address,address)\":{\"notice\":\"Emitted when a new `ATKSystem` instance is successfully created and deployed by this factory.\"}},\"kind\":\"user\",\"methods\":{\"atkSystems(uint256)\":{\"notice\":\"Gets the address of a `ATKSystem` instance at a specific index in the list of created systems.\"},\"createSystem()\":{\"notice\":\"Creates and deploys a new `ATKSystem` instance using the factory's stored default implementation addresses.\"},\"defaultComplianceImplementation()\":{\"notice\":\"The default contract address for the compliance module's logic (implementation).\"},\"defaultIdentityFactoryImplementation()\":{\"notice\":\"The default contract address for the identity factory module's logic (implementation).\"},\"defaultIdentityImplementation()\":{\"notice\":\"The default contract address for the standard identity contract's logic (template/implementation).\"},\"defaultIdentityRegistryImplementation()\":{\"notice\":\"The default contract address for the identity registry module's logic (implementation).\"},\"defaultIdentityRegistryStorageImplementation()\":{\"notice\":\"The default contract address for the identity registry storage module's logic (implementation).\"},\"defaultTokenAccessManagerImplementation()\":{\"notice\":\"The default contract address for the token access manager contract's logic (implementation).\"},\"defaultTokenIdentityImplementation()\":{\"notice\":\"The default contract address for the token identity contract's logic (template/implementation).\"},\"defaultTopicSchemeRegistryImplementation()\":{\"notice\":\"The default contract address for the topic scheme registry module's logic (implementation).\"},\"defaultTrustedIssuersRegistryImplementation()\":{\"notice\":\"The default contract address for the trusted issuers registry module's logic (implementation).\"},\"factoryForwarder()\":{\"notice\":\"The address of the trusted forwarder contract used by this factory for meta-transactions (ERC2771).\"},\"getSystemAtIndex(uint256)\":{\"notice\":\"Gets the blockchain address of a `ATKSystem` instance at a specific index in the list of created systems.\"},\"getSystemCount()\":{\"notice\":\"Gets the total number of `ATKSystem` instances that have been created by this factory.\"}},\"notice\":\"Interface for the ATKSystemFactory contract that deploys new instances of the ATKSystem contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/IATKSystemFactory.sol\":\"IATKSystemFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/system/IATKSystemFactory.sol\":{\"keccak256\":\"0xe12cf743f2e5ad63193a28eeb36d8335b18b87515003fdb8ca9ba5ff193ae3c0\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://97c9e520bebf958ed0e07b56312b723485a55fcac18ea010995e39bca0ae2c4b\",\"dweb:/ipfs/QmVeYD3zhgAZxzQAXwJjBnuNNPeEFmfjBS95KdfwhUJiMK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "systemAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ATKSystemCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "atkSystems",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSystem",
          "outputs": [
            {
              "internalType": "address",
              "name": "systemAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultComplianceImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentityFactoryImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentityImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentityRegistryImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentityRegistryStorageImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTokenAccessManagerImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTokenIdentityImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTopicSchemeRegistryImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultTrustedIssuersRegistryImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSystemAtIndex",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSystemCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "atkSystems(uint256)": {
            "details": "This allows retrieval of addresses for previously deployed `ATKSystem` contracts.",
            "params": {
              "index": "The zero-based index of the desired `ATKSystem` in the `atkSystems` array."
            },
            "returns": {
              "_0": "address The blockchain address of the `ATKSystem` contract found at the given `index`."
            }
          },
          "createSystem()": {
            "details": "When this function is called, a new `ATKSystem` contract is created on the blockchain. The caller of this function (which is `_msgSender()`, resolving to the original user in an ERC2771 meta-transaction context) will be set as the initial administrator (granted `DEFAULT_ADMIN_ROLE`) of the newly created `ATKSystem`. The new system's address is added to the `atkSystems` array for tracking, and a `ATKSystemCreated` event is emitted.",
            "returns": {
              "systemAddress": "The blockchain address of the newly created `ATKSystem` contract."
            }
          },
          "defaultComplianceImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial compliance implementation.",
            "returns": {
              "_0": "address The default compliance implementation address."
            }
          },
          "defaultIdentityFactoryImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial identity factory implementation.",
            "returns": {
              "_0": "address The default identity factory implementation address."
            }
          },
          "defaultIdentityImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial standard identity implementation.",
            "returns": {
              "_0": "address The default identity implementation address."
            }
          },
          "defaultIdentityRegistryImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial identity registry implementation.",
            "returns": {
              "_0": "address The default identity registry implementation address."
            }
          },
          "defaultIdentityRegistryStorageImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial identity registry storage implementation.",
            "returns": {
              "_0": "address The default identity registry storage implementation address."
            }
          },
          "defaultTokenAccessManagerImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial token access manager implementation.",
            "returns": {
              "_0": "address The default token access manager implementation address."
            }
          },
          "defaultTokenIdentityImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial token identity implementation.",
            "returns": {
              "_0": "address The default token identity implementation address."
            }
          },
          "defaultTopicSchemeRegistryImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial topic scheme registry implementation.",
            "returns": {
              "_0": "address The default topic scheme registry implementation address."
            }
          },
          "defaultTrustedIssuersRegistryImplementation()": {
            "details": "This address will be passed to newly created `ATKSystem` instances as the initial trusted issuers registry implementation.",
            "returns": {
              "_0": "address The default trusted issuers registry implementation address."
            }
          },
          "factoryForwarder()": {
            "details": "This same forwarder address will also be passed to each new `ATKSystem` instance created by this factory, enabling them to support meta-transactions as well.",
            "returns": {
              "_0": "address The factory forwarder address."
            }
          },
          "getSystemAtIndex(uint256)": {
            "details": "This allows retrieval of addresses for previously deployed `ATKSystem` contracts. It will revert with an `IndexOutOfBounds` error if the provided `index` is greater than or equal to the current number of created systems (i.e., if `index >= atkSystems.length`). This is a view function.",
            "params": {
              "index": "The zero-based index of the desired `ATKSystem` in the `atkSystems` array."
            },
            "returns": {
              "_0": "address The blockchain address of the `ATKSystem` contract found at the given `index`."
            }
          },
          "getSystemCount()": {
            "details": "This is a view function, meaning it only reads blockchain state and does not cost gas to call (if called externally, not in a transaction).",
            "returns": {
              "_0": "uint256 The count of `ATKSystem` instances currently stored in the `atkSystems` array."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "atkSystems(uint256)": {
            "notice": "Gets the address of a `ATKSystem` instance at a specific index in the list of created systems."
          },
          "createSystem()": {
            "notice": "Creates and deploys a new `ATKSystem` instance using the factory's stored default implementation addresses."
          },
          "defaultComplianceImplementation()": {
            "notice": "The default contract address for the compliance module's logic (implementation)."
          },
          "defaultIdentityFactoryImplementation()": {
            "notice": "The default contract address for the identity factory module's logic (implementation)."
          },
          "defaultIdentityImplementation()": {
            "notice": "The default contract address for the standard identity contract's logic (template/implementation)."
          },
          "defaultIdentityRegistryImplementation()": {
            "notice": "The default contract address for the identity registry module's logic (implementation)."
          },
          "defaultIdentityRegistryStorageImplementation()": {
            "notice": "The default contract address for the identity registry storage module's logic (implementation)."
          },
          "defaultTokenAccessManagerImplementation()": {
            "notice": "The default contract address for the token access manager contract's logic (implementation)."
          },
          "defaultTokenIdentityImplementation()": {
            "notice": "The default contract address for the token identity contract's logic (template/implementation)."
          },
          "defaultTopicSchemeRegistryImplementation()": {
            "notice": "The default contract address for the topic scheme registry module's logic (implementation)."
          },
          "defaultTrustedIssuersRegistryImplementation()": {
            "notice": "The default contract address for the trusted issuers registry module's logic (implementation)."
          },
          "factoryForwarder()": {
            "notice": "The address of the trusted forwarder contract used by this factory for meta-transactions (ERC2771)."
          },
          "getSystemAtIndex(uint256)": {
            "notice": "Gets the blockchain address of a `ATKSystem` instance at a specific index in the list of created systems."
          },
          "getSystemCount()": {
            "notice": "Gets the total number of `ATKSystem` instances that have been created by this factory."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/IATKSystemFactory.sol": "IATKSystemFactory"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/system/IATKSystemFactory.sol": {
        "keccak256": "0xe12cf743f2e5ad63193a28eeb36d8335b18b87515003fdb8ca9ba5ff193ae3c0",
        "urls": [
          "bzz-raw://97c9e520bebf958ed0e07b56312b723485a55fcac18ea010995e39bca0ae2c4b",
          "dweb:/ipfs/QmVeYD3zhgAZxzQAXwJjBnuNNPeEFmfjBS95KdfwhUJiMK"
        ],
        "license": "FSL-1.1-MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "atkSystems(uint256)": {
        "notice": "Gets the address of a `ATKSystem` instance at a specific index in the list of created systems."
      },
      "createSystem()": {
        "notice": "Creates and deploys a new `ATKSystem` instance using the factory's stored default implementation addresses."
      },
      "defaultComplianceImplementation()": {
        "notice": "The default contract address for the compliance module's logic (implementation)."
      },
      "defaultIdentityFactoryImplementation()": {
        "notice": "The default contract address for the identity factory module's logic (implementation)."
      },
      "defaultIdentityImplementation()": {
        "notice": "The default contract address for the standard identity contract's logic (template/implementation)."
      },
      "defaultIdentityRegistryImplementation()": {
        "notice": "The default contract address for the identity registry module's logic (implementation)."
      },
      "defaultIdentityRegistryStorageImplementation()": {
        "notice": "The default contract address for the identity registry storage module's logic (implementation)."
      },
      "defaultTokenAccessManagerImplementation()": {
        "notice": "The default contract address for the token access manager contract's logic (implementation)."
      },
      "defaultTokenIdentityImplementation()": {
        "notice": "The default contract address for the token identity contract's logic (template/implementation)."
      },
      "defaultTopicSchemeRegistryImplementation()": {
        "notice": "The default contract address for the topic scheme registry module's logic (implementation)."
      },
      "defaultTrustedIssuersRegistryImplementation()": {
        "notice": "The default contract address for the trusted issuers registry module's logic (implementation)."
      },
      "factoryForwarder()": {
        "notice": "The address of the trusted forwarder contract used by this factory for meta-transactions (ERC2771)."
      },
      "getSystemAtIndex(uint256)": {
        "notice": "Gets the blockchain address of a `ATKSystem` instance at a specific index in the list of created systems."
      },
      "getSystemCount()": {
        "notice": "Gets the total number of `ATKSystem` instances that have been created by this factory."
      }
    },
    "events": {
      "ATKSystemCreated(address,address)": {
        "notice": "Emitted when a new `ATKSystem` instance is successfully created and deployed by this factory."
      }
    },
    "notice": "Interface for the ATKSystemFactory contract that deploys new instances of the ATKSystem contract."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This interface defines all public functions, events, and state variables for the ATKSystemFactory. It supports meta-transactions through ERC2771Context and tracks all deployed ATKSystem instances.",
    "methods": {
      "atkSystems(uint256)": {
        "details": "This allows retrieval of addresses for previously deployed `ATKSystem` contracts.",
        "params": {
          "index": "The zero-based index of the desired `ATKSystem` in the `atkSystems` array."
        },
        "returns": {
          "_0": "address The blockchain address of the `ATKSystem` contract found at the given `index`."
        }
      },
      "createSystem()": {
        "details": "When this function is called, a new `ATKSystem` contract is created on the blockchain. The caller of this function (which is `_msgSender()`, resolving to the original user in an ERC2771 meta-transaction context) will be set as the initial administrator (granted `DEFAULT_ADMIN_ROLE`) of the newly created `ATKSystem`. The new system's address is added to the `atkSystems` array for tracking, and a `ATKSystemCreated` event is emitted.",
        "returns": {
          "systemAddress": "The blockchain address of the newly created `ATKSystem` contract."
        }
      },
      "defaultComplianceImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial compliance implementation.",
        "returns": {
          "_0": "address The default compliance implementation address."
        }
      },
      "defaultIdentityFactoryImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial identity factory implementation.",
        "returns": {
          "_0": "address The default identity factory implementation address."
        }
      },
      "defaultIdentityImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial standard identity implementation.",
        "returns": {
          "_0": "address The default identity implementation address."
        }
      },
      "defaultIdentityRegistryImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial identity registry implementation.",
        "returns": {
          "_0": "address The default identity registry implementation address."
        }
      },
      "defaultIdentityRegistryStorageImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial identity registry storage implementation.",
        "returns": {
          "_0": "address The default identity registry storage implementation address."
        }
      },
      "defaultTokenAccessManagerImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial token access manager implementation.",
        "returns": {
          "_0": "address The default token access manager implementation address."
        }
      },
      "defaultTokenIdentityImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial token identity implementation.",
        "returns": {
          "_0": "address The default token identity implementation address."
        }
      },
      "defaultTopicSchemeRegistryImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial topic scheme registry implementation.",
        "returns": {
          "_0": "address The default topic scheme registry implementation address."
        }
      },
      "defaultTrustedIssuersRegistryImplementation()": {
        "details": "This address will be passed to newly created `ATKSystem` instances as the initial trusted issuers registry implementation.",
        "returns": {
          "_0": "address The default trusted issuers registry implementation address."
        }
      },
      "factoryForwarder()": {
        "details": "This same forwarder address will also be passed to each new `ATKSystem` instance created by this factory, enabling them to support meta-transactions as well.",
        "returns": {
          "_0": "address The factory forwarder address."
        }
      },
      "getSystemAtIndex(uint256)": {
        "details": "This allows retrieval of addresses for previously deployed `ATKSystem` contracts. It will revert with an `IndexOutOfBounds` error if the provided `index` is greater than or equal to the current number of created systems (i.e., if `index >= atkSystems.length`). This is a view function.",
        "params": {
          "index": "The zero-based index of the desired `ATKSystem` in the `atkSystems` array."
        },
        "returns": {
          "_0": "address The blockchain address of the `ATKSystem` contract found at the given `index`."
        }
      },
      "getSystemCount()": {
        "details": "This is a view function, meaning it only reads blockchain state and does not cost gas to call (if called externally, not in a transaction).",
        "returns": {
          "_0": "uint256 The count of `ATKSystem` instances currently stored in the `atkSystems` array."
        }
      }
    },
    "events": {
      "ATKSystemCreated(address,address)": {
        "params": {
          "sender": "The address that called the `createSystem` function.",
          "systemAddress": "The blockchain address of the newly deployed `ATKSystem` contract."
        }
      }
    },
    "title": "IATKSystemFactory"
  },
  "id": 146
}