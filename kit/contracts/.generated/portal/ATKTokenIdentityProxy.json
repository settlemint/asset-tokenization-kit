{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "systemAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "accessManager",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "fallback",
      "stateMutability": "payable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "error",
      "name": "ETHTransfersNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IdentityImplementationNotSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InitializationWithZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSystemAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroAddressNotAllowed",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60806040523461018c5760406104a4803803809161001c826101a4565b6080391261018c5761002c6101f2565b61003660a0610208565b906001600160a01b0381168015908115610117575b50610108575f5160206104845f395f51905f5280546001600160a01b0319166001600160a01b039283161790558116156100f9575f5160206104845f395f51905f52546100ea916100d7916100e5906100ac906001600160a01b031661023f565b60405163189acdbd60e31b60208201526001600160a01b039093166024840152919283906044820190565b03601f1981018452836101cf565b6102cc565b60405161013b90816103498239f35b6342bcdf7f60e11b5f5260045ffd5b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815260016223dac160e01b031960048201529150602090829060249082905afa908115610187575f91610158575b50155f61004b565b61017a915060203d602011610180575b61017281836101cf565b81019061021c565b5f610150565b503d610168565b610234565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176101ca57604052565b610190565b601f909101601f19168101906001600160401b038211908210176101ca57604052565b608051906001600160a01b038216820361018c57565b51906001600160a01b038216820361018c57565b9081602091031261018c5751801515810361018c5790565b6040513d5f823e3d90fd5b604051631e6de76d60e11b815290602090829060049082906001600160a01b03165afa908115610187575f91610292575b506001600160a01b038116156102835790565b632384fcc160e11b5f5260045ffd5b90506020813d6020116102c4575b816102ad602093836101cf565b8101031261018c576102be90610208565b5f610270565b3d91506102a0565b6001600160a01b0381161561033957815f929160208493519201905af43d15610331573d906001600160401b0382116101ca5760405191610317601f8201601f1916602001846101cf565b82523d5f602084013e5b156103295750565b602081519101fd5b606090610321565b63ee0a129760e01b5f5260045ffdfe608060405236156100dc577f6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f9654631e6de76d60e11b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb57632384fcc160e11b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea164736f6c634300081c000a6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f96",
    "sourceMap": "1414:2296:159:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;1414:2296:159;;2968:27:140;;;:102;;;;-1:-1:-1;2964:162:140;;;-1:-1:-1;;;;;;;;;;;1518:66:140;;-1:-1:-1;;;;;;1518:66:140;-1:-1:-1;;;;;1414:2296:159;;;1518:66:140;;;1414:2296:159;;2588:27;2584:63;;-1:-1:-1;;;;;;;;;;;1414:2296:159;2937:4;;2799:76;;;;2726:42;;-1:-1:-1;;;;;1414:2296:159;2726:42;:::i;:::-;1414:2296;;-1:-1:-1;;;1414:2296:159;2799:76;;;-1:-1:-1;;;;;1414:2296:159;;;2799:76;;;1414:2296;;;;;;;;;;2799:76;;;;;;;;;;:::i;:::-;2937:4;:::i;:::-;1414:2296;;;;;;;;;2584:63;2624:23;;;-1:-1:-1;2624:23:159;;-1:-1:-1;2624:23:159;2964:162:140;3093:22;;;-1:-1:-1;3093:22:140;;-1:-1:-1;3093:22:140;2968:102;1414:2296:159;;-1:-1:-1;;;3000:70:140;;-1:-1:-1;;;;;;3000:70:140;;;1414:2296:159;;-1:-1:-1;1414:2296:159;;;;;;;;3000:70:140;;;;;;;-1:-1:-1;3000:70:140;;;2968:102;2999:71;;2968:102;;;3000:70;;;;1414:2296:159;3000:70:140;1414:2296:159;3000:70:140;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1414:2296:159:-;-1:-1:-1;1414:2296:159;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1414:2296:159;;;;-1:-1:-1;;;;;1414:2296:159;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;-1:-1:-1;;1414:2296:159;;;;-1:-1:-1;;;;;1414:2296:159;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1414:2296:159;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1414:2296:159;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;3342:366;1414:2296;;-1:-1:-1;;;3480:36:159;;1414:2296;3480:36;;1414:2296;;3480:36;;1414:2296;;-1:-1:-1;;;;;1414:2296:159;3480:36;;;;;;;-1:-1:-1;3480:36:159;;;3342:366;-1:-1:-1;;;;;;1414:2296:159;;3579:28;3575:96;;3342:366;:::o;3575:96::-;3630:30;;;-1:-1:-1;3630:30:159;3480:36;-1:-1:-1;3630:30:159;3480:36;;;;;;;;;;;;;;;;;:::i;:::-;;;1414:2296;;;;;;;:::i;:::-;3480:36;;;;;;-1:-1:-1;3480:36:159;;3952:471:140;-1:-1:-1;;;;;1414:2296:159;;4079:35:140;4075:104;;4230:50;4112:1;4230:50;;;;;;;;;;;1414:2296:159;;;;;;-1:-1:-1;;;;;1414:2296:159;;;;;;;;2799:76;1414:2296;;-1:-1:-1;;1414:2296:159;4230:50:140;1414:2296:159;;;:::i;:::-;;;;4112:1:140;4230:50;1414:2296:159;;;;4294:8:140;4290:127;;3952:471;:::o;4290:127::-;4230:50;4318:89;;;;;1414:2296:159;;;;;4075:104:140;4137:31;;;4112:1;4137:31;;4112:1;4137:31",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405236156100dc577f6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f9654631e6de76d60e11b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb57632384fcc160e11b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea164736f6c634300081c000a",
    "sourceMap": "1414:2296:159:-:0;;;;;;;1518:66:140;;-1:-1:-1;;;1414:2296:159;3480:36;;;;;;;1414:2296;;-1:-1:-1;;;;;1518:66:140;3480:36:159;;;;;;-1:-1:-1;3480:36:159;;;-1:-1:-1;;;;;;1518:66:140;;2381:17:200;3575:96:159;3630:30;;;-1:-1:-1;3630:30:159;3480:36;-1:-1:-1;3630:30:159;3480:36;;;;;;;;;1414:2296;;;;;;;;;;;;;;;;;;3480:36;1414:2296;;;;3480:36;;:::i;:::-;;;1414:2296;;;;-1:-1:-1;1414:2296:159;;3480:36;1414:2296;;-1:-1:-1;1414:2296:159;3480:36;;;;;;1414:2296;;;-1:-1:-1;1414:2296:159;;;;;;5268:24:140;;;;;;;;949:895:200;1019:819;949:895;;1019:819;;;;;;;;;;;;;;;;;;;;;;;1414:2296:159;;;;;;;;;;;-1:-1:-1;;;;;1518:66:140;;1414:2296:159;;;;;:::o;:::-;-1:-1:-1;1414:2296:159;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ETHTransfersNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdentityImplementationNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializationWithZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSystemAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This proxy contract adheres to EIP-1967 for upgradeability. It holds the token identity's storage      (keys, claims, etc.) and its public address, while delegating all logic calls to a `ATKTokenIdentityImplementation` contract.      The address of this logic implementation is retrieved from the central `IATKSystem` contract via `tokenIdentityImplementation()`,      allowing the underlying token identity logic to be upgraded without changing this proxy's address or losing its state.      This proxy is typically created by the `SMARTIdentityFactoryImplementation` for a specific token.      Inherits from `SMARTSystemProxy`.\",\"errors\":{\"ETHTransfersNotAllowed()\":[{\"details\":\"Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent loss of funds or unexpected behavior.\"}],\"IdentityImplementationNotSet()\":[{\"details\":\"This error is thrown if an operation requires the standard identity implementation (the template for user identities), but its logic contract address is zero or has not been configured in the `SMARTSystem`.\"}],\"InitializationWithZeroAddress()\":[{\"details\":\"This typically occurs in proxy constructors if the logic contract address fetched from the system is address(0).\"}],\"InvalidSystemAddress()\":[{\"details\":\"This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation.\"}],\"ZeroAddressNotAllowed()\":[{\"details\":\"This error is commonly used to prevent critical functions from being called with an uninitialized      or invalid address parameter, which could lead to locked funds or unexpected behavior.      For example, it might be reverted if trying to create an identity for the zero address      or assign ownership to the zero address.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"This function is called only once when this proxy contract is deployed (typically by the `ATKIdentityFactory`). It initializes the proxy and the underlying token identity state: 1. Stores `systemAddress` (handled by `ATKSystemProxy` constructor). 2. Validates `accessManager`: Ensures it's not `address(0)`. 3. Retrieves the `ATKTokenIdentityImplementation` address from the `IATKSystem` contract. 4. Ensures this implementation address is configured (not `address(0)`), reverting with `IdentityImplementationNotSet` if not. 5. Performs a `delegatecall` to the `initialize` function of the `Identity` contract (which `ATKTokenIdentityImplementation` inherits) via `_performInitializationDelegatecall`.\",\"params\":{\"accessManager\":\"The address of the `ATKTokenAccessManager` contract.\",\"systemAddress\":\"The address of the `IATKSystem` contract.\"}}},\"title\":\"ATK Token Identity Proxy Contract (for Token-Bound Identities)\",\"version\":1},\"userdoc\":{\"errors\":{\"ETHTransfersNotAllowed()\":[{\"notice\":\"Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it.\"}],\"IdentityImplementationNotSet()\":[{\"notice\":\"Error indicating that the standard identity contract implementation address has not been set.\"}],\"InitializationWithZeroAddress()\":[{\"notice\":\"Error indicating that an attempt was made to initialize a component with a zero address for its implementation.\"}],\"InvalidSystemAddress()\":[{\"notice\":\"Error indicating that an invalid system address was provided or encountered.\"}],\"ZeroAddressNotAllowed()\":[{\"notice\":\"Indicates that an operation was attempted with the zero address (address(0))         where a valid, non-zero address was expected.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the `ATKTokenIdentityProxy`.\"}},\"notice\":\"This contract serves as an upgradeable proxy for an on-chain identity specifically bound to a token contract.         It is based on the ERC725 (OnchainID) standard for identity and uses ERC734 for key management.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/identity-factory/identities/ATKTokenIdentityProxy.sol\":\"ATKTokenIdentityProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/system/ATKSystemErrors.sol\":{\"keccak256\":\"0xb25dad91c3bd82830df4fd80d645264a54303a04f2a7e3599b7953546f6d5e28\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://728ea6df7945ec4772b493e82a3028809b25205adc6638185d0d2f0f11d7fc13\",\"dweb:/ipfs/QmNzsofiSzpSwJcRqYhgVU9EaexNNiYmfKnDmztrjX4Z6Y\"]},\"contracts/system/AbstractATKSystemProxy.sol\":{\"keccak256\":\"0xc45c4c9b6e1b90c26b6bf3ef63c22830dd8d456017a62dee13931213b58ced51\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://02be110c93e54cf1cceecab8df64f2d6b57afd86af0f8b93895c0a6d8502a24e\",\"dweb:/ipfs/QmPAevhzSNTPbS4KKEV8h5YzNkk57BbCS9osVf5JthRLRa\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x9b142a029ec94141890b4000c54583ac8bd261c4c9cc1a17724f8601c581293b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ac8c729ce44ab357ea1bd0de2c7a04cc7666550af9c8253a30e3329c29c13551\",\"dweb:/ipfs/QmTJPSssQ8WS5Uw34WpzAHyvebe9Z2XAojUD6yzMS6iqYC\"]},\"contracts/system/identity-factory/ATKIdentityErrors.sol\":{\"keccak256\":\"0x151b6bd463c83b9bb167a0d96d5e7d36a24eca0baa738dab81291bbf0182e32b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ba4324b5fb219c25895388c0d6864064017f06674bd75312c0350001e952ccea\",\"dweb:/ipfs/QmVf4odkCVCrtEXySTnaLNfQBnWGFtNoeMAu4fwVjCuWDA\"]},\"contracts/system/identity-factory/identities/ATKTokenIdentityProxy.sol\":{\"keccak256\":\"0x730552959313517708995a460550339b8eed0f15f25916cb5ee73507892399be\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6a43317f51e3e85476e01c22eb003ade9cd5c57c90460c45d01c3e88b4a9092\",\"dweb:/ipfs/QmXhUxTQUJfUpWwcRtvBosKBwrGkzioNocUxCN5vRPXwu9\"]},\"contracts/system/identity-factory/identities/IATKTokenIdentity.sol\":{\"keccak256\":\"0xcb99992b48e9492498db97b301a8b7cc2730d018f535b851a216df7dc2c6b67b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://df28d69b1c6d62d9746b165badcca360134409fef934224469db4aa2c5ab0146\",\"dweb:/ipfs/QmRahsqaYy8qhjyuNEWZUu3swujZ61QpdEHQeNNP67UqLh\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb\",\"dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e\",\"dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8\",\"dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW\"]},\"dependencies/@openzeppelin-contracts-5.3.0/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "systemAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accessManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ETHTransfersNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdentityImplementationNotSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializationWithZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSystemAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressNotAllowed"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "This function is called only once when this proxy contract is deployed (typically by the `ATKIdentityFactory`). It initializes the proxy and the underlying token identity state: 1. Stores `systemAddress` (handled by `ATKSystemProxy` constructor). 2. Validates `accessManager`: Ensures it's not `address(0)`. 3. Retrieves the `ATKTokenIdentityImplementation` address from the `IATKSystem` contract. 4. Ensures this implementation address is configured (not `address(0)`), reverting with `IdentityImplementationNotSet` if not. 5. Performs a `delegatecall` to the `initialize` function of the `Identity` contract (which `ATKTokenIdentityImplementation` inherits) via `_performInitializationDelegatecall`.",
            "params": {
              "accessManager": "The address of the `ATKTokenAccessManager` contract.",
              "systemAddress": "The address of the `IATKSystem` contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor for the `ATKTokenIdentityProxy`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/identity-factory/identities/ATKTokenIdentityProxy.sol": "ATKTokenIdentityProxy"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/system/ATKSystemErrors.sol": {
        "keccak256": "0xb25dad91c3bd82830df4fd80d645264a54303a04f2a7e3599b7953546f6d5e28",
        "urls": [
          "bzz-raw://728ea6df7945ec4772b493e82a3028809b25205adc6638185d0d2f0f11d7fc13",
          "dweb:/ipfs/QmNzsofiSzpSwJcRqYhgVU9EaexNNiYmfKnDmztrjX4Z6Y"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/AbstractATKSystemProxy.sol": {
        "keccak256": "0xc45c4c9b6e1b90c26b6bf3ef63c22830dd8d456017a62dee13931213b58ced51",
        "urls": [
          "bzz-raw://02be110c93e54cf1cceecab8df64f2d6b57afd86af0f8b93895c0a6d8502a24e",
          "dweb:/ipfs/QmPAevhzSNTPbS4KKEV8h5YzNkk57BbCS9osVf5JthRLRa"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/IATKSystem.sol": {
        "keccak256": "0x9b142a029ec94141890b4000c54583ac8bd261c4c9cc1a17724f8601c581293b",
        "urls": [
          "bzz-raw://ac8c729ce44ab357ea1bd0de2c7a04cc7666550af9c8253a30e3329c29c13551",
          "dweb:/ipfs/QmTJPSssQ8WS5Uw34WpzAHyvebe9Z2XAojUD6yzMS6iqYC"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/identity-factory/ATKIdentityErrors.sol": {
        "keccak256": "0x151b6bd463c83b9bb167a0d96d5e7d36a24eca0baa738dab81291bbf0182e32b",
        "urls": [
          "bzz-raw://ba4324b5fb219c25895388c0d6864064017f06674bd75312c0350001e952ccea",
          "dweb:/ipfs/QmVf4odkCVCrtEXySTnaLNfQBnWGFtNoeMAu4fwVjCuWDA"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/identity-factory/identities/ATKTokenIdentityProxy.sol": {
        "keccak256": "0x730552959313517708995a460550339b8eed0f15f25916cb5ee73507892399be",
        "urls": [
          "bzz-raw://d6a43317f51e3e85476e01c22eb003ade9cd5c57c90460c45d01c3e88b4a9092",
          "dweb:/ipfs/QmXhUxTQUJfUpWwcRtvBosKBwrGkzioNocUxCN5vRPXwu9"
        ],
        "license": "GPL-3.0"
      },
      "contracts/system/identity-factory/identities/IATKTokenIdentity.sol": {
        "keccak256": "0xcb99992b48e9492498db97b301a8b7cc2730d018f535b851a216df7dc2c6b67b",
        "urls": [
          "bzz-raw://df28d69b1c6d62d9746b165badcca360134409fef934224469db4aa2c5ab0146",
          "dweb:/ipfs/QmRahsqaYy8qhjyuNEWZUu3swujZ61QpdEHQeNNP67UqLh"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol": {
        "keccak256": "0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e",
        "urls": [
          "bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb",
          "dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol": {
        "keccak256": "0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122",
        "urls": [
          "bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e",
          "dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol": {
        "keccak256": "0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862",
        "urls": [
          "bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8",
          "dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor for the `ATKTokenIdentityProxy`."
      }
    },
    "errors": {
      "ETHTransfersNotAllowed()": [
        {
          "notice": "Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it."
        }
      ],
      "IdentityImplementationNotSet()": [
        {
          "notice": "Error indicating that the standard identity contract implementation address has not been set."
        }
      ],
      "InitializationWithZeroAddress()": [
        {
          "notice": "Error indicating that an attempt was made to initialize a component with a zero address for its implementation."
        }
      ],
      "InvalidSystemAddress()": [
        {
          "notice": "Error indicating that an invalid system address was provided or encountered."
        }
      ],
      "ZeroAddressNotAllowed()": [
        {
          "notice": "Indicates that an operation was attempted with the zero address (address(0))         where a valid, non-zero address was expected."
        }
      ]
    },
    "notice": "This contract serves as an upgradeable proxy for an on-chain identity specifically bound to a token contract.         It is based on the ERC725 (OnchainID) standard for identity and uses ERC734 for key management."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This proxy contract adheres to EIP-1967 for upgradeability. It holds the token identity's storage      (keys, claims, etc.) and its public address, while delegating all logic calls to a `ATKTokenIdentityImplementation` contract.      The address of this logic implementation is retrieved from the central `IATKSystem` contract via `tokenIdentityImplementation()`,      allowing the underlying token identity logic to be upgraded without changing this proxy's address or losing its state.      This proxy is typically created by the `SMARTIdentityFactoryImplementation` for a specific token.      Inherits from `SMARTSystemProxy`.",
    "methods": {
      "constructor": {
        "details": "This function is called only once when this proxy contract is deployed (typically by the `ATKIdentityFactory`). It initializes the proxy and the underlying token identity state: 1. Stores `systemAddress` (handled by `ATKSystemProxy` constructor). 2. Validates `accessManager`: Ensures it's not `address(0)`. 3. Retrieves the `ATKTokenIdentityImplementation` address from the `IATKSystem` contract. 4. Ensures this implementation address is configured (not `address(0)`), reverting with `IdentityImplementationNotSet` if not. 5. Performs a `delegatecall` to the `initialize` function of the `Identity` contract (which `ATKTokenIdentityImplementation` inherits) via `_performInitializationDelegatecall`.",
        "params": {
          "accessManager": "The address of the `ATKTokenAccessManager` contract.",
          "systemAddress": "The address of the `IATKSystem` contract."
        }
      }
    },
    "errors": {
      "ETHTransfersNotAllowed()": [
        {
          "details": "Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent loss of funds or unexpected behavior."
        }
      ],
      "IdentityImplementationNotSet()": [
        {
          "details": "This error is thrown if an operation requires the standard identity implementation (the template for user identities), but its logic contract address is zero or has not been configured in the `SMARTSystem`."
        }
      ],
      "InitializationWithZeroAddress()": [
        {
          "details": "This typically occurs in proxy constructors if the logic contract address fetched from the system is address(0)."
        }
      ],
      "InvalidSystemAddress()": [
        {
          "details": "This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation."
        }
      ],
      "ZeroAddressNotAllowed()": [
        {
          "details": "This error is commonly used to prevent critical functions from being called with an uninitialized      or invalid address parameter, which could lead to locked funds or unexpected behavior.      For example, it might be reverted if trying to create an identity for the zero address      or assign ownership to the zero address."
        }
      ]
    },
    "title": "ATK Token Identity Proxy Contract (for Token-Bound Identities)"
  },
  "id": 159
}