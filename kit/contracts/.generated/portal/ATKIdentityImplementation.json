{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ACTION_KEY_PURPOSE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "CLAIM_SIGNER_KEY_PURPOSE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ENCRYPTION_KEY_PURPOSE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MANAGEMENT_KEY_PURPOSE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addClaim",
      "inputs": [
        {
          "name": "_topic",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_scheme",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_issuer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_signature",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_uri",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addKey",
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_keyType",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "success",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        {
          "name": "_id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_toApprove",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [
        {
          "name": "success",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "_to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getClaim",
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimIdsByTopic",
      "inputs": [
        {
          "name": "_topic",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "claimIds",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKey",
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "purposes",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "keyType",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKeyPurposes",
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "purposes",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKeysByPurpose",
      "inputs": [
        {
          "name": "_purpose",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "keys",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecoveredAddress",
      "inputs": [
        {
          "name": "sig",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "dataHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialManagementKey",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isClaimRevoked",
      "inputs": [
        {
          "name": "_sig",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isClaimValid",
      "inputs": [
        {
          "name": "_identity",
          "type": "address",
          "internalType": "contract IIdentity"
        },
        {
          "name": "claimTopic",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "sig",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "claimValid",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "keyHasPurpose",
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "exists",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeClaim",
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "success",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeKey",
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "success",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeClaim",
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeClaimBySignature",
      "inputs": [
        {
          "name": "signature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokedClaims",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Approved",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimAdded",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimChanged",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimRemoved",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "topic",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "scheme",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "uri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimRevoked",
      "inputs": [
        {
          "name": "signature",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Executed",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutionFailed",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutionRequested",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KeyAdded",
      "inputs": [
        {
          "name": "key",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "purpose",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "keyType",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KeyRemoved",
      "inputs": [
        {
          "name": "key",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "purpose",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "keyType",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CannotExecuteToZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClaimAlreadyRevoked",
      "inputs": [
        {
          "name": "signatureHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ClaimDoesNotExist",
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ClaimNotValidAccordingToIssuer",
      "inputs": [
        {
          "name": "issuer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "topic",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureLength",
      "inputs": [
        {
          "name": "length",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureS",
      "inputs": [
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ExecutionAlreadyPerformed",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ExecutionIdDoesNotExist",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidInitialManagementKey",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IssuerCannotBeZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "KeyAlreadyHasThisPurpose",
      "inputs": [
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "purpose",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "KeyCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "KeyDoesNotExist",
      "inputs": [
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "KeyDoesNotHaveThisPurpose",
      "inputs": [
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "purpose",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReplicatedExecutionAlreadyPerformed",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReplicatedExecutionIdDoesNotExist",
      "inputs": [
        {
          "name": "executionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "SenderLacksActionKey",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SenderLacksClaimSignerKey",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SenderLacksManagementKey",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a03461011457601f61267538819003918201601f19168301916001600160401b038311848410176101185780849260209460405283398101031261011457516001600160a01b03811681036101145760015f556080525f5160206126555f395f51905f525460ff8160401c16610105576002600160401b03196001600160401b038216016100af575b604051612528908161012d823960805181818161106a015281816111bd0152611ce70152f35b6001600160401b0319166001600160401b039081175f5160206126555f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610089565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461198e5750806312aaac701461192f5780631d381240146117695780632646b2641461171b5780633f1f5e4c146116ec5780634eee424a1461146d5780634f9202af1461145257806353d413c5146111f1578063572b6c051461119d578063747442d3146110995780637da0a8771461105557806380e9e9e114610ff157806383f4f1de14610fd65780639010f72614610f6657806395ce579714610f4b5780639f7f9edd14610eda578063a5babbb114610df3578063b1a34e0d146108ce578063b61d27f6146105c6578063bfb3de8b146105ab578063c0969a6e14610537578063c3b129e3146104dc578063c4d66de814610270578063c9100bcb146101a6578063d202158d146101835763fb307b341461013a575f80fd5b3461017f57602036600319011261017f576004355f52600160205261017b610167600160405f2001611bbd565b604051918291602083526020830190611a29565b0390f35b5f80fd5b3461017f57602061019c61019636611b07565b9061233e565b6040519015158152f35b3461017f57602036600319011261017f57600480355f9081526005602081905260409182902080546001820154600283015494519095919461017b9461021e946102629486946102549490936001600160a01b039091169261023192918101916102259190810190829087908a908290600301611daa565b0387611a77565b60405197888092611daa565b60405198899889526020890152604088015260c0606088015260c0870190611b99565b908582036080870152611b99565b9083820360a0850152611b99565b3461017f57602036600319011261017f57610289611b1d565b5f5160206124fc5f395f51905f52549060ff8260401c1615916001600160401b038116801590816104d4575b60011490816104ca575b1590816104c1575b506104b25767ffffffffffffffff1981166001175f5160206124fc5f395f51905f525582610486575b5060085460ff81166104785760ff19166001176008556001600160a01b031680156104695760ff5f5160206124fc5f395f51905f525460401c161561045a576040516020810191825260208152610348604082611a77565b51902090815f5260016020528160405f205560405161036681611a5c565b60018152825f526001602052600160405f20019061038382611c6d565b905f5260205f20905f5b6001811061044657505050815f5260016020526001600260405f20015560015f5260026020526103c08260405f20611cbe565b600180604051937f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e95f80a46103f157005b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff0000000000000000195f5160206124fc5f395f51905f5254165f5160206124fc5f395f51905f525560018152a1005b60019060208351930192818501550161038d565b631afcd79f60e31b5f5260045ffd5b6306c2af8360e01b5f5260045ffd5b62dc149f60e41b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f5160206124fc5f395f51905f5255826102f0565b63f92ee8a960e01b5f5260045ffd5b905015846102c7565b303b1591506102bf565b8491506102b5565b3461017f57604036600319011261017f576004356001600160401b03811161017f5761052561051c6105146020933690600401611ae9565b6024356123cb565b90929192612405565b6040516001600160a01b039091168152f35b3461017f57608036600319011261017f576004356001600160a01b038116810361017f576044356001600160401b03811161017f5761057a903690600401611ae9565b90606435906001600160401b03821161017f576020926105a161019c933690600401611ae9565b9160243590611c1f565b3461017f575f36600319011261017f57602060405160038152f35b606036600319011261017f576105da611b1d565b602435906044356001600160401b03811161017f576105fd903690600401611b6c565b9290916106086123ad565b6001600160a01b03169182156108bf576004545f81815260036020526040902080546001600160a01b031916851781556001810184905590946002909101906001600160401b0381116108ab5784928261066d836106678a9654611d72565b83612107565b5f601f841160011461081d57916040916106bf85807f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee897965f91610812575b508160011b915f199060031b1c19161790565b90555b5f858152600360208190528382208101805460ff191690559083902001805461ff00191690556004546106f490611d3d565b60045582825193849260208452816020850152848401375f828201840152601f01601f19168101030190a460015f5561072b611ce4565b604051602081019160018060a01b031682526020815261074c604082611a77565b5190205f9161075a82612228565b156107ea5750505060015b610775575b602090604051908152f35b60405163747442d360e01b81526004810182905260016024820152906020826044815f305af19182156107df576020926107b2575b50905061076a565b6107d190833d85116107d8575b6107c98183611a77565b810190611c07565b50826107aa565b503d6107bf565b6040513d5f823e3d90fd5b3014159081610802575b501561076557506001610765565b61080c91506122e1565b836107f4565b90508401358d6106ac565b601f19841690825f5260205f20915f5b81811061088d57509160409391867f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee897969410610874575b5050600184811b0190556106c2565b8301355f19600387901b60f8161c191690558a80610865565b8286013584558a98508b97506001909301926020928301920161082d565b634e487b7160e01b5f52604160045260245ffd5b631680eff760e01b5f5260045ffd5b3461017f5760c036600319011261017f576024356004356044356001600160a01b0381169081900361017f576064356001600160401b03811161017f57610919903690600401611ae9565b916084356001600160401b03811161017f57610939903690600401611ae9565b60a4356001600160401b03811161017f573660238201121561017f57610969903690602481600401359101611ab3565b610971611ce4565b6001600160a01b031630148015610db9575b15610daa57308403610cf7575b6040516020810190858252846040820152604081526109b0606082611a77565b5190205f8181526005602052604090208481556001810188905586519196916003909101906001600160401b0381116108ab576109f7816109f18454611d72565b84612107565b6020601f8211600114610c97579080610a23925f91610c8c57508160011b915f199060031b1c19161790565b90555b855f526005602052600460405f200183516001600160401b0381116108ab57610a53816109f18454611d72565b6020601f8211600114610c2c579080610a7f925f91610c2157508160011b915f199060031b1c19161790565b90555b855f526005602052600560405f2001968251936001600160401b0385116108ab578885610ab68a976109f160209d54611d72565b8a601f8211600114610bbf579080610ae1925f91610bb457508160011b915f199060031b1c19161790565b90555b5f85815260058a5260409020600201546001600160a01b03168714610b7a577f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c593610b6e91875f5260068b52610b3d8760405f20611cbe565b865f5260058b52600260405f2001896bffffffffffffffffffffffff60a01b8254161790556040519485948561214a565b0390a45b604051908152f35b7f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393610bac916040519485948561214a565b0390a4610b72565b90508701518d6106ac565b601f19821690835f52805f20915f5b818110610c0757509083600194939210610bef575b5050811b019055610ae4565b8801515f1960f88460031b161c191690558c80610be3565b828a015184558d9a50600190930192918e01918e01610bce565b90508601518b6106ac565b601f19821690835f52805f20915f5b818110610c7457509083600194939210610c5c575b5050811b019055610a82565b8701515f1960f88460031b161c191690558a80610c50565b9192602060018192868c015181550194019201610c3b565b90508401518b6106ac565b601f19821690835f52805f20915f5b818110610cdf57509083600194939210610cc7575b5050811b019055610a26565b8501515f1960f88460031b161c191690558a80610cbb565b9192602060018192868a015181550194019201610ca6565b60405163604b4d3760e11b8152306004820152602481018490526080604482015260208180610d3e610d2c608483018b611b99565b82810360031901606484015287611b99565b0381885afa9081156107df575f91610d8b575b506109905760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b610da4915060203d6020116107d8576107c98183611a77565b87610d51565b633c733d2360e11b5f5260045ffd5b50610dee610dc5611ce4565b604051602081019160018060a01b0316825260208152610de6604082611a77565b519020612284565b610983565b3461017f57602036600319011261017f57600435610e0f611ce4565b6001600160a01b031630148015610ea0575b15610e91575f908152600560208190526040918290209151610e86929091610e8191610e7a91810190610e6e908390600481019083908890610e67908290600301611daa565b0388611a77565b60405191828092611daa565b0390611a77565b612085565b602060405160018152f35b63ad51ff8360e01b5f5260045ffd5b50610ed5610eac611ce4565b604051602081019160018060a01b0316825260208152610ecd604082611a77565b519020612228565b610e21565b3461017f57602036600319011261017f576004356001600160401b03811161017f57610f0a903690600401611b6c565b610f12611ce4565b6001600160a01b031630148015610f3a575b15610e9157610f3891610e81913691611ab3565b005b50610f46610eac611ce4565b610f24565b3461017f575f36600319011261017f57602060405160018152f35b3461017f57602036600319011261017f576004355f52600260205260405f206040519081602082549182815201915f5260205f20905f5b818110610fc05761017b85610fb481870382611a77565b60405191829182611b33565b8254845260209093019260019283019201610f9d565b3461017f575f36600319011261017f57602060405160028152f35b3461017f57602036600319011261017f576004355f52600660205260405f206040519081602082549182815201915f5260205f20905f5b81811061103f5761017b85610fb481870382611a77565b8254845260209093019260019283019201611028565b3461017f575f36600319011261017f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461017f57604036600319011261017f57602435600435811515820361017f57805f52600360205260405f2060045482101561118a5760ff600382015460081c16611177576110e6611ce4565b604051602081019160018060a01b0316825260208152611107604082611a77565b5190209054306001600160a01b039091160361114e5761112690612228565b15610e9157602091611140915b61113b6123ad565b611e79565b60015f556040519015158152f35b611157906122e1565b156111685760209161114091611133565b6356a951d960e01b5f5260045ffd5b5063667128f160e01b5f5260045260245ffd5b506332a3a30d60e01b5f5260045260245ffd5b3461017f57602036600319011261017f5760206111b8611b1d565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b3461017f576111ff36611b07565b90611208611ce4565b6001600160a01b031630148015611441575b15610e9157805f5260016020528060405f20540361142f57805f526001602052600160405f20015f1981545f5b818110611408575b505f1982146113f0575f1981019081116113a1576112816112736112979285611c95565b90549060031b1c9284611c95565b819391549060031b91821b915f19901b19161790565b9055805480156113dc575f19016112ae8183611c95565b8154905f199060031b1b191690558155825f52600260205260405f20925f19938054905f5b8281106113b5575b5060018601611372575b505060209350825f5260018452600260405f200154915415611330575b604051927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d33975f80a460018152f35b825f52600184525f60026040822082815560018101805484825580611359575b50500155611302565b61136b91855288852090810190611c57565b8780611350565b5f1982019182116113a15760209561139361128161127361139a9585611c95565b9055611d4b565b84806112e5565b634e487b7160e01b5f52601160045260245ffd5b856113c08284611c95565b90549060031b1c146113d4576001016112d3565b9550866112db565b634e487b7160e01b5f52603160045260245ffd5b5050506362ff4d6b60e11b5f5260045260245260445ffd5b856114138286611c95565b90549060031b1c1461142757600101611247565b91508561124f565b631a36430d60e31b5f5260045260245ffd5b5061144d610eac611ce4565b61121a565b3461017f575f36600319011261017f57602060405160048152f35b3461017f57602036600319011261017f57600435611489611ce4565b6001600160a01b0316301480156116db575b15610daa57805f52600560205260405f20548015611682575f815f52600660205260405f2054905b825f526006602052836114d98260405f20611c95565b90549060031b1c1461167c576114ee90611d3d565b8181106114c357905b825f52600660205260405f20905f1981019081116113a15761151f6112819161153893611c95565b90549060031b1c92845f52600660205260405f20611c95565b9055805f52600660205261154e60405f20611d4b565b5f8281526005602081815260409283902060018101546002820154945190815260809281018390526001600160a01b03909416949386937f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a93919283926115e6928201916115d89160048201916115ca91870190600301611daa565b908582036040870152611daa565b908382036060850152611daa565b0390a45f526005602052600560405f205f81555f60018201555f600282015561161160038201611e2b565b61161d60048201611e2b565b016116288154611d72565b908161163957602060405160018152f35b81601f5f93116001146116505750555b8080610e86565b8183526020832061166c91601f0160051c810190600101611c57565b8082528160208120915555611649565b906114f7565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506116e7610dc5611ce4565b61149b565b3461017f57602036600319011261017f576004355f526007602052602060ff60405f2054166040519015158152f35b3461017f57602036600319011261017f576004356001600160401b03811161017f5761019c6117506020923690600401611ae9565b602081519101205f52600760205260ff60405f20541690565b3461017f57606036600319011261017f5760243560043560443561178b611ce4565b6001600160a01b03163014801561191e575b15610e9157811561190f57815f5260016020528160405f2054145f1461189757815f526001602052600160405f2001545f5b818110611852575050815f526001602052600160405f200192835493600160401b8510156108ab5761180d6112818684936001602099018155611c95565b90555b805f52600284526118248360405f20611cbe565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e95f80a460018152f35b835f5260016020528461186b82600160405f2001611c95565b90549060031b1c1461187f576001016117cf565b5050506309c42b7560e21b5f5260045260245260445ffd5b815f5260016020528160405f2055604051926118b284611a5c565b808452825f526001602052600160405f2001936118ce85611c6d565b935f5260205f20935f5b600181106118fb57505060209350825f526001845281600260405f200155611810565b6001906020835193019281880155016118d8565b63d77534c760e01b5f5260045ffd5b5061192a610eac611ce4565b61179d565b3461017f57602036600319011261017f576004355f9081526001602081905260409091206002810154815461197f93909261196a9101611bbd565b91604051938493606085526060850190611a29565b91602084015260408301520390f35b3461017f57602036600319011261017f576004359063ffffffff60e01b821680920361017f5760209163189acdbd60e31b8114908115611a18575b8115611a07575b81156119f6575b81156119e5575b5015158152f35b6301ffc9a760e01b149050836119de565b63604b4d3760e11b811491506119d7565b63b6b4ee6d60e01b811491506119d0565b63270d514f60e01b811491506119c9565b90602080835192838152019201905f5b818110611a465750505090565b8251845260209384019390920191600101611a39565b602081019081106001600160401b038211176108ab57604052565b90601f801991011681019081106001600160401b038211176108ab57604052565b6001600160401b0381116108ab57601f01601f191660200190565b929192611abf82611a98565b91611acd6040519384611a77565b82948184528183011161017f578281602093845f960137010152565b9080601f8301121561017f57816020611b0493359101611ab3565b90565b604090600319011261017f576004359060243590565b600435906001600160a01b038216820361017f57565b60206040818301928281528451809452019201905f5b818110611b565750505090565b8251845260209384019390920191600101611b49565b9181601f8401121561017f578235916001600160401b03831161017f576020838186019501011161017f57565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90604051918281549182825260208201905f5260205f20925f5b818110611bee575050611bec92500383611a77565b565b8454835260019485019487945060209093019201611bd7565b9081602091031261017f5751801515810361017f5790565b91809391611c2c93612186565b15611c5257611c4e90602081519101205f52600760205260ff60405f20541690565b1590565b505f90565b818110611c62575050565b5f8155600101611c57565b80546001825580600110611c7f575050565b611bec915f52600160205f209182019101611c57565b8054821015611caa575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b805490600160401b8210156108ab5781611281916001611ce094018155611c95565b9055565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611d32575b15611d2e5760131936013681116113a1573560601c90565b3390565b506014361015611d16565b5f1981146113a15760010190565b805480156113dc575f190190611d618282611c95565b8154905f199060031b1b1916905555565b90600182811c92168015611da0575b6020831014611d8c57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611d81565b5f9291815491611db983611d72565b8083529260018116908115611e0e5750600114611dd557505050565b5f9081526020812093945091925b838310611df4575060209250010190565b600181602092949394548385870101520191019190611de3565b915050602093945060ff929192191683830152151560051b010190565b611e358154611d72565b9081611e3f575050565b81601f5f9311600114611e50575055565b81835260208320611e6c91601f0160051c810190600101611c57565b8082528160208120915555565b9060045482101561207257815f52600360205260405f2091600383019182549060ff8260081c1661205f57827fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d860206040518415158152a2156120505750600160ff1983541617825560018060a01b038354169260018101928354946002830195604051905f8854611f0a81611d72565b906001811690811561203b575060011461200a575b50915f939181859403925af13d15612005573d611f3b81611a98565b90611f496040519283611a77565b81525f60203d92013e5b15611fb757805461ff001916610100179055549154604051602080825291946001600160a01b0394909416937f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8928291611faf91830190611daa565b0390a4600190565b50611ffe7fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a689160018060a01b03905416935494604051918291602083526020830190611daa565b0390a45f90565b611f53565b9050885f5260205f205f905b82821061202757505082015f611f1f565b600181602092548488015201910190612016565b60ff191685525080151502830190505f611f1f565b60ff1916909155506001919050565b82631e38c17f60e11b5f5260045260245ffd5b5063767a083b60e01b5f5260045260245ffd5b80516020820120805f52600760205260ff60405f2054166120f5577f7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569916120f0915f52600760205260405f20600160ff19825416179055604051918291602083526020830190611b99565b0390a1565b63067138d360e11b5f5260045260245ffd5b9190601f811161211657505050565b611bec925f5260205f20906020601f840160051c83019310612140575b601f0160051c0190611c57565b9091508190612133565b9261216a611b049593612178938652608060208701526080860190611b99565b908482036040860152611b99565b916060818403910152611b99565b91610dc59261221b946121d161051c946121c3604051938492602084019660018060a01b0316875260408401526060808401526080830190611b99565b03601f198101835282611a77565b51902060405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152612213605c82611a77565b5190206123cb565b612223575f90565b600190565b5f52600160205260405f20805415611c52576001018054905f5b828110612250575050505f90565b600161225c8284611c95565b90549060031b1c14801561227f575b61227757600101612242565b505050600190565b61226b565b5f52600160205260405f20805415611c52576001018054905f5b8281106122ac575050505f90565b6122b68183611c95565b90549060031b1c600181149081156122d6575b506122775760010161229e565b60039150145f6122c9565b5f52600160205260405f20805415611c52576001018054905f5b828110612309575050505f90565b6123138183611c95565b90549060031b1c60018114908115612333575b50612277576001016122fb565b60029150145f612326565b5f52600160205260405f208054156123a757600101908154915f5b83811061236857505050505f90565b6123728183611c95565b90549060031b1c836001821491821561239d575b505061239457600101612359565b50505050600190565b149050835f612386565b50505f90565b60025f54146123bc5760025f55565b633ee5aeb560e01b5f5260045ffd5b81519190604183036123fb576123f49250602082015190606060408401519301515f1a90612479565b9192909190565b50505f9160029190565b60048110156124655780612417575050565b6001810361242e5763f645eedf60e01b5f5260045ffd5b60028103612449575063fce698f760e01b5f5260045260245ffd5b6003146124535750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116124f0579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa156107df575f516001600160a01b038116156124e657905f905f90565b505f906001905f90565b5050505f916003919056fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000af0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "sourceMap": "1692:9155:157:-:0;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;1857:1:215;-1:-1:-1;1857:1:215;1623:37:236;;-1:-1:-1;;;;;;;;;;;1692:9155:157;;;;;;7894:76:237;;-1:-1:-1;;;;;;;;;;;1692:9155:157;;7983:34:237;7979:146;;-1:-1:-1;1692:9155:157;;;;;;;;1623:37:236;1692:9155:157;;;;;;;;;;;;;;;;7979:146:237;-1:-1:-1;;;;;;1692:9155:157;-1:-1:-1;;;;;1692:9155:157;;;-1:-1:-1;;;;;;;;;;;1692:9155:157;;;;;;8085:29:237;;1692:9155:157;;8085:29:237;7979:146;;;7894:76;7936:23;;;-1:-1:-1;7936:23:237;;-1:-1:-1;7936:23:237;1692:9155:157;-1:-1:-1;1692:9155:157;;;;;;-1:-1:-1;1692:9155:157;;;;;-1:-1:-1;1692:9155:157",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461198e5750806312aaac701461192f5780631d381240146117695780632646b2641461171b5780633f1f5e4c146116ec5780634eee424a1461146d5780634f9202af1461145257806353d413c5146111f1578063572b6c051461119d578063747442d3146110995780637da0a8771461105557806380e9e9e114610ff157806383f4f1de14610fd65780639010f72614610f6657806395ce579714610f4b5780639f7f9edd14610eda578063a5babbb114610df3578063b1a34e0d146108ce578063b61d27f6146105c6578063bfb3de8b146105ab578063c0969a6e14610537578063c3b129e3146104dc578063c4d66de814610270578063c9100bcb146101a6578063d202158d146101835763fb307b341461013a575f80fd5b3461017f57602036600319011261017f576004355f52600160205261017b610167600160405f2001611bbd565b604051918291602083526020830190611a29565b0390f35b5f80fd5b3461017f57602061019c61019636611b07565b9061233e565b6040519015158152f35b3461017f57602036600319011261017f57600480355f9081526005602081905260409182902080546001820154600283015494519095919461017b9461021e946102629486946102549490936001600160a01b039091169261023192918101916102259190810190829087908a908290600301611daa565b0387611a77565b60405197888092611daa565b60405198899889526020890152604088015260c0606088015260c0870190611b99565b908582036080870152611b99565b9083820360a0850152611b99565b3461017f57602036600319011261017f57610289611b1d565b5f5160206124fc5f395f51905f52549060ff8260401c1615916001600160401b038116801590816104d4575b60011490816104ca575b1590816104c1575b506104b25767ffffffffffffffff1981166001175f5160206124fc5f395f51905f525582610486575b5060085460ff81166104785760ff19166001176008556001600160a01b031680156104695760ff5f5160206124fc5f395f51905f525460401c161561045a576040516020810191825260208152610348604082611a77565b51902090815f5260016020528160405f205560405161036681611a5c565b60018152825f526001602052600160405f20019061038382611c6d565b905f5260205f20905f5b6001811061044657505050815f5260016020526001600260405f20015560015f5260026020526103c08260405f20611cbe565b600180604051937f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e95f80a46103f157005b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff0000000000000000195f5160206124fc5f395f51905f5254165f5160206124fc5f395f51905f525560018152a1005b60019060208351930192818501550161038d565b631afcd79f60e31b5f5260045ffd5b6306c2af8360e01b5f5260045ffd5b62dc149f60e41b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f5160206124fc5f395f51905f5255826102f0565b63f92ee8a960e01b5f5260045ffd5b905015846102c7565b303b1591506102bf565b8491506102b5565b3461017f57604036600319011261017f576004356001600160401b03811161017f5761052561051c6105146020933690600401611ae9565b6024356123cb565b90929192612405565b6040516001600160a01b039091168152f35b3461017f57608036600319011261017f576004356001600160a01b038116810361017f576044356001600160401b03811161017f5761057a903690600401611ae9565b90606435906001600160401b03821161017f576020926105a161019c933690600401611ae9565b9160243590611c1f565b3461017f575f36600319011261017f57602060405160038152f35b606036600319011261017f576105da611b1d565b602435906044356001600160401b03811161017f576105fd903690600401611b6c565b9290916106086123ad565b6001600160a01b03169182156108bf576004545f81815260036020526040902080546001600160a01b031916851781556001810184905590946002909101906001600160401b0381116108ab5784928261066d836106678a9654611d72565b83612107565b5f601f841160011461081d57916040916106bf85807f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee897965f91610812575b508160011b915f199060031b1c19161790565b90555b5f858152600360208190528382208101805460ff191690559083902001805461ff00191690556004546106f490611d3d565b60045582825193849260208452816020850152848401375f828201840152601f01601f19168101030190a460015f5561072b611ce4565b604051602081019160018060a01b031682526020815261074c604082611a77565b5190205f9161075a82612228565b156107ea5750505060015b610775575b602090604051908152f35b60405163747442d360e01b81526004810182905260016024820152906020826044815f305af19182156107df576020926107b2575b50905061076a565b6107d190833d85116107d8575b6107c98183611a77565b810190611c07565b50826107aa565b503d6107bf565b6040513d5f823e3d90fd5b3014159081610802575b501561076557506001610765565b61080c91506122e1565b836107f4565b90508401358d6106ac565b601f19841690825f5260205f20915f5b81811061088d57509160409391867f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee897969410610874575b5050600184811b0190556106c2565b8301355f19600387901b60f8161c191690558a80610865565b8286013584558a98508b97506001909301926020928301920161082d565b634e487b7160e01b5f52604160045260245ffd5b631680eff760e01b5f5260045ffd5b3461017f5760c036600319011261017f576024356004356044356001600160a01b0381169081900361017f576064356001600160401b03811161017f57610919903690600401611ae9565b916084356001600160401b03811161017f57610939903690600401611ae9565b60a4356001600160401b03811161017f573660238201121561017f57610969903690602481600401359101611ab3565b610971611ce4565b6001600160a01b031630148015610db9575b15610daa57308403610cf7575b6040516020810190858252846040820152604081526109b0606082611a77565b5190205f8181526005602052604090208481556001810188905586519196916003909101906001600160401b0381116108ab576109f7816109f18454611d72565b84612107565b6020601f8211600114610c97579080610a23925f91610c8c57508160011b915f199060031b1c19161790565b90555b855f526005602052600460405f200183516001600160401b0381116108ab57610a53816109f18454611d72565b6020601f8211600114610c2c579080610a7f925f91610c2157508160011b915f199060031b1c19161790565b90555b855f526005602052600560405f2001968251936001600160401b0385116108ab578885610ab68a976109f160209d54611d72565b8a601f8211600114610bbf579080610ae1925f91610bb457508160011b915f199060031b1c19161790565b90555b5f85815260058a5260409020600201546001600160a01b03168714610b7a577f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c593610b6e91875f5260068b52610b3d8760405f20611cbe565b865f5260058b52600260405f2001896bffffffffffffffffffffffff60a01b8254161790556040519485948561214a565b0390a45b604051908152f35b7f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393610bac916040519485948561214a565b0390a4610b72565b90508701518d6106ac565b601f19821690835f52805f20915f5b818110610c0757509083600194939210610bef575b5050811b019055610ae4565b8801515f1960f88460031b161c191690558c80610be3565b828a015184558d9a50600190930192918e01918e01610bce565b90508601518b6106ac565b601f19821690835f52805f20915f5b818110610c7457509083600194939210610c5c575b5050811b019055610a82565b8701515f1960f88460031b161c191690558a80610c50565b9192602060018192868c015181550194019201610c3b565b90508401518b6106ac565b601f19821690835f52805f20915f5b818110610cdf57509083600194939210610cc7575b5050811b019055610a26565b8501515f1960f88460031b161c191690558a80610cbb565b9192602060018192868a015181550194019201610ca6565b60405163604b4d3760e11b8152306004820152602481018490526080604482015260208180610d3e610d2c608483018b611b99565b82810360031901606484015287611b99565b0381885afa9081156107df575f91610d8b575b506109905760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b610da4915060203d6020116107d8576107c98183611a77565b87610d51565b633c733d2360e11b5f5260045ffd5b50610dee610dc5611ce4565b604051602081019160018060a01b0316825260208152610de6604082611a77565b519020612284565b610983565b3461017f57602036600319011261017f57600435610e0f611ce4565b6001600160a01b031630148015610ea0575b15610e91575f908152600560208190526040918290209151610e86929091610e8191610e7a91810190610e6e908390600481019083908890610e67908290600301611daa565b0388611a77565b60405191828092611daa565b0390611a77565b612085565b602060405160018152f35b63ad51ff8360e01b5f5260045ffd5b50610ed5610eac611ce4565b604051602081019160018060a01b0316825260208152610ecd604082611a77565b519020612228565b610e21565b3461017f57602036600319011261017f576004356001600160401b03811161017f57610f0a903690600401611b6c565b610f12611ce4565b6001600160a01b031630148015610f3a575b15610e9157610f3891610e81913691611ab3565b005b50610f46610eac611ce4565b610f24565b3461017f575f36600319011261017f57602060405160018152f35b3461017f57602036600319011261017f576004355f52600260205260405f206040519081602082549182815201915f5260205f20905f5b818110610fc05761017b85610fb481870382611a77565b60405191829182611b33565b8254845260209093019260019283019201610f9d565b3461017f575f36600319011261017f57602060405160028152f35b3461017f57602036600319011261017f576004355f52600660205260405f206040519081602082549182815201915f5260205f20905f5b81811061103f5761017b85610fb481870382611a77565b8254845260209093019260019283019201611028565b3461017f575f36600319011261017f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461017f57604036600319011261017f57602435600435811515820361017f57805f52600360205260405f2060045482101561118a5760ff600382015460081c16611177576110e6611ce4565b604051602081019160018060a01b0316825260208152611107604082611a77565b5190209054306001600160a01b039091160361114e5761112690612228565b15610e9157602091611140915b61113b6123ad565b611e79565b60015f556040519015158152f35b611157906122e1565b156111685760209161114091611133565b6356a951d960e01b5f5260045ffd5b5063667128f160e01b5f5260045260245ffd5b506332a3a30d60e01b5f5260045260245ffd5b3461017f57602036600319011261017f5760206111b8611b1d565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b3461017f576111ff36611b07565b90611208611ce4565b6001600160a01b031630148015611441575b15610e9157805f5260016020528060405f20540361142f57805f526001602052600160405f20015f1981545f5b818110611408575b505f1982146113f0575f1981019081116113a1576112816112736112979285611c95565b90549060031b1c9284611c95565b819391549060031b91821b915f19901b19161790565b9055805480156113dc575f19016112ae8183611c95565b8154905f199060031b1b191690558155825f52600260205260405f20925f19938054905f5b8281106113b5575b5060018601611372575b505060209350825f5260018452600260405f200154915415611330575b604051927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d33975f80a460018152f35b825f52600184525f60026040822082815560018101805484825580611359575b50500155611302565b61136b91855288852090810190611c57565b8780611350565b5f1982019182116113a15760209561139361128161127361139a9585611c95565b9055611d4b565b84806112e5565b634e487b7160e01b5f52601160045260245ffd5b856113c08284611c95565b90549060031b1c146113d4576001016112d3565b9550866112db565b634e487b7160e01b5f52603160045260245ffd5b5050506362ff4d6b60e11b5f5260045260245260445ffd5b856114138286611c95565b90549060031b1c1461142757600101611247565b91508561124f565b631a36430d60e31b5f5260045260245ffd5b5061144d610eac611ce4565b61121a565b3461017f575f36600319011261017f57602060405160048152f35b3461017f57602036600319011261017f57600435611489611ce4565b6001600160a01b0316301480156116db575b15610daa57805f52600560205260405f20548015611682575f815f52600660205260405f2054905b825f526006602052836114d98260405f20611c95565b90549060031b1c1461167c576114ee90611d3d565b8181106114c357905b825f52600660205260405f20905f1981019081116113a15761151f6112819161153893611c95565b90549060031b1c92845f52600660205260405f20611c95565b9055805f52600660205261154e60405f20611d4b565b5f8281526005602081815260409283902060018101546002820154945190815260809281018390526001600160a01b03909416949386937f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a93919283926115e6928201916115d89160048201916115ca91870190600301611daa565b908582036040870152611daa565b908382036060850152611daa565b0390a45f526005602052600560405f205f81555f60018201555f600282015561161160038201611e2b565b61161d60048201611e2b565b016116288154611d72565b908161163957602060405160018152f35b81601f5f93116001146116505750555b8080610e86565b8183526020832061166c91601f0160051c810190600101611c57565b8082528160208120915555611649565b906114f7565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506116e7610dc5611ce4565b61149b565b3461017f57602036600319011261017f576004355f526007602052602060ff60405f2054166040519015158152f35b3461017f57602036600319011261017f576004356001600160401b03811161017f5761019c6117506020923690600401611ae9565b602081519101205f52600760205260ff60405f20541690565b3461017f57606036600319011261017f5760243560043560443561178b611ce4565b6001600160a01b03163014801561191e575b15610e9157811561190f57815f5260016020528160405f2054145f1461189757815f526001602052600160405f2001545f5b818110611852575050815f526001602052600160405f200192835493600160401b8510156108ab5761180d6112818684936001602099018155611c95565b90555b805f52600284526118248360405f20611cbe565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e95f80a460018152f35b835f5260016020528461186b82600160405f2001611c95565b90549060031b1c1461187f576001016117cf565b5050506309c42b7560e21b5f5260045260245260445ffd5b815f5260016020528160405f2055604051926118b284611a5c565b808452825f526001602052600160405f2001936118ce85611c6d565b935f5260205f20935f5b600181106118fb57505060209350825f526001845281600260405f200155611810565b6001906020835193019281880155016118d8565b63d77534c760e01b5f5260045ffd5b5061192a610eac611ce4565b61179d565b3461017f57602036600319011261017f576004355f9081526001602081905260409091206002810154815461197f93909261196a9101611bbd565b91604051938493606085526060850190611a29565b91602084015260408301520390f35b3461017f57602036600319011261017f576004359063ffffffff60e01b821680920361017f5760209163189acdbd60e31b8114908115611a18575b8115611a07575b81156119f6575b81156119e5575b5015158152f35b6301ffc9a760e01b149050836119de565b63604b4d3760e11b811491506119d7565b63b6b4ee6d60e01b811491506119d0565b63270d514f60e01b811491506119c9565b90602080835192838152019201905f5b818110611a465750505090565b8251845260209384019390920191600101611a39565b602081019081106001600160401b038211176108ab57604052565b90601f801991011681019081106001600160401b038211176108ab57604052565b6001600160401b0381116108ab57601f01601f191660200190565b929192611abf82611a98565b91611acd6040519384611a77565b82948184528183011161017f578281602093845f960137010152565b9080601f8301121561017f57816020611b0493359101611ab3565b90565b604090600319011261017f576004359060243590565b600435906001600160a01b038216820361017f57565b60206040818301928281528451809452019201905f5b818110611b565750505090565b8251845260209384019390920191600101611b49565b9181601f8401121561017f578235916001600160401b03831161017f576020838186019501011161017f57565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90604051918281549182825260208201905f5260205f20925f5b818110611bee575050611bec92500383611a77565b565b8454835260019485019487945060209093019201611bd7565b9081602091031261017f5751801515810361017f5790565b91809391611c2c93612186565b15611c5257611c4e90602081519101205f52600760205260ff60405f20541690565b1590565b505f90565b818110611c62575050565b5f8155600101611c57565b80546001825580600110611c7f575050565b611bec915f52600160205f209182019101611c57565b8054821015611caa575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b805490600160401b8210156108ab5781611281916001611ce094018155611c95565b9055565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611d32575b15611d2e5760131936013681116113a1573560601c90565b3390565b506014361015611d16565b5f1981146113a15760010190565b805480156113dc575f190190611d618282611c95565b8154905f199060031b1b1916905555565b90600182811c92168015611da0575b6020831014611d8c57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611d81565b5f9291815491611db983611d72565b8083529260018116908115611e0e5750600114611dd557505050565b5f9081526020812093945091925b838310611df4575060209250010190565b600181602092949394548385870101520191019190611de3565b915050602093945060ff929192191683830152151560051b010190565b611e358154611d72565b9081611e3f575050565b81601f5f9311600114611e50575055565b81835260208320611e6c91601f0160051c810190600101611c57565b8082528160208120915555565b9060045482101561207257815f52600360205260405f2091600383019182549060ff8260081c1661205f57827fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d860206040518415158152a2156120505750600160ff1983541617825560018060a01b038354169260018101928354946002830195604051905f8854611f0a81611d72565b906001811690811561203b575060011461200a575b50915f939181859403925af13d15612005573d611f3b81611a98565b90611f496040519283611a77565b81525f60203d92013e5b15611fb757805461ff001916610100179055549154604051602080825291946001600160a01b0394909416937f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8928291611faf91830190611daa565b0390a4600190565b50611ffe7fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a689160018060a01b03905416935494604051918291602083526020830190611daa565b0390a45f90565b611f53565b9050885f5260205f205f905b82821061202757505082015f611f1f565b600181602092548488015201910190612016565b60ff191685525080151502830190505f611f1f565b60ff1916909155506001919050565b82631e38c17f60e11b5f5260045260245ffd5b5063767a083b60e01b5f5260045260245ffd5b80516020820120805f52600760205260ff60405f2054166120f5577f7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569916120f0915f52600760205260405f20600160ff19825416179055604051918291602083526020830190611b99565b0390a1565b63067138d360e11b5f5260045260245ffd5b9190601f811161211657505050565b611bec925f5260205f20906020601f840160051c83019310612140575b601f0160051c0190611c57565b9091508190612133565b9261216a611b049593612178938652608060208701526080860190611b99565b908482036040860152611b99565b916060818403910152611b99565b91610dc59261221b946121d161051c946121c3604051938492602084019660018060a01b0316875260408401526060808401526080830190611b99565b03601f198101835282611a77565b51902060405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152612213605c82611a77565b5190206123cb565b612223575f90565b600190565b5f52600160205260405f20805415611c52576001018054905f5b828110612250575050505f90565b600161225c8284611c95565b90549060031b1c14801561227f575b61227757600101612242565b505050600190565b61226b565b5f52600160205260405f20805415611c52576001018054905f5b8281106122ac575050505f90565b6122b68183611c95565b90549060031b1c600181149081156122d6575b506122775760010161229e565b60039150145f6122c9565b5f52600160205260405f20805415611c52576001018054905f5b828110612309575050505f90565b6123138183611c95565b90549060031b1c60018114908115612333575b50612277576001016122fb565b60029150145f612326565b5f52600160205260405f208054156123a757600101908154915f5b83811061236857505050505f90565b6123728183611c95565b90549060031b1c836001821491821561239d575b505061239457600101612359565b50505050600190565b149050835f612386565b50505f90565b60025f54146123bc5760025f55565b633ee5aeb560e01b5f5260045ffd5b81519190604183036123fb576123f49250602082015190606060408401519301515f1a90612479565b9192909190565b50505f9160029190565b60048110156124655780612417575050565b6001810361242e5763f645eedf60e01b5f5260045ffd5b60028103612449575063fce698f760e01b5f5260045260245ffd5b6003146124535750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116124f0579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa156107df575f516001600160a01b038116156124e657905f905f90565b505f906001905f90565b5050505f916003919056fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "1692:9155:157:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;;;;;;;;;;9420:20:59;1692:9155:157;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8631:36;1692:9155;;;:::i;:::-;8631:36;;:::i;:::-;1692:9155;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;;;;4809:7:60;1692:9155:157;;;;;;;;;;;;4846:24:60;;1692:9155:157;4884:24:60;;;1692:9155:157;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;4999:21:60;;;;1692:9155:157;;4963:22:60;;;;1692:9155:157;;;;;;;;4922:27:60;;1692:9155:157;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1692:9155:157;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1692:9155:157;;;;;;;4301:16:237;1692:9155:157;-1:-1:-1;;;;;1692:9155:157;;4724:16:237;;:34;;;;1692:9155:157;4803:1:237;4788:16;:50;;;;1692:9155:157;4853:13:237;:30;;;;1692:9155:157;4849:91:237;;;-1:-1:-1;;1692:9155:157;;4803:1:237;1692:9155:157;-1:-1:-1;;;;;;;;;;;1692:9155:157;;4977:67:237;;1692:9155:157;;3957:25;1692:9155;;;;3953:58;;-1:-1:-1;;1692:9155:157;4803:1:237;1692:9155:157;3957:25;1692:9155;-1:-1:-1;;;;;1692:9155:157;4068:34;;4064:76;;1692:9155;-1:-1:-1;;;;;;;;;;;1692:9155:157;;;;7148:18:237;7144:73;;1692:9155:157;;;4244:32;;1692:9155;;;;4244:32;;;1692:9155;4244:32;;:::i;:::-;1692:9155;4234:43;;1692:9155;;;;4803:1:237;1692:9155:157;;;;;;;;;;;;:::i;:::-;4803:1:237;1692:9155:157;;;;;4803:1:237;1692:9155:157;;4803:1:237;1692:9155:157;;;4471:23;1692:9155;;;;:::i;:::-;;;;;;;;;;4803:1:237;1692:9155:157;;;;;;;;;;4803:1:237;1692:9155:157;;4803:1:237;4576:22:157;1692:9155;;;4576:22;1692:9155;4803:1:237;1692:9155:157;;4576:22;1692:9155;;4677:52;1692:9155;;;;4677:52;:::i;:::-;4803:1:237;1692:9155:157;;;4793:44;;1692:9155;4793:44;;5064:101:237;;1692:9155:157;5064:101:237;1692:9155:157;5140:14:237;1692:9155:157;;;-1:-1:-1;;;;;;;;;;;1692:9155:157;;-1:-1:-1;;;;;;;;;;;1692:9155:157;4803:1:237;1692:9155:157;;5140:14:237;1692:9155:157;;4803:1:237;1692:9155:157;;;;;;;;;;;;;;7144:73:237;7189:17;;;1692:9155:157;7189:17:237;1692:9155:157;;7189:17:237;4064:76:157;4111:29;;;1692:9155;4111:29;1692:9155;;4111:29;3953:58;3991:20;;;1692:9155;3991:20;1692:9155;;3991:20;4977:67:237;-1:-1:-1;;1692:9155:157;;;-1:-1:-1;;;;;;;;;;;1692:9155:157;4977:67:237;;;4849:91;4906:23;;;1692:9155:157;4906:23:237;1692:9155:157;;4906:23:237;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:237;;4724:34;;;-1:-1:-1;4724:34:237;;1692:9155:157;;;;;;-1:-1:-1;;1692:9155:157;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;3927:8:220;3871:27;1692:9155:157;;;;;;;;:::i;:::-;;;3871:27:220;:::i;:::-;3927:8;;;;;:::i;:::-;1692:9155:157;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;786:1:59;1692:9155:157;;;;;;-1:-1:-1;;1692:9155:157;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;:::i;:::-;2466:103:215;;;;;:::i;:::-;-1:-1:-1;;;;;1692:9155:157;;7888:17:59;;7884:58;;1692:9155:157;;;;;;7991:11:59;1692:9155:157;;;;;;;-1:-1:-1;;;;;;1692:9155:157;;;;;-1:-1:-1;8034:30:59;;1692:9155:157;;;;;8083:29:59;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;8292:51:59;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7991:11:59;1692:9155:157;;;;;;;8130:33:59;;1692:9155:157;;-1:-1:-1;;1692:9155:157;;;;;;;8208:33:59;1692:9155:157;;-1:-1:-1;;1692:9155:157;;;;;8259:17:59;;;:::i;:::-;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;8292:51:59;;;;1692:9155:157;;;7993:12;;:::i;:::-;1692:9155;;;7982:24;;1692:9155;;;;;;;;;;7982:24;;;1692:9155;7982:24;;:::i;:::-;1692:9155;7972:35;;1692:9155;8631:36;;;;:::i;:::-;8057:52;;;8125:19;;;1692:9155;8053:230;8293:74;;8053:230;1692:9155;;;;;;;;8293:74;1692:9155;;-1:-1:-1;;;8325:31:157;;1692:9155;8325:31;;1692:9155;;;;;;;;;;;;;-1:-1:-1;8325:4:157;:31;;;;;;;1692:9155;8325:31;;;8293:74;;;;;;8325:31;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;1692:9155;;;;;;;;;8053:230;8180:4;8165:20;;:72;;;;8053:230;8161:122;;8053:230;8161:122;8253:19;1692:9155;8053:230;;8165:72;8631:36;;;;:::i;:::-;8165:72;;;1692:9155;;;;;;;;;;2284:27:60;;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;8292:51:59;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7991:11:59;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1692:9155:157;;-1:-1:-1;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;7884:58:59;7914:28;;;1692:9155:157;7914:28:59;1692:9155:157;;7914:28:59;1692:9155:157;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2821:12;;:::i;:::-;-1:-1:-1;;;;;1692:9155:157;2845:4;2821:29;:129;;;;1692:9155;2802:162;2785:249;;2845:4;2052:24:60;;2048:198;;1692:9155:157;;;;2284:27:60;;1692:9155:157;;;;;;;;;;2284:27:60;;;1692:9155:157;2284:27:60;;:::i;:::-;1692:9155:157;2274:38:60;;1692:9155:157;;;;2322:7:60;1692:9155:157;;;;;;;;;2363:23:60;;1692:9155:157;;;;;2274:38:60;;1692:9155:157;2406:26:60;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:7:60;1692:9155:157;;;;;;2455:21:60;1692:9155:157;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:7:60;1692:9155:157;;2322:7:60;1692:9155:157;;;2494:20:60;1692:9155:157;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:7:60;1692:9155:157;;;;;2536:23:60;;1692:9155:157;-1:-1:-1;;;;;1692:9155:157;2536:34:60;;;;2689:70;1692:9155:157;2689:70:60;1692:9155:157;;;;2586:14:60;1692:9155:157;;2586:36:60;1692:9155:157;;;;2586:36:60;:::i;:::-;1692:9155:157;;;2322:7:60;1692:9155:157;;2536:23:60;1692:9155:157;;;2636:23:60;1692:9155:157;;;;;;;;;;;;2689:70:60;;;;;:::i;:::-;;;;2532:346;1692:9155:157;;;;;;2532:346:60;2795:72;1692:9155:157;2795:72:60;1692:9155:157;;;2795:72:60;;;;;:::i;:::-;;;;2532:346;;1692:9155:157;;;;;;;;;;2284:27:60;;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26:60;1692:9155:157;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;2284:27:60;;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26:60;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:27:60;;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:26:60;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2048:198:60;1692:9155:157;;-1:-1:-1;;;2117:87:60;;2845:4:157;1692:9155;2117:87:60;;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1692:9155:157;;;;;;;:::i;:::-;2117:87:60;;;;;;;;;;1692:9155:157;2117:87:60;;;2048:198;1692:9155:157;2048:198:60;1692:9155:157;;;-1:-1:-1;;;1692:9155:157;;;;;;;;;;;;-1:-1:-1;;;1692:9155:157;;;;;;;2117:87:60;;;;1692:9155:157;2117:87:60;1692:9155:157;2117:87:60;;;;;;;:::i;:::-;;;;2785:249:157;2996:27;;;1692:9155;2996:27;1692:9155;;2996:27;2821:129;2909:12;8631:36;2909:12;;:::i;:::-;1692:9155;;;2898:24;;1692:9155;;;;;;;;;;2898:24;;;1692:9155;2898:24;;:::i;:::-;1692:9155;2888:35;;8631:36;:::i;:::-;2821:129;;1692:9155;;;;;;-1:-1:-1;;1692:9155:157;;;;;;2518:12;;:::i;:::-;-1:-1:-1;;;;;1692:9155:157;2542:4;2518:29;:127;;;;1692:9155;2499:160;2482:246;;1692:9155;;;;4809:7:60;1692:9155:157;;;;;;;;;;;3067:3:62;;1692:9155:157;;;;;;4999:21:60;;;1692:9155:157;;;;;4963:22:60;;;1692:9155:157;;;;;;;;4922:27:60;;1692:9155:157;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;3067:3:62;:::i;:::-;1692:9155:157;;;;;;;2482:246;2691:26;;;1692:9155;2691:26;1692:9155;;2691:26;2518:127;2606:12;8631:36;2606:12;;:::i;:::-;1692:9155;;;2595:24;;1692:9155;;;;;;;;;;2595:24;;;1692:9155;2595:24;;:::i;:::-;1692:9155;2585:35;;8631:36;:::i;:::-;2518:127;;1692:9155;;;;;;-1:-1:-1;;1692:9155:157;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;:::i;:::-;2518:12;;:::i;:::-;-1:-1:-1;;;;;1692:9155:157;2542:4;2518:29;:127;;;;1692:9155;2499:160;2482:246;;5119:34;1692:9155;;;;;;:::i;5119:34::-;1692:9155;2518:127;2606:12;8631:36;2606:12;;:::i;8631:36::-;2518:127;;1692:9155;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;676:1:59;1692:9155:157;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;9693:14:59;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;728:1:59;1692:9155:157;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;5290:14:60;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;1830:17:236;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;;;;;;;;;;;6775:11;1692:9155;;;;;;;6805:22;;;6801:90;;1692:9155;6775:11;6905:27;;1692:9155;;;;6901:97;;7054:12;;:::i;:::-;1692:9155;;;7043:24;;1692:9155;;;;;;;;;;7043:24;;;1692:9155;7043:24;;:::i;:::-;1692:9155;7033:35;;1692:9155;;7115:4;-1:-1:-1;;;;;1692:9155:157;;;7082:38;7115:4;;8631:36;;;:::i;:::-;7140:53;7136:125;;1692:9155;7078:340;3367:1624:59;7078:340:157;;2466:103:215;;:::i;:::-;3367:1624:59;:::i;:::-;1692:9155:157;;;;;;;;;;;7078:340;8631:36;;;:::i;:::-;7295:49;7291:117;;1692:9155;7078:340;3367:1624:59;7078:340:157;;;7291:117;7371:22;;;1692:9155;7371:22;1692:9155;;7371:22;6901:97;6941:57;;;;1692:9155;6941:57;1692:9155;;;;6941:57;6801:90;6836:55;;;;1692:9155;6836:55;1692:9155;;;;6836:55;1692:9155;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;:::i;:::-;;;1830:17:236;-1:-1:-1;;;;;1692:9155:157;;;;;2054:31:236;;;;1692:9155:157;;;;;;;;;;:::i;:::-;2518:12;;;:::i;:::-;-1:-1:-1;;;;;1692:9155:157;2542:4;2518:29;:127;;;;1692:9155;2499:160;2482:246;;1692:9155;;;5484:5:59;1692:9155:157;;;;;;;5484:23:59;5480:66;;1692:9155:157;;;5484:5:59;1692:9155:157;;5484:5:59;1692:9155:157;;;5586:20:59;1692:9155:157;;;;;5736:18:59;;;;;;5716:170;-1:-1:-1;;;5899:33:59;;5895:130;;-1:-1:-1;;1692:9155:157;;;;;;;6093:22:59;6118:28;1692:9155:157;6118:28:59;;;:::i;:::-;1692:9155:157;;;;;;6093:22:59;;;:::i;:::-;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6275:14:59;1692:9155:157;;;;;;;;;;;6424:13:59;1692:9155:157;6439:25:59;;;;;;6419:176;-1:-1:-1;6725:29:59;;;6721:165;;6419:176;1692:9155:157;;;;;;;;5484:5:59;1692:9155:157;;6275:14:59;1692:9155:157;;;6914:19:59;1692:9155:157;;;6948:20:59;6944:69;;6419:176;1692:9155:157;;7028:35:59;;1692:9155:157;7028:35:59;;5484:5;1692:9155:157;;;6944:69:59;1692:9155:157;;;5484:5:59;1692:9155:157;;;6275:14:59;1692:9155:157;;;;;;5484:5:59;1692:9155:157;;;;;;;;;;6944:69:59;1692:9155:157;;;;6944:69:59;;1692:9155:157;;;;;;;;;;;;;:::i;:::-;;;;;6721:165:59;-1:-1:-1;;1692:9155:157;;;;;;;;6798:42:59;1692:9155:157;6770:25:59;6798:42;6854:19;6798:42;;;:::i;1692:9155:157:-;;;6854:19:59;:::i;:::-;6721:165;;;;1692:9155:157;;;;;;;;;;;;6466:3:59;6489:18;;;;;:::i;:::-;1692:9155:157;;;;;;6489:26:59;6485:100;;5484:5;1692:9155:157;6424:13:59;;6485:100;6535:12;-1:-1:-1;6565:5:59;;;1692:9155:157;;;;;;;;;;;;5895:130:59;5955:59;;;;;;1692:9155:157;5955:59:59;1692:9155:157;;;;;;5955:59:59;5756:3;5779:11;;;;;:::i;:::-;1692:9155:157;;;;;;5779:23:59;5775:101;;5484:5;1692:9155:157;5721:13:59;;5775:101;5822:16;-1:-1:-1;5856:5:59;;;5480:66;5516:30;;;1692:9155:157;5516:30:59;1692:9155:157;;;;5516:30:59;2518:127:157;2606:12;8631:36;2606:12;;:::i;8631:36::-;2518:127;;1692:9155;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;2821:12;;:::i;:::-;-1:-1:-1;;;;;1692:9155:157;2845:4;2821:29;:129;;;;1692:9155;2802:162;2785:249;;1692:9155;;;3459:7:60;1692:9155:157;;;;;;3496:11:60;;3492:95;;1692:9155:157;;;;3651:14:60;1692:9155:157;;;;;;3690:175:60;;1692:9155:157;;;3651:14:60;1692:9155:157;;;3697:34:60;1692:9155:157;;;;3697:34:60;:::i;:::-;1692:9155:157;;;;;;3697:46:60;;;3759:12;;;:::i;:::-;3790:25;;;3690:175;3786:69;3835:5;3690:175;1692:9155:157;;;3651:14:60;1692:9155:157;;;;;;;;;;;;;;;3912:39:60;3875:34;3912:39;1692:9155:157;3912:39:60;;:::i;:::-;1692:9155:157;;;;;;;;;;3651:14:60;1692:9155:157;;;;;3875:34:60;:::i;1692:9155:157:-;;;;;;3651:14:60;1692:9155:157;;3961:26:60;1692:9155:157;;;3961:26:60;:::i;:::-;1692:9155:157;;;;3459:7:60;1692:9155:157;;;;;;;;;;4073:24:60;;1692:9155:157;4111:24:60;;;1692:9155:157;;;;;;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;4005:252:60;;1692:9155:157;;;;;;4226:21:60;;;1692:9155:157;;;4190:22:60;;;1692:9155:157;;;;;;4149:27:60;1692:9155:157;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;4005:252:60;;;1692:9155:157;;3459:7:60;1692:9155:157;;3459:7:60;1692:9155:157;;;;;;;;;;;;4111:24:60;1692:9155:157;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3459:7:60;1692:9155:157;;;;;;;:::i;:::-;;;;;;;;;;;;;3697:46:60;;;;3492:95;1692:9155:157;;-1:-1:-1;;;3523:53:60;;1692:9155:157;;3523:53:60;;1692:9155:157;;;;;;;;;;;-1:-1:-1;;;1692:9155:157;;;;3523:53:60;;;2821:129:157;2909:12;8631:36;2909:12;;:::i;8631:36::-;2821:129;;1692:9155;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;410:45:62;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;;:::i;:::-;;;;;;2208:15:62;-1:-1:-1;1692:9155:157;2194:13:62;1692:9155:157;;;;-1:-1:-1;1692:9155:157;;;2099:132:62;;1692:9155:157;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;;;2518:12;;:::i;:::-;-1:-1:-1;;;;;1692:9155:157;2542:4;2518:29;:127;;;;1692:9155;2499:160;2482:246;;2156:9:59;;2152:39;;1692:9155:157;;;;;;;;;;;2206:23:59;2202:610;2206:23;;;1692:9155:157;;;;;;;;;;2321:20:59;1692:9155:157;;2382:18:59;;;;;;1692:9155:157;;;;;;;;;;;;2599:20:59;1692:9155:157;;;;-1:-1:-1;;;1692:9155:157;;;;;;;;;;;;;;;;;:::i;:::-;;;2202:610:59;1692:9155:157;;;2822:14:59;1692:9155:157;;2822:35:59;1692:9155:157;;;;2822:35:59;:::i;:::-;1692:9155:157;;2872:34:59;;1692:9155:157;2872:34:59;;1692:9155:157;;;;2402:3:59;1692:9155:157;;;;;;;2429:23:59;1692:9155:157;;;;;2429:20:59;:23;:::i;:::-;1692:9155:157;;;;;;2429:35:59;2425:147;;1692:9155:157;;2367:13:59;;2425:147;2495:58;;;;;;1692:9155:157;2495:58:59;1692:9155:157;;;;;;2495:58:59;2202:610;1692:9155:157;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2724:20:59;1692:9155:157;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2771:19:59;1692:9155:157;;;2771:19:59;1692:9155:157;2202:610:59;;1692:9155:157;;;;;;;;;;;;;;;;2152:39:59;2174:17;;;1692:9155:157;2174:17:59;1692:9155:157;;2174:17:59;2518:127:157;2606:12;8631:36;2606:12;;:::i;8631:36::-;2518:127;;1692:9155;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;;;;;;;;;;;;9142:19:59;;;1692:9155:157;;;;;;;;;9120:20:59;1692:9155:157;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10491:45:157;;;:89;;;;1692:9155;10491:145;;;;1692:9155;10491:191;;;;1692:9155;10491:243;;;;1692:9155;;;;;;;10491:243;-1:-1:-1;;;1134:40:246;;-1:-1:-1;10491:243:157;;;:191;-1:-1:-1;;;10640:42:157;;;-1:-1:-1;10491:191:157;;:145;-1:-1:-1;;;10596:40:157;;;-1:-1:-1;10491:145:157;;:89;-1:-1:-1;;;10540:40:157;;;-1:-1:-1;10491:89:157;;1692:9155;;;;;;;;;;;;;;-1:-1:-1;1692:9155:157;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;:::o;:::-;;;2284:27:60;;1692:9155:157;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;:::o;:::-;-1:-1:-1;;;;;1692:9155:157;;;;;;-1:-1:-1;;1692:9155:157;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1692:9155:157;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1692:9155:157;;;;;;;;-1:-1:-1;;1692:9155:157;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1692:9155:157;;-1:-1:-1;1692:9155:157;;-1:-1:-1;1692:9155:157;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;-1:-1:-1;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1412:521:62:-;;;;;1748:52;1412:521;1748:52;:::i;:::-;1747:53;1743:96;;1907:19;;1692:9155:157;;;;;2208:15:62;-1:-1:-1;1692:9155:157;2194:13:62;1692:9155:157;;;;-1:-1:-1;1692:9155:157;;;2099:132:62;;1907:19;1906:20;1412:521;:::o;1743:96::-;1816:12;1692:9155:157;1816:12:62;:::o;1692:9155:157:-;;;;;;;;:::o;:::-;;;;;;;;;;;2206:5:59;1692:9155:157;;;2206:5:59;1692:9155:157;;;;;:::o;:::-;;;-1:-1:-1;1692:9155:157;2206:5:59;1692:9155:157;-1:-1:-1;1692:9155:157;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1692:9155:157;;-1:-1:-1;1692:9155:157;;;-1:-1:-1;1692:9155:157;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;1692:9155:157;;;;;;;;;;;;;;;:::i;:::-;;;:::o;2329:429:236:-;2545:10;1830:17;-1:-1:-1;;;;;1692:9155:157;2054:31:236;;2526:71;;2329:429;2522:230;;;1692:9155:157;;2435:8:236;1692:9155:157;2435:8:236;1692:9155:157;;;;;;;;2613:72:236:o;2522:230::-;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;;1692:9155:157;-1:-1:-1;;1692:9155:157;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;1692:9155:157;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1692:9155:157;;;;;;;;-1:-1:-1;1692:9155:157;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;-1:-1:-1;1692:9155:157;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;3367:1624:59:-;;3493:15;1692:9155:157;3486:22:59;;;3482:80;;1692:9155:157;-1:-1:-1;1692:9155:157;3602:11:59;1692:9155:157;;;-1:-1:-1;1692:9155:157;3632:18:59;3602:11;3632:18;;1692:9155:157;;;;;;;;;3628:78:59;;1692:9155:157;4119:23:59;1692:9155:157;;;;;;;;4119:23:59;4153:742;;;1692:9155:157;4202:4:59;1692:9155:157;;;;;;;;;;;;;;;;4371:15:59;4202:4;4371:15;;1692:9155:157;;;4389:14:59;;;;1692:9155:157;;;;-1:-1:-1;1692:9155:157;;;;;:::i;:::-;;4202:4:59;1692:9155:157;;;4202:4:59;;;;1692:9155:157;;;;;;4345:59:59;;-1:-1:-1;4345:59:59;;;;;;;;;1692:9155:157;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;-1:-1:-1;1692:9155:157;;;;;;4418:375:59;;;1692:9155:157;;-1:-1:-1;;1692:9155:157;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1692:9155:157;;;;;4548:60:59;;1692:9155:157;;;;;;;;:::i;:::-;4548:60:59;;;4202:4;4626:11;:::o;4418:375::-;1692:9155:157;;4681:67:59;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4681:67:59;;;-1:-1:-1;4766:12:59;:::o;1692:9155:157:-;;;;;;;-1:-1:-1;1692:9155:157;;-1:-1:-1;1692:9155:157;-1:-1:-1;1692:9155:157;;;;;;;-1:-1:-1;;1692:9155:157;;-1:-1:-1;1692:9155:157;;;4202:4:59;1692:9155:157;;;;;;;;;;;;;;;-1:-1:-1;;1692:9155:157;;;-1:-1:-1;1692:9155:157;;;;;;;-1:-1:-1;;1692:9155:157;;4153:742:59;-1:-1:-1;;1692:9155:157;;;;-1:-1:-1;4911:4:59;;3367:1624;-1:-1:-1;3367:1624:59:o;3628:78::-;3659:47;;;;-1:-1:-1;3659:47:59;3493:15;1692:9155:157;;-1:-1:-1;3659:47:59;3482:80;3517:45;;;;-1:-1:-1;3517:45:59;3493:15;1692:9155:157;;-1:-1:-1;3517:45:59;2345:305:62;1692:9155:157;;;;;2453:20:62;1692:9155:157;-1:-1:-1;1692:9155:157;2487:13:62;1692:9155:157;;;;-1:-1:-1;1692:9155:157;;;2483:75:62;;2620:23;1692:9155:157;;;-1:-1:-1;1692:9155:157;2487:13:62;1692:9155:157;;;-1:-1:-1;1692:9155:157;2600:4:62;1692:9155:157;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2620:23:62;;;2345:305::o;2483:75::-;2524:34;;;-1:-1:-1;2524:34:62;;1692:9155:157;;-1:-1:-1;2524:34:62;1692:9155:157;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;1692:9155:157;;-1:-1:-1;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;943:975:61:-;;3927:8:220;943:975:61;8631:36:157;943:975:61;1219:39;3871:27:220;943:975:61;1692:9155:157;;;1219:39:61;;;;;;1692:9155:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1219:39:61;2284:27:60;;1219:39:61;;;;;;:::i;:::-;1692:9155:157;1209:50:61;;1692:9155:157;;1219:39:61;1393:62;;1692:9155:157;;;;;;;;;1393:62:61;;;;;;:::i;:::-;1692:9155:157;1383:73:61;;3871:27:220;:::i;8631:36:157:-;1819:70:61;;1692:9155:157;943:975:61;:::o;1819:70::-;1874:4;1867:11;:::o;9848:549:59:-;1692:9155:157;;676:1:59;1692:9155:157;;;;;;;10005:10:59;10001:87;;676:1;10122:10;1692:9155:157;;10154:13:59;1692:9155:157;10169:18:59;;;;;;10378:12;;;1692:9155:157;9848:549:59;:::o;10189:3::-;676:1;10226:13;;;;:::i;:::-;1692:9155:157;;;;;;10257:33:59;:56;;;;10189:3;10253:106;;676:1;1692:9155:157;10154:13:59;;10253:106;10333:11;;;676:1;10333:11;:::o;10257:56::-;;;9848:549;1692:9155:157;;9980:5:59;1692:9155:157;;;;;;;10005:10:59;10001:87;;9980:5;10122:10;1692:9155:157;;10154:13:59;1692:9155:157;10169:18:59;;;;;;10378:12;;;1692:9155:157;9848:549:59;:::o;10189:3::-;10226:13;;;;:::i;:::-;1692:9155:157;;;786:1:59;1692:9155:157;;9980:5:59;10257:33;;:56;;;;;10189:3;10253:106;;;9980:5;1692:9155:157;10154:13:59;;10257:56;786:1;10294:19;;;10257:56;;;9848:549;1692:9155:157;;9980:5:59;1692:9155:157;;;;;;;10005:10:59;10001:87;;9980:5;10122:10;1692:9155:157;;10154:13:59;1692:9155:157;10169:18:59;;;;;;10378:12;;;1692:9155:157;9848:549:59;:::o;10189:3::-;10226:13;;;;:::i;:::-;1692:9155:157;;;;;;9980:5:59;10257:33;;:56;;;;;10189:3;10253:106;;;9980:5;1692:9155:157;10154:13:59;;10257:56;728:1;10294:19;;;10257:56;;;9848:549;1692:9155:157;;9980:5:59;1692:9155:157;;;;;;;10005:10:59;10001:87;;9980:5;10122:10;1692:9155:157;;;10154:13:59;1692:9155:157;10169:18:59;;;;;;10378:12;;;;1692:9155:157;9848:549:59;:::o;10189:3::-;10226:13;;;;:::i;:::-;1692:9155:157;;;;;;10257:33:59;9980:5;10257:33;;:56;;;;;10189:3;10253:106;;;;9980:5;1692:9155:157;10154:13:59;;10253:106;10333:11;;;;9980:5;10333:11;:::o;10257:56::-;10294:19;;-1:-1:-1;10257:56:59;;;;10001:87;10065:12;;1692:9155:157;10065:12:59;:::o;2575:307:215:-;728:1:59;2702:7:215;1692:9155:157;2702:18:215;2698:86;;728:1:59;2702:7:215;1692:9155:157;2575:307:215:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;2129:778:220;1692:9155:157;;;2129:778:220;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:220;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;7280:532::-;1692:9155:157;;;;;;7366:29:220;;;7411:7;;:::o;7362:444::-;1692:9155:157;7462:38:220;;1692:9155:157;;7523:23:220;;;7375:20;7523:23;1692:9155:157;7375:20:220;7523:23;7458:348;7576:35;7567:44;;7576:35;;7634:46;;;;7375:20;7634:46;1692:9155:157;;;7375:20:220;7634:46;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;7763:32;;;7375:20;7763:32;1692:9155:157;;;7375:20:220;7763:32;1692:9155:157;;;;7375:20:220;1692:9155:157;;;;;7375:20:220;1692:9155:157;5203:1551:220;;;6283:66;6270:79;;6266:164;;1692:9155:157;;;;;;-1:-1:-1;1692:9155:157;;;;;;;;;;;;;;;;;;;6541:24:220;;;;;;;;;-1:-1:-1;6541:24:220;-1:-1:-1;;;;;1692:9155:157;;6579:20:220;6575:113;;6698:49;-1:-1:-1;6698:49:220;-1:-1:-1;5203:1551:220;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:220;6541:24;6615:62;-1:-1:-1;6615:62:220;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "57669": [
        {
          "start": 4202,
          "length": 32
        },
        {
          "start": 4541,
          "length": 32
        },
        {
          "start": 7399,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ACTION_KEY_PURPOSE()": "83f4f1de",
    "CLAIM_SIGNER_KEY_PURPOSE()": "bfb3de8b",
    "ENCRYPTION_KEY_PURPOSE()": "4f9202af",
    "MANAGEMENT_KEY_PURPOSE()": "95ce5797",
    "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
    "addKey(bytes32,uint256,uint256)": "1d381240",
    "approve(uint256,bool)": "747442d3",
    "execute(address,uint256,bytes)": "b61d27f6",
    "getClaim(bytes32)": "c9100bcb",
    "getClaimIdsByTopic(uint256)": "80e9e9e1",
    "getKey(bytes32)": "12aaac70",
    "getKeyPurposes(bytes32)": "fb307b34",
    "getKeysByPurpose(uint256)": "9010f726",
    "getRecoveredAddress(bytes,bytes32)": "c3b129e3",
    "initialize(address)": "c4d66de8",
    "isClaimRevoked(bytes)": "2646b264",
    "isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
    "isTrustedForwarder(address)": "572b6c05",
    "keyHasPurpose(bytes32,uint256)": "d202158d",
    "removeClaim(bytes32)": "4eee424a",
    "removeKey(bytes32,uint256)": "53d413c5",
    "revokeClaim(bytes32)": "a5babbb1",
    "revokeClaimBySignature(bytes)": "9f7f9edd",
    "revokedClaims(bytes32)": "3f1f5e4c",
    "supportsInterface(bytes4)": "01ffc9a7",
    "trustedForwarder()": "7da0a877"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotExecuteToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"signatureHash\",\"type\":\"bytes32\"}],\"name\":\"ClaimAlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"}],\"name\":\"ClaimDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"}],\"name\":\"ClaimNotValidAccordingToIssuer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"name\":\"ExecutionAlreadyPerformed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"name\":\"ExecutionIdDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialManagementKey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IssuerCannotBeZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"}],\"name\":\"KeyAlreadyHasThisPurpose\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KeyCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"KeyDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"}],\"name\":\"KeyDoesNotHaveThisPurpose\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"name\":\"ReplicatedExecutionAlreadyPerformed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"name\":\"ReplicatedExecutionIdDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderLacksActionKey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderLacksClaimSignerKey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderLacksManagementKey\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACTION_KEY_PURPOSE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLAIM_SIGNER_KEY_PURPOSE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ENCRYPTION_KEY_PURPOSE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGEMENT_KEY_PURPOSE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_toApprove\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"claimValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"revokedClaims\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This contract is intended to be deployed once and then used as the logic implementation target for multiple      `ATKIdentityProxy` contracts. It inherits `ERC734` for key management, `ERC735` for claim management,      `ERC165Upgradeable` for interface detection, and `ERC2771ContextUpgradeable` for meta-transactions.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Adds or updates a claim. Requires CLAIM_SIGNER_KEY purpose from the sender.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a key with a specific purpose and type. Requires MANAGEMENT_KEY purpose.\"},\"approve(uint256,bool)\":{\"details\":\"Approves or disapproves an execution.      Requires MANAGEMENT_KEY if the execution targets the identity itself.      Requires ACTION_KEY if the execution targets an external contract.\"},\"constructor\":{\"details\":\"Initializes ERC2771 context with the provided forwarder.      The main identity initialization (setting the first management key) is done via `initializeATKIdentity`.\"},\"execute(address,uint256,bytes)\":{\"details\":\"Initiates an execution. If the sender has MANAGEMENT_KEY, or ACTION_KEY (for external calls),      the execution is auto-approved.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic.\"},\"getKey(bytes32)\":{\"details\":\"See {IERC734-getKey}. Returns the purposes, key type, and the key itself for a given `_key` hash.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"See {IERC734-getKeyPurposes}. Returns the list of purposes associated with a `_key`.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"See {IERC734-getKeysByPurpose}. Returns an array of key hashes that have the given `_purpose`.\"},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"initialize(address)\":{\"details\":\"This function is intended to be called only once by a proxy contract via delegatecall.      It sets the initial management key for this identity and initializes ERC165 support.      This replaces the old `__Identity_init` call.\",\"params\":{\"initialManagementKey\":\"The address to be set as the initial management key for this identity.\"}},\"isClaimRevoked(bytes)\":{\"details\":\"Checks if a claim is revoked\",\"params\":{\"_sig\":\"The signature of the claim to check\"},\"returns\":{\"_0\":\"true if the claim is revoked, false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid by first checking the parent implementation and then verifying it's not revoked\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"claimValid\":\"true if the claim is valid and not revoked, false otherwise\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Requires CLAIM_SIGNER_KEY purpose from the sender.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes a purpose from a key. If it's the last purpose, the key is removed. Requires MANAGEMENT_KEY purpose.\"},\"revokeClaim(bytes32)\":{\"details\":\"Revokes a claim by its ID\",\"params\":{\"_claimId\":\"The ID of the claim to revoke\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revokes a claim by its signature\",\"params\":{\"signature\":\"The signature of the claim to revoke\"}},\"supportsInterface(bytes4)\":{\"details\":\"It declares support for `IIdentity`, `IERC734`, `IERC735` (components of `IIdentity`),      and `IERC165` itself. It chains to `ERC165Upgradeable.supportsInterface`.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"title\":\"ATK Identity Implementation Contract (Logic for Wallet Identities)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the `ATKIdentityImplementation`.\"},\"initialize(address)\":{\"notice\":\"Initializes the ATKIdentityImplementation state.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if the contract supports a given interface ID.\"}},\"notice\":\"This contract provides the upgradeable logic for standard on-chain identities associated with user wallets         within the ATK Protocol. It implements `IIdentity` using local `ERC734` and `ERC735` extensions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/identity-factory/identities/ATKIdentityImplementation.sol\":\"ATKIdentityImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/onchainid/extensions/ERC734.sol\":{\"keccak256\":\"0x676a583fc6b32a5993af0e8baf3a1ca93579885532c4ed9a2f3ca0743606d55a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://213208b13d89ef59ba526e30c0c1c60c15321529df7d6e474ebfa502401a86d9\",\"dweb:/ipfs/Qmd2wyAP9edecMP2Y4EAg4D1d3YNXmPHrgtBA8jwuLjUEu\"]},\"contracts/onchainid/extensions/ERC735.sol\":{\"keccak256\":\"0x5874b9616286df24b68fa2e298b67335b4089bf344d35567c40a4dae5721acdd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ede5c1ba0fe19997966b4e228608510dc693beaea60bee9e7ebd968d63d07f63\",\"dweb:/ipfs/QmfLhJtUnGo2P3CLRSRc1utJwWMvSamGPkX8o9yqW4ABx8\"]},\"contracts/onchainid/extensions/OnChainIdentity.sol\":{\"keccak256\":\"0xeda4e1d838b65dca9a052efbc6b8c88079bdf4e2e781d1451a900853c632dc79\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8f142ff97eb027c76da5d1e2493d40ba2b2cd6fff72fe175399141228a0b885\",\"dweb:/ipfs/QmUJNh3B8NpnQsqSsmi7P1XYpPcJgHvBxSGrFcJ9e6yzjH\"]},\"contracts/onchainid/extensions/OnChainIdentityWithRevocation.sol\":{\"keccak256\":\"0x9298913bd43675370bba092bcc93b0880216441259a6a60e7ca638591777f0ce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b8f0cb217a361cb16bbcd4b6db936b83b4d822109da74b0e9a7e3555ef4e44da\",\"dweb:/ipfs/QmR8Rn13fwsVGX7cN9yFe4oWZuJL5a6kocJpf32Teiiq1C\"]},\"contracts/system/identity-factory/identities/ATKIdentityImplementation.sol\":{\"keccak256\":\"0xa242c2cc467198fce9554f27c9715f4cf5ae52d9b795e27ab7f35c5e0f9207eb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://187baeabe375c57b4f4f25ab7886871757065052d0bc4e6d6ea898576aeb869f\",\"dweb:/ipfs/QmQxbGTRJwv4y6drj2qLcrs4mNLBLojWMyumcwRCwFMSqV\"]},\"contracts/system/identity-factory/identities/IATKIdentity.sol\":{\"keccak256\":\"0x51b82c502cec43a6167b1af2fe2c77d53cfdf9e04e1d5588d4325634f03d50d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cc237227e91d2037a1a71fad340bcaf97a4b800df2e52c56db5298c18482c30b\",\"dweb:/ipfs/QmX7oyqQeKFJegazXeaadPaRTPtx8goFd5QioLXrXtqzwc\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e\",\"dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb\",\"dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e\",\"dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8\",\"dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotExecuteToZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "signatureHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ClaimAlreadyRevoked"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ClaimDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ClaimNotValidAccordingToIssuer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAInvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureS"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ExecutionAlreadyPerformed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ExecutionIdDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialManagementKey"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IssuerCannotBeZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "purpose",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "KeyAlreadyHasThisPurpose"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "KeyCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "KeyDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "purpose",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "KeyDoesNotHaveThisPurpose"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ReplicatedExecutionAlreadyPerformed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ReplicatedExecutionIdDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SenderLacksActionKey"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SenderLacksClaimSignerKey"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SenderLacksManagementKey"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topic",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheme",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Executed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "purpose",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "keyType",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "KeyAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "purpose",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "keyType",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "KeyRemoved",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ACTION_KEY_PURPOSE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CLAIM_SIGNER_KEY_PURPOSE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENCRYPTION_KEY_PURPOSE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MANAGEMENT_KEY_PURPOSE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_topic",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_scheme",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_issuer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addClaim",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "claimId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_purpose",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_keyType",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addKey",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_toApprove",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "executionId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_claimId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_topic",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimIdsByTopic",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "claimIds",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKey",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "purposes",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "keyType",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKeyPurposes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "purposes",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_purpose",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKeysByPurpose",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "keys",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getRecoveredAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialManagementKey",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_sig",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isClaimRevoked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IIdentity",
              "name": "_identity",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "claimTopic",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isClaimValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "claimValid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_purpose",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "keyHasPurpose",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_claimId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_purpose",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeKey",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_claimId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeClaimBySignature"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "revokedClaims",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addClaim(uint256,uint256,address,bytes,bytes,string)": {
            "details": "Adds or updates a claim. Requires CLAIM_SIGNER_KEY purpose from the sender."
          },
          "addKey(bytes32,uint256,uint256)": {
            "details": "Adds a key with a specific purpose and type. Requires MANAGEMENT_KEY purpose."
          },
          "approve(uint256,bool)": {
            "details": "Approves or disapproves an execution.      Requires MANAGEMENT_KEY if the execution targets the identity itself.      Requires ACTION_KEY if the execution targets an external contract."
          },
          "constructor": {
            "details": "Initializes ERC2771 context with the provided forwarder.      The main identity initialization (setting the first management key) is done via `initializeATKIdentity`."
          },
          "execute(address,uint256,bytes)": {
            "details": "Initiates an execution. If the sender has MANAGEMENT_KEY, or ACTION_KEY (for external calls),      the execution is auto-approved."
          },
          "getClaimIdsByTopic(uint256)": {
            "details": "See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic."
          },
          "getKey(bytes32)": {
            "details": "See {IERC734-getKey}. Returns the purposes, key type, and the key itself for a given `_key` hash."
          },
          "getKeyPurposes(bytes32)": {
            "details": "See {IERC734-getKeyPurposes}. Returns the list of purposes associated with a `_key`."
          },
          "getKeysByPurpose(uint256)": {
            "details": "See {IERC734-getKeysByPurpose}. Returns an array of key hashes that have the given `_purpose`."
          },
          "getRecoveredAddress(bytes,bytes32)": {
            "details": "returns the address that signed the given data",
            "params": {
              "dataHash": "the data that was signed returns the address that signed dataHash and created the signature sig",
              "sig": "the signature of the data"
            }
          },
          "initialize(address)": {
            "details": "This function is intended to be called only once by a proxy contract via delegatecall.      It sets the initial management key for this identity and initializes ERC165 support.      This replaces the old `__Identity_init` call.",
            "params": {
              "initialManagementKey": "The address to be set as the initial management key for this identity."
            }
          },
          "isClaimRevoked(bytes)": {
            "details": "Checks if a claim is revoked",
            "params": {
              "_sig": "The signature of the claim to check"
            },
            "returns": {
              "_0": "true if the claim is revoked, false otherwise"
            }
          },
          "isClaimValid(address,uint256,bytes,bytes)": {
            "details": "Checks if a claim is valid by first checking the parent implementation and then verifying it's not revoked",
            "params": {
              "_identity": "the identity contract related to the claim",
              "claimTopic": "the claim topic of the claim",
              "data": "the data field of the claim",
              "sig": "the signature of the claim"
            },
            "returns": {
              "claimValid": "true if the claim is valid and not revoked, false otherwise"
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "removeClaim(bytes32)": {
            "details": "Removes a claim. Requires CLAIM_SIGNER_KEY purpose from the sender."
          },
          "removeKey(bytes32,uint256)": {
            "details": "Removes a purpose from a key. If it's the last purpose, the key is removed. Requires MANAGEMENT_KEY purpose."
          },
          "revokeClaim(bytes32)": {
            "details": "Revokes a claim by its ID",
            "params": {
              "_claimId": "The ID of the claim to revoke"
            }
          },
          "revokeClaimBySignature(bytes)": {
            "details": "Revokes a claim by its signature",
            "params": {
              "signature": "The signature of the claim to revoke"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "It declares support for `IIdentity`, `IERC734`, `IERC735` (components of `IIdentity`),      and `IERC165` itself. It chains to `ERC165Upgradeable.supportsInterface`."
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor for the `ATKIdentityImplementation`."
          },
          "initialize(address)": {
            "notice": "Initializes the ATKIdentityImplementation state."
          },
          "supportsInterface(bytes4)": {
            "notice": "Checks if the contract supports a given interface ID."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/identity-factory/identities/ATKIdentityImplementation.sol": "ATKIdentityImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/onchainid/extensions/ERC734.sol": {
        "keccak256": "0x676a583fc6b32a5993af0e8baf3a1ca93579885532c4ed9a2f3ca0743606d55a",
        "urls": [
          "bzz-raw://213208b13d89ef59ba526e30c0c1c60c15321529df7d6e474ebfa502401a86d9",
          "dweb:/ipfs/Qmd2wyAP9edecMP2Y4EAg4D1d3YNXmPHrgtBA8jwuLjUEu"
        ],
        "license": "GPL-3.0"
      },
      "contracts/onchainid/extensions/ERC735.sol": {
        "keccak256": "0x5874b9616286df24b68fa2e298b67335b4089bf344d35567c40a4dae5721acdd",
        "urls": [
          "bzz-raw://ede5c1ba0fe19997966b4e228608510dc693beaea60bee9e7ebd968d63d07f63",
          "dweb:/ipfs/QmfLhJtUnGo2P3CLRSRc1utJwWMvSamGPkX8o9yqW4ABx8"
        ],
        "license": "GPL-3.0"
      },
      "contracts/onchainid/extensions/OnChainIdentity.sol": {
        "keccak256": "0xeda4e1d838b65dca9a052efbc6b8c88079bdf4e2e781d1451a900853c632dc79",
        "urls": [
          "bzz-raw://f8f142ff97eb027c76da5d1e2493d40ba2b2cd6fff72fe175399141228a0b885",
          "dweb:/ipfs/QmUJNh3B8NpnQsqSsmi7P1XYpPcJgHvBxSGrFcJ9e6yzjH"
        ],
        "license": "GPL-3.0"
      },
      "contracts/onchainid/extensions/OnChainIdentityWithRevocation.sol": {
        "keccak256": "0x9298913bd43675370bba092bcc93b0880216441259a6a60e7ca638591777f0ce",
        "urls": [
          "bzz-raw://b8f0cb217a361cb16bbcd4b6db936b83b4d822109da74b0e9a7e3555ef4e44da",
          "dweb:/ipfs/QmR8Rn13fwsVGX7cN9yFe4oWZuJL5a6kocJpf32Teiiq1C"
        ],
        "license": "GPL-3.0"
      },
      "contracts/system/identity-factory/identities/ATKIdentityImplementation.sol": {
        "keccak256": "0xa242c2cc467198fce9554f27c9715f4cf5ae52d9b795e27ab7f35c5e0f9207eb",
        "urls": [
          "bzz-raw://187baeabe375c57b4f4f25ab7886871757065052d0bc4e6d6ea898576aeb869f",
          "dweb:/ipfs/QmQxbGTRJwv4y6drj2qLcrs4mNLBLojWMyumcwRCwFMSqV"
        ],
        "license": "GPL-3.0"
      },
      "contracts/system/identity-factory/identities/IATKIdentity.sol": {
        "keccak256": "0x51b82c502cec43a6167b1af2fe2c77d53cfdf9e04e1d5588d4325634f03d50d1",
        "urls": [
          "bzz-raw://cc237227e91d2037a1a71fad340bcaf97a4b800df2e52c56db5298c18482c30b",
          "dweb:/ipfs/QmX7oyqQeKFJegazXeaadPaRTPtx8goFd5QioLXrXtqzwc"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol": {
        "keccak256": "0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779",
        "urls": [
          "bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e",
          "dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol": {
        "keccak256": "0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e",
        "urls": [
          "bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb",
          "dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol": {
        "keccak256": "0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122",
        "urls": [
          "bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e",
          "dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol": {
        "keccak256": "0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862",
        "urls": [
          "bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8",
          "dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/ReentrancyGuard.sol": {
        "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
        "urls": [
          "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
          "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor for the `ATKIdentityImplementation`."
      },
      "initialize(address)": {
        "notice": "Initializes the ATKIdentityImplementation state."
      },
      "supportsInterface(bytes4)": {
        "notice": "Checks if the contract supports a given interface ID."
      }
    },
    "notice": "This contract provides the upgradeable logic for standard on-chain identities associated with user wallets         within the ATK Protocol. It implements `IIdentity` using local `ERC734` and `ERC735` extensions."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This contract is intended to be deployed once and then used as the logic implementation target for multiple      `ATKIdentityProxy` contracts. It inherits `ERC734` for key management, `ERC735` for claim management,      `ERC165Upgradeable` for interface detection, and `ERC2771ContextUpgradeable` for meta-transactions.",
    "methods": {
      "addClaim(uint256,uint256,address,bytes,bytes,string)": {
        "details": "Adds or updates a claim. Requires CLAIM_SIGNER_KEY purpose from the sender."
      },
      "addKey(bytes32,uint256,uint256)": {
        "details": "Adds a key with a specific purpose and type. Requires MANAGEMENT_KEY purpose."
      },
      "approve(uint256,bool)": {
        "details": "Approves or disapproves an execution.      Requires MANAGEMENT_KEY if the execution targets the identity itself.      Requires ACTION_KEY if the execution targets an external contract."
      },
      "constructor": {
        "details": "Initializes ERC2771 context with the provided forwarder.      The main identity initialization (setting the first management key) is done via `initializeATKIdentity`."
      },
      "execute(address,uint256,bytes)": {
        "details": "Initiates an execution. If the sender has MANAGEMENT_KEY, or ACTION_KEY (for external calls),      the execution is auto-approved."
      },
      "getClaimIdsByTopic(uint256)": {
        "details": "See {IERC735-getClaimIdsByTopic}. Returns an array of claim IDs associated with a specific topic."
      },
      "getKey(bytes32)": {
        "details": "See {IERC734-getKey}. Returns the purposes, key type, and the key itself for a given `_key` hash."
      },
      "getKeyPurposes(bytes32)": {
        "details": "See {IERC734-getKeyPurposes}. Returns the list of purposes associated with a `_key`."
      },
      "getKeysByPurpose(uint256)": {
        "details": "See {IERC734-getKeysByPurpose}. Returns an array of key hashes that have the given `_purpose`."
      },
      "getRecoveredAddress(bytes,bytes32)": {
        "details": "returns the address that signed the given data",
        "params": {
          "dataHash": "the data that was signed returns the address that signed dataHash and created the signature sig",
          "sig": "the signature of the data"
        }
      },
      "initialize(address)": {
        "details": "This function is intended to be called only once by a proxy contract via delegatecall.      It sets the initial management key for this identity and initializes ERC165 support.      This replaces the old `__Identity_init` call.",
        "params": {
          "initialManagementKey": "The address to be set as the initial management key for this identity."
        }
      },
      "isClaimRevoked(bytes)": {
        "details": "Checks if a claim is revoked",
        "params": {
          "_sig": "The signature of the claim to check"
        },
        "returns": {
          "_0": "true if the claim is revoked, false otherwise"
        }
      },
      "isClaimValid(address,uint256,bytes,bytes)": {
        "details": "Checks if a claim is valid by first checking the parent implementation and then verifying it's not revoked",
        "params": {
          "_identity": "the identity contract related to the claim",
          "claimTopic": "the claim topic of the claim",
          "data": "the data field of the claim",
          "sig": "the signature of the claim"
        },
        "returns": {
          "claimValid": "true if the claim is valid and not revoked, false otherwise"
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "removeClaim(bytes32)": {
        "details": "Removes a claim. Requires CLAIM_SIGNER_KEY purpose from the sender."
      },
      "removeKey(bytes32,uint256)": {
        "details": "Removes a purpose from a key. If it's the last purpose, the key is removed. Requires MANAGEMENT_KEY purpose."
      },
      "revokeClaim(bytes32)": {
        "details": "Revokes a claim by its ID",
        "params": {
          "_claimId": "The ID of the claim to revoke"
        }
      },
      "revokeClaimBySignature(bytes)": {
        "details": "Revokes a claim by its signature",
        "params": {
          "signature": "The signature of the claim to revoke"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "It declares support for `IIdentity`, `IERC734`, `IERC735` (components of `IIdentity`),      and `IERC165` itself. It chains to `ERC165Upgradeable.supportsInterface`."
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      }
    },
    "events": {
      "Approved(uint256,bool)": {
        "details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
      },
      "ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
      },
      "ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
      },
      "ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
        "details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
      },
      "Executed(uint256,address,uint256,bytes)": {
        "details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
      },
      "ExecutionFailed(uint256,address,uint256,bytes)": {
        "details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
      },
      "ExecutionRequested(uint256,address,uint256,bytes)": {
        "details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
      },
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "KeyAdded(bytes32,uint256,uint256)": {
        "details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
      },
      "KeyRemoved(bytes32,uint256,uint256)": {
        "details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
      }
    },
    "errors": {
      "ECDSAInvalidSignature()": [
        {
          "details": "The signature derives the `address(0)`."
        }
      ],
      "ECDSAInvalidSignatureLength(uint256)": [
        {
          "details": "The signature has an invalid length."
        }
      ],
      "ECDSAInvalidSignatureS(bytes32)": [
        {
          "details": "The signature has an S value that is in the upper half order."
        }
      ],
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "title": "ATK Identity Implementation Contract (Logic for Wallet Identities)"
  },
  "id": 157
}