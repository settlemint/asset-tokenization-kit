{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_signers",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_required",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SIGNER_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchConfirm",
      "inputs": [
        {
          "name": "txIndices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchSubmitContractCalls",
      "inputs": [
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "selectors",
          "type": "bytes4[]",
          "internalType": "bytes4[]"
        },
        {
          "name": "abiEncodedArguments",
          "type": "bytes[]",
          "internalType": "bytes[]"
        },
        {
          "name": "comments",
          "type": "string[]",
          "internalType": "string[]"
        }
      ],
      "outputs": [
        {
          "name": "txIndices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchSubmitERC20Transfers",
      "inputs": [
        {
          "name": "tokens",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "to",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "comments",
          "type": "string[]",
          "internalType": "string[]"
        }
      ],
      "outputs": [
        {
          "name": "txIndices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchSubmitTransactions",
      "inputs": [
        {
          "name": "to",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "value",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "data",
          "type": "bytes[]",
          "internalType": "bytes[]"
        },
        {
          "name": "comments",
          "type": "string[]",
          "internalType": "string[]"
        }
      ],
      "outputs": [
        {
          "name": "txIndices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "confirm",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "confirmations",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getConfirmers",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleMember",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleMemberCount",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleMembers",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasConfirmed",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "signer",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "required",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "requirement",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRequirement",
      "inputs": [
        {
          "name": "_required",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "signers",
      "inputs": [],
      "outputs": [
        {
          "name": "signers_",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "submitContractCall",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "selector",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "abiEncodedArguments",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "comment",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "submitERC20Transfer",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "comment",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "submitTransaction",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "comment",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transaction",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ATKVault.Transaction",
          "components": [
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "executed",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "numConfirmations",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "comment",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transactions",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "executed",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "numConfirmations",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "comment",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ConfirmTransaction",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "txIndex",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "balance",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecuteTransaction",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "txIndex",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RequirementChanged",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "required",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RevokeConfirmation",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "txIndex",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SubmitContractCallTransaction",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "txIndex",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "target",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "selector",
          "type": "bytes4",
          "indexed": false,
          "internalType": "bytes4"
        },
        {
          "name": "abiEncodedArguments",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "comment",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SubmitERC20TransferTransaction",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "txIndex",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "comment",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SubmitTransaction",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "txIndex",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "comment",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransactionExecutionFailed",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessControlBadConfirmation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "neededRole",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "AlreadyConfirmed",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "signer",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "EmptyBatchArray",
      "inputs": []
    },
    {
      "type": "error",
      "name": "EnforcedPause",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ExecutionFailed",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ]
    },
    {
      "type": "error",
      "name": "ExpectedPause",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidRequirement",
      "inputs": [
        {
          "name": "requested",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "signerCount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "NotConfirmed",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "signer",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TxDoesNotExist",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "maxIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "TxExecuted",
      "inputs": [
        {
          "name": "txIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523461023a57612ce68038038061001981610252565b928339810160808282031261023a5781516001600160401b03811161023a5782019080601f8301121561023a578151916001600160401b03831161023e578260051b9060208061006a818501610252565b80968152019282010192831161023a57602001905b828210610222575050506020820151916100a760606100a060408401610277565b9201610277565b60805260016003558151908115801561021a575b8015610211575b6101fa576100cf8161028b565b6101b8575b505f5b818110610146576007849055837f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b036101176103a5565b1692604051908152a260405161281590816104518239608051818181610ba401528181610c9b015261237c0152f35b82518110156101a457600581901b830160200151600191906001600160a01b031661017081610314565b61017c575b50016100d7565b61019d905f516020612c865f395f51905f525f528360205260405f206103f4565b505f610175565b634e487b7160e01b5f52603260045260245ffd5b5f805260016020526101f3906001600160a01b03167fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496103f4565b505f6100d4565b50826306a0ee3160e31b5f5260045260245260445ffd5b508184116100c2565b5083156100bb565b6020809161022f84610277565b81520191019061007f565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b0381118382101761023e57604052565b51906001600160a01b038216820361023a57565b6001600160a01b0381165f9081525f516020612cc65f395f51905f52602052604090205460ff1661030f576001600160a01b038181165f9081525f516020612cc65f395f51905f5260205260409020805460ff191660011790556102ed6103a5565b16906001600160a01b03165f5f516020612c665f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081525f516020612ca65f395f51905f52602052604090205460ff1661030f576001600160a01b038181165f9081525f516020612ca65f395f51905f5260205260409020805460ff191660011790556103766103a5565b16906001600160a01b03165f516020612c865f395f51905f525f516020612c665f395f51905f525f80a4600190565b6080516001600160a01b03163314806103e9575b156103e55760131936013681116103d1573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b5060143610156103b9565b6001810190825f528160205260405f2054155f146104495780546801000000000000000081101561023e57600181018083558110156101a4578390825f5260205f20015554915f5260205260405f2055600190565b5050505f9056fe6080806040526004361015610069575b50361561001a575f80fd5b610022611cf3565b61002a612379565b604080513481524760208201526001600160a01b03909216917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159190a2005b5f3560e01c90816301ffc9a7146116315750806308aff933146115dd5780630f05205614611423578063205e7c061461123857806320c5429b14611155578063248a9ca3146111235780632f2ff15d146110be5780633411c81c1461107557806336568abe146110215780633f4ba83a14610fbc57806346bd084114610e8f57806346e24b0814610da157806346f0975a14610ccf578063572b6c0514610c7b5780635c975abb14610c595780636239152014610bd35780637da0a87714610b8f5780638456cb5914610b245780638f56015f14610a615780639010d07c14610a1b57806391d14854146109d35780639ace38c214610916578063a1ebf35d146108ef578063a217fddf146108d5578063a3246ad314610865578063aa787c1e14610763578063b756393014610306578063b779e1c014610691578063ba0179b51461064e578063c13138f114610391578063ca15c87314610367578063d547741f14610323578063dc8452cd146103065763ee0e6f65146101eb575f61000f565b34610302576080366003190112610302576102046116b4565b61020c61169e565b9060443591606435916001600160401b038311610302576020937f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b9336102f59361025c6102ec9636906004016117eb565b9290610266611bbf565b61026e611cf3565b610276611d0e565b61027e612379565b60405163a9059cbb60e01b8b8201526001600160a01b0385166024820152604480820188905281529096906102ca906102b860648261198d565b6102c3368886611a77565b9083611d7d565b98899560405193849360018060a01b03169860018060a01b038b169785611b10565b0390a4826121a9565b6001600355604051908152f35b5f80fd5b34610302575f366003190112610302576020600754604051908152f35b346103025760403660031901126103025761036560043561034261169e565b9061036061035b825f525f602052600160405f20015490565b611ca2565b61233f565b005b34610302576020366003190112610302576004355f526001602052602060405f2054604051908152f35b346103025760a0366003190112610302576004356001600160401b038111610302576103c19036906004016116ca565b6024356001600160401b038111610302576103e09036906004016116ca565b6044356001600160401b038111610302576103ff9036906004016116ca565b9490936064356001600160401b038111610302576104219036906004016116ca565b9290966084356001600160401b038111610302576104439036906004016116ca565b95909161044e611bbf565b610456611cf3565b61045e611d0e565b841561063f57818514801590610635575b801561062b575b8015610621575b6106125761048c979397612379565b96610496866119c5565b996001600160a01b038916955f5b8881106104c2576001600355604051806104be8f8261178e565b0390f35b8a8d8f8c8f8c8c8f928c8c8f92888c8f8f829c90838f96818f988f828f8f8f918f92849f92859c968697948f95886104fe8180999781986119f7565b61050790611baa565b9261051192611a1b565b9061051b92611b34565b94610526918c6119f7565b61052f90611a07565b9561053a918d6119f7565b359361054592611a1b565b369061055092611a77565b9161055a93611fd2565b6105648284611aad565b5261056e91611aad565b519e610579926119f7565b61058290611a07565b9961058c926119f7565b3596610597926119f7565b6105a090611baa565b996105aa92611a1b565b926105b6929196611a1b565b91604051958695600160a01b6001900316996105d29587611b6e565b037fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd1691a46105ff91611aad565b519061060a916121a9565b6001016104a4565b63512509d360e11b5f5260045ffd5b508685141561047d565b5085851415610476565b508085141561046f565b637dc57e7b60e01b5f5260045ffd5b3461030257602036600319011261030257610667611bbf565b61066f611cf3565b610677611d0e565b61068a610682612379565b6004356121a9565b6001600355005b34610302576020366003190112610302576004356006548082101561071f5750805f52600460205260405f20546106c7816119c5565b915f5b8281106106df57604051806104be8682611818565b600190825f5260046020526106f78160405f20612589565b838060a01b0391549060031b1c1661070f8287611aad565b90838060a01b03169052016106ca565b801561075b575f19810190811161074757905b632d71397360e11b5f5260045260245260445ffd5b634e487b7160e01b5f52601160045260245ffd5b505f90610732565b346103025760a03660031901126103025761077c6116b4565b602435906044356001600160e01b031981168103610302576064356001600160401b038111610302576107b39036906004016117eb565b91608435926001600160401b038411610302576020957fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd166107fb6102f59636906004016117eb565b959097610806611bbf565b61080e611cf3565b610816611d0e565b6102ec610821612379565b9761084361083088868b611b34565b61083b36848f611a77565b908886611fd2565b9a8b9760405195869560018060a01b03169a60018060a01b038d169987611b6e565b34610302576020366003190112610302576004355f52600160205260405f206040519081602082549182815201915f5260205f20905f5b8181106108bf576104be856108b38187038261198d565b60405191829182611818565b825484526020909301926001928301920161089c565b34610302575f3660031901126103025760206040515f8152f35b34610302575f3660031901126103025760206040515f5160206127e95f395f51905f528152f35b34610302576020366003190112610302576004356006548110156103025761093d9061185a565b5060018060a01b038154166104be60018301549260056040519161096f8361096881600285016118dd565b038461198d565b6109b960ff6003830154169361099b60048401549361099460405180978193016118dd565b038561198d565b6040519788978852602088015260c0604088015260c08701906117c7565b9215156060860152608085015283820360a08501526117c7565b34610302576040366003190112610302576109ec61169e565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004355f5260016020526020610a4860405f2060243590612589565b905460405160039290921b1c6001600160a01b03168152f35b3461030257602036600319011261030257600435610a7d611c3a565b5f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df85481158015610b1b575b610b05575060078190557f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b03610afa612379565b1692604051908152a2005b906306a0ee3160e31b5f5260045260245260445ffd5b50808211610abd565b34610302575f36600319011261030257610b3c611c3a565b610b44611cf3565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020610b7c612379565b6040516001600160a01b039091168152a1005b34610302575f366003190112610302576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610302576020366003190112610302576004356001600160401b03811161030257610c039036906004016116ca565b90610c0c611bbf565b610c14611cf3565b610c1c611d0e565b811561063f57610c2a612379565b905f5b838110610c3b576001600355005b80610c5384610c4d60019488876119f7565b356121a9565b01610c2d565b34610302575f36600319011261030257602060ff600254166040519015158152f35b34610302576020366003190112610302576020610c966116b4565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610302575f366003190112610302575f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df854610d1f816119c5565b905f5b818110610d3757604051806104be8582611818565b5f5160206127e95f395f51905f525f526001602081905290610d79817fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df8612589565b838060a01b0391549060031b1c16610d918286611aad565b90838060a01b0316905201610d22565b3461030257608036600319011261030257610dba6116b4565b6024356044356001600160401b03811161030257610ddc9036906004016117eb565b92606435916001600160401b038311610302576020947fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd94610e256102f59536906004016117eb565b969092610e30611bbf565b610e38611cf3565b610e40611d0e565b610e48612379565b956102ec610e6d610e5a36858a611a77565b610e65368d8a611a77565b908785611fd2565b998a9660405194859460018060a01b03169960018060a01b038c169886611ae1565b3461030257602036600319011261030257600435606060a0604051610eb38161195e565b5f81525f60208201528260408201525f838201525f608082015201526006548082101561071f57610ee38261185a565b50604051610ef08161195e565b81546001600160a01b0316815260018201546020820190815260405190926104be9190600590610f278361096881600285016118dd565b60408501928352610f9b60ff60038301541693606087019415158552610f636004840154936080890194855261099460405180978193016118dd565b60a087019384526040519788976020895260018060a01b0390511660208901525160408801525160c0606088015260e08701906117c7565b9251151560808601525160a085015251838203601f190160c08501526117c7565b34610302575f36600319011261030257610fd4611c3a565b60025460ff8116156110125760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020610b7c612379565b638dfc202b60e01b5f5260045ffd5b346103025760403660031901126103025761103a61169e565b6001600160a01b0361104a612379565b166001600160a01b03821603611066576103659060043561233f565b63334bd91960e11b5f5260045ffd5b346103025760403660031901126103025761108e61169e565b6004355f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004356110da61169e565b6110f261035b835f525f602052600160405f20015490565b6110fc8183612679565b61110257005b5f91825260016020526040909120610365916001600160a01b03169061279b565b3461030257602036600319011261030257602061114d6004355f525f602052600160405f20015490565b604051908152f35b3461030257602036600319011261030257600435611171611bbf565b611179611cf3565b611182816122dd565b61118a612379565b90825f5260046020526111b860405f209260018060a01b031680936001915f520160205260405f2054151590565b1561122157600490835f52816020526111d48360405f2061259e565b50835f52600560205260405f20835f5260205260405f2060ff198154169055015f1981540190557ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd555f80a3005b509063b29436e960e01b5f5260045260245260445ffd5b3461030257611246366116fa565b9296909591611253611bbf565b61125b611cf3565b611263611d0e565b821561063f57848314801590611419575b801561140f575b6106125761128a959195612379565b94611294846119c5565b976001600160a01b038716935f5b8681106112bc576001600355604051806104be8d8261178e565b808787878f8f8f868f928184878f8f908f858b8f926112de83809681936119f7565b6112e790611a07565b966112f1926119f7565b60405163a9059cbb60e01b60208201526001600160a01b0396909616602487015235604480870191909152855261132960648661198d565b611333918a6119f7565b61133c90611a07565b9361134692611a1b565b369061135192611a77565b9061135b92611d7d565b6113658284611aad565b5261136f91611aad565b519661137a926119f7565b61138390611a07565b9186611390818d8c6119f7565b61139990611a07565b946113a3926119f7565b35956113af918a611a1b565b6040516001600160a01b0390931696929384936113cd939185611b10565b037f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b93391a4886113fc828d611aad565b5190611407916121a9565b6001016112a2565b508383141561127b565b5080831415611274565b3461030257611431366116fa565b61144097919397969296611bbf565b611448611cf3565b611450611d0e565b821561063f578483148015906115d3575b80156115c9575b61061257611477959195612379565b94611481846119c5565b976001600160a01b038716935f5b8681106114a9576001600355604051806104be8d8261178e565b878787878f8f8f82888c83828e96818f898f8f848f919e819f8b96839f6114d385809481936119f7565b6114dc90611a07565b986114e6926119f7565b35956114f192611a1b565b926114fd929194611a1b565b929091369061150b92611a77565b91369061151792611a77565b9161152193611fd2565b61152b8284611aad565b5261153591611aad565b519a611540926119f7565b61154990611a07565b95611554918d6119f7565b359361155f92611a1b565b9461156b929198611a1b565b90604051948594600160a01b6001900316986115879486611ae1565b037fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd91a4886115b6828d611aad565b51906115c1916121a9565b60010161148f565b5080831415611468565b5086831415611461565b346103025760403660031901126103025760206116276115fb61169e565b600480355f90815290845260408082206001600160a01b03909316825260019092016020522054151590565b6040519015158152f35b34610302576020366003190112610302576004359063ffffffff60e01b821680920361030257602091635a05180f60e01b8114908115611673575b5015158152f35b637965db0b60e01b81149150811561168d575b508361166c565b6301ffc9a760e01b14905083611686565b602435906001600160a01b038216820361030257565b600435906001600160a01b038216820361030257565b9181601f84011215610302578235916001600160401b038311610302576020808501948460051b01011161030257565b6080600319820112610302576004356001600160401b0381116103025781611724916004016116ca565b929092916024356001600160401b0381116103025781611746916004016116ca565b929092916044356001600160401b0381116103025781611768916004016116ca565b92909291606435906001600160401b0382116103025761178a916004016116ca565b9091565b60206040818301928281528451809452019201905f5b8181106117b15750505090565b82518452602093840193909201916001016117a4565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610302578235916001600160401b038311610302576020838186019501011161030257565b60206040818301928281528451809452019201905f5b81811061183b5750505090565b82516001600160a01b031684526020938401939092019160010161182e565b6006548110156118915760065f81815291027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0191565b634e487b7160e01b5f52603260045260245ffd5b90600182811c921680156118d3575b60208310146118bf57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916118b4565b5f92918154916118ec836118a5565b8083529260018116908115611941575060011461190857505050565b5f9081526020812093945091925b838310611927575060209250010190565b600181602092949394548385870101520191019190611916565b915050602093945060ff929192191683830152151560051b010190565b60c081019081106001600160401b0382111761197957604052565b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761197957604052565b6001600160401b0381116119795760051b60200190565b906119cf826119ae565b6119dc604051918261198d565b82815280926119ed601f19916119ae565b0190602036910137565b91908110156118915760051b0190565b356001600160a01b03811681036103025790565b91908110156118915760051b81013590601e19813603018212156103025701908135916001600160401b038311610302576020018236038113610302579190565b6001600160401b03811161197957601f01601f191660200190565b929192611a8382611a5c565b91611a91604051938461198d565b829481845281830111610302578281602093845f960137010152565b80518210156118915760209160051b010190565b908060209392818452848401375f828201840152601f01601f1916010190565b9391611b0d9593611aff928652606060208701526060860191611ac1565b926040818503910152611ac1565b90565b611b0d949260609260018060a01b0316825260208201528160408201520191611ac1565b602490611b6c9294938060405196879363ffffffff60e01b1660208501528484013781015f838201520301601f19810184528361198d565b565b94929093611b9c92611b0d9795875263ffffffff60e01b166020870152608060408701526080860191611ac1565b926060818503910152611ac1565b356001600160e01b0319811681036103025790565b611bc7612379565b6001600160a01b0381165f9081527f059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5b602052604090205460ff1615611c095750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004525f5160206127e95f395f51905f52602452604490fd5b611c42612379565b6001600160a01b0381165f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1615611c845750565b63e2517d3f60e01b5f5260018060a01b03166004525f60245260445ffd5b611caa612379565b5f828152602081815260408083206001600160a01b038516845290915290205460ff1615611cd6575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b60ff60025416611cff57565b63d93c066560e01b5f5260045ffd5b600260035414611d1f576002600355565b633ee5aeb560e01b5f5260045ffd5b601f8211611d3b57505050565b5f5260205f20906020601f840160051c83019310611d73575b601f0160051c01905b818110611d68575050565b5f8155600101611d5d565b9091508190611d54565b929091926006549260405191611d928361195e565b6001600160a01b031682525f6020830181815260408401928352606084018281526080850192835260a08501978852919290600160401b8710156119795760018701600655611de08761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b03821161197957611e3382611e2d85546118a5565b85611d2e565b602090601f8311600114611f535782600597969593611e879593611e6c935f92611eea575b50508160011b915f199060031b1c19161790565b90555b511515600384019060ff801983541691151516179055565b5160048201550192519283516001600160401b03811161197957611eb581611eaf84546118a5565b84611d2e565b602094601f8211600114611ef557611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b9055565b015190505f80611e58565b601f19821695835f52805f20915f5b888110611f3b57508360019596979810611f23575b505050811b019055565b01515f1960f88460031b161c191690555f8080611f19565b91926020600181928685015181550194019201611f04565b90601f19831691845f52815f20925f5b818110611fa7575092600192859260059a999896611e87989610611f8f575b505050811b019055611e6f565b01515f1960f88460031b161c191690555f8080611f82565b92936020600181928786015181550195019301611f63565b634e487b7160e01b5f525f60045260245ffd5b90939192936006549360405192611fe88461195e565b60018060a01b03168352602083019182526040830190815260608301905f825260808401925f845260a08501978852600160401b87101561197957600187016006556120338761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b0382116119795761208082611e2d85546118a5565b602090601f831160011461215657826005979695936120b89593611e6c935f92611eea5750508160011b915f199060031b1c19161790565b5160048201550192519283516001600160401b038111611979576120e081611eaf84546118a5565b602094601f821160011461211157611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b601f19821695835f52805f20915f5b88811061213e57508360019596979810611f2357505050811b019055565b91926020600181928685015181550194019201612120565b90601f19831691845f52815f20925f5b818110612191575092600192859260059a9998966120b8989610611f8f57505050811b019055611e6f565b92936020600181928786015181550195019301612166565b6121b2816122dd565b91815f52600460205260405f206121e060018060a01b03831680926001915f520160205260405f2054151590565b6122c757825f5260046020526121f98160405f2061279b565b50825f52600560205260405f20815f5260205260405f20600160ff1982541617905582600485019160018354018093557f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb633900415f80a36007541115806122b8575b61226157505050565b61226b90826123d2565b15612274575050565b8154604051635f226afd60e11b815260048101929092526001600160a01b03166024820152606060448201529081906122b49060648301906002016118dd565b0390fd5b5060ff60038401541615612258565b826347b467b960e11b5f5260045260245260445ffd5b906006548083101561231657506122f38261185a565b509160ff6003840154166123045750565b6393fbc70960e01b5f5260045260245ffd5b9050801561075b575f1981019081116107475790632d71397360e11b5f5260045260245260445ffd5b612349828261270e565b918261235457505090565b5f91825260016020526040909120612375916001600160a01b03169061259e565b5090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806123c7575b156123c3576013193601368111610747573560601c90565b3390565b5060143610156123ab565b6123db8161185a565b509160038301805460ff811661257f5760019060ff191617815560018060a01b0384541660018501546002860190604051915f9080549061241b826118a5565b91600181169081156125685750600114612536575b5050915f939181859403925af13d15612531573d61244d81611a5c565b9061245b604051928361198d565b81525f60203d92013e5b15612521575081906001600160a01b03167f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac5f80a3805f52600460205260405f20545f5b8181106124be5750505060045f910155600190565b825f52600460205260405f2090815415611891575f9182526020808320548584526005825260408085206001600160a01b03909216808652918352808520805460ff191690558685526004909252922060019261251a9161259e565b50016124a9565b805460ff19169055505f92915050565b612465565b9091505f5260205f205f905b82821061255457505082018183612430565b600181602092548488015201910190612542565b60ff19168652505080151502830190508183612430565b5050505050600190565b8054821015611891575f5260205f2001905f90565b906001820191815f528260205260405f20548015155f14612671575f1981018181116107475782545f1981019190821161074757818103612626575b50505080548015612612575f1901906125f38282612589565b8154905f199060031b1b19169055555f526020525f6040812055600190565b634e487b7160e01b5f52603160045260245ffd5b61265c6126366126469386612589565b90549060031b1c92839286612589565b819391549060031b91821b915f19901b19161790565b90555f528360205260405f20555f80806125da565b505050505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff191660011790556126d3612379565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff19169055612766612379565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b5f82815260018201602052604090205461270857805490600160401b82101561197957826127d3612646846001809601855584612589565b90558054925f520160205260405f205560019056fee2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70a164736f6c634300081c000a2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0de2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5bad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5",
    "sourceMap": "1058:26210:26:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;1500:37:202;1058:26210:26;2061:21:221;1361:24:26;1058:26210;;8515:8;;;:26;;;;1058:26210;8515:45;;;;1058:26210;8511:92;;2865:31:188;;;:::i;:::-;2906:69;;1058:26210:26;8775:13;-1:-1:-1;8790:7:26;;;;;;8874:20;1361:24;;;;8909:43;1058:26210;-1:-1:-1;;;;;26689:18:26;;:::i;:::-;1058:26210;;;;;;;8909:43;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;8799:3;1058:26210;;1361:24;;;;;1058:26210;1361:24;;;;;1058:26210;1361:24;;1058:26210;;;-1:-1:-1;;;;;1058:26210:26;2865:31:188;1058:26210:26;2865:31:188;:::i;:::-;2906:69;;8799:3:26;;2232:4:185;8775:13:26;;2906:69:188;9425:50:237;1058:26210:26;-1:-1:-1;;;;;;;;;;;;1058:26210:26;;;;;-1:-1:-1;1058:26210:26;9425:50:237;:::i;:::-;;2906:69:188;;;1361:24:26;1058:26210;;;-1:-1:-1;1361:24:26;;;;;-1:-1:-1;1361:24:26;2906:69:188;-1:-1:-1;1058:26210:26;;;;;9425:50:237;;-1:-1:-1;;;;;1058:26210:26;;9425:50:237;:::i;:::-;;2906:69:188;;;8511:92:26;8569:34;;;;;-1:-1:-1;8569:34:26;;1058:26210;;;;-1:-1:-1;8569:34:26;8515:45;8545:15;;;;8515:45;;:26;8527:14;;;8515:26;;1058:26210;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;-1:-1:-1;1058:26210:26;;;;;-1:-1:-1;1058:26210:26;;;;;;;;-1:-1:-1;;1058:26210:26;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1058:26210:26;;;;;;:::o;6179:316:185:-;-1:-1:-1;;;;;1058:26210:26;;8522:1;1058:26210;;;-1:-1:-1;;;;;;;;;;;1058:26210:26;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;8522:1;1058:26210;;;-1:-1:-1;;;;;;;;;;;1058:26210:26;;;;;;;-1:-1:-1;;1058:26210:26;;;;;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:26;8522:1;-1:-1:-1;;;;;;;;;;;8522:1:26;;6370:40:185;6347:4;6424:11;:::o;6272:217::-;6466:12;8522:1:26;6466:12:185;:::o;6179:316::-;-1:-1:-1;;;;;1058:26210:26;;;;;;-1:-1:-1;;;;;;;;;;;1058:26210:26;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;-1:-1:-1;;;;;;;;;;;1058:26210:26;;;;;;;-1:-1:-1;;1058:26210:26;;;;;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;1058:26210:26;;6370:40:185;6347:4;6424:11;:::o;2206:429:202:-;1707:17;1361:24:26;-1:-1:-1;;;;;1058:26210:26;2422:10:202;1931:31;;2403:71;;2206:429;2399:230;;;1058:26210:26;;2312:8:202;1058:26210:26;2312:8:202;1058:26210:26;;;;;;;;2490:72:202:o;1058:26210:26:-;;;;;;;;;;;;2399:230:202;2422:10;2593:25;:::o;2403:71::-;2312:8;3483:2;2312:8;2437:37;;2403:71;;2336:406:237;5006:14;;;1058:26210:26;;;;;;;;;;;5006:26:237;2415:321;1058:26210:26;;;;;;;;;;;5006:14:237;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1361:24;5006:14:237;2671:11;:::o;2415:321::-;2713:12;;;1058:26210:26;2713:12:237;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610069575b50361561001a575f80fd5b610022611cf3565b61002a612379565b604080513481524760208201526001600160a01b03909216917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159190a2005b5f3560e01c90816301ffc9a7146116315750806308aff933146115dd5780630f05205614611423578063205e7c061461123857806320c5429b14611155578063248a9ca3146111235780632f2ff15d146110be5780633411c81c1461107557806336568abe146110215780633f4ba83a14610fbc57806346bd084114610e8f57806346e24b0814610da157806346f0975a14610ccf578063572b6c0514610c7b5780635c975abb14610c595780636239152014610bd35780637da0a87714610b8f5780638456cb5914610b245780638f56015f14610a615780639010d07c14610a1b57806391d14854146109d35780639ace38c214610916578063a1ebf35d146108ef578063a217fddf146108d5578063a3246ad314610865578063aa787c1e14610763578063b756393014610306578063b779e1c014610691578063ba0179b51461064e578063c13138f114610391578063ca15c87314610367578063d547741f14610323578063dc8452cd146103065763ee0e6f65146101eb575f61000f565b34610302576080366003190112610302576102046116b4565b61020c61169e565b9060443591606435916001600160401b038311610302576020937f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b9336102f59361025c6102ec9636906004016117eb565b9290610266611bbf565b61026e611cf3565b610276611d0e565b61027e612379565b60405163a9059cbb60e01b8b8201526001600160a01b0385166024820152604480820188905281529096906102ca906102b860648261198d565b6102c3368886611a77565b9083611d7d565b98899560405193849360018060a01b03169860018060a01b038b169785611b10565b0390a4826121a9565b6001600355604051908152f35b5f80fd5b34610302575f366003190112610302576020600754604051908152f35b346103025760403660031901126103025761036560043561034261169e565b9061036061035b825f525f602052600160405f20015490565b611ca2565b61233f565b005b34610302576020366003190112610302576004355f526001602052602060405f2054604051908152f35b346103025760a0366003190112610302576004356001600160401b038111610302576103c19036906004016116ca565b6024356001600160401b038111610302576103e09036906004016116ca565b6044356001600160401b038111610302576103ff9036906004016116ca565b9490936064356001600160401b038111610302576104219036906004016116ca565b9290966084356001600160401b038111610302576104439036906004016116ca565b95909161044e611bbf565b610456611cf3565b61045e611d0e565b841561063f57818514801590610635575b801561062b575b8015610621575b6106125761048c979397612379565b96610496866119c5565b996001600160a01b038916955f5b8881106104c2576001600355604051806104be8f8261178e565b0390f35b8a8d8f8c8f8c8c8f928c8c8f92888c8f8f829c90838f96818f988f828f8f8f918f92849f92859c968697948f95886104fe8180999781986119f7565b61050790611baa565b9261051192611a1b565b9061051b92611b34565b94610526918c6119f7565b61052f90611a07565b9561053a918d6119f7565b359361054592611a1b565b369061055092611a77565b9161055a93611fd2565b6105648284611aad565b5261056e91611aad565b519e610579926119f7565b61058290611a07565b9961058c926119f7565b3596610597926119f7565b6105a090611baa565b996105aa92611a1b565b926105b6929196611a1b565b91604051958695600160a01b6001900316996105d29587611b6e565b037fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd1691a46105ff91611aad565b519061060a916121a9565b6001016104a4565b63512509d360e11b5f5260045ffd5b508685141561047d565b5085851415610476565b508085141561046f565b637dc57e7b60e01b5f5260045ffd5b3461030257602036600319011261030257610667611bbf565b61066f611cf3565b610677611d0e565b61068a610682612379565b6004356121a9565b6001600355005b34610302576020366003190112610302576004356006548082101561071f5750805f52600460205260405f20546106c7816119c5565b915f5b8281106106df57604051806104be8682611818565b600190825f5260046020526106f78160405f20612589565b838060a01b0391549060031b1c1661070f8287611aad565b90838060a01b03169052016106ca565b801561075b575f19810190811161074757905b632d71397360e11b5f5260045260245260445ffd5b634e487b7160e01b5f52601160045260245ffd5b505f90610732565b346103025760a03660031901126103025761077c6116b4565b602435906044356001600160e01b031981168103610302576064356001600160401b038111610302576107b39036906004016117eb565b91608435926001600160401b038411610302576020957fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd166107fb6102f59636906004016117eb565b959097610806611bbf565b61080e611cf3565b610816611d0e565b6102ec610821612379565b9761084361083088868b611b34565b61083b36848f611a77565b908886611fd2565b9a8b9760405195869560018060a01b03169a60018060a01b038d169987611b6e565b34610302576020366003190112610302576004355f52600160205260405f206040519081602082549182815201915f5260205f20905f5b8181106108bf576104be856108b38187038261198d565b60405191829182611818565b825484526020909301926001928301920161089c565b34610302575f3660031901126103025760206040515f8152f35b34610302575f3660031901126103025760206040515f5160206127e95f395f51905f528152f35b34610302576020366003190112610302576004356006548110156103025761093d9061185a565b5060018060a01b038154166104be60018301549260056040519161096f8361096881600285016118dd565b038461198d565b6109b960ff6003830154169361099b60048401549361099460405180978193016118dd565b038561198d565b6040519788978852602088015260c0604088015260c08701906117c7565b9215156060860152608085015283820360a08501526117c7565b34610302576040366003190112610302576109ec61169e565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004355f5260016020526020610a4860405f2060243590612589565b905460405160039290921b1c6001600160a01b03168152f35b3461030257602036600319011261030257600435610a7d611c3a565b5f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df85481158015610b1b575b610b05575060078190557f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b03610afa612379565b1692604051908152a2005b906306a0ee3160e31b5f5260045260245260445ffd5b50808211610abd565b34610302575f36600319011261030257610b3c611c3a565b610b44611cf3565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020610b7c612379565b6040516001600160a01b039091168152a1005b34610302575f366003190112610302576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610302576020366003190112610302576004356001600160401b03811161030257610c039036906004016116ca565b90610c0c611bbf565b610c14611cf3565b610c1c611d0e565b811561063f57610c2a612379565b905f5b838110610c3b576001600355005b80610c5384610c4d60019488876119f7565b356121a9565b01610c2d565b34610302575f36600319011261030257602060ff600254166040519015158152f35b34610302576020366003190112610302576020610c966116b4565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610302575f366003190112610302575f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df854610d1f816119c5565b905f5b818110610d3757604051806104be8582611818565b5f5160206127e95f395f51905f525f526001602081905290610d79817fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df8612589565b838060a01b0391549060031b1c16610d918286611aad565b90838060a01b0316905201610d22565b3461030257608036600319011261030257610dba6116b4565b6024356044356001600160401b03811161030257610ddc9036906004016117eb565b92606435916001600160401b038311610302576020947fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd94610e256102f59536906004016117eb565b969092610e30611bbf565b610e38611cf3565b610e40611d0e565b610e48612379565b956102ec610e6d610e5a36858a611a77565b610e65368d8a611a77565b908785611fd2565b998a9660405194859460018060a01b03169960018060a01b038c169886611ae1565b3461030257602036600319011261030257600435606060a0604051610eb38161195e565b5f81525f60208201528260408201525f838201525f608082015201526006548082101561071f57610ee38261185a565b50604051610ef08161195e565b81546001600160a01b0316815260018201546020820190815260405190926104be9190600590610f278361096881600285016118dd565b60408501928352610f9b60ff60038301541693606087019415158552610f636004840154936080890194855261099460405180978193016118dd565b60a087019384526040519788976020895260018060a01b0390511660208901525160408801525160c0606088015260e08701906117c7565b9251151560808601525160a085015251838203601f190160c08501526117c7565b34610302575f36600319011261030257610fd4611c3a565b60025460ff8116156110125760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020610b7c612379565b638dfc202b60e01b5f5260045ffd5b346103025760403660031901126103025761103a61169e565b6001600160a01b0361104a612379565b166001600160a01b03821603611066576103659060043561233f565b63334bd91960e11b5f5260045ffd5b346103025760403660031901126103025761108e61169e565b6004355f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004356110da61169e565b6110f261035b835f525f602052600160405f20015490565b6110fc8183612679565b61110257005b5f91825260016020526040909120610365916001600160a01b03169061279b565b3461030257602036600319011261030257602061114d6004355f525f602052600160405f20015490565b604051908152f35b3461030257602036600319011261030257600435611171611bbf565b611179611cf3565b611182816122dd565b61118a612379565b90825f5260046020526111b860405f209260018060a01b031680936001915f520160205260405f2054151590565b1561122157600490835f52816020526111d48360405f2061259e565b50835f52600560205260405f20835f5260205260405f2060ff198154169055015f1981540190557ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd555f80a3005b509063b29436e960e01b5f5260045260245260445ffd5b3461030257611246366116fa565b9296909591611253611bbf565b61125b611cf3565b611263611d0e565b821561063f57848314801590611419575b801561140f575b6106125761128a959195612379565b94611294846119c5565b976001600160a01b038716935f5b8681106112bc576001600355604051806104be8d8261178e565b808787878f8f8f868f928184878f8f908f858b8f926112de83809681936119f7565b6112e790611a07565b966112f1926119f7565b60405163a9059cbb60e01b60208201526001600160a01b0396909616602487015235604480870191909152855261132960648661198d565b611333918a6119f7565b61133c90611a07565b9361134692611a1b565b369061135192611a77565b9061135b92611d7d565b6113658284611aad565b5261136f91611aad565b519661137a926119f7565b61138390611a07565b9186611390818d8c6119f7565b61139990611a07565b946113a3926119f7565b35956113af918a611a1b565b6040516001600160a01b0390931696929384936113cd939185611b10565b037f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b93391a4886113fc828d611aad565b5190611407916121a9565b6001016112a2565b508383141561127b565b5080831415611274565b3461030257611431366116fa565b61144097919397969296611bbf565b611448611cf3565b611450611d0e565b821561063f578483148015906115d3575b80156115c9575b61061257611477959195612379565b94611481846119c5565b976001600160a01b038716935f5b8681106114a9576001600355604051806104be8d8261178e565b878787878f8f8f82888c83828e96818f898f8f848f919e819f8b96839f6114d385809481936119f7565b6114dc90611a07565b986114e6926119f7565b35956114f192611a1b565b926114fd929194611a1b565b929091369061150b92611a77565b91369061151792611a77565b9161152193611fd2565b61152b8284611aad565b5261153591611aad565b519a611540926119f7565b61154990611a07565b95611554918d6119f7565b359361155f92611a1b565b9461156b929198611a1b565b90604051948594600160a01b6001900316986115879486611ae1565b037fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd91a4886115b6828d611aad565b51906115c1916121a9565b60010161148f565b5080831415611468565b5086831415611461565b346103025760403660031901126103025760206116276115fb61169e565b600480355f90815290845260408082206001600160a01b03909316825260019092016020522054151590565b6040519015158152f35b34610302576020366003190112610302576004359063ffffffff60e01b821680920361030257602091635a05180f60e01b8114908115611673575b5015158152f35b637965db0b60e01b81149150811561168d575b508361166c565b6301ffc9a760e01b14905083611686565b602435906001600160a01b038216820361030257565b600435906001600160a01b038216820361030257565b9181601f84011215610302578235916001600160401b038311610302576020808501948460051b01011161030257565b6080600319820112610302576004356001600160401b0381116103025781611724916004016116ca565b929092916024356001600160401b0381116103025781611746916004016116ca565b929092916044356001600160401b0381116103025781611768916004016116ca565b92909291606435906001600160401b0382116103025761178a916004016116ca565b9091565b60206040818301928281528451809452019201905f5b8181106117b15750505090565b82518452602093840193909201916001016117a4565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610302578235916001600160401b038311610302576020838186019501011161030257565b60206040818301928281528451809452019201905f5b81811061183b5750505090565b82516001600160a01b031684526020938401939092019160010161182e565b6006548110156118915760065f81815291027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0191565b634e487b7160e01b5f52603260045260245ffd5b90600182811c921680156118d3575b60208310146118bf57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916118b4565b5f92918154916118ec836118a5565b8083529260018116908115611941575060011461190857505050565b5f9081526020812093945091925b838310611927575060209250010190565b600181602092949394548385870101520191019190611916565b915050602093945060ff929192191683830152151560051b010190565b60c081019081106001600160401b0382111761197957604052565b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761197957604052565b6001600160401b0381116119795760051b60200190565b906119cf826119ae565b6119dc604051918261198d565b82815280926119ed601f19916119ae565b0190602036910137565b91908110156118915760051b0190565b356001600160a01b03811681036103025790565b91908110156118915760051b81013590601e19813603018212156103025701908135916001600160401b038311610302576020018236038113610302579190565b6001600160401b03811161197957601f01601f191660200190565b929192611a8382611a5c565b91611a91604051938461198d565b829481845281830111610302578281602093845f960137010152565b80518210156118915760209160051b010190565b908060209392818452848401375f828201840152601f01601f1916010190565b9391611b0d9593611aff928652606060208701526060860191611ac1565b926040818503910152611ac1565b90565b611b0d949260609260018060a01b0316825260208201528160408201520191611ac1565b602490611b6c9294938060405196879363ffffffff60e01b1660208501528484013781015f838201520301601f19810184528361198d565b565b94929093611b9c92611b0d9795875263ffffffff60e01b166020870152608060408701526080860191611ac1565b926060818503910152611ac1565b356001600160e01b0319811681036103025790565b611bc7612379565b6001600160a01b0381165f9081527f059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5b602052604090205460ff1615611c095750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004525f5160206127e95f395f51905f52602452604490fd5b611c42612379565b6001600160a01b0381165f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1615611c845750565b63e2517d3f60e01b5f5260018060a01b03166004525f60245260445ffd5b611caa612379565b5f828152602081815260408083206001600160a01b038516845290915290205460ff1615611cd6575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b60ff60025416611cff57565b63d93c066560e01b5f5260045ffd5b600260035414611d1f576002600355565b633ee5aeb560e01b5f5260045ffd5b601f8211611d3b57505050565b5f5260205f20906020601f840160051c83019310611d73575b601f0160051c01905b818110611d68575050565b5f8155600101611d5d565b9091508190611d54565b929091926006549260405191611d928361195e565b6001600160a01b031682525f6020830181815260408401928352606084018281526080850192835260a08501978852919290600160401b8710156119795760018701600655611de08761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b03821161197957611e3382611e2d85546118a5565b85611d2e565b602090601f8311600114611f535782600597969593611e879593611e6c935f92611eea575b50508160011b915f199060031b1c19161790565b90555b511515600384019060ff801983541691151516179055565b5160048201550192519283516001600160401b03811161197957611eb581611eaf84546118a5565b84611d2e565b602094601f8211600114611ef557611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b9055565b015190505f80611e58565b601f19821695835f52805f20915f5b888110611f3b57508360019596979810611f23575b505050811b019055565b01515f1960f88460031b161c191690555f8080611f19565b91926020600181928685015181550194019201611f04565b90601f19831691845f52815f20925f5b818110611fa7575092600192859260059a999896611e87989610611f8f575b505050811b019055611e6f565b01515f1960f88460031b161c191690555f8080611f82565b92936020600181928786015181550195019301611f63565b634e487b7160e01b5f525f60045260245ffd5b90939192936006549360405192611fe88461195e565b60018060a01b03168352602083019182526040830190815260608301905f825260808401925f845260a08501978852600160401b87101561197957600187016006556120338761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b0382116119795761208082611e2d85546118a5565b602090601f831160011461215657826005979695936120b89593611e6c935f92611eea5750508160011b915f199060031b1c19161790565b5160048201550192519283516001600160401b038111611979576120e081611eaf84546118a5565b602094601f821160011461211157611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b601f19821695835f52805f20915f5b88811061213e57508360019596979810611f2357505050811b019055565b91926020600181928685015181550194019201612120565b90601f19831691845f52815f20925f5b818110612191575092600192859260059a9998966120b8989610611f8f57505050811b019055611e6f565b92936020600181928786015181550195019301612166565b6121b2816122dd565b91815f52600460205260405f206121e060018060a01b03831680926001915f520160205260405f2054151590565b6122c757825f5260046020526121f98160405f2061279b565b50825f52600560205260405f20815f5260205260405f20600160ff1982541617905582600485019160018354018093557f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb633900415f80a36007541115806122b8575b61226157505050565b61226b90826123d2565b15612274575050565b8154604051635f226afd60e11b815260048101929092526001600160a01b03166024820152606060448201529081906122b49060648301906002016118dd565b0390fd5b5060ff60038401541615612258565b826347b467b960e11b5f5260045260245260445ffd5b906006548083101561231657506122f38261185a565b509160ff6003840154166123045750565b6393fbc70960e01b5f5260045260245ffd5b9050801561075b575f1981019081116107475790632d71397360e11b5f5260045260245260445ffd5b612349828261270e565b918261235457505090565b5f91825260016020526040909120612375916001600160a01b03169061259e565b5090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806123c7575b156123c3576013193601368111610747573560601c90565b3390565b5060143610156123ab565b6123db8161185a565b509160038301805460ff811661257f5760019060ff191617815560018060a01b0384541660018501546002860190604051915f9080549061241b826118a5565b91600181169081156125685750600114612536575b5050915f939181859403925af13d15612531573d61244d81611a5c565b9061245b604051928361198d565b81525f60203d92013e5b15612521575081906001600160a01b03167f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac5f80a3805f52600460205260405f20545f5b8181106124be5750505060045f910155600190565b825f52600460205260405f2090815415611891575f9182526020808320548584526005825260408085206001600160a01b03909216808652918352808520805460ff191690558685526004909252922060019261251a9161259e565b50016124a9565b805460ff19169055505f92915050565b612465565b9091505f5260205f205f905b82821061255457505082018183612430565b600181602092548488015201910190612542565b60ff19168652505080151502830190508183612430565b5050505050600190565b8054821015611891575f5260205f2001905f90565b906001820191815f528260205260405f20548015155f14612671575f1981018181116107475782545f1981019190821161074757818103612626575b50505080548015612612575f1901906125f38282612589565b8154905f199060031b1b19169055555f526020525f6040812055600190565b634e487b7160e01b5f52603160045260245ffd5b61265c6126366126469386612589565b90549060031b1c92839286612589565b819391549060031b91821b915f19901b19161790565b90555f528360205260405f20555f80806125da565b505050505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff191660011790556126d3612379565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff19169055612766612379565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b5f82815260018201602052604090205461270857805490600160401b82101561197957826127d3612646846001809601855584612589565b90558054925f520160205260405f205560019056fee2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70a164736f6c634300081c000a",
    "sourceMap": "1058:26210:26:-:0;;;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;;;;1315:72:220;;:::i;:::-;26689:18:26;;:::i;:::-;1058:26210;;;9150:9;1058:26210;;9161:21;1058:26210;;;;-1:-1:-1;;;;;1058:26210:26;;;;9128:55;;1058:26210;9128:55;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;13617:75;13770:6;1058:26210;;13617:75;1058:26210;;;;;;:::i;:::-;2475:4:185;;;;:::i;:::-;1315:72:220;;:::i;:::-;2466:103:221;;:::i;:::-;26689:18:26;;:::i;:::-;1058:26210;;-1:-1:-1;;;13455:60:26;;;;-1:-1:-1;;;;;1058:26210:26;;;13455:60;;1058:26210;;;;;;;;13455:60;;1058:26210;;;13535:42;;13455:60;1058:26210;;13455:60;:::i;:::-;1058:26210;;;;;:::i;:::-;13535:42;;;:::i;:::-;1058:26210;;;;;;;;;;;;;;;;;;;;;;13617:75;;;:::i;:::-;;;;13770:6;;:::i;:::-;1058:26210;3068:21:221;1058:26210:26;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;6160:23;1058:26210;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;4747:26:185;1058:26210:26;;;;:::i;:::-;4717:18:185;2475:4;4717:18;;3901:6;1058:26210:26;3901:6:185;1058:26210:26;;3901:22:185;1058:26210:26;3901:6:185;1058:26210:26;3901:22:185;1058:26210:26;3810:120:185;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;1058:26210:26;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;:::i;:::-;2475:4:185;;;;;:::i;:::-;1315:72:220;;:::i;:::-;2466:103:221;;:::i;:::-;17414:14:26;;17410:44;;17531:26;;;;;:59;;;1058:26210;17531:102;;;;1058:26210;17531:150;;;;1058:26210;17514:206;;26689:18;;;;;:::i;:::-;17782:24;;;;:::i;:::-;17873:13;-1:-1:-1;;;;;1058:26210:26;;;;17888:13;;;;;;1058:26210;3068:21:221;1058:26210:26;;;;;;;;:::i;:::-;;;;17903:3;17955:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;17969:22;;;;:::i;:::-;17942:50;;;;:::i;:::-;18039:10;;;;;:::i;:::-;;;;:::i;:::-;18051:9;;;;;:::i;:::-;1058:26210;18068:11;;;;:::i;:::-;1058:26210;;;;;:::i;:::-;18021:59;;;;:::i;:::-;18006:74;;;;:::i;:::-;1058:26210;18155:12;;;:::i;:::-;1058:26210;18169:10;;;;:::i;:::-;;;;:::i;:::-;18181:9;;;;:::i;:::-;1058:26210;18192:12;;;;:::i;:::-;;;;:::i;:::-;18206:22;;;;:::i;:::-;18230:11;;;;;;:::i;:::-;1058:26210;;;;;;;;;;;;;18100:155;;;;;:::i;:::-;;;;;18333:12;;;:::i;:::-;1058:26210;18347:6;;;;:::i;:::-;1058:26210;;17873:13;;17514:206;12248:21;;;1058:26210;17699:21;1058:26210;;17699:21;17531:150;17653:28;;;;;17531:150;;:102;17594:39;;;;;17531:102;;:59;17561:29;;;;;17531:59;;17410:44;12059:17;;;1058:26210;17437:17;1058:26210;;17437:17;1058:26210;;;;;;-1:-1:-1;;1058:26210:26;;;;2475:4:185;;:::i;:::-;1315:72:220;;:::i;:::-;2466:103:221;;:::i;:::-;18603:12:26;26689:18;;:::i;:::-;1058:26210;;18603:12;:::i;:::-;1058:26210;3068:21:221;1058:26210:26;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;21620:12;1058:26210;21609:30;;;;21605:146;;1058:26210;;;;;;;;;;;21844:20;;;:::i;:::-;21933:13;1058:26210;21948:9;;;;;;1058:26210;;;;;;;:::i;21959:3::-;1058:26210;;;;;;;;5662:18:237;1058:26210:26;;;;5662:18:237;:::i;:::-;1058:26210:26;;;;;;;;;;;;21978:40;;;;:::i;:::-;1058:26210;;;;;;;;;;21933:13;;21605:146;21686:23;;;;-1:-1:-1;;1058:26210:26;;;;;;;21686:53;;20808:78;;;1058:26210;21662:78;1058:26210;;;;;;21662:78;1058:26210;;;;;;;;;;;;21686:53;;1058:26210;21686:53;;;1058:26210;;;;;;-1:-1:-1;;1058:26210:26;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1058:26210:26;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;16377:101;1058:26210;16556:6;1058:26210;;;;;;:::i;:::-;2475:4:185;;;;;:::i;:::-;1315:72:220;;:::i;:::-;2466:103:221;;:::i;:::-;16377:101:26;26689:18;;:::i;:::-;16251:43;16314:47;16251:43;;;;;:::i;:::-;1058:26210;;;;;:::i;:::-;16314:47;;;;:::i;:::-;1058:26210;;;;;;;;;;;;;;;;;;;;;;16377:101;;;:::i;1058:26210::-;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;-1:-1:-1;;;;;;;;;;;1058:26210:26;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;6046:33;1058:26210;6046:33;;;;;;;;:::i;:::-;1058:26210;;;;;;;;;;;6046:33;;1058:26210;;6046:33;1058:26210;;6046:33;1058:26210;6046:33;1058:26210;6046:33;;;;1058:26210;:::i;:::-;;;;:::i;:::-;;;6046:33;;;1058:26210;;6046:33;1058:26210;;6046:33;;1058:26210;;;;;6046:33;;;;;1058:26210;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1058:26210:26;;;;;;:::i;:::-;;;;;;;;;;;2954:29:185;1058:26210:26;;;;;;-1:-1:-1;1058:26210:26;;;;;;-1:-1:-1;1058:26210:26;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;;;;;5662:18:237;1058:26210:26;;;;;5662:18:237;;:::i;:::-;1058:26210:26;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;2475:4:185;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1058:26210:26;;;;;;;10214:14;;:40;;;;1058:26210;10210:94;;-1:-1:-1;10314:20:26;1058:26210;;;10349:43;1058:26210;-1:-1:-1;;;;;26689:18:26;;:::i;:::-;1058:26210;;;;;;;10349:43;1058:26210;10210:94;10263:41;;;;1058:26210;10263:41;1058:26210;;;;;;10263:41;10214:40;10232:22;;;;10214:40;;1058:26210;;;;;;-1:-1:-1;;1058:26210:26;;;;2475:4:185;;:::i;:::-;1315:72:220;;:::i;:::-;2408:4;1058:26210:26;;2398:14:220;1058:26210:26;;;2398:14:220;1058:26210:26;2427:20:220;1058:26210:26;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:26;;;;;2427:20:220;1058:26210:26;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;1707:17:202;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;:::i;:::-;2475:4:185;;;:::i;:::-;1315:72:220;;:::i;:::-;2466:103:221;;:::i;:::-;18890:21:26;;18886:51;;26689:18;;:::i;:::-;19041:13;1058:26210;19056:20;;;;;;1058:26210;3068:21:221;1058:26210:26;;19078:3;19106:12;19120:6;19106:12;;1058:26210;19106:12;;;;:::i;:::-;1058:26210;19120:6;:::i;:::-;1058:26210;19041:13;;1058:26210;;;;;;-1:-1:-1;;1058:26210:26;;;;;;1796:7:220;1058:26210:26;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;:::i;:::-;;;1707:17:202;-1:-1:-1;;;;;1058:26210:26;;;;;1931:31:202;;;;1058:26210:26;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;-1:-1:-1;;;;;;;;;;;1058:26210:26;;1933:12:188;1058:26210:26;;;;20244:20;1058:26210;20244:20;:::i;:::-;20341:13;1058:26210;20356:9;;;;;;1058:26210;;;;;;;:::i;20367:3::-;-1:-1:-1;;;;;;;;;;;1058:26210:26;;1933:12:188;1058:26210:26;;;;1933:12:188;5662:18:237;1058:26210:26;;5662:18:237;:::i;:::-;1058:26210:26;;;;;;;;;;;;20386:43;;;;:::i;:::-;1058:26210;;;;;;;;;;20341:13;;1058:26210;;;;;;-1:-1:-1;;1058:26210:26;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;11183:60;1058:26210;;11339:6;1058:26210;;;;;;:::i;:::-;2475:4:185;;;;;:::i;:::-;1315:72:220;;:::i;:::-;2466:103:221;;:::i;:::-;26689:18:26;;:::i;:::-;1058:26210;11183:60;11125:43;1058:26210;;;;;:::i;:::-;;;;;;:::i;:::-;11125:43;;;;:::i;:::-;1058:26210;;;;;;;;;;;;;;;;;;;;;;11183:60;;;:::i;1058:26210::-;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;20766:12;1058:26210;20755:30;;;;20751:146;;20913:21;;;:::i;:::-;1058:26210;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1058:26210:26;;;;2475:4:185;;:::i;:::-;1796:7:220;1058:26210:26;;;;2140:9:220;2136:62;;-1:-1:-1;;1058:26210:26;1796:7:220;1058:26210:26;2674:22:220;1058:26210:26;26689:18;;:::i;2136:62:220:-;2172:15;;;1058:26210:26;2172:15:220;1058:26210:26;;2172:15:220;1058:26210:26;;;;;;-1:-1:-1;;1058:26210:26;;;;;;:::i;:::-;-1:-1:-1;;;;;26689:18:26;;:::i;:::-;1058:26210;-1:-1:-1;;;;;1058:26210:26;;5421:34:185;5417:102;;5529:37;1058:26210:26;;;5529:37:185;:::i;5417:102::-;5478:30;;;1058:26210:26;5478:30:185;1058:26210:26;;5478:30:185;1058:26210:26;;;;;;-1:-1:-1;;1058:26210:26;;;;;;:::i;:::-;;;;;5909:65;1058:26210;;;;;5909:65;1058:26210;;;;;;-1:-1:-1;1058:26210:26;;;;;;-1:-1:-1;1058:26210:26;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;:::i;:::-;2475:4:185;4300:18;;3901:6;1058:26210:26;3901:6:185;1058:26210:26;;3901:22:185;1058:26210:26;3901:6:185;1058:26210:26;3901:22:185;1058:26210:26;3810:120:185;;2475:4;2865:31:188;;;;:::i;:::-;2906:69;;1058:26210:26;2906:69:188;1058:26210:26;;;;;;;;;;;9425:50:237;;-1:-1:-1;;;;;1058:26210:26;;9425:50:237;:::i;1058:26210:26:-;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;3901:6:185;1058:26210:26;3901:6:185;1058:26210:26;;3901:22:185;1058:26210:26;3901:6:185;1058:26210:26;3901:22:185;1058:26210:26;3810:120:185;;1058:26210:26;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;2475:4:185;;:::i;:::-;1315:72:220;;:::i;:::-;19378:25:26;;;:::i;:::-;26689:18;;:::i;:::-;1058:26210;;;;;;;10387:55:237;1058:26210:26;;;;;;;;;;10387:55:237;;5006:14;4910:129;-1:-1:-1;1058:26210:26;5006:14:237;1058:26210:26;;;-1:-1:-1;1058:26210:26;;5006:26:237;;4910:129;;10387:55;19573:40:26;19569:82;;1058:26210;;;;;;;;9746:53:237;1058:26210:26;;;;9746:53:237;:::i;:::-;;1058:26210:26;;;19778:13;1058:26210;;;;;;-1:-1:-1;1058:26210:26;;;;-1:-1:-1;1058:26210:26;;;;;;;;19899:20;1058:26210;;;;;;;19944:35;1058:26210;19944:35;;1058:26210;19569:82;19622:29;;;;;1058:26210;19622:29;1058:26210;;;;;;19622:29;1058:26210;;;;;;;:::i;:::-;2475:4:185;;;;;;;:::i;:::-;1315:72:220;;:::i;:::-;2466:103:221;;:::i;:::-;14516:14:26;;14512:44;;14620:22;;;;;:53;;;1058:26210;14620:85;;;;1058:26210;14616:144;;26689:18;;;;;:::i;:::-;14821:24;;;;:::i;:::-;14913:13;-1:-1:-1;;;;;1058:26210:26;;;;14928:13;;;;;;1058:26210;3068:21:221;1058:26210:26;;;;;;;;:::i;14943:3::-;15031:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;15038:10;;;;:::i;:::-;1058:26210;;-1:-1:-1;;;14982:67:26;;;;-1:-1:-1;;;;;1058:26210:26;;;;14982:67;;;1058:26210;;;;;;;;;;14982:67;;;1058:26210;;14982:67;:::i;:::-;15096:9;;;;:::i;:::-;;;;:::i;:::-;15116:11;;;;:::i;:::-;1058:26210;;;;;:::i;:::-;15078:50;;;;:::i;:::-;15063:65;;;;:::i;:::-;1058:26210;15186:12;;;:::i;:::-;1058:26210;15200:9;;;;:::i;:::-;;;;:::i;:::-;15211:5;;;;;;;:::i;:::-;;;;:::i;:::-;15218:10;;;;:::i;:::-;1058:26210;15230:11;;;;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;15147:95;;1058:26210;;15147:95;:::i;:::-;;;;;15320:12;;;;;:::i;:::-;1058:26210;15334:6;;;;:::i;:::-;1058:26210;;14913:13;;14620:85;14677:28;;;;;14620:85;;:53;14646:27;;;;;14620:53;;1058:26210;;;;;;;:::i;:::-;2475:4:185;;;;;;;;;:::i;:::-;1315:72:220;;:::i;:::-;2466:103:221;;:::i;:::-;12036:14:26;;12032:44;;12140:25;;;;;:53;;;1058:26210;12140:85;;;;1058:26210;12136:144;;26689:18;;;;;:::i;:::-;12341:24;;;;:::i;:::-;12430:13;-1:-1:-1;;;;;1058:26210:26;;;;12445:13;;;;;;1058:26210;3068:21:221;1058:26210:26;;;;;;;;:::i;12460:3::-;12512:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;12519:8;;;;:::i;:::-;1058:26210;12529:7;;;;:::i;:::-;12538:11;;;;;;:::i;:::-;1058:26210;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;12494:56;;;;:::i;:::-;12479:71;;;;:::i;:::-;1058:26210;12595:12;;;:::i;:::-;1058:26210;12609:5;;;;:::i;:::-;;;;:::i;:::-;12616:8;;;;;:::i;:::-;1058:26210;12626:7;;;;:::i;:::-;12635:11;;;;;;:::i;:::-;1058:26210;;;;;;;;;;;;;12569:78;;;;;:::i;:::-;;;;;12725:12;;;;;:::i;:::-;1058:26210;12739:6;;;;:::i;:::-;1058:26210;;12430:13;;12140:85;12197:28;;;;;12140:85;;:53;12169:24;;;;;12140:53;;1058:26210;;;;;;-1:-1:-1;;1058:26210:26;;;;;10387:55:237;1058:26210:26;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;5006:14:237;;;-1:-1:-1;1058:26210:26;;;5006:26:237;;;4910:129;10387:55;1058:26210:26;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;837:57:188;;;:97;;;;1058:26210:26;;;;;;;837:97:188;-1:-1:-1;;;2673:47:185;;;-1:-1:-1;2673:87:185;;;;837:97:188;;;;;2673:87:185;-1:-1:-1;;;862:40:231;;-1:-1:-1;2673:87:185;;;1058:26210:26;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1058:26210:26;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;;;-1:-1:-1;;1058:26210:26;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;20766:12;1058:26210;;;;;;20766:12;-1:-1:-1;1058:26210:26;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1058:26210:26;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;:::o;:::-;;;;-1:-1:-1;1058:26210:26;;;;;-1:-1:-1;1058:26210:26;;;;14982:67;;1058:26210;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;:::o;:::-;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;14982:67;1058:26210;14982:67;;1058:26210;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;1058:26210:26;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1058:26210:26;;;;;;-1:-1:-1;;1058:26210:26;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;;;-1:-1:-1;;1058:26210:26;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;14982:67;;1058:26210;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;1058:26210:26;;;;;;;:::o;3199:103:185:-;26689:18:26;;:::i;:::-;-1:-1:-1;;;;;1058:26210:26;;2954:6:185;1058:26210:26;;;;;;;;;;;;3519:23:185;3515:108;;3199:103;:::o;3515:108::-;-1:-1:-1;;;2954:6:185;3565:47;;;-1:-1:-1;;;;;1058:26210:26;;;;3565:47:185;1058:26210:26;-1:-1:-1;;;;;;;;;;;1058:26210:26;;;;3565:47:185;3199:103;26689:18:26;;:::i;:::-;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;3519:23:185;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;1058:26210:26;3565:47:185;1058:26210:26;;;;;;3565:47:185;1058:26210:26;;;;;;3565:47:185;3199:103;26689:18:26;;:::i;:::-;2954:6:185;1058:26210:26;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;3519:23:185;3515:108;;3199:103;;:::o;3515:108::-;3565:47;;;2954:6;3565:47;1058:26210:26;;;;;;3565:47:185;1058:26210:26;;;;2954:6:185;3565:47;1878:128:220;1058:26210:26;1796:7:220;1058:26210:26;;1939:61:220;;1878:128::o;1939:61::-;1974:15;;;-1:-1:-1;1974:15:220;;-1:-1:-1;1974:15:220;2575:307:221;1899:1;2702:7;1058:26210:26;2702:18:221;2698:86;;1899:1;2702:7;1058:26210:26;2575:307:221:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:221;;-1:-1:-1;2743:30:221;1058:26210:26;;;;;;;;;:::o;:::-;-1:-1:-1;1058:26210:26;;-1:-1:-1;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1058:26210:26;;;;;;;;;-1:-1:-1;1058:26210:26;;;;22340:512;;;;;22545:12;1058:26210;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1058:26210:26;;;;22653:105;;;1058:26210;;;;22653:105;;1058:26210;;;22653:105;;;1058:26210;;;22653:105;;;1058:26210;;;;22653:105;;1058:26210;;;22653:105;;;-1:-1:-1;;;1058:26210:26;;;;;;;;22545:12;1058:26210;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;1058:26210:26;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;:::i;:::-;;;:::i;:::-;22653:105;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;:::i;:::-;;;:::i;:::-;22653:105;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22340:512::o;1058:26210::-;;;;-1:-1:-1;1058:26210:26;;;;;14982:67;;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22340:512::o;1058:26210::-;;;;;;;;;;;;;;;;;;;;;;;22653:105;1058:26210;;;;;;;;;;;;;;;;;14982:67;;;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22653:105;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;22340:512;;;;;;22545:12;1058:26210;;;;;;;;:::i;:::-;;;;;;;;;22653:105;;;1058:26210;;;;22653:105;;1058:26210;;;22653:105;;;1058:26210;-1:-1:-1;1058:26210:26;;22653:105;;;1058:26210;-1:-1:-1;1058:26210:26;;22653:105;;;1058:26210;;;-1:-1:-1;;;1058:26210:26;;;;;;;;22545:12;1058:26210;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;1058:26210:26;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;:::i;:::-;22653:105;1058:26210;;;;;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;:::i;:::-;22653:105;1058:26210;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:26;;;;;;;;;;;;;;;;;;;;;14982:67;;1058:26210;;;;-1:-1:-1;1058:26210:26;;-1:-1:-1;1058:26210:26;;-1:-1:-1;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;22340:512::o;1058:26210::-;;;22653:105;1058:26210;;;;;;;;;;;;;;;;;14982:67;;;1058:26210;;;;-1:-1:-1;1058:26210:26;;-1:-1:-1;1058:26210:26;;-1:-1:-1;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22653:105;1058:26210;;;;;;;;;;;;;;;;23564:1206;23663:25;;;:::i;:::-;1058:26210;;-1:-1:-1;1058:26210:26;23796:13;1058:26210;;;-1:-1:-1;1058:26210:26;10387:55:237;1058:26210:26;;;;;;;10387:55:237;;5006:14;4910:129;-1:-1:-1;1058:26210:26;5006:14:237;1058:26210:26;;;-1:-1:-1;1058:26210:26;;5006:26:237;;4910:129;;10387:55;23792:91:26;;1058:26210;-1:-1:-1;1058:26210:26;23796:13;1058:26210;;9425:50:237;1058:26210:26;;-1:-1:-1;1058:26210:26;9425:50:237;:::i;:::-;;1058:26210:26;-1:-1:-1;1058:26210:26;24005:13;1058:26210;;;-1:-1:-1;1058:26210:26;;-1:-1:-1;1058:26210:26;;;;-1:-1:-1;1058:26210:26;24041:4;1058:26210;;;;;;;;24129:20;23796:13;24129:20;;1058:26210;24041:4;1058:26210;;;;;;24174:38;-1:-1:-1;24174:38:26;;24324:8;1058:26210;-1:-1:-1;24300:32:26;:49;;;23564:1206;24296:468;;23564:1206;;;:::o;24296:468::-;24393:39;;;;:::i;:::-;24450:21;24446:308;;23564:1206;;:::o;24446:308::-;1058:26210;;;;-1:-1:-1;;;24697:42:26;;23796:13;24697:42;;1058:26210;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;;;24730:8;;1058:26210;:::i;:::-;24697:42;;;24300:49;24337:12;1058:26210;24337:12;;;1058:26210;;24336:13;24300:49;;23792:91;23847:36;;;;-1:-1:-1;23847:36:26;23796:13;1058:26210;;;;-1:-1:-1;23847:36:26;23035:344;;23151:12;1058:26210;23140:30;;;;23136:146;;23297:21;;;;:::i;:::-;23291:27;;1058:26210;23332:12;23291:27;23332:12;1058:26210;;23328:44;;23035:344;:::o;23328:44::-;23353:19;;;-1:-1:-1;23353:19:26;;1058:26210;;-1:-1:-1;23353:19:26;23136:146;23217:53;-1:-1:-1;23217:23:26;;;;-1:-1:-1;;1058:26210:26;;;;;;;23217:53;20808:78;;;-1:-1:-1;23193:78:26;;1058:26210;;;;-1:-1:-1;23193:78:26;3108:262:188;3226:32;;;;:::i;:::-;3268:72;;;;3349:14;;3108:262;:::o;3268:72::-;-1:-1:-1;1058:26210:26;;;3295:12:188;1058:26210:26;;;;;;9746:53:237;;-1:-1:-1;;;;;1058:26210:26;;9746:53:237;:::i;:::-;;3108:262:188;:::o;2206:429:202:-;2422:10;1707:17;-1:-1:-1;;;;;1058:26210:26;1931:31:202;;2403:71;;2206:429;2399:230;;;1058:26210:26;;2312:8:202;1058:26210:26;2312:8:202;1058:26210:26;;;;;;;;2490:72:202:o;2399:230::-;2422:10;2593:25;:::o;2403:71::-;2312:8;3483:2;2312:8;2437:37;;2403:71;;25065:1383:26;25196:21;;;:::i;:::-;25309:12;;;;;1058:26210;;;;;25305:29;;25491:4;1058:26210;;;;;;;;;;;;;;;25491:4;25582:9;;1058:26210;25594:8;;;1058:26210;;;;;;;;;;;;:::i;:::-;;25491:4;1058:26210;;;25491:4;;;;1058:26210;;;;;;25562:41;;;1058:26210;25562:41;;;;;;;;;1058:26210;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;25617:12;25613:176;;-1:-1:-1;1058:26210:26;;-1:-1:-1;;;;;1058:26210:26;25804:37;1058:26210;;25804:37;1058:26210;;;25945:13;1058:26210;;;;;;;26006:18;;;;;;26375:20;;;25945:13;1058:26210;26375:20;;1058:26210;25491:4;25065:1383;:::o;26026:3::-;1058:26210;;;25945:13;1058:26210;;;;;5662:18:237;1058:26210:26;;;;;;;;;;;;;;;;;26173:13;1058:26210;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;25945:13;1058:26210;;;;;-1:-1:-1;;9746:53:237;;;:::i;:::-;;1058:26210:26;25991:13;;25613:176;1058:26210;;-1:-1:-1;;1058:26210:26;;;-1:-1:-1;;;25766:12:26;-1:-1:-1;;25766:12:26:o;1058:26210::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;25491:4;1058:26210;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;-1:-1:-1;;1058:26210:26;;;;;;;-1:-1:-1;1058:26210:26;;;;25305:29;25323:11;;;;;25330:4;25323:11;:::o;1058:26210::-;;;;;;;;-1:-1:-1;1058:26210:26;;-1:-1:-1;1058:26210:26;;;-1:-1:-1;1058:26210:26;:::o;2910:1368:237:-;;3105:14;;;1058:26210:26;;;;;;;;;;;3141:13:237;;;3137:1135;3141:13;;;-1:-1:-1;;1058:26210:26;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;;;3616:23:237;;;3612:378;;3137:1135;1058:26210:26;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3105:14:237;4207:11;:::o;1058:26210:26:-;;;;;;;;;;;;3612:378:237;1058:26210:26;3679:22:237;3800:23;3679:22;;;:::i;:::-;1058:26210:26;;;;;;3800:23:237;;;;;:::i;:::-;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3612:378:237;;;;;3137:1135;4249:12;;;;1058:26210:26;4249:12:237;:::o;6179:316:185:-;1058:26210:26;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;;;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:26;;6370:40:185;1058:26210:26;;6370:40:185;6347:4;6424:11;:::o;6272:217::-;6466:12;;1058:26210:26;6466:12:185;:::o;6732:317::-;1058:26210:26;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:26;;;;;;;;;;;;-1:-1:-1;;1058:26210:26;;;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:26;;6924:40:185;1058:26210:26;;6924:40:185;1058:26210:26;6978:11:185;:::o;2336:406:237:-;-1:-1:-1;1058:26210:26;;;5006:14:237;;;1058:26210:26;;;;;;2420:21:237;;1058:26210:26;;;-1:-1:-1;;;1058:26210:26;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2615:14:237;1058:26210:26;;;;;;;2671:11:237;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "44076": [
        {
          "start": 2980,
          "length": 32
        },
        {
          "start": 3227,
          "length": 32
        },
        {
          "start": 9084,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "SIGNER_ROLE()": "a1ebf35d",
    "batchConfirm(uint256[])": "62391520",
    "batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])": "c13138f1",
    "batchSubmitERC20Transfers(address[],address[],uint256[],string[])": "205e7c06",
    "batchSubmitTransactions(address[],uint256[],bytes[],string[])": "0f052056",
    "confirm(uint256)": "ba0179b5",
    "confirmations(uint256,address)": "3411c81c",
    "getConfirmers(uint256)": "b779e1c0",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoleMembers(bytes32)": "a3246ad3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasConfirmed(uint256,address)": "08aff933",
    "hasRole(bytes32,address)": "91d14854",
    "isTrustedForwarder(address)": "572b6c05",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceRole(bytes32,address)": "36568abe",
    "required()": "dc8452cd",
    "requirement()": "b7563930",
    "revoke(uint256)": "20c5429b",
    "revokeRole(bytes32,address)": "d547741f",
    "setRequirement(uint256)": "8f56015f",
    "signers()": "46f0975a",
    "submitContractCall(address,uint256,bytes4,bytes,string)": "aa787c1e",
    "submitERC20Transfer(address,address,uint256,string)": "ee0e6f65",
    "submitTransaction(address,uint256,bytes,string)": "46e24b08",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transaction(uint256)": "46bd0841",
    "transactions(uint256)": "9ace38c2",
    "trustedForwarder()": "7da0a877",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"AlreadyConfirmed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyBatchArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signerCount\",\"type\":\"uint256\"}],\"name\":\"InvalidRequirement\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"NotConfirmed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxIndex\",\"type\":\"uint256\"}],\"name\":\"TxDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ConfirmTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"RequirementChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"RevokeConfirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"abiEncodedArguments\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"SubmitContractCallTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"SubmitERC20TransferTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"SubmitTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SIGNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"txIndices\",\"type\":\"uint256[]\"}],\"name\":\"batchConfirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes[]\",\"name\":\"abiEncodedArguments\",\"type\":\"bytes[]\"},{\"internalType\":\"string[]\",\"name\":\"comments\",\"type\":\"string[]\"}],\"name\":\"batchSubmitContractCalls\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"txIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"comments\",\"type\":\"string[]\"}],\"name\":\"batchSubmitERC20Transfers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"txIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"string[]\",\"name\":\"comments\",\"type\":\"string[]\"}],\"name\":\"batchSubmitTransactions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"txIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"confirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"confirmations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"getConfirmers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"hasConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"setRequirement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"signers_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedArguments\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"submitContractCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"submitERC20Transfer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"submitTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"transaction\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"internalType\":\"struct ATKVault.Transaction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:security-contact\":\"support@settlemint.com\",\"details\":\"Implements OpenZeppelin's AccessControl, ERC2771Context, Pausable, and ReentrancyGuard\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AlreadyConfirmed(uint256,address)\":[{\"params\":{\"signer\":\"The signer's address\",\"txIndex\":\"The transaction index\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExecutionFailed(uint256,address,bytes)\":[{\"params\":{\"data\":\"The call data\",\"to\":\"The destination address\",\"txIndex\":\"The transaction index\"}}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidRequirement(uint256,uint256)\":[{\"params\":{\"requested\":\"The requested number of confirmations\",\"signerCount\":\"The total number of signers\"}}],\"NotConfirmed(uint256,address)\":[{\"params\":{\"signer\":\"The signer's address\",\"txIndex\":\"The transaction index\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"TxDoesNotExist(uint256,uint256)\":[{\"params\":{\"maxIndex\":\"The maximum valid index\",\"txIndex\":\"The requested transaction index\"}}],\"TxExecuted(uint256)\":[{\"params\":{\"txIndex\":\"The transaction index\"}}]},\"events\":{\"ConfirmTransaction(address,uint256)\":{\"params\":{\"signer\":\"Address of the signer who confirmed the transaction\",\"txIndex\":\"Index of the confirmed transaction\"}},\"Deposit(address,uint256,uint256)\":{\"params\":{\"balance\":\"New total balance of the vault\",\"sender\":\"Address that sent the ETH\",\"value\":\"Amount of ETH deposited\"}},\"ExecuteTransaction(address,uint256)\":{\"params\":{\"signer\":\"Address of the signer who triggered execution\",\"txIndex\":\"Index of the executed transaction\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RequirementChanged(address,uint256)\":{\"params\":{\"account\":\"Address of the account that changed the requirement\",\"required\":\"New number of required confirmations\"}},\"RevokeConfirmation(address,uint256)\":{\"params\":{\"signer\":\"Address of the signer who revoked confirmation\",\"txIndex\":\"Index of the transaction\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"SubmitContractCallTransaction(address,uint256,address,uint256,bytes4,bytes,string)\":{\"params\":{\"abiEncodedArguments\":\"ABI-encoded arguments for the function call\",\"comment\":\"Description of the transaction\",\"selector\":\"Function selector (first 4 bytes of the function signature)\",\"signer\":\"Address of the signer who submitted the transaction\",\"target\":\"Contract address to call\",\"txIndex\":\"Index of the transaction in the transactions array\",\"value\":\"Amount of ETH to send with the call\"}},\"SubmitERC20TransferTransaction(address,uint256,address,address,uint256,string)\":{\"params\":{\"amount\":\"Amount of tokens to transfer\",\"comment\":\"Description of the transaction\",\"signer\":\"Address of the signer who submitted the transaction\",\"to\":\"Recipient address for the token transfer\",\"token\":\"Address of the ERC20 token to transfer\",\"txIndex\":\"Index of the transaction in the transactions array\"}},\"SubmitTransaction(address,uint256,address,uint256,bytes,string)\":{\"params\":{\"comment\":\"Description of the transaction\",\"data\":\"Function call data\",\"signer\":\"Address of the signer who submitted the transaction\",\"to\":\"Destination address for the transaction\",\"txIndex\":\"Index of the transaction in the transactions array\",\"value\":\"Amount of ETH to send with the transaction\"}},\"TransactionExecutionFailed(uint256,address,bytes)\":{\"params\":{\"data\":\"Call data of the failed call\",\"to\":\"Destination address of the failed call\",\"txIndex\":\"Index of the failed transaction\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"batchConfirm(uint256[])\":{\"params\":{\"txIndices\":\"Array of transaction indices to confirm\"}},\"batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])\":{\"params\":{\"abiEncodedArguments\":\"Array of ABI-encoded arguments\",\"comments\":\"Array of transaction descriptions\",\"selectors\":\"Array of function selectors\",\"targets\":\"Array of contract addresses\",\"values\":\"Array of ETH amounts\"},\"returns\":{\"txIndices\":\"Array of created transaction indices\"}},\"batchSubmitERC20Transfers(address[],address[],uint256[],string[])\":{\"params\":{\"amounts\":\"Array of token amounts\",\"comments\":\"Array of transaction descriptions\",\"to\":\"Array of recipient addresses\",\"tokens\":\"Array of ERC20 token addresses\"},\"returns\":{\"txIndices\":\"Array of created transaction indices\"}},\"batchSubmitTransactions(address[],uint256[],bytes[],string[])\":{\"params\":{\"comments\":\"Array of transaction descriptions\",\"data\":\"Array of call data\",\"to\":\"Array of destination addresses\",\"value\":\"Array of ETH amounts\"},\"returns\":{\"txIndices\":\"Array of created transaction indices\"}},\"confirm(uint256)\":{\"params\":{\"txIndex\":\"Index of the transaction to confirm\"}},\"constructor\":{\"params\":{\"_required\":\"Number of confirmations required to execute a transaction\",\"_signers\":\"Array of initial signer addresses\",\"forwarder\":\"Address of the ERC2771 forwarder for meta-transactions\",\"initialOwner\":\"Address that will have admin role\"}},\"getConfirmers(uint256)\":{\"params\":{\"txIndex\":\"Index of the transaction\"},\"returns\":{\"_0\":\"Array of signer addresses who confirmed the transaction\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasConfirmed(uint256,address)\":{\"params\":{\"signer\":\"Address of the signer\",\"txIndex\":\"Index of the transaction\"},\"returns\":{\"_0\":\"True if the signer has confirmed the transaction\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"pause()\":{\"details\":\"Can only be called by admin\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"requirement()\":{\"returns\":{\"_0\":\"The number of required confirmations\"}},\"revoke(uint256)\":{\"params\":{\"txIndex\":\"Index of the transaction\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setRequirement(uint256)\":{\"details\":\"Can only be called by admin\",\"params\":{\"_required\":\"New number of required confirmations\"}},\"signers()\":{\"returns\":{\"signers_\":\"Array of signer addresses\"}},\"submitContractCall(address,uint256,bytes4,bytes,string)\":{\"params\":{\"abiEncodedArguments\":\"ABI-encoded arguments for the function call\",\"comment\":\"Description of the transaction\",\"selector\":\"Function selector (first 4 bytes of the function signature)\",\"target\":\"Address of the contract to call\",\"value\":\"Amount of ETH to send with the call\"},\"returns\":{\"txIndex\":\"Index of the created transaction\"}},\"submitERC20Transfer(address,address,uint256,string)\":{\"params\":{\"amount\":\"Amount of tokens to transfer\",\"comment\":\"Description of the transaction\",\"to\":\"Recipient address\",\"token\":\"Address of the ERC20 token\"},\"returns\":{\"txIndex\":\"Index of the created transaction\"}},\"submitTransaction(address,uint256,bytes,string)\":{\"params\":{\"comment\":\"Description of the transaction\",\"data\":\"Call data for the transaction\",\"to\":\"Destination address\",\"value\":\"Amount of ETH to send\"},\"returns\":{\"txIndex\":\"Index of the created transaction\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transaction(uint256)\":{\"params\":{\"txIndex\":\"Index of the transaction\"},\"returns\":{\"_0\":\"Transaction struct containing all transaction details\"}},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"unpause()\":{\"details\":\"Can only be called by admin\"}},\"stateVariables\":{\"confirmations\":{\"details\":\"txIndex => signer address => has confirmed\"}},\"title\":\"ATKVault - A multi-signature wallet with role-based access control\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyConfirmed(uint256,address)\":[{\"notice\":\"Error thrown when a signer tries to confirm a transaction they already confirmed\"}],\"ArrayLengthMismatch()\":[{\"notice\":\"Error thrown when array lengths don't match in batch operations\"}],\"EmptyBatchArray()\":[{\"notice\":\"Error thrown when an empty array is provided for batch operations\"}],\"ExecutionFailed(uint256,address,bytes)\":[{\"notice\":\"Error thrown when transaction execution fails\"}],\"InvalidRequirement(uint256,uint256)\":[{\"notice\":\"Error thrown when an invalid requirement is set\"}],\"NotConfirmed(uint256,address)\":[{\"notice\":\"Error thrown when a signer tries to revoke a confirmation they didn't make\"}],\"TxDoesNotExist(uint256,uint256)\":[{\"notice\":\"Error thrown when accessing a non-existent transaction\"}],\"TxExecuted(uint256)\":[{\"notice\":\"Error thrown when trying to confirm an already executed transaction\"}]},\"events\":{\"ConfirmTransaction(address,uint256)\":{\"notice\":\"Emitted when a transaction is confirmed by a signer\"},\"Deposit(address,uint256,uint256)\":{\"notice\":\"Emitted when ETH is deposited to the vault\"},\"ExecuteTransaction(address,uint256)\":{\"notice\":\"Emitted when a transaction is executed\"},\"RequirementChanged(address,uint256)\":{\"notice\":\"Emitted when the confirmation requirement changes\"},\"RevokeConfirmation(address,uint256)\":{\"notice\":\"Emitted when a signer revokes their confirmation\"},\"SubmitContractCallTransaction(address,uint256,address,uint256,bytes4,bytes,string)\":{\"notice\":\"Emitted when a contract call transaction is submitted\"},\"SubmitERC20TransferTransaction(address,uint256,address,address,uint256,string)\":{\"notice\":\"Emitted when an ERC20 transfer transaction is submitted\"},\"SubmitTransaction(address,uint256,address,uint256,bytes,string)\":{\"notice\":\"Emitted when a general transaction is submitted\"},\"TransactionExecutionFailed(uint256,address,bytes)\":{\"notice\":\"Emitted when transaction execution fails after reaching the required confirmations\"}},\"kind\":\"user\",\"methods\":{\"SIGNER_ROLE()\":{\"notice\":\"Role identifier for signers who can submit and confirm transactions\"},\"batchConfirm(uint256[])\":{\"notice\":\"Confirms multiple pending transactions in a single call\"},\"batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])\":{\"notice\":\"Submits multiple contract call transactions in a single call\"},\"batchSubmitERC20Transfers(address[],address[],uint256[],string[])\":{\"notice\":\"Submits multiple ERC20 token transfer transactions in a single call\"},\"batchSubmitTransactions(address[],uint256[],bytes[],string[])\":{\"notice\":\"Submits multiple transactions in a single call\"},\"confirm(uint256)\":{\"notice\":\"Confirms a pending transaction\"},\"confirmations(uint256,address)\":{\"notice\":\"Quick lookup to check if a signer has confirmed a transaction\"},\"constructor\":{\"notice\":\"Initializes the Vault with a set of signers and confirmation threshold\"},\"getConfirmers(uint256)\":{\"notice\":\"Returns a list of all signers who confirmed a transaction\"},\"hasConfirmed(uint256,address)\":{\"notice\":\"Checks if a signer has confirmed a transaction\"},\"pause()\":{\"notice\":\"Pauses the contract, preventing most operations\"},\"required()\":{\"notice\":\"Number of confirmations required to execute a transaction\"},\"requirement()\":{\"notice\":\"Gets the number of confirmations required to execute a transaction\"},\"revoke(uint256)\":{\"notice\":\"Revokes a confirmation from a pending transaction\"},\"setRequirement(uint256)\":{\"notice\":\"Changes the number of confirmations required\"},\"signers()\":{\"notice\":\"Returns a list of all current signers\"},\"submitContractCall(address,uint256,bytes4,bytes,string)\":{\"notice\":\"Submits a contract call transaction\"},\"submitERC20Transfer(address,address,uint256,string)\":{\"notice\":\"Submits a new ERC20 token transfer transaction\"},\"submitTransaction(address,uint256,bytes,string)\":{\"notice\":\"Submits a new transaction to the vault\"},\"transaction(uint256)\":{\"notice\":\"Returns detailed information about a transaction\"},\"transactions(uint256)\":{\"notice\":\"Array of all transactions (pending and executed)\"},\"unpause()\":{\"notice\":\"Unpauses the contract, allowing operations to resume\"}},\"notice\":\"This contract allows multiple signers to propose, confirm, and execute transactions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/vault/ATKVault.sol\":\"ATKVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/addons/vault/ATKVault.sol\":{\"keccak256\":\"0x86d8321671eed655a5fe3ca153e909672fbf6bede675fa630546da1f08061b8b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://5697585f61d0672fb3a9bf7cedd988cdbd95871e4cc1e7c3d1994bf0f00629df\",\"dweb:/ipfs/QmWwpBUKpEpW68Hyb72EWYyg5Gs8ai6Nvn3hdURa21DVco\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"dependencies/@openzeppelin-contracts-5.3.0/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_signers",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_required",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AlreadyConfirmed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyBatchArray"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EnforcedPause"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "ExecutionFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpectedPause"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "signerCount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidRequirement"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotConfirmed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxIndex",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TxDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TxExecuted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConfirmTransaction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecuteTransaction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "required",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RequirementChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokeConfirmation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "abiEncodedArguments",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "comment",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubmitContractCallTransaction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "comment",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubmitERC20TransferTransaction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "comment",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubmitTransaction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransactionExecutionFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SIGNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "txIndices",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchConfirm"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            },
            {
              "internalType": "bytes[]",
              "name": "abiEncodedArguments",
              "type": "bytes[]"
            },
            {
              "internalType": "string[]",
              "name": "comments",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchSubmitContractCalls",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "txIndices",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "string[]",
              "name": "comments",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchSubmitERC20Transfers",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "txIndices",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "to",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            },
            {
              "internalType": "string[]",
              "name": "comments",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchSubmitTransactions",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "txIndices",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirm"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "confirmations",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getConfirmers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMembers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasConfirmed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "required",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requirement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_required",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRequirement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "signers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "signers_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes",
              "name": "abiEncodedArguments",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "comment",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitContractCall",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "comment",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitERC20Transfer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "comment",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitTransaction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "txIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "transaction",
          "outputs": [
            {
              "internalType": "struct ATKVault.Transaction",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "executed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "numConfirmations",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "comment",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "transactions",
          "outputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "numConfirmations",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "comment",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchConfirm(uint256[])": {
            "params": {
              "txIndices": "Array of transaction indices to confirm"
            }
          },
          "batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])": {
            "params": {
              "abiEncodedArguments": "Array of ABI-encoded arguments",
              "comments": "Array of transaction descriptions",
              "selectors": "Array of function selectors",
              "targets": "Array of contract addresses",
              "values": "Array of ETH amounts"
            },
            "returns": {
              "txIndices": "Array of created transaction indices"
            }
          },
          "batchSubmitERC20Transfers(address[],address[],uint256[],string[])": {
            "params": {
              "amounts": "Array of token amounts",
              "comments": "Array of transaction descriptions",
              "to": "Array of recipient addresses",
              "tokens": "Array of ERC20 token addresses"
            },
            "returns": {
              "txIndices": "Array of created transaction indices"
            }
          },
          "batchSubmitTransactions(address[],uint256[],bytes[],string[])": {
            "params": {
              "comments": "Array of transaction descriptions",
              "data": "Array of call data",
              "to": "Array of destination addresses",
              "value": "Array of ETH amounts"
            },
            "returns": {
              "txIndices": "Array of created transaction indices"
            }
          },
          "confirm(uint256)": {
            "params": {
              "txIndex": "Index of the transaction to confirm"
            }
          },
          "constructor": {
            "params": {
              "_required": "Number of confirmations required to execute a transaction",
              "_signers": "Array of initial signer addresses",
              "forwarder": "Address of the ERC2771 forwarder for meta-transactions",
              "initialOwner": "Address that will have admin role"
            }
          },
          "getConfirmers(uint256)": {
            "params": {
              "txIndex": "Index of the transaction"
            },
            "returns": {
              "_0": "Array of signer addresses who confirmed the transaction"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "getRoleMembers(bytes32)": {
            "details": "Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasConfirmed(uint256,address)": {
            "params": {
              "signer": "Address of the signer",
              "txIndex": "Index of the transaction"
            },
            "returns": {
              "_0": "True if the signer has confirmed the transaction"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "pause()": {
            "details": "Can only be called by admin"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "requirement()": {
            "returns": {
              "_0": "The number of required confirmations"
            }
          },
          "revoke(uint256)": {
            "params": {
              "txIndex": "Index of the transaction"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setRequirement(uint256)": {
            "details": "Can only be called by admin",
            "params": {
              "_required": "New number of required confirmations"
            }
          },
          "signers()": {
            "returns": {
              "signers_": "Array of signer addresses"
            }
          },
          "submitContractCall(address,uint256,bytes4,bytes,string)": {
            "params": {
              "abiEncodedArguments": "ABI-encoded arguments for the function call",
              "comment": "Description of the transaction",
              "selector": "Function selector (first 4 bytes of the function signature)",
              "target": "Address of the contract to call",
              "value": "Amount of ETH to send with the call"
            },
            "returns": {
              "txIndex": "Index of the created transaction"
            }
          },
          "submitERC20Transfer(address,address,uint256,string)": {
            "params": {
              "amount": "Amount of tokens to transfer",
              "comment": "Description of the transaction",
              "to": "Recipient address",
              "token": "Address of the ERC20 token"
            },
            "returns": {
              "txIndex": "Index of the created transaction"
            }
          },
          "submitTransaction(address,uint256,bytes,string)": {
            "params": {
              "comment": "Description of the transaction",
              "data": "Call data for the transaction",
              "to": "Destination address",
              "value": "Amount of ETH to send"
            },
            "returns": {
              "txIndex": "Index of the created transaction"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transaction(uint256)": {
            "params": {
              "txIndex": "Index of the transaction"
            },
            "returns": {
              "_0": "Transaction struct containing all transaction details"
            }
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          },
          "unpause()": {
            "details": "Can only be called by admin"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "SIGNER_ROLE()": {
            "notice": "Role identifier for signers who can submit and confirm transactions"
          },
          "batchConfirm(uint256[])": {
            "notice": "Confirms multiple pending transactions in a single call"
          },
          "batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])": {
            "notice": "Submits multiple contract call transactions in a single call"
          },
          "batchSubmitERC20Transfers(address[],address[],uint256[],string[])": {
            "notice": "Submits multiple ERC20 token transfer transactions in a single call"
          },
          "batchSubmitTransactions(address[],uint256[],bytes[],string[])": {
            "notice": "Submits multiple transactions in a single call"
          },
          "confirm(uint256)": {
            "notice": "Confirms a pending transaction"
          },
          "confirmations(uint256,address)": {
            "notice": "Quick lookup to check if a signer has confirmed a transaction"
          },
          "constructor": {
            "notice": "Initializes the Vault with a set of signers and confirmation threshold"
          },
          "getConfirmers(uint256)": {
            "notice": "Returns a list of all signers who confirmed a transaction"
          },
          "hasConfirmed(uint256,address)": {
            "notice": "Checks if a signer has confirmed a transaction"
          },
          "pause()": {
            "notice": "Pauses the contract, preventing most operations"
          },
          "required()": {
            "notice": "Number of confirmations required to execute a transaction"
          },
          "requirement()": {
            "notice": "Gets the number of confirmations required to execute a transaction"
          },
          "revoke(uint256)": {
            "notice": "Revokes a confirmation from a pending transaction"
          },
          "setRequirement(uint256)": {
            "notice": "Changes the number of confirmations required"
          },
          "signers()": {
            "notice": "Returns a list of all current signers"
          },
          "submitContractCall(address,uint256,bytes4,bytes,string)": {
            "notice": "Submits a contract call transaction"
          },
          "submitERC20Transfer(address,address,uint256,string)": {
            "notice": "Submits a new ERC20 token transfer transaction"
          },
          "submitTransaction(address,uint256,bytes,string)": {
            "notice": "Submits a new transaction to the vault"
          },
          "transaction(uint256)": {
            "notice": "Returns detailed information about a transaction"
          },
          "transactions(uint256)": {
            "notice": "Array of all transactions (pending and executed)"
          },
          "unpause()": {
            "notice": "Unpauses the contract, allowing operations to resume"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/addons/vault/ATKVault.sol": "ATKVault"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/addons/vault/ATKVault.sol": {
        "keccak256": "0x86d8321671eed655a5fe3ca153e909672fbf6bede675fa630546da1f08061b8b",
        "urls": [
          "bzz-raw://5697585f61d0672fb3a9bf7cedd988cdbd95871e4cc1e7c3d1994bf0f00629df",
          "dweb:/ipfs/QmWwpBUKpEpW68Hyb72EWYyg5Gs8ai6Nvn3hdURa21DVco"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/AccessControl.sol": {
        "keccak256": "0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458",
        "urls": [
          "bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67",
          "dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/extensions/AccessControlEnumerable.sol": {
        "keccak256": "0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525",
        "urls": [
          "bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322",
          "dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/extensions/IAccessControlEnumerable.sol": {
        "keccak256": "0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3",
        "urls": [
          "bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3",
          "dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/metatx/ERC2771Context.sol": {
        "keccak256": "0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99",
        "urls": [
          "bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8",
          "dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Arrays.sol": {
        "keccak256": "0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6",
        "urls": [
          "bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd",
          "dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Pausable.sol": {
        "keccak256": "0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f",
        "urls": [
          "bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c",
          "dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/ReentrancyGuard.sol": {
        "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
        "urls": [
          "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
          "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/ERC165.sol": {
        "keccak256": "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
        "urls": [
          "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
          "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06",
        "urls": [
          "bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231",
          "dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "SIGNER_ROLE()": {
        "notice": "Role identifier for signers who can submit and confirm transactions"
      },
      "batchConfirm(uint256[])": {
        "notice": "Confirms multiple pending transactions in a single call"
      },
      "batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])": {
        "notice": "Submits multiple contract call transactions in a single call"
      },
      "batchSubmitERC20Transfers(address[],address[],uint256[],string[])": {
        "notice": "Submits multiple ERC20 token transfer transactions in a single call"
      },
      "batchSubmitTransactions(address[],uint256[],bytes[],string[])": {
        "notice": "Submits multiple transactions in a single call"
      },
      "confirm(uint256)": {
        "notice": "Confirms a pending transaction"
      },
      "confirmations(uint256,address)": {
        "notice": "Quick lookup to check if a signer has confirmed a transaction"
      },
      "constructor": {
        "notice": "Initializes the Vault with a set of signers and confirmation threshold"
      },
      "getConfirmers(uint256)": {
        "notice": "Returns a list of all signers who confirmed a transaction"
      },
      "hasConfirmed(uint256,address)": {
        "notice": "Checks if a signer has confirmed a transaction"
      },
      "pause()": {
        "notice": "Pauses the contract, preventing most operations"
      },
      "required()": {
        "notice": "Number of confirmations required to execute a transaction"
      },
      "requirement()": {
        "notice": "Gets the number of confirmations required to execute a transaction"
      },
      "revoke(uint256)": {
        "notice": "Revokes a confirmation from a pending transaction"
      },
      "setRequirement(uint256)": {
        "notice": "Changes the number of confirmations required"
      },
      "signers()": {
        "notice": "Returns a list of all current signers"
      },
      "submitContractCall(address,uint256,bytes4,bytes,string)": {
        "notice": "Submits a contract call transaction"
      },
      "submitERC20Transfer(address,address,uint256,string)": {
        "notice": "Submits a new ERC20 token transfer transaction"
      },
      "submitTransaction(address,uint256,bytes,string)": {
        "notice": "Submits a new transaction to the vault"
      },
      "transaction(uint256)": {
        "notice": "Returns detailed information about a transaction"
      },
      "transactions(uint256)": {
        "notice": "Array of all transactions (pending and executed)"
      },
      "unpause()": {
        "notice": "Unpauses the contract, allowing operations to resume"
      }
    },
    "events": {
      "ConfirmTransaction(address,uint256)": {
        "notice": "Emitted when a transaction is confirmed by a signer"
      },
      "Deposit(address,uint256,uint256)": {
        "notice": "Emitted when ETH is deposited to the vault"
      },
      "ExecuteTransaction(address,uint256)": {
        "notice": "Emitted when a transaction is executed"
      },
      "RequirementChanged(address,uint256)": {
        "notice": "Emitted when the confirmation requirement changes"
      },
      "RevokeConfirmation(address,uint256)": {
        "notice": "Emitted when a signer revokes their confirmation"
      },
      "SubmitContractCallTransaction(address,uint256,address,uint256,bytes4,bytes,string)": {
        "notice": "Emitted when a contract call transaction is submitted"
      },
      "SubmitERC20TransferTransaction(address,uint256,address,address,uint256,string)": {
        "notice": "Emitted when an ERC20 transfer transaction is submitted"
      },
      "SubmitTransaction(address,uint256,address,uint256,bytes,string)": {
        "notice": "Emitted when a general transaction is submitted"
      },
      "TransactionExecutionFailed(uint256,address,bytes)": {
        "notice": "Emitted when transaction execution fails after reaching the required confirmations"
      }
    },
    "errors": {
      "AlreadyConfirmed(uint256,address)": [
        {
          "notice": "Error thrown when a signer tries to confirm a transaction they already confirmed"
        }
      ],
      "ArrayLengthMismatch()": [
        {
          "notice": "Error thrown when array lengths don't match in batch operations"
        }
      ],
      "EmptyBatchArray()": [
        {
          "notice": "Error thrown when an empty array is provided for batch operations"
        }
      ],
      "ExecutionFailed(uint256,address,bytes)": [
        {
          "notice": "Error thrown when transaction execution fails"
        }
      ],
      "InvalidRequirement(uint256,uint256)": [
        {
          "notice": "Error thrown when an invalid requirement is set"
        }
      ],
      "NotConfirmed(uint256,address)": [
        {
          "notice": "Error thrown when a signer tries to revoke a confirmation they didn't make"
        }
      ],
      "TxDoesNotExist(uint256,uint256)": [
        {
          "notice": "Error thrown when accessing a non-existent transaction"
        }
      ],
      "TxExecuted(uint256)": [
        {
          "notice": "Error thrown when trying to confirm an already executed transaction"
        }
      ]
    },
    "notice": "This contract allows multiple signers to propose, confirm, and execute transactions"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "details": "Implements OpenZeppelin's AccessControl, ERC2771Context, Pausable, and ReentrancyGuard",
    "methods": {
      "batchConfirm(uint256[])": {
        "params": {
          "txIndices": "Array of transaction indices to confirm"
        }
      },
      "batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])": {
        "params": {
          "abiEncodedArguments": "Array of ABI-encoded arguments",
          "comments": "Array of transaction descriptions",
          "selectors": "Array of function selectors",
          "targets": "Array of contract addresses",
          "values": "Array of ETH amounts"
        },
        "returns": {
          "txIndices": "Array of created transaction indices"
        }
      },
      "batchSubmitERC20Transfers(address[],address[],uint256[],string[])": {
        "params": {
          "amounts": "Array of token amounts",
          "comments": "Array of transaction descriptions",
          "to": "Array of recipient addresses",
          "tokens": "Array of ERC20 token addresses"
        },
        "returns": {
          "txIndices": "Array of created transaction indices"
        }
      },
      "batchSubmitTransactions(address[],uint256[],bytes[],string[])": {
        "params": {
          "comments": "Array of transaction descriptions",
          "data": "Array of call data",
          "to": "Array of destination addresses",
          "value": "Array of ETH amounts"
        },
        "returns": {
          "txIndices": "Array of created transaction indices"
        }
      },
      "confirm(uint256)": {
        "params": {
          "txIndex": "Index of the transaction to confirm"
        }
      },
      "constructor": {
        "params": {
          "_required": "Number of confirmations required to execute a transaction",
          "_signers": "Array of initial signer addresses",
          "forwarder": "Address of the ERC2771 forwarder for meta-transactions",
          "initialOwner": "Address that will have admin role"
        }
      },
      "getConfirmers(uint256)": {
        "params": {
          "txIndex": "Index of the transaction"
        },
        "returns": {
          "_0": "Array of signer addresses who confirmed the transaction"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getRoleMembers(bytes32)": {
        "details": "Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasConfirmed(uint256,address)": {
        "params": {
          "signer": "Address of the signer",
          "txIndex": "Index of the transaction"
        },
        "returns": {
          "_0": "True if the signer has confirmed the transaction"
        }
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "pause()": {
        "details": "Can only be called by admin"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "requirement()": {
        "returns": {
          "_0": "The number of required confirmations"
        }
      },
      "revoke(uint256)": {
        "params": {
          "txIndex": "Index of the transaction"
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "setRequirement(uint256)": {
        "details": "Can only be called by admin",
        "params": {
          "_required": "New number of required confirmations"
        }
      },
      "signers()": {
        "returns": {
          "signers_": "Array of signer addresses"
        }
      },
      "submitContractCall(address,uint256,bytes4,bytes,string)": {
        "params": {
          "abiEncodedArguments": "ABI-encoded arguments for the function call",
          "comment": "Description of the transaction",
          "selector": "Function selector (first 4 bytes of the function signature)",
          "target": "Address of the contract to call",
          "value": "Amount of ETH to send with the call"
        },
        "returns": {
          "txIndex": "Index of the created transaction"
        }
      },
      "submitERC20Transfer(address,address,uint256,string)": {
        "params": {
          "amount": "Amount of tokens to transfer",
          "comment": "Description of the transaction",
          "to": "Recipient address",
          "token": "Address of the ERC20 token"
        },
        "returns": {
          "txIndex": "Index of the created transaction"
        }
      },
      "submitTransaction(address,uint256,bytes,string)": {
        "params": {
          "comment": "Description of the transaction",
          "data": "Call data for the transaction",
          "to": "Destination address",
          "value": "Amount of ETH to send"
        },
        "returns": {
          "txIndex": "Index of the created transaction"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transaction(uint256)": {
        "params": {
          "txIndex": "Index of the transaction"
        },
        "returns": {
          "_0": "Transaction struct containing all transaction details"
        }
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      },
      "unpause()": {
        "details": "Can only be called by admin"
      }
    },
    "events": {
      "ConfirmTransaction(address,uint256)": {
        "params": {
          "signer": "Address of the signer who confirmed the transaction",
          "txIndex": "Index of the confirmed transaction"
        }
      },
      "Deposit(address,uint256,uint256)": {
        "params": {
          "balance": "New total balance of the vault",
          "sender": "Address that sent the ETH",
          "value": "Amount of ETH deposited"
        }
      },
      "ExecuteTransaction(address,uint256)": {
        "params": {
          "signer": "Address of the signer who triggered execution",
          "txIndex": "Index of the executed transaction"
        }
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RequirementChanged(address,uint256)": {
        "params": {
          "account": "Address of the account that changed the requirement",
          "required": "New number of required confirmations"
        }
      },
      "RevokeConfirmation(address,uint256)": {
        "params": {
          "signer": "Address of the signer who revoked confirmation",
          "txIndex": "Index of the transaction"
        }
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "SubmitContractCallTransaction(address,uint256,address,uint256,bytes4,bytes,string)": {
        "params": {
          "abiEncodedArguments": "ABI-encoded arguments for the function call",
          "comment": "Description of the transaction",
          "selector": "Function selector (first 4 bytes of the function signature)",
          "signer": "Address of the signer who submitted the transaction",
          "target": "Contract address to call",
          "txIndex": "Index of the transaction in the transactions array",
          "value": "Amount of ETH to send with the call"
        }
      },
      "SubmitERC20TransferTransaction(address,uint256,address,address,uint256,string)": {
        "params": {
          "amount": "Amount of tokens to transfer",
          "comment": "Description of the transaction",
          "signer": "Address of the signer who submitted the transaction",
          "to": "Recipient address for the token transfer",
          "token": "Address of the ERC20 token to transfer",
          "txIndex": "Index of the transaction in the transactions array"
        }
      },
      "SubmitTransaction(address,uint256,address,uint256,bytes,string)": {
        "params": {
          "comment": "Description of the transaction",
          "data": "Function call data",
          "signer": "Address of the signer who submitted the transaction",
          "to": "Destination address for the transaction",
          "txIndex": "Index of the transaction in the transactions array",
          "value": "Amount of ETH to send with the transaction"
        }
      },
      "TransactionExecutionFailed(uint256,address,bytes)": {
        "params": {
          "data": "Call data of the failed call",
          "to": "Destination address of the failed call",
          "txIndex": "Index of the failed transaction"
        }
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "AlreadyConfirmed(uint256,address)": [
        {
          "params": {
            "signer": "The signer's address",
            "txIndex": "The transaction index"
          }
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExecutionFailed(uint256,address,bytes)": [
        {
          "params": {
            "data": "The call data",
            "to": "The destination address",
            "txIndex": "The transaction index"
          }
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "InvalidRequirement(uint256,uint256)": [
        {
          "params": {
            "requested": "The requested number of confirmations",
            "signerCount": "The total number of signers"
          }
        }
      ],
      "NotConfirmed(uint256,address)": [
        {
          "params": {
            "signer": "The signer's address",
            "txIndex": "The transaction index"
          }
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "TxDoesNotExist(uint256,uint256)": [
        {
          "params": {
            "maxIndex": "The maximum valid index",
            "txIndex": "The requested transaction index"
          }
        }
      ],
      "TxExecuted(uint256)": [
        {
          "params": {
            "txIndex": "The transaction index"
          }
        }
      ]
    },
    "title": "ATKVault - A multi-signature wallet with role-based access control"
  },
  "id": 26
}