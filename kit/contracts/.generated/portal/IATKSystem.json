{
  "abi": [
    {
      "type": "function",
      "name": "bootstrap",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "compliance",
      "inputs": [],
      "outputs": [
        {
          "name": "complianceProxyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "complianceModuleRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "identityFactory",
      "inputs": [],
      "outputs": [
        {
          "name": "identityFactoryProxyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "identityImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "identityRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "identityRegistryProxyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "identityRegistryStorage",
      "inputs": [],
      "outputs": [
        {
          "name": "identityRegistryStorageProxyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "identityVerificationModule",
      "inputs": [],
      "outputs": [
        {
          "name": "identityVerificationModuleAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "systemAddonRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenAccessManagerImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenFactoryRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenIdentityImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "topicSchemeRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "topicSchemeRegistryProxyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedIssuersRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "trustedIssuersRegistryProxyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Bootstrapped",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "complianceProxy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "identityRegistryProxy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "identityRegistryStorageProxy",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "trustedIssuersRegistryProxy",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "topicSchemeRegistryProxy",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "identityFactoryProxy",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "tokenFactoryRegistryProxy",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "systemAddonRegistryProxy",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "complianceModuleRegistryProxy",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "identityVerificationModule",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ComplianceImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ComplianceModuleRegistered",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "name",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "moduleTypeHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "module",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "timestamp",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ComplianceModuleRegistryImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "IdentityFactoryImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "IdentityImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "IdentityRegistryImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "IdentityRegistryStorageImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SystemAddonRegistryImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokenAccessManagerImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokenFactoryRegistryImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokenIdentityImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TopicSchemeRegistryImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TrustedIssuersRegistryImplementationUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "bootstrap()": "fb969b0a",
    "compliance()": "6290865d",
    "complianceModuleRegistry()": "9ccca773",
    "identityFactory()": "e5f0c352",
    "identityImplementation()": "6d7203cb",
    "identityRegistry()": "134e18f4",
    "identityRegistryStorage()": "5f513eb4",
    "identityVerificationModule()": "c8b5d911",
    "supportsInterface(bytes4)": "01ffc9a7",
    "systemAddonRegistry()": "6668f95d",
    "tokenAccessManagerImplementation()": "44eecc17",
    "tokenFactoryRegistry()": "97da9999",
    "tokenIdentityImplementation()": "3cdbceda",
    "topicSchemeRegistry()": "84c9f8a1",
    "trustedIssuersRegistry()": "fb703a7b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"complianceProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"identityRegistryStorageProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"topicSchemeRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"identityFactoryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenFactoryRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"systemAddonRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"complianceModuleRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"identityVerificationModule\",\"type\":\"address\"}],\"name\":\"Bootstrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ComplianceImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"moduleTypeHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ComplianceModuleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ComplianceModuleRegistryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"IdentityFactoryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"IdentityImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"IdentityRegistryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"IdentityRegistryStorageImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"SystemAddonRegistryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TokenAccessManagerImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TokenFactoryRegistryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TokenIdentityImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TopicSchemeRegistryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistryImplementationUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bootstrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"complianceProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complianceModuleRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityFactoryProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityRegistryProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistryStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityRegistryStorageProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityVerificationModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityVerificationModuleAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemAddonRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAccessManagerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFactoryRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIdentityImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicSchemeRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"topicSchemeRegistryProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedIssuersRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trustedIssuersRegistryProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"The ATK System contract serves as the main hub and discovery point for various modules and features within the ATK Protocol. It allows other contracts and external users to find the addresses of crucial components like compliance modules, identity registries, and their corresponding proxy contracts. These proxies are important because they enable these components to be upgraded in the future without altering the addresses that other parts of the system use to interact with them, ensuring stability and maintainability.\",\"events\":{\"Bootstrapped(address,address,address,address,address,address,address,address,address,address,address)\":{\"params\":{\"complianceModuleRegistryProxy\":\"The address of the deployed ATKComplianceModuleRegistryProxy contract.\",\"complianceProxy\":\"The address of the deployed ATKComplianceProxy contract.\",\"identityFactoryProxy\":\"The address of the deployed ATKIdentityFactoryProxy contract.\",\"identityRegistryProxy\":\"The address of the deployed ATKIdentityRegistryProxy contract.\",\"identityRegistryStorageProxy\":\"The address of the deployed ATKIdentityRegistryStorageProxy contract.\",\"identityVerificationModule\":\"The address of the deployed IdentityVerificationModule contract.\",\"sender\":\"The address that called the `bootstrap` function.\",\"systemAddonRegistryProxy\":\"The address of the deployed ATKSystemAddonRegistryProxy contract.\",\"tokenFactoryRegistryProxy\":\"The address of the deployed ATKTokenFactoryRegistryProxy contract.\",\"topicSchemeRegistryProxy\":\"The address of the deployed ATKTopicSchemeRegistryProxy contract.\",\"trustedIssuersRegistryProxy\":\"The address of the deployed ATKTrustedIssuersRegistryProxy contract.\"}},\"ComplianceImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new compliance module implementation contract.\",\"sender\":\"The address that called the `updateComplianceImplementation` function.\"}},\"ComplianceModuleRegistered(address,string,bytes32,address,uint256)\":{\"params\":{\"module\":\"The address of the compliance module.\",\"moduleTypeHash\":\"The type hash of the compliance module.\",\"name\":\"The name of the compliance module.\",\"sender\":\"The address that called the registration function.\",\"timestamp\":\"The timestamp of the registration.\"}},\"ComplianceModuleRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new compliance module registry implementation contract.\",\"sender\":\"The address that called the function.\"}},\"IdentityFactoryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new identity factory module implementation contract.\",\"sender\":\"The address that called the `updateIdentityFactoryImplementation` function.\"}},\"IdentityImplementationUpdated(address,address)\":{\"details\":\"Standard identity contracts are typically used to represent users or general entities.\",\"params\":{\"newImplementation\":\"The address of the new standard identity module implementation contract.\",\"sender\":\"The address that called the `updateIdentityImplementation` function.\"}},\"IdentityRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new identity registry module implementation contract.\",\"sender\":\"The address that called the `updateIdentityRegistryImplementation` function.\"}},\"IdentityRegistryStorageImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new identity registry storage module implementation contract.\",\"sender\":\"The address that called the `updateIdentityRegistryStorageImplementation` function.\"}},\"SystemAddonRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new addon registry implementation contract.\",\"sender\":\"The address that called the function.\"}},\"TokenAccessManagerImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new token access manager module implementation contract.\",\"sender\":\"The address that called the `updateTokenAccessManagerImplementation` function.\"}},\"TokenFactoryRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new token factory registry implementation contract.\",\"sender\":\"The address that called the function.\"}},\"TokenIdentityImplementationUpdated(address,address)\":{\"details\":\"Token identity contracts might be specialized identities associated with specific tokens.\",\"params\":{\"newImplementation\":\"The address of the new token identity module implementation contract.\",\"sender\":\"The address that called the `updateTokenIdentityImplementation` function.\"}},\"TopicSchemeRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new topic scheme registry module implementation contract.\",\"sender\":\"The address that called the `updateTopicSchemeRegistryImplementation` function.\"}},\"TrustedIssuersRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new trusted issuers registry module implementation contract.\",\"sender\":\"The address that called the `updateTrustedIssuersRegistryImplementation` function.\"}}},\"kind\":\"dev\",\"methods\":{\"bootstrap()\":{\"details\":\"This function is responsible for the initial deployment and configuration of the ATK Protocol. This involves deploying necessary smart contracts, setting initial parameters, and defining the relationships and connections between different components of the system. It is critically important that this function is called only ONCE during the very first deployment of the protocol. Attempting to call it more than once could result in severe errors, misconfigurations, or unpredictable behavior in the protocol's operation.\"},\"compliance()\":{\"details\":\"A proxy contract is an intermediary contract that delegates all function calls it receives to another contract, known as the implementation contract (which contains the actual logic). The primary benefit of using a proxy is that the underlying logic (implementation) can be upgraded without changing the address that other contracts or users interact with. This provides flexibility and allows for bug fixes or feature additions without disrupting the ecosystem. This function returns the stable, unchanging address of the compliance module's proxy contract. All interactions with the compliance module should go through this proxy address.\",\"returns\":{\"complianceProxyAddress\":\"The blockchain address of the compliance module's proxy contract.\"}},\"complianceModuleRegistry()\":{\"returns\":{\"_0\":\"The address of the compliance module registry contract.\"}},\"identityFactory()\":{\"details\":\"This function returns the stable, unchanging address of the identity factory's proxy contract. To create new identities within the ATK Protocol, you should interact with this proxy address. It will delegate the identity creation requests to the current active logic implementation of the identity factory.\",\"returns\":{\"identityFactoryProxyAddress\":\"The blockchain address of the identity factory module's proxy contract.\"}},\"identityImplementation()\":{\"returns\":{\"_0\":\"The address of the identity implementation contract.\"}},\"identityRegistry()\":{\"details\":\"Similar to the compliance proxy, this function returns the stable, unchanging address of the identity registry's proxy contract. To interact with the identity registry (e.g., to query identity information or register a new identity, depending on its features), you should use this proxy address. It will automatically forward your requests to the current logic implementation contract.\",\"returns\":{\"identityRegistryProxyAddress\":\"The blockchain address of the identity registry module's proxy contract.\"}},\"identityRegistryStorage()\":{\"details\":\"This function returns the stable, unchanging address of the identity registry storage's proxy contract. All interactions related to storing or retrieving identity data should go through this proxy address. It ensures that calls are directed to the current logic implementation for identity data management.\",\"returns\":{\"identityRegistryStorageProxyAddress\":\"The blockchain address of the identity registry storage module's proxy contract.\"}},\"identityVerificationModule()\":{\"details\":\"This function returns the stable, unchanging address of the identity verification module's proxy contract. To interact with the identity verification module (e.g., to verify an identity or check verification status), you should use this proxy address. It will forward calls to the current logic implementation.\",\"returns\":{\"identityVerificationModuleAddress\":\"The blockchain address of the identity verification module's proxy.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"systemAddonRegistry()\":{\"returns\":{\"_0\":\"The address of the system addon registry contract.\"}},\"tokenAccessManagerImplementation()\":{\"returns\":{\"_0\":\"The address of the access manager implementation contract.\"}},\"tokenFactoryRegistry()\":{\"returns\":{\"_0\":\"The address of the token factory registry contract.\"}},\"tokenIdentityImplementation()\":{\"returns\":{\"_0\":\"The address of the token identity implementation contract.\"}},\"topicSchemeRegistry()\":{\"details\":\"This function returns the stable, unchanging address of the topic scheme registry's proxy contract. To interact with the topic scheme registry (e.g., to register topic schemes or retrieve topic signatures), you should use this proxy address. It will forward calls to the current logic implementation.\",\"returns\":{\"topicSchemeRegistryProxyAddress\":\"The blockchain address of the topic scheme registry module's proxy.\"}},\"trustedIssuersRegistry()\":{\"details\":\"This function returns the stable, unchanging address of the trusted issuers registry's proxy contract. To interact with the trusted issuers registry (e.g., to check if an issuer is trusted or to add/remove issuers, depending on its features), you should use this proxy address. It will forward calls to the current logic implementation.\",\"returns\":{\"trustedIssuersRegistryProxyAddress\":\"The blockchain address of the trusted issuers registry module's proxy.\"}}},\"title\":\"IATKSystem Interface\",\"version\":1},\"userdoc\":{\"events\":{\"Bootstrapped(address,address,address,address,address,address,address,address,address,address,address)\":{\"notice\":\"Emitted when the `bootstrap` function has been successfully executed, creating and linking proxy contracts for all core modules of the ATKSystem.\"},\"ComplianceImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the compliance module is updated.\"},\"ComplianceModuleRegistered(address,string,bytes32,address,uint256)\":{\"notice\":\"Emitted when a compliance module is registered.\"},\"ComplianceModuleRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the compliance module registry is updated.\"},\"IdentityFactoryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the identity factory module is updated.\"},\"IdentityImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the standard identity module is updated.\"},\"IdentityRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the identity registry module is updated.\"},\"IdentityRegistryStorageImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the identity registry storage module is updated.\"},\"SystemAddonRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the addon registry is updated.\"},\"TokenAccessManagerImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the token access manager module is updated.\"},\"TokenFactoryRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the token factory registry is updated.\"},\"TokenIdentityImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the token identity module is updated.\"},\"TopicSchemeRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the topic scheme registry module is updated.\"},\"TrustedIssuersRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the trusted issuers registry module is updated.\"}},\"kind\":\"user\",\"methods\":{\"bootstrap()\":{\"notice\":\"Initializes and sets up the entire ATK Protocol system.\"},\"compliance()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the compliance module.\"},\"complianceModuleRegistry()\":{\"notice\":\"Returns the address of the compliance module registry.\"},\"identityFactory()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the identity factory module.\"},\"identityImplementation()\":{\"notice\":\"Returns the address of the identity implementation.\"},\"identityRegistry()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the identity registry module.\"},\"identityRegistryStorage()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the identity registry storage module.\"},\"identityVerificationModule()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the identity verification module.\"},\"systemAddonRegistry()\":{\"notice\":\"Returns the address of the system addon registry.\"},\"tokenAccessManagerImplementation()\":{\"notice\":\"Returns the address of the access manager implementation.\"},\"tokenFactoryRegistry()\":{\"notice\":\"Returns the address of the token factory registry.\"},\"tokenIdentityImplementation()\":{\"notice\":\"Returns the address of the token identity implementation.\"},\"topicSchemeRegistry()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the topic scheme registry module.\"},\"trustedIssuersRegistry()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the trusted issuers registry module.\"}},\"notice\":\"This interface outlines the essential functions for interacting with the ATK Protocol's central system contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/IATKSystem.sol\":\"IATKSystem\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x9b142a029ec94141890b4000c54583ac8bd261c4c9cc1a17724f8601c581293b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ac8c729ce44ab357ea1bd0de2c7a04cc7666550af9c8253a30e3329c29c13551\",\"dweb:/ipfs/QmTJPSssQ8WS5Uw34WpzAHyvebe9Z2XAojUD6yzMS6iqYC\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "complianceProxy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "identityRegistryProxy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "identityRegistryStorageProxy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "trustedIssuersRegistryProxy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "topicSchemeRegistryProxy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "identityFactoryProxy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "tokenFactoryRegistryProxy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "systemAddonRegistryProxy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "complianceModuleRegistryProxy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "identityVerificationModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bootstrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ComplianceImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "moduleTypeHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "module",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ComplianceModuleRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ComplianceModuleRegistryImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "IdentityFactoryImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "IdentityImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "IdentityRegistryImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "IdentityRegistryStorageImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SystemAddonRegistryImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokenAccessManagerImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokenFactoryRegistryImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokenIdentityImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TopicSchemeRegistryImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TrustedIssuersRegistryImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bootstrap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "compliance",
          "outputs": [
            {
              "internalType": "address",
              "name": "complianceProxyAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "complianceModuleRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identityFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "identityFactoryProxyAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identityImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identityRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "identityRegistryProxyAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identityRegistryStorage",
          "outputs": [
            {
              "internalType": "address",
              "name": "identityRegistryStorageProxyAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identityVerificationModule",
          "outputs": [
            {
              "internalType": "address",
              "name": "identityVerificationModuleAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "systemAddonRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenAccessManagerImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenFactoryRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenIdentityImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "topicSchemeRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "topicSchemeRegistryProxyAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedIssuersRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "trustedIssuersRegistryProxyAddress",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "bootstrap()": {
            "details": "This function is responsible for the initial deployment and configuration of the ATK Protocol. This involves deploying necessary smart contracts, setting initial parameters, and defining the relationships and connections between different components of the system. It is critically important that this function is called only ONCE during the very first deployment of the protocol. Attempting to call it more than once could result in severe errors, misconfigurations, or unpredictable behavior in the protocol's operation."
          },
          "compliance()": {
            "details": "A proxy contract is an intermediary contract that delegates all function calls it receives to another contract, known as the implementation contract (which contains the actual logic). The primary benefit of using a proxy is that the underlying logic (implementation) can be upgraded without changing the address that other contracts or users interact with. This provides flexibility and allows for bug fixes or feature additions without disrupting the ecosystem. This function returns the stable, unchanging address of the compliance module's proxy contract. All interactions with the compliance module should go through this proxy address.",
            "returns": {
              "complianceProxyAddress": "The blockchain address of the compliance module's proxy contract."
            }
          },
          "complianceModuleRegistry()": {
            "returns": {
              "_0": "The address of the compliance module registry contract."
            }
          },
          "identityFactory()": {
            "details": "This function returns the stable, unchanging address of the identity factory's proxy contract. To create new identities within the ATK Protocol, you should interact with this proxy address. It will delegate the identity creation requests to the current active logic implementation of the identity factory.",
            "returns": {
              "identityFactoryProxyAddress": "The blockchain address of the identity factory module's proxy contract."
            }
          },
          "identityImplementation()": {
            "returns": {
              "_0": "The address of the identity implementation contract."
            }
          },
          "identityRegistry()": {
            "details": "Similar to the compliance proxy, this function returns the stable, unchanging address of the identity registry's proxy contract. To interact with the identity registry (e.g., to query identity information or register a new identity, depending on its features), you should use this proxy address. It will automatically forward your requests to the current logic implementation contract.",
            "returns": {
              "identityRegistryProxyAddress": "The blockchain address of the identity registry module's proxy contract."
            }
          },
          "identityRegistryStorage()": {
            "details": "This function returns the stable, unchanging address of the identity registry storage's proxy contract. All interactions related to storing or retrieving identity data should go through this proxy address. It ensures that calls are directed to the current logic implementation for identity data management.",
            "returns": {
              "identityRegistryStorageProxyAddress": "The blockchain address of the identity registry storage module's proxy contract."
            }
          },
          "identityVerificationModule()": {
            "details": "This function returns the stable, unchanging address of the identity verification module's proxy contract. To interact with the identity verification module (e.g., to verify an identity or check verification status), you should use this proxy address. It will forward calls to the current logic implementation.",
            "returns": {
              "identityVerificationModuleAddress": "The blockchain address of the identity verification module's proxy."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "systemAddonRegistry()": {
            "returns": {
              "_0": "The address of the system addon registry contract."
            }
          },
          "tokenAccessManagerImplementation()": {
            "returns": {
              "_0": "The address of the access manager implementation contract."
            }
          },
          "tokenFactoryRegistry()": {
            "returns": {
              "_0": "The address of the token factory registry contract."
            }
          },
          "tokenIdentityImplementation()": {
            "returns": {
              "_0": "The address of the token identity implementation contract."
            }
          },
          "topicSchemeRegistry()": {
            "details": "This function returns the stable, unchanging address of the topic scheme registry's proxy contract. To interact with the topic scheme registry (e.g., to register topic schemes or retrieve topic signatures), you should use this proxy address. It will forward calls to the current logic implementation.",
            "returns": {
              "topicSchemeRegistryProxyAddress": "The blockchain address of the topic scheme registry module's proxy."
            }
          },
          "trustedIssuersRegistry()": {
            "details": "This function returns the stable, unchanging address of the trusted issuers registry's proxy contract. To interact with the trusted issuers registry (e.g., to check if an issuer is trusted or to add/remove issuers, depending on its features), you should use this proxy address. It will forward calls to the current logic implementation.",
            "returns": {
              "trustedIssuersRegistryProxyAddress": "The blockchain address of the trusted issuers registry module's proxy."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "bootstrap()": {
            "notice": "Initializes and sets up the entire ATK Protocol system."
          },
          "compliance()": {
            "notice": "Retrieves the smart contract address of the proxy for the compliance module."
          },
          "complianceModuleRegistry()": {
            "notice": "Returns the address of the compliance module registry."
          },
          "identityFactory()": {
            "notice": "Retrieves the smart contract address of the proxy for the identity factory module."
          },
          "identityImplementation()": {
            "notice": "Returns the address of the identity implementation."
          },
          "identityRegistry()": {
            "notice": "Retrieves the smart contract address of the proxy for the identity registry module."
          },
          "identityRegistryStorage()": {
            "notice": "Retrieves the smart contract address of the proxy for the identity registry storage module."
          },
          "identityVerificationModule()": {
            "notice": "Retrieves the smart contract address of the proxy for the identity verification module."
          },
          "systemAddonRegistry()": {
            "notice": "Returns the address of the system addon registry."
          },
          "tokenAccessManagerImplementation()": {
            "notice": "Returns the address of the access manager implementation."
          },
          "tokenFactoryRegistry()": {
            "notice": "Returns the address of the token factory registry."
          },
          "tokenIdentityImplementation()": {
            "notice": "Returns the address of the token identity implementation."
          },
          "topicSchemeRegistry()": {
            "notice": "Retrieves the smart contract address of the proxy for the topic scheme registry module."
          },
          "trustedIssuersRegistry()": {
            "notice": "Retrieves the smart contract address of the proxy for the trusted issuers registry module."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/IATKSystem.sol": "IATKSystem"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/system/IATKSystem.sol": {
        "keccak256": "0x9b142a029ec94141890b4000c54583ac8bd261c4c9cc1a17724f8601c581293b",
        "urls": [
          "bzz-raw://ac8c729ce44ab357ea1bd0de2c7a04cc7666550af9c8253a30e3329c29c13551",
          "dweb:/ipfs/QmTJPSssQ8WS5Uw34WpzAHyvebe9Z2XAojUD6yzMS6iqYC"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "bootstrap()": {
        "notice": "Initializes and sets up the entire ATK Protocol system."
      },
      "compliance()": {
        "notice": "Retrieves the smart contract address of the proxy for the compliance module."
      },
      "complianceModuleRegistry()": {
        "notice": "Returns the address of the compliance module registry."
      },
      "identityFactory()": {
        "notice": "Retrieves the smart contract address of the proxy for the identity factory module."
      },
      "identityImplementation()": {
        "notice": "Returns the address of the identity implementation."
      },
      "identityRegistry()": {
        "notice": "Retrieves the smart contract address of the proxy for the identity registry module."
      },
      "identityRegistryStorage()": {
        "notice": "Retrieves the smart contract address of the proxy for the identity registry storage module."
      },
      "identityVerificationModule()": {
        "notice": "Retrieves the smart contract address of the proxy for the identity verification module."
      },
      "systemAddonRegistry()": {
        "notice": "Returns the address of the system addon registry."
      },
      "tokenAccessManagerImplementation()": {
        "notice": "Returns the address of the access manager implementation."
      },
      "tokenFactoryRegistry()": {
        "notice": "Returns the address of the token factory registry."
      },
      "tokenIdentityImplementation()": {
        "notice": "Returns the address of the token identity implementation."
      },
      "topicSchemeRegistry()": {
        "notice": "Retrieves the smart contract address of the proxy for the topic scheme registry module."
      },
      "trustedIssuersRegistry()": {
        "notice": "Retrieves the smart contract address of the proxy for the trusted issuers registry module."
      }
    },
    "events": {
      "Bootstrapped(address,address,address,address,address,address,address,address,address,address,address)": {
        "notice": "Emitted when the `bootstrap` function has been successfully executed, creating and linking proxy contracts for all core modules of the ATKSystem."
      },
      "ComplianceImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the compliance module is updated."
      },
      "ComplianceModuleRegistered(address,string,bytes32,address,uint256)": {
        "notice": "Emitted when a compliance module is registered."
      },
      "ComplianceModuleRegistryImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the compliance module registry is updated."
      },
      "IdentityFactoryImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the identity factory module is updated."
      },
      "IdentityImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the standard identity module is updated."
      },
      "IdentityRegistryImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the identity registry module is updated."
      },
      "IdentityRegistryStorageImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the identity registry storage module is updated."
      },
      "SystemAddonRegistryImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the addon registry is updated."
      },
      "TokenAccessManagerImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the token access manager module is updated."
      },
      "TokenFactoryRegistryImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the token factory registry is updated."
      },
      "TokenIdentityImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the token identity module is updated."
      },
      "TopicSchemeRegistryImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the topic scheme registry module is updated."
      },
      "TrustedIssuersRegistryImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation (logic contract) for the trusted issuers registry module is updated."
      }
    },
    "notice": "This interface outlines the essential functions for interacting with the ATK Protocol's central system contract."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "The ATK System contract serves as the main hub and discovery point for various modules and features within the ATK Protocol. It allows other contracts and external users to find the addresses of crucial components like compliance modules, identity registries, and their corresponding proxy contracts. These proxies are important because they enable these components to be upgraded in the future without altering the addresses that other parts of the system use to interact with them, ensuring stability and maintainability.",
    "methods": {
      "bootstrap()": {
        "details": "This function is responsible for the initial deployment and configuration of the ATK Protocol. This involves deploying necessary smart contracts, setting initial parameters, and defining the relationships and connections between different components of the system. It is critically important that this function is called only ONCE during the very first deployment of the protocol. Attempting to call it more than once could result in severe errors, misconfigurations, or unpredictable behavior in the protocol's operation."
      },
      "compliance()": {
        "details": "A proxy contract is an intermediary contract that delegates all function calls it receives to another contract, known as the implementation contract (which contains the actual logic). The primary benefit of using a proxy is that the underlying logic (implementation) can be upgraded without changing the address that other contracts or users interact with. This provides flexibility and allows for bug fixes or feature additions without disrupting the ecosystem. This function returns the stable, unchanging address of the compliance module's proxy contract. All interactions with the compliance module should go through this proxy address.",
        "returns": {
          "complianceProxyAddress": "The blockchain address of the compliance module's proxy contract."
        }
      },
      "complianceModuleRegistry()": {
        "returns": {
          "_0": "The address of the compliance module registry contract."
        }
      },
      "identityFactory()": {
        "details": "This function returns the stable, unchanging address of the identity factory's proxy contract. To create new identities within the ATK Protocol, you should interact with this proxy address. It will delegate the identity creation requests to the current active logic implementation of the identity factory.",
        "returns": {
          "identityFactoryProxyAddress": "The blockchain address of the identity factory module's proxy contract."
        }
      },
      "identityImplementation()": {
        "returns": {
          "_0": "The address of the identity implementation contract."
        }
      },
      "identityRegistry()": {
        "details": "Similar to the compliance proxy, this function returns the stable, unchanging address of the identity registry's proxy contract. To interact with the identity registry (e.g., to query identity information or register a new identity, depending on its features), you should use this proxy address. It will automatically forward your requests to the current logic implementation contract.",
        "returns": {
          "identityRegistryProxyAddress": "The blockchain address of the identity registry module's proxy contract."
        }
      },
      "identityRegistryStorage()": {
        "details": "This function returns the stable, unchanging address of the identity registry storage's proxy contract. All interactions related to storing or retrieving identity data should go through this proxy address. It ensures that calls are directed to the current logic implementation for identity data management.",
        "returns": {
          "identityRegistryStorageProxyAddress": "The blockchain address of the identity registry storage module's proxy contract."
        }
      },
      "identityVerificationModule()": {
        "details": "This function returns the stable, unchanging address of the identity verification module's proxy contract. To interact with the identity verification module (e.g., to verify an identity or check verification status), you should use this proxy address. It will forward calls to the current logic implementation.",
        "returns": {
          "identityVerificationModuleAddress": "The blockchain address of the identity verification module's proxy."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "systemAddonRegistry()": {
        "returns": {
          "_0": "The address of the system addon registry contract."
        }
      },
      "tokenAccessManagerImplementation()": {
        "returns": {
          "_0": "The address of the access manager implementation contract."
        }
      },
      "tokenFactoryRegistry()": {
        "returns": {
          "_0": "The address of the token factory registry contract."
        }
      },
      "tokenIdentityImplementation()": {
        "returns": {
          "_0": "The address of the token identity implementation contract."
        }
      },
      "topicSchemeRegistry()": {
        "details": "This function returns the stable, unchanging address of the topic scheme registry's proxy contract. To interact with the topic scheme registry (e.g., to register topic schemes or retrieve topic signatures), you should use this proxy address. It will forward calls to the current logic implementation.",
        "returns": {
          "topicSchemeRegistryProxyAddress": "The blockchain address of the topic scheme registry module's proxy."
        }
      },
      "trustedIssuersRegistry()": {
        "details": "This function returns the stable, unchanging address of the trusted issuers registry's proxy contract. To interact with the trusted issuers registry (e.g., to check if an issuer is trusted or to add/remove issuers, depending on its features), you should use this proxy address. It will forward calls to the current logic implementation.",
        "returns": {
          "trustedIssuersRegistryProxyAddress": "The blockchain address of the trusted issuers registry module's proxy."
        }
      }
    },
    "events": {
      "Bootstrapped(address,address,address,address,address,address,address,address,address,address,address)": {
        "params": {
          "complianceModuleRegistryProxy": "The address of the deployed ATKComplianceModuleRegistryProxy contract.",
          "complianceProxy": "The address of the deployed ATKComplianceProxy contract.",
          "identityFactoryProxy": "The address of the deployed ATKIdentityFactoryProxy contract.",
          "identityRegistryProxy": "The address of the deployed ATKIdentityRegistryProxy contract.",
          "identityRegistryStorageProxy": "The address of the deployed ATKIdentityRegistryStorageProxy contract.",
          "identityVerificationModule": "The address of the deployed IdentityVerificationModule contract.",
          "sender": "The address that called the `bootstrap` function.",
          "systemAddonRegistryProxy": "The address of the deployed ATKSystemAddonRegistryProxy contract.",
          "tokenFactoryRegistryProxy": "The address of the deployed ATKTokenFactoryRegistryProxy contract.",
          "topicSchemeRegistryProxy": "The address of the deployed ATKTopicSchemeRegistryProxy contract.",
          "trustedIssuersRegistryProxy": "The address of the deployed ATKTrustedIssuersRegistryProxy contract."
        }
      },
      "ComplianceImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new compliance module implementation contract.",
          "sender": "The address that called the `updateComplianceImplementation` function."
        }
      },
      "ComplianceModuleRegistered(address,string,bytes32,address,uint256)": {
        "params": {
          "module": "The address of the compliance module.",
          "moduleTypeHash": "The type hash of the compliance module.",
          "name": "The name of the compliance module.",
          "sender": "The address that called the registration function.",
          "timestamp": "The timestamp of the registration."
        }
      },
      "ComplianceModuleRegistryImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new compliance module registry implementation contract.",
          "sender": "The address that called the function."
        }
      },
      "IdentityFactoryImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new identity factory module implementation contract.",
          "sender": "The address that called the `updateIdentityFactoryImplementation` function."
        }
      },
      "IdentityImplementationUpdated(address,address)": {
        "details": "Standard identity contracts are typically used to represent users or general entities.",
        "params": {
          "newImplementation": "The address of the new standard identity module implementation contract.",
          "sender": "The address that called the `updateIdentityImplementation` function."
        }
      },
      "IdentityRegistryImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new identity registry module implementation contract.",
          "sender": "The address that called the `updateIdentityRegistryImplementation` function."
        }
      },
      "IdentityRegistryStorageImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new identity registry storage module implementation contract.",
          "sender": "The address that called the `updateIdentityRegistryStorageImplementation` function."
        }
      },
      "SystemAddonRegistryImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new addon registry implementation contract.",
          "sender": "The address that called the function."
        }
      },
      "TokenAccessManagerImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new token access manager module implementation contract.",
          "sender": "The address that called the `updateTokenAccessManagerImplementation` function."
        }
      },
      "TokenFactoryRegistryImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new token factory registry implementation contract.",
          "sender": "The address that called the function."
        }
      },
      "TokenIdentityImplementationUpdated(address,address)": {
        "details": "Token identity contracts might be specialized identities associated with specific tokens.",
        "params": {
          "newImplementation": "The address of the new token identity module implementation contract.",
          "sender": "The address that called the `updateTokenIdentityImplementation` function."
        }
      },
      "TopicSchemeRegistryImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new topic scheme registry module implementation contract.",
          "sender": "The address that called the `updateTopicSchemeRegistryImplementation` function."
        }
      },
      "TrustedIssuersRegistryImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new trusted issuers registry module implementation contract.",
          "sender": "The address that called the `updateTrustedIssuersRegistryImplementation` function."
        }
      }
    },
    "title": "IATKSystem Interface"
  },
  "id": 147
}