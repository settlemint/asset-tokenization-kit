{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "forwarder_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_BATCH_SIZE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchClaim",
      "inputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "batchDistribute",
      "inputs": [
        {
          "name": "indices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "recipients",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "merkleProofs",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "claimTracker",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IATKClaimTracker"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "distribute",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distributionCap",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimedAmount",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "name_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "token_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "root_",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "owner_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "distributionCap_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isClaimed",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDistributed",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "merkleRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDistributionCap",
      "inputs": [
        {
          "name": "newDistributionCap_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "token",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalDistributed",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdrawTokens",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "BatchClaimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "indices",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchTokensDistributed",
      "inputs": [
        {
          "name": "recipientCount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "indices",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Claimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DistributionCapUpdated",
      "inputs": [
        {
          "name": "oldCap",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newCap",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensDistributed",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensWithdrawn",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyDistributed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "BatchSizeExceedsLimit",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DistributionCapExceeded",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAirdropName",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidClaimTrackerAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidDistributionAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInputArrayLengths",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMerkleProof",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMerkleRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidTokenAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWithdrawalAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "PushAirdropClaimNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ZeroAmountToDistribute",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a03461008857601f611c3338819003918201601f19168301916001600160401b0383118484101761008c5780849260209460405283398101031261008857516001600160a01b03811681036100885760805261005a6100a0565b6100626100a0565b604051611adc90816101378239608051818181610c3a01528181610d1c015261163e0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f516020611c135f395f51905f525460ff8160401c16610127576002600160401b03196001600160401b038216016100d55750565b6001600160401b0319166001600160401b039081175f516020611c135f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b63f92ee8a960e01b5f5260045ffdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816306fdde031461111457508063222abc11146110ec5780632eb4a7ab146110cf578063429c6e5b146110a957806349df728c14610fbf5780634b32102a14610dc55780634be7adee14610d50578063572b6c0514610cfb5780636f62c3a614610cd2578063715018a614610c695780637da0a87714610c245780638da5cb5b14610bef578063ae0b51df14610bae578063b026a47f146106a0578063b7f1aca81461064a578063cd63d9301461062c578063cfdbf25414610610578063ef692c7d14610221578063efca2eed14610203578063f2fde38b146101d6578063f364c90c1461013b5763fc0c546a14610110575f80fd5b346101385780600319360112610138576001546040516001600160a01b039091168152602090f35b80fd5b503461013857604036600319011261013857600354604051633cd9324360e21b81526004803590820152602480359082015290602090829060449082906001600160a01b03165afa9081156101cb576020929161019e575b506040519015158152f35b6101be9150823d84116101c4575b6101b68183611249565b8101906113ed565b5f610193565b503d6101ac565b6040513d84823e3d90fd5b5034610138576020366003190112610138576102006101f36111ed565b6101fb611405565b61137c565b80f35b50346101385780600319360112610138576020600454604051908152f35b5034610138576080366003190112610138576004356001600160401b0381116104d257610252903690600401611219565b906024356001600160401b03811161039a57610272903690600401611219565b6044929192356001600160401b03811161060c57610294903690600401611219565b6064356001600160401b038111610608576102b3903690600401611219565b90956102bd611405565b6102c56114e6565b606488116105f9578488148015906105ef575b80156105e5575b6105d657889489978a5b8a811061052a57506005548015159081610515575b5061050657909336829003601e190191908b5b8b811061039e578c8c8c8c8c61032981600454611323565b60045560405192835260208301526060604083015282606083015260018060fb1b03831161039a57816080917fcb717668fc2be4cb2b22f131f5c0055a75ad81c1cb5003da116c8e8f0407c58c9460051b8091848401378101030190a160015f516020611a905f395f51905f525580f35b8380fd5b6103a9818d8c611344565b35906103be6103b9828a89611344565b611368565b6103c982858c611344565b3590888310156104f1578260051b860135878112156104ec5786018035906001600160401b0382116104e657602001908060051b360382136104e6576104119184848861151e565b156104d6578f60018060a01b0360035416803b156104d25760405163762ba3ff60e11b81526004810187905260248101859052604481018590529082908290606490829084905af180156101cb576104b9575b50506040816001956104a0857ff75d5c8724380d126d0ce1ef2c57b7e856e7fe00051f6184966b31323463cf1295898060a01b038a5416611458565b82519485526020850152858060a01b031692a201610311565b816104c391611249565b6104ce578f5f610464565b8f80fd5b5080fd5b5063582f497d60e11b8f5260048ffd5b50508f80fd5b508f80fd5b50634e487b7160e01b8f52603260045260248ffd5b636fd8707b60e11b8b5260048bfd5b905061052388600454611323565b115f6102fe565b98966105378a8c8b611344565b35906105476103b98c8688611344565b916105538c898b611344565b35926001600160a01b0316156105c75782156105b857610572906112b6565b6105a9579061058091611323565b965f19811461059557600180910199016102e9565b634e487b7160e01b8c52601160045260248cfd5b63cce553a960e01b8d5260048dfd5b63a68332cd60e01b8e5260048efd5b637e59fcff60e01b8e5260048efd5b632c635df560e11b8952600489fd5b50818314156102df565b50828514156102d8565b632a8677b560e21b8952600489fd5b8780fd5b8580fd5b5034610138578060031936011261013857602060405160648152f35b50346101385780600319360112610138576020600554604051908152f35b5034610138576020366003190112610138577f64687926ea82d024193ae2d49d2c6e63089c2caf9cba13ff897d094f1526f017604060043561068a611405565b600554908060055582519182526020820152a180f35b50346101385760a0366003190112610138576004356001600160401b0381116104d257366023820112156104d2578060040135906001600160401b038211610b9a578290604051926106fc6020601f19601f8401160185611249565b8084523660248284010111610b9657806024602093018386013783010152610722611203565b6044356064356001600160a01b0381168103610b92575f516020611ab05f395f51905f52549360ff8560401c1615946001600160401b03811680159081610b8a575b6001149081610b80575b159081610b77575b50610b685767ffffffffffffffff1981166001175f516020611ab05f395f51905f525585610b3c575b506040516103bb808201908282106001600160401b03831117610b28576020918391611695833930815203019087f08015610b1d576001600160a01b0316936107e6611610565b815115610b0e576001600160a01b0316918215610aff578315610af0578415610ae1576040516318160ddd60e01b8152602081600481875afa9081610aae575b5061083a57630f58058360e11b8752600487fd5b604051633cd9324360e21b8152876004820152876024820152602081604481895afa9081610a91575b5061087757632b58d96960e01b8752600487fd5b61088b90610883611610565b6101fb611610565b8051906001600160401b038211610a7d5781906108a8885461127e565b601f8111610a0c575b50602090601f831160011461099f578892610994575b50508160011b915f199060031b1c19161785555b6bffffffffffffffffffffffff60a01b60015416176001556002556bffffffffffffffffffffffff60a01b6003541617600355610916611610565b61091e611610565b60015f516020611a905f395f51905f525560843560055561093c5780f35b68ff0000000000000000195f516020611ab05f395f51905f5254165f516020611ab05f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b015190505f806108c7565b8880525f516020611a705f395f51905f529250601f198416895b8181106109f457509084600195949392106109dc575b505050811b0185556108db565b01515f1960f88460031b161c191690555f80806109cf565b929360206001819287860151815501950193016109b9565b909150878052601f830160051c5f516020611a705f395f51905f52019060208410610a68575b90601f8493920160051c5f516020611a705f395f51905f5201905b818110610a5a57506108b1565b898155849350600101610a4d565b5f516020611a705f395f51905f529150610a32565b634e487b7160e01b87526041600452602487fd5b610aa99060203d6020116101c4576101b68183611249565b610863565b6020813d602011610ad9575b81610ac760209383611249565b81010312610ad55751610826565b5f80fd5b3d9150610aba565b632b58d96960e01b8752600487fd5b639dd854d360e01b8752600487fd5b630f58058360e11b8752600487fd5b632e43296560e01b8752600487fd5b6040513d88823e3d90fd5b634e487b7160e01b89526041600452602489fd5b68ffffffffffffffffff191668010000000000000001175f516020611ab05f395f51905f52555f61079f565b63f92ee8a960e01b8752600487fd5b9050155f610776565b303b15915061076e565b879150610764565b8480fd5b8280fd5b634e487b7160e01b83526041600452602483fd5b5034610138576060366003190112610138576044356001600160401b0381116104d25790610be160049236908401611219565b50506341cbd5e560e11b8152fd5b50346101385780600319360112610138575f516020611a505f395f51905f52546040516001600160a01b039091168152602090f35b50346101385780600319360112610138576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610138578060031936011261013857610c82611405565b5f516020611a505f395f51905f5280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610138576020366003190112610138576020610cf16004356112b6565b1515604051908152f35b5034610138576020366003190112610138576020610d176111ed565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b5034610138576060366003190112610138576004356001600160401b0381116104d257610d81903690600401611219565b50506024356001600160401b0381116104d257610da2903690600401611219565b50506044356001600160401b0381116104d25790610be160049236908401611219565b5034610ad5576080366003190112610ad557600435610de2611203565b90604435906064356001600160401b038111610ad557610e06903690600401611219565b9390610e10611405565b610e186114e6565b6001600160a01b038216948515610fb0578415610fa1576005548015159081610f8c575b50610f7d57610e4a846112b6565b610f6e57610e5a9185848661151e565b15610f5f576003546001600160a01b0316803b15610ad55760405163762ba3ff60e11b8152600481018490526024810185905260448101859052905f908290606490829084905af18015610f5457610f17575b5091604091610ef8827ff75d5c8724380d126d0ce1ef2c57b7e856e7fe00051f6184966b31323463cf1295610ee482600454611323565b6004556001546001600160a01b0316611458565b82519182526020820152a260015f516020611a905f395f51905f525580f35b7ff75d5c8724380d126d0ce1ef2c57b7e856e7fe00051f6184966b31323463cf129391955091610f495f604094611249565b5f9591935091610ead565b6040513d5f823e3d90fd5b63582f497d60e11b5f5260045ffd5b63cce553a960e01b5f5260045ffd5b636fd8707b60e11b5f5260045ffd5b9050610f9a86600454611323565b115f610e3c565b63a68332cd60e01b5f5260045ffd5b637e59fcff60e01b5f5260045ffd5b34610ad5576020366003190112610ad557610fd86111ed565b610fe0611405565b6001600160a01b03811690811561109a576001546040516370a0823160e01b815230600482015291906001600160a01b0316602083602481845afa928315610f54575f93611062575b5091611059816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b95611458565b604051908152a2005b9250906020833d602011611092575b8161107e60209383611249565b81010312610ad55791519190611059611029565b3d9150611071565b634261081360e11b5f5260045ffd5b34610ad5576020366003190112610ad55760206110c76004356112b6565b604051908152f35b34610ad5575f366003190112610ad5576020600254604051908152f35b34610ad5575f366003190112610ad5576003546040516001600160a01b039091168152602090f35b34610ad5575f366003190112610ad5575f905f54916111328361127e565b8083526020830193600181169081156111d25750600114611189575b509061115e816040930382611249565b8151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b5f8080525f516020611a705f395f51905f52939250905b8082106111b85750909150810160200161115e61114e565b9192600181602092548385880101520191019092916111a0565b60ff1916855250151560051b8201602001905061115e61114e565b600435906001600160a01b0382168203610ad557565b602435906001600160a01b0382168203610ad557565b9181601f84011215610ad5578235916001600160401b038311610ad5576020808501948460051b010111610ad557565b90601f801991011681019081106001600160401b0382111761126a57604052565b634e487b7160e01b5f52604160045260245ffd5b90600182811c921680156112ac575b602083101461129857565b634e487b7160e01b5f52602260045260245ffd5b91607f169161128d565b60035460405163429c6e5b60e01b81526004810192909252602090829060249082906001600160a01b03165afa908115610f54575f916112f4575090565b90506020813d60201161131b575b8161130f60209383611249565b81010312610ad5575190565b3d9150611302565b9190820180921161133057565b634e487b7160e01b5f52601160045260245ffd5b91908110156113545760051b0190565b634e487b7160e01b5f52603260045260245ffd5b356001600160a01b0381168103610ad55790565b6001600160a01b031680156113da575f516020611a505f395f51905f5280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b631e4fbdf760e01b5f525f60045260245ffd5b90816020910312610ad557518015158103610ad55790565b5f516020611a505f395f51905f52546001600160a01b039081169061142861163b565b160361143057565b61143861163b565b63118cdaa760e01b5f9081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f91611496606482611249565b519082855af115610f54575f513d6114dd57506001600160a01b0381163b155b6114bd5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b600114156114b6565b60025f516020611a905f395f51905f52541461150f5760025f516020611a905f395f51905f5255565b633ee5aeb560e01b5f5260045ffd5b9194929394604051916020830193845260018060a01b0316604083015260608201526060815261154f608082611249565b519020604051602081019182526020815261156b604082611249565b519020600254926001600160401b03851161126a578460051b604051956115956020830188611249565b86526020860190820191368311610ad557905b82821061160057505050905f915b84518310156115f85760208360051b86010151908181105f146115e7575f52602052600160405f205b9201916115b6565b905f52602052600160405f206115df565b915092501490565b81358152602091820191016115a8565b60ff5f516020611ab05f395f51905f525460401c161561162c57565b631afcd79f60e31b5f5260045ffd5b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611689575b15611685576013193601368111611330573560601c90565b3390565b50601436101561166d56fe60803460b857601f6103bb38819003918201601f19168301916001600160401b0383118484101760bc5780849260209460405283398101031260b857516001600160a01b0381169081900360b857801560a5575f80546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36102ea90816100d18239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8063429c6e5b1461024f578063715018a6146101f85780638da5cb5b146101d1578063bd40bde614610196578063ec5747fe14610133578063f2fde38b146100aa5763f364c90c14610066575f80fd5b346100a65760403660031901126100a657602061009c6004358060081c5f526001602052600160ff60405f205492161b16151590565b6040519015158152f35b5f80fd5b346100a65760203660031901126100a6576004356001600160a01b038116908190036100a6576100d86102b7565b8015610120575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100a65760407f08401774913e94f43659333293c99fdfdea868c488d679967e054abc8b5ae8346101643661029d565b61016f9492946102b7565b8460081c5f526001602052825f20600160ff87161b815417905582519182526020820152a2005b346100a65760206101c86101a93661029d565b50508060081c5f526001602052600160ff60405f205492161b16151590565b15604051908152f35b346100a6575f3660031901126100a6575f546040516001600160a01b039091168152602090f35b346100a6575f3660031901126100a6576102106102b7565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100a65760203660031901126100a6576102836004358060081c5f526001602052600160ff60405f205492161b16151590565b156102955760205f195b604051908152f35b60205f61028d565b60609060031901126100a657600435906024359060443590565b5f546001600160a01b031633036102ca57565b63118cdaa760e01b5f523360045260245ffdfea164736f6c634300081c000a9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000af0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "sourceMap": "1738:9879:8:-:0;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;1623:37:242;;5105:109:0;;:::i;:::-;3384:94:8;;:::i;:::-;1738:9879;;;;;;;;1623:37:242;1738:9879:8;;;;;;;;;;;;;;;;;-1:-1:-1;1738:9879:8;;;;;;-1:-1:-1;1738:9879:8;;;;;-1:-1:-1;1738:9879:8;7709:422:243;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;;;;7894:76:243;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;7983:34:243;7979:146;;7709:422;:::o;7979:146::-;-1:-1:-1;;;;;;1738:9879:8;-1:-1:-1;;;;;1738:9879:8;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;;;;8085:29:243;;1738:9879:8;;8085:29:243;7709:422::o;7894:76::-;7936:23;;;-1:-1:-1;7936:23:243;;-1:-1:-1;7936:23:243",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f905f3560e01c90816306fdde031461111457508063222abc11146110ec5780632eb4a7ab146110cf578063429c6e5b146110a957806349df728c14610fbf5780634b32102a14610dc55780634be7adee14610d50578063572b6c0514610cfb5780636f62c3a614610cd2578063715018a614610c695780637da0a87714610c245780638da5cb5b14610bef578063ae0b51df14610bae578063b026a47f146106a0578063b7f1aca81461064a578063cd63d9301461062c578063cfdbf25414610610578063ef692c7d14610221578063efca2eed14610203578063f2fde38b146101d6578063f364c90c1461013b5763fc0c546a14610110575f80fd5b346101385780600319360112610138576001546040516001600160a01b039091168152602090f35b80fd5b503461013857604036600319011261013857600354604051633cd9324360e21b81526004803590820152602480359082015290602090829060449082906001600160a01b03165afa9081156101cb576020929161019e575b506040519015158152f35b6101be9150823d84116101c4575b6101b68183611249565b8101906113ed565b5f610193565b503d6101ac565b6040513d84823e3d90fd5b5034610138576020366003190112610138576102006101f36111ed565b6101fb611405565b61137c565b80f35b50346101385780600319360112610138576020600454604051908152f35b5034610138576080366003190112610138576004356001600160401b0381116104d257610252903690600401611219565b906024356001600160401b03811161039a57610272903690600401611219565b6044929192356001600160401b03811161060c57610294903690600401611219565b6064356001600160401b038111610608576102b3903690600401611219565b90956102bd611405565b6102c56114e6565b606488116105f9578488148015906105ef575b80156105e5575b6105d657889489978a5b8a811061052a57506005548015159081610515575b5061050657909336829003601e190191908b5b8b811061039e578c8c8c8c8c61032981600454611323565b60045560405192835260208301526060604083015282606083015260018060fb1b03831161039a57816080917fcb717668fc2be4cb2b22f131f5c0055a75ad81c1cb5003da116c8e8f0407c58c9460051b8091848401378101030190a160015f516020611a905f395f51905f525580f35b8380fd5b6103a9818d8c611344565b35906103be6103b9828a89611344565b611368565b6103c982858c611344565b3590888310156104f1578260051b860135878112156104ec5786018035906001600160401b0382116104e657602001908060051b360382136104e6576104119184848861151e565b156104d6578f60018060a01b0360035416803b156104d25760405163762ba3ff60e11b81526004810187905260248101859052604481018590529082908290606490829084905af180156101cb576104b9575b50506040816001956104a0857ff75d5c8724380d126d0ce1ef2c57b7e856e7fe00051f6184966b31323463cf1295898060a01b038a5416611458565b82519485526020850152858060a01b031692a201610311565b816104c391611249565b6104ce578f5f610464565b8f80fd5b5080fd5b5063582f497d60e11b8f5260048ffd5b50508f80fd5b508f80fd5b50634e487b7160e01b8f52603260045260248ffd5b636fd8707b60e11b8b5260048bfd5b905061052388600454611323565b115f6102fe565b98966105378a8c8b611344565b35906105476103b98c8688611344565b916105538c898b611344565b35926001600160a01b0316156105c75782156105b857610572906112b6565b6105a9579061058091611323565b965f19811461059557600180910199016102e9565b634e487b7160e01b8c52601160045260248cfd5b63cce553a960e01b8d5260048dfd5b63a68332cd60e01b8e5260048efd5b637e59fcff60e01b8e5260048efd5b632c635df560e11b8952600489fd5b50818314156102df565b50828514156102d8565b632a8677b560e21b8952600489fd5b8780fd5b8580fd5b5034610138578060031936011261013857602060405160648152f35b50346101385780600319360112610138576020600554604051908152f35b5034610138576020366003190112610138577f64687926ea82d024193ae2d49d2c6e63089c2caf9cba13ff897d094f1526f017604060043561068a611405565b600554908060055582519182526020820152a180f35b50346101385760a0366003190112610138576004356001600160401b0381116104d257366023820112156104d2578060040135906001600160401b038211610b9a578290604051926106fc6020601f19601f8401160185611249565b8084523660248284010111610b9657806024602093018386013783010152610722611203565b6044356064356001600160a01b0381168103610b92575f516020611ab05f395f51905f52549360ff8560401c1615946001600160401b03811680159081610b8a575b6001149081610b80575b159081610b77575b50610b685767ffffffffffffffff1981166001175f516020611ab05f395f51905f525585610b3c575b506040516103bb808201908282106001600160401b03831117610b28576020918391611695833930815203019087f08015610b1d576001600160a01b0316936107e6611610565b815115610b0e576001600160a01b0316918215610aff578315610af0578415610ae1576040516318160ddd60e01b8152602081600481875afa9081610aae575b5061083a57630f58058360e11b8752600487fd5b604051633cd9324360e21b8152876004820152876024820152602081604481895afa9081610a91575b5061087757632b58d96960e01b8752600487fd5b61088b90610883611610565b6101fb611610565b8051906001600160401b038211610a7d5781906108a8885461127e565b601f8111610a0c575b50602090601f831160011461099f578892610994575b50508160011b915f199060031b1c19161785555b6bffffffffffffffffffffffff60a01b60015416176001556002556bffffffffffffffffffffffff60a01b6003541617600355610916611610565b61091e611610565b60015f516020611a905f395f51905f525560843560055561093c5780f35b68ff0000000000000000195f516020611ab05f395f51905f5254165f516020611ab05f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b015190505f806108c7565b8880525f516020611a705f395f51905f529250601f198416895b8181106109f457509084600195949392106109dc575b505050811b0185556108db565b01515f1960f88460031b161c191690555f80806109cf565b929360206001819287860151815501950193016109b9565b909150878052601f830160051c5f516020611a705f395f51905f52019060208410610a68575b90601f8493920160051c5f516020611a705f395f51905f5201905b818110610a5a57506108b1565b898155849350600101610a4d565b5f516020611a705f395f51905f529150610a32565b634e487b7160e01b87526041600452602487fd5b610aa99060203d6020116101c4576101b68183611249565b610863565b6020813d602011610ad9575b81610ac760209383611249565b81010312610ad55751610826565b5f80fd5b3d9150610aba565b632b58d96960e01b8752600487fd5b639dd854d360e01b8752600487fd5b630f58058360e11b8752600487fd5b632e43296560e01b8752600487fd5b6040513d88823e3d90fd5b634e487b7160e01b89526041600452602489fd5b68ffffffffffffffffff191668010000000000000001175f516020611ab05f395f51905f52555f61079f565b63f92ee8a960e01b8752600487fd5b9050155f610776565b303b15915061076e565b879150610764565b8480fd5b8280fd5b634e487b7160e01b83526041600452602483fd5b5034610138576060366003190112610138576044356001600160401b0381116104d25790610be160049236908401611219565b50506341cbd5e560e11b8152fd5b50346101385780600319360112610138575f516020611a505f395f51905f52546040516001600160a01b039091168152602090f35b50346101385780600319360112610138576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610138578060031936011261013857610c82611405565b5f516020611a505f395f51905f5280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610138576020366003190112610138576020610cf16004356112b6565b1515604051908152f35b5034610138576020366003190112610138576020610d176111ed565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b5034610138576060366003190112610138576004356001600160401b0381116104d257610d81903690600401611219565b50506024356001600160401b0381116104d257610da2903690600401611219565b50506044356001600160401b0381116104d25790610be160049236908401611219565b5034610ad5576080366003190112610ad557600435610de2611203565b90604435906064356001600160401b038111610ad557610e06903690600401611219565b9390610e10611405565b610e186114e6565b6001600160a01b038216948515610fb0578415610fa1576005548015159081610f8c575b50610f7d57610e4a846112b6565b610f6e57610e5a9185848661151e565b15610f5f576003546001600160a01b0316803b15610ad55760405163762ba3ff60e11b8152600481018490526024810185905260448101859052905f908290606490829084905af18015610f5457610f17575b5091604091610ef8827ff75d5c8724380d126d0ce1ef2c57b7e856e7fe00051f6184966b31323463cf1295610ee482600454611323565b6004556001546001600160a01b0316611458565b82519182526020820152a260015f516020611a905f395f51905f525580f35b7ff75d5c8724380d126d0ce1ef2c57b7e856e7fe00051f6184966b31323463cf129391955091610f495f604094611249565b5f9591935091610ead565b6040513d5f823e3d90fd5b63582f497d60e11b5f5260045ffd5b63cce553a960e01b5f5260045ffd5b636fd8707b60e11b5f5260045ffd5b9050610f9a86600454611323565b115f610e3c565b63a68332cd60e01b5f5260045ffd5b637e59fcff60e01b5f5260045ffd5b34610ad5576020366003190112610ad557610fd86111ed565b610fe0611405565b6001600160a01b03811690811561109a576001546040516370a0823160e01b815230600482015291906001600160a01b0316602083602481845afa928315610f54575f93611062575b5091611059816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b95611458565b604051908152a2005b9250906020833d602011611092575b8161107e60209383611249565b81010312610ad55791519190611059611029565b3d9150611071565b634261081360e11b5f5260045ffd5b34610ad5576020366003190112610ad55760206110c76004356112b6565b604051908152f35b34610ad5575f366003190112610ad5576020600254604051908152f35b34610ad5575f366003190112610ad5576003546040516001600160a01b039091168152602090f35b34610ad5575f366003190112610ad5575f905f54916111328361127e565b8083526020830193600181169081156111d25750600114611189575b509061115e816040930382611249565b8151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b5f8080525f516020611a705f395f51905f52939250905b8082106111b85750909150810160200161115e61114e565b9192600181602092548385880101520191019092916111a0565b60ff1916855250151560051b8201602001905061115e61114e565b600435906001600160a01b0382168203610ad557565b602435906001600160a01b0382168203610ad557565b9181601f84011215610ad5578235916001600160401b038311610ad5576020808501948460051b010111610ad557565b90601f801991011681019081106001600160401b0382111761126a57604052565b634e487b7160e01b5f52604160045260245ffd5b90600182811c921680156112ac575b602083101461129857565b634e487b7160e01b5f52602260045260245ffd5b91607f169161128d565b60035460405163429c6e5b60e01b81526004810192909252602090829060249082906001600160a01b03165afa908115610f54575f916112f4575090565b90506020813d60201161131b575b8161130f60209383611249565b81010312610ad5575190565b3d9150611302565b9190820180921161133057565b634e487b7160e01b5f52601160045260245ffd5b91908110156113545760051b0190565b634e487b7160e01b5f52603260045260245ffd5b356001600160a01b0381168103610ad55790565b6001600160a01b031680156113da575f516020611a505f395f51905f5280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b631e4fbdf760e01b5f525f60045260245ffd5b90816020910312610ad557518015158103610ad55790565b5f516020611a505f395f51905f52546001600160a01b039081169061142861163b565b160361143057565b61143861163b565b63118cdaa760e01b5f9081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f91611496606482611249565b519082855af115610f54575f513d6114dd57506001600160a01b0381163b155b6114bd5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b600114156114b6565b60025f516020611a905f395f51905f52541461150f5760025f516020611a905f395f51905f5255565b633ee5aeb560e01b5f5260045ffd5b9194929394604051916020830193845260018060a01b0316604083015260608201526060815261154f608082611249565b519020604051602081019182526020815261156b604082611249565b519020600254926001600160401b03851161126a578460051b604051956115956020830188611249565b86526020860190820191368311610ad557905b82821061160057505050905f915b84518310156115f85760208360051b86010151908181105f146115e7575f52602052600160405f205b9201916115b6565b905f52602052600160405f206115df565b915092501490565b81358152602091820191016115a8565b60ff5f516020611ab05f395f51905f525460401c161561162c57565b631afcd79f60e31b5f5260045ffd5b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611689575b15611685576013193601368111611330573560601c90565b3390565b50601436101561166d56fe60803460b857601f6103bb38819003918201601f19168301916001600160401b0383118484101760bc5780849260209460405283398101031260b857516001600160a01b0381169081900360b857801560a5575f80546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36102ea90816100d18239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8063429c6e5b1461024f578063715018a6146101f85780638da5cb5b146101d1578063bd40bde614610196578063ec5747fe14610133578063f2fde38b146100aa5763f364c90c14610066575f80fd5b346100a65760403660031901126100a657602061009c6004358060081c5f526001602052600160ff60405f205492161b16151590565b6040519015158152f35b5f80fd5b346100a65760203660031901126100a6576004356001600160a01b038116908190036100a6576100d86102b7565b8015610120575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100a65760407f08401774913e94f43659333293c99fdfdea868c488d679967e054abc8b5ae8346101643661029d565b61016f9492946102b7565b8460081c5f526001602052825f20600160ff87161b815417905582519182526020820152a2005b346100a65760206101c86101a93661029d565b50508060081c5f526001602052600160ff60405f205492161b16151590565b15604051908152f35b346100a6575f3660031901126100a6575f546040516001600160a01b039091168152602090f35b346100a6575f3660031901126100a6576102106102b7565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100a65760203660031901126100a6576102836004358060081c5f526001602052600160ff60405f205492161b16151590565b156102955760205f195b604051908152f35b60205f61028d565b60609060031901126100a657600435906024359060443590565b5f546001600160a01b031633036102ca57565b63118cdaa760e01b5f523360045260245ffdfea164736f6c634300081c000a9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "1738:9879:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;8274:13:0;1738:9879:8;;;-1:-1:-1;;;8274:43:0;;1738:9879:8;;;8274:43:0;;;1738:9879:8;;;;;;;;;;;;;8274:43:0;;1738:9879:8;;-1:-1:-1;;;;;1738:9879:8;8274:43:0;;;;;;;1738:9879:8;8274:43:0;;;;1738:9879:8;;;;;;;;;;8274:43:0;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1738:9879:8;;;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;2357:1:240;1738:9879:8;;:::i;:::-;2303:62:240;;:::i;:::-;2357:1;:::i;:::-;1738:9879:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;:::i;:::-;2303:62:240;;;;:::i;:::-;3361:103:250;;:::i;:::-;1738:9879:8;3044:26:0;;3040:87;;8322:35:8;;;;;:74;;;1738:9879;8322:131;;;;1738:9879;8305:217;;8532:22;8564:28;;8665:13;;8680:18;;;;;;1738:9879;9325:16;1738:9879;9325:20;;;:73;;;;8660:590;9321:136;;;9537:13;;1738:9879;;;;-1:-1:-1;;1738:9879:8;;;9537:13;9552:18;;;;;;1738:9879;;;;;10230:31;1738:9879;;;10230:31;:::i;:::-;1738:9879;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10277:61;1738:9879;9325:16;1738:9879;;;;;;;;;10277:61;;;;1738:9879;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;;;;;9572:3;9607:10;;;;;:::i;:::-;1738:9879;9651:13;;;;;;;:::i;:::-;;:::i;:::-;9695:10;;;;;:::i;:::-;1738:9879;;;;;;;;;9325:16;1738:9879;;;;;;;;;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;9325:16;1738:9879;;;;;;;9782:61;;;;;;:::i;:::-;9781:62;9777:128;;1738:9879;;;;;;9979:13;1738:9879;;9979:48;;;;;1738:9879;;-1:-1:-1;;;9979:48:8;;1738:9879;9979:48;;1738:9879;;;;;;;;;;;;;;;;;;;;;;;;;;9979:48;;;;;;;;9572:3;1738:9879;;;;;;10104:6;1738:9879;10130:43;1738:9879;;;;;;;;;10104:6;:::i;:::-;1738:9879;;;;;;;;;;;;;;;10130:43;;1738:9879;9537:13;;9979:48;;;;;:::i;:::-;1738:9879;;9979:48;;;;1738:9879;;;;9979:48;1738:9879;;;9777:128;-1:-1:-1;;;;9870:20:8;;1738:9879;7164:20;9870;1738:9879;;;;;;;;;;;;-1:-1:-1;;;;1738:9879:8;;;;;;;;9321:136;-1:-1:-1;;;9421:25:8;;1738:9879;6890:25;9421;9325:73;1738:9879;;9349:30;1738:9879;;;9349:30;:::i;:::-;:49;9325:73;;;8700:3;8735:10;;;;;;;:::i;:::-;1738:9879;8779:13;;;;;;;:::i;:::-;8823:10;;;;;;:::i;:::-;1738:9879;;-1:-1:-1;;;;;1738:9879:8;8899:23;8895:64;;8977:11;;8973:48;;9039:23;;;:::i;:::-;9035:94;;9187:20;;;;:::i;:::-;1738:9879;-1:-1:-1;;1738:9879:8;;;;;;;;8700:3;1738:9879;8665:13;;1738:9879;-1:-1:-1;;;1738:9879:8;;;;;;;;9035:94;-1:-1:-1;;;9094:20:8;;1738:9879;7017:20;9094;8973:48;-1:-1:-1;;;8997:24:8;;1738:9879;6725:24;8997;8895:64;-1:-1:-1;;;8931:28:8;;1738:9879;6663:28;8931;8305:217;-1:-1:-1;;;8485:26:8;;1738:9879;8485:26;;8322:131;8416:37;;;;;8322:131;;:74;8361:35;;;;;8322:74;;3040:87:0;-1:-1:-1;;;3093:23:0;;1738:9879:8;3093:23:0;;1738:9879:8;;;;;;;;;;;;;;;;;;;;;;;;2817:3:0;1738:9879:8;;;;;;;;;;;;;;;;;5155:16;1738:9879;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;5907:51;1738:9879;;;2303:62:240;;:::i;:::-;5828:16:8;1738:9879;;;5828:16;1738:9879;;;;;;;;;;5907:51;1738:9879;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;;;;;4301:16:243;1738:9879:8;-1:-1:-1;;;;;1738:9879:8;;4724:16:243;;:34;;;;1738:9879:8;;4788:16:243;:50;;;;1738:9879:8;4853:13:243;:30;;;;1738:9879:8;4849:91:243;;;-1:-1:-1;;1738:9879:8;;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;4977:67:243;;1738:9879:8;;;;4417:40;;;;;;;;-1:-1:-1;;;;;4417:40:8;;;;;1738:9879;4417:40;;;;;;4451:4;1738:9879;;4417:40;;;;;;;;;-1:-1:-1;;;;;1738:9879:8;;6891:76:243;;:::i;:::-;1738:9879:8;;5937:24:0;5933:57;;-1:-1:-1;;;;;1738:9879:8;;6004:20:0;;6000:54;;6068:19;;6064:51;;6129:27;;6125:68;;1738:9879:8;;-1:-1:-1;;;6312:28:0;;1738:9879:8;;;;6312:28:0;;;;;;;1738:9879:8;-1:-1:-1;6308:175:0;;-1:-1:-1;;;6451:21:0;;1738:9879:8;6033:21:0;6451;6308:175;1738:9879:8;;;;;6630:47:0;;;1738:9879:8;6630:47:0;;1738:9879:8;;;;;;;6630:47:0;1738:9879:8;6630:47:0;;;;;;;;6308:175;-1:-1:-1;6626:208:0;;-1:-1:-1;;;6795:28:0;;1738:9879:8;6165:28:0;6795;6626:208;6959:1:243;6626:208:0;6891:76:243;;:::i;:::-;;;:::i;6959:1::-;1738:9879:8;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;:::i;:::-;;;;;;6626:208:0;1738:9879:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6933:19:0;1738:9879:8;;;;6962:47:0;1738:9879:8;;;6962:47:0;1738:9879:8;6891:76:243;;:::i;:::-;;;:::i;:::-;1738:9879:8;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;4655:35;1738:9879;5064:101:243;;1738:9879:8;;5064:101:243;1738:9879:8;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;-1:-1:-1;;;;;;;;;;;1738:9879:8;5140:14:243;1738:9879:8;;;;;;5140:14:243;1738:9879:8;;;;;;-1:-1:-1;1738:9879:8;;;;;;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;-1:-1:-1;;;1738:9879:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;;;;;;;;;;;;;;;-1:-1:-1;1738:9879:8;;;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;-1:-1:-1;1738:9879:8;;;-1:-1:-1;;;1738:9879:8;;;;;;;;6630:47:0;;;1738:9879:8;6630:47:0;1738:9879:8;6630:47:0;;;;;;;:::i;:::-;;;6312:28;1738:9879:8;6312:28:0;;1738:9879:8;6312:28:0;;;;;;1738:9879:8;6312:28:0;;;:::i;:::-;;;1738:9879:8;;;;;6312:28:0;;1738:9879:8;-1:-1:-1;1738:9879:8;;6312:28:0;;;-1:-1:-1;6312:28:0;;6125:68;-1:-1:-1;;;6165:28:0;;1738:9879:8;6165:28:0;;6064:51;-1:-1:-1;;;6096:19:0;;1738:9879:8;6096:19:0;;6000:54;-1:-1:-1;;;6033:21:0;;1738:9879:8;6033:21:0;;5933:57;-1:-1:-1;;;5970:20:0;;1738:9879:8;5970:20:0;;4417:40:8;1738:9879;;;;;;;;;4417:40;-1:-1:-1;;;1738:9879:8;;;;;;;;4977:67:243;-1:-1:-1;;1738:9879:8;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;4977:67:243;;;4849:91;-1:-1:-1;;;4906:23:243;;1738:9879:8;4906:23:243;;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:243;;4724:34;;;-1:-1:-1;4724:34:243;;1738:9879:8;;;;;;;;;-1:-1:-1;;;1738:9879:8;;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11580:28:8;;;1738:9879;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;;;;;;;;;;;1830:17:242;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;;;;;;;2303:62:240;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1738:9879:8;;-1:-1:-1;;;;;;1738:9879:8;;;;;;;-1:-1:-1;;;;;1738:9879:8;3975:40:240;1738:9879:8;;3975:40:240;1738:9879:8;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;5466:23;1738:9879;;5466:23;:::i;:::-;:28;;1738:9879;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;;:::i;:::-;;;1830:17:242;-1:-1:-1;;;;;1738:9879:8;;;;;2054:31:242;;;;1738:9879:8;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;:::i;:::-;2303:62:240;;;;:::i;:::-;3361:103:250;;:::i;:::-;-1:-1:-1;;;;;1738:9879:8;;;6631:23;;6627:64;;6705:11;;6701:48;;6798:16;1738:9879;6798:20;;;:69;;;;1738:9879;6794:132;;;6980:23;;;:::i;:::-;6976:61;;7084:57;;;;;;:::i;:::-;7083:58;7079:116;;7261:13;1738:9879;-1:-1:-1;;;;;1738:9879:8;7261:48;;;;;1738:9879;;-1:-1:-1;;;7261:48:8;;1738:9879;7261:48;;1738:9879;;;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;-1:-1:-1;;7261:48:8;;;;;;;;1738:9879;;;;;7452:6;1738:9879;7474:43;1738:9879;7356:27;1738:9879;;;7356:27;:::i;:::-;1738:9879;;;;-1:-1:-1;;;;;1738:9879:8;7452:6;:::i;:::-;1738:9879;;;;;;;;;7474:43;1738:9879;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;7261:48;7474:43;7261:48;;;;;;1738:9879;;7261:48;;:::i;:::-;1738:9879;;;;-1:-1:-1;7261:48:8;;;;1738:9879;;;;;;;;;7079:116;7164:20;;;1738:9879;7164:20;1738:9879;;7164:20;6976:61;7017:20;;;1738:9879;7017:20;1738:9879;;7017:20;6794:132;6890:25;;;1738:9879;6890:25;1738:9879;;6890:25;6798:69;1738:9879;;6822:26;1738:9879;;;6822:26;:::i;:::-;:45;6798:69;;;6701:48;6725:24;;;1738:9879;6725:24;1738:9879;;6725:24;6627:64;6663:28;;;1738:9879;6663:28;1738:9879;;6663:28;1738:9879;;;;;;-1:-1:-1;;1738:9879:8;;;;;;:::i;:::-;2303:62:240;;:::i;:::-;-1:-1:-1;;;;;1738:9879:8;;;10057:16:0;;10053:55;;1738:9879:8;;;;-1:-1:-1;;;10136:31:0;;10161:4;1738:9879:8;10136:31:0;;1738:9879:8;;;-1:-1:-1;;;;;1738:9879:8;;;10136:31:0;1738:9879:8;;10136:31:0;;;;;;;1738:9879:8;10136:31:0;;;1738:9879:8;10201:7:0;;;;1738:9879:8;10201:7:0;10224:28;10201:7;;:::i;:::-;1738:9879:8;;;;;10224:28:0;1738:9879:8;10136:31:0;;;;1738:9879:8;10136:31:0;;1738:9879:8;10136:31:0;;;;;;1738:9879:8;10136:31:0;;;:::i;:::-;;;1738:9879:8;;;;;;;10136:31:0;10201:7;10136:31;;;;;-1:-1:-1;10136:31:0;;10053:55;10082:26;;;1738:9879:8;10082:26:0;1738:9879:8;;10082:26:0;1738:9879:8;;;;;;-1:-1:-1;;1738:9879:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;7655:11:0;1738:9879:8;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;7857:13:0;1738:9879:8;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;-1:-1:-1;1738:9879:8;;;;;;;-1:-1:-1;1738:9879:8;;-1:-1:-1;1738:9879:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1738:9879:8;;;-1:-1:-1;1738:9879:8;;;;;;;;;-1:-1:-1;1738:9879:8;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;:::o;:::-;;;;-1:-1:-1;1738:9879:8;;;;;-1:-1:-1;1738:9879:8;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;8514:132:0;8602:13;1738:9879:8;;;-1:-1:-1;;;8602:37:0;;;;;1738:9879:8;;;;;;;;8602:37:0;;1738:9879:8;;-1:-1:-1;;;;;1738:9879:8;8602:37:0;;;;;;;-1:-1:-1;8602:37:0;;;8595:44;8514:132;:::o;8602:37::-;;;1738:9879:8;8602:37:0;;1738:9879:8;8602:37:0;;;;;;1738:9879:8;8602:37:0;;;:::i;:::-;;;1738:9879:8;;;;;8514:132:0;:::o;8602:37::-;;;-1:-1:-1;8602:37:0;;1738:9879:8;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;;;;;:::o;3405:215:240:-;-1:-1:-1;;;;;1738:9879:8;3489:22:240;;3485:91;;-1:-1:-1;;;;;;;;;;;1738:9879:8;;-1:-1:-1;;;;;;1738:9879:8;;;;;;;-1:-1:-1;;;;;1738:9879:8;3975:40:240;-1:-1:-1;;3975:40:240;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;1738:9879:8;;3509:1:240;3534:31;1738:9879:8;;;;;;;;;;;;;;;;;;:::o;2658:162:240:-;-1:-1:-1;;;;;;;;;;;1738:9879:8;-1:-1:-1;;;;;1738:9879:8;;;;15245:38:0;;:::i;:::-;1738:9879:8;2717:23:240;2713:101;;2658:162::o;2713:101::-;15245:38:0;;:::i;:::-;-1:-1:-1;;;;2763:40:240;;;-1:-1:-1;;;;;1738:9879:8;;;;2763:40:240;1738:9879:8;;;2763:40:240;1219:160:211;1738:9879:8;;-1:-1:-1;;;1328:43:211;;;;;;;-1:-1:-1;;;;;1738:9879:8;;;1328:43:211;;;1738:9879:8;;;;;;;;;1328:43:211;;;1219:160;;-1:-1:-1;;1328:43:211;;1738:9879:8;1328:43:211;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:211;;8942:15;;-1:-1:-1;;;;;;1738:9879:8;;8960:26:211;:31;8942:68;8938:146;;1219:160;:::o;8938:146::-;-1:-1:-1;;;;9033:40:211;;;-1:-1:-1;;;;;1738:9879:8;;;;9033:40:211;1738:9879:8;1328:43:211;;9033:40;8942:68;9009:1;8994:16;;8942:68;;3470:384:250;1991:1;-1:-1:-1;;;;;;;;;;;1738:9879:8;3670:20:250;3666:88;;1991:1;-1:-1:-1;;;;;;;;;;;1738:9879:8;3470:384:250:o;3666:88::-;3713:30;;;-1:-1:-1;3713:30:250;;-1:-1:-1;3713:30:250;10765:461:0;;;;;;1738:9879:8;;11110:39:0;;;;1738:9879:8;;;;;;;;;;;;;;;;;;11110:39:0;;;;;;:::i;:::-;1738:9879:8;11100:50:0;;1738:9879:8;;11110:39:0;11089:62;;1738:9879:8;;;11110:39:0;11089:62;;;1738:9879:8;11089:62:0;;:::i;:::-;1738:9879:8;11079:73:0;;11201:11;1738:9879:8;;-1:-1:-1;;;;;1738:9879:8;;;;;;;;;;;11110:39:0;1738:9879:8;;;;:::i;:::-;;;11110:39:0;1738:9879:8;;;;;;;;;;;;;;;;;;2559:27:229;;;2601:13;-1:-1:-1;2596:134:229;2634:3;1738:9879:8;;2616:16:229;;;;;11110:39:0;1738:9879:8;;;;;;;605:59:228;:5;;;:59;:5;;;-1:-1:-1;889:135:228;11110:39:0;889:135:228;1738:9879:8;;-1:-1:-1;889:135:228;605:59;2634:3:229;1738:9879:8;2601:13:229;;;605:59:228;889:135;-1:-1:-1;889:135:228;11110:39:0;889:135:228;1738:9879:8;;-1:-1:-1;889:135:228;605:59;;2616:16:229;;;;;2016:33;10765:461:0;:::o;1738:9879:8:-;;;;;11110:39:0;1738:9879:8;;;;;;;7082:141:243;1738:9879:8;-1:-1:-1;;;;;;;;;;;1738:9879:8;;;;7148:18:243;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:243;;-1:-1:-1;7189:17:243;2329:429:242;2545:10;1830:17;-1:-1:-1;;;;;1738:9879:8;2054:31:242;;2526:71;;2329:429;2522:230;;;1738:9879:8;;2435:8:242;1738:9879:8;2435:8:242;1738:9879:8;;;;;;;;2613:72:242:o;2522:230::-;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;",
    "linkReferences": {},
    "immutableReferences": {
      "58779": [
        {
          "start": 3130,
          "length": 32
        },
        {
          "start": 3356,
          "length": 32
        },
        {
          "start": 5694,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_BATCH_SIZE()": "cfdbf254",
    "batchClaim(uint256[],uint256[],bytes32[][])": "4be7adee",
    "batchDistribute(uint256[],address[],uint256[],bytes32[][])": "ef692c7d",
    "claim(uint256,uint256,bytes32[])": "ae0b51df",
    "claimTracker()": "222abc11",
    "distribute(uint256,address,uint256,bytes32[])": "4b32102a",
    "distributionCap()": "cd63d930",
    "getClaimedAmount(uint256)": "429c6e5b",
    "initialize(string,address,bytes32,address,uint256)": "b026a47f",
    "isClaimed(uint256,uint256)": "f364c90c",
    "isDistributed(uint256)": "6f62c3a6",
    "isTrustedForwarder(address)": "572b6c05",
    "merkleRoot()": "2eb4a7ab",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setDistributionCap(uint256)": "b7f1aca8",
    "token()": "fc0c546a",
    "totalDistributed()": "efca2eed",
    "transferOwnership(address)": "f2fde38b",
    "trustedForwarder()": "7da0a877",
    "withdrawTokens(address)": "49df728c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyDistributed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BatchSizeExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributionCapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAirdropName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimTrackerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDistributionAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInputArrayLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWithdrawalAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PushAirdropClaimNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmountToDistribute\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"}],\"name\":\"BatchTokensDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"DistributionCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"TokensDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"\",\"type\":\"bytes32[][]\"}],\"name\":\"batchClaim\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchDistribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTracker\",\"outputs\":[{\"internalType\":\"contract IATKClaimTracker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getClaimedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"distributionCap_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isDistributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDistributionCap_\",\"type\":\"uint256\"}],\"name\":\"setDistributionCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This contract implements an admin-controlled distribution system where:      - Only the contract owner can distribute tokens to recipients      - Recipients cannot claim tokens themselves - they must be pushed by the admin      - Uses Merkle proof verification for secure distribution validation      - Tracks distributed status using ATKBitmapClaimTracker      - Supports both single and batch distributions      - Includes optional distribution cap for controlling total distributions      The contract extends ATKAirdrop but overrides claim functions to prevent user-initiated claims.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"PushAirdropClaimNotAllowed()\":[{\"details\":\"Push airdrops only allow admin-initiated distributions, not user claims.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"BatchClaimed(address,uint256,uint256[],uint256[])\":{\"params\":{\"amounts\":\"The amounts claimed for each index.\",\"claimant\":\"The address that claimed the tokens.\",\"indices\":\"The indices of the claims in the Merkle tree.\",\"totalAmount\":\"The total amount of tokens claimed in the batch.\"}},\"BatchTokensDistributed(uint256,uint256,uint256[])\":{\"params\":{\"indices\":\"The indices of the distributions in the Merkle tree.\",\"recipientCount\":\"The number of recipients in the batch.\",\"totalAmount\":\"The total amount of tokens distributed in the batch.\"}},\"Claimed(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens claimed.\",\"claimant\":\"The address that claimed the tokens.\",\"index\":\"The index of the claim in the Merkle tree.\"}},\"DistributionCapUpdated(uint256,uint256)\":{\"params\":{\"newCap\":\"The new distribution cap.\",\"oldCap\":\"The previous distribution cap.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TokensDistributed(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens distributed.\",\"index\":\"The index of the distribution in the Merkle tree.\",\"recipient\":\"The address that received the tokens.\"}},\"TokensWithdrawn(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens withdrawn.\",\"to\":\"The address receiving the withdrawn tokens.\"}}},\"kind\":\"dev\",\"methods\":{\"batchClaim(uint256[],uint256[],bytes32[][])\":{\"details\":\"Overrides the abstract batchClaim function from ATKAirdrop to prevent user-initiated claims.      In push airdrops, only the admin can distribute tokens.      All parameters are unused as this function always reverts.\"},\"batchDistribute(uint256[],address[],uint256[],bytes32[][])\":{\"details\":\"Only the contract owner can distribute tokens. Batch version for gas efficiency.\",\"params\":{\"amounts\":\"The amounts of tokens to distribute to each recipient.\",\"indices\":\"The indices of the distributions in the Merkle tree.\",\"merkleProofs\":\"The Merkle proof arrays for verification of each distribution.\",\"recipients\":\"The addresses to receive tokens.\"}},\"claim(uint256,uint256,bytes32[])\":{\"details\":\"Overrides the abstract claim function from ATKAirdrop to prevent user-initiated claims.      In push airdrops, only the admin can distribute tokens.      All parameters are unused as this function always reverts.\"},\"claimTracker()\":{\"returns\":{\"_0\":\"The claim tracker contract.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"params\":{\"forwarder_\":\"The address of the forwarder contract.\"}},\"distribute(uint256,address,uint256,bytes32[])\":{\"details\":\"Only the contract owner can distribute tokens. Verifies Merkle proof and distribution cap.\",\"params\":{\"amount\":\"The amount of tokens to distribute.\",\"index\":\"The index of the distribution in the Merkle tree.\",\"merkleProof\":\"The Merkle proof array for verification.\",\"recipient\":\"The address to receive tokens.\"}},\"distributionCap()\":{\"returns\":{\"_0\":\"The maximum tokens that can be distributed (0 for no cap).\"}},\"getClaimedAmount(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"claimedAmount The amount already claimed for this index.\"}},\"initialize(string,address,bytes32,address,uint256)\":{\"details\":\"Sets up the base airdrop functionality and push-specific parameters.      Deploys its own bitmap claim tracker for efficient distribution tracking.\",\"params\":{\"distributionCap_\":\"The maximum tokens that can be distributed (0 for no cap).\",\"name_\":\"The human-readable name for this airdrop.\",\"owner_\":\"The initial owner of the contract (admin who can distribute tokens).\",\"root_\":\"The Merkle root for verifying distributions.\",\"token_\":\"The address of the ERC20 token to be distributed.\"}},\"isClaimed(uint256,uint256)\":{\"params\":{\"index\":\"The index to check in the Merkle tree.\",\"totalAmount\":\"The total amount allocated for this index.\"},\"returns\":{\"_0\":\"claimed True if the index has been fully claimed, false otherwise.\"}},\"isDistributed(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"distributed True if tokens have been distributed for this index.\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"merkleRoot()\":{\"returns\":{\"_0\":\"The Merkle root for verifying airdrop claims.\"}},\"name()\":{\"returns\":{\"_0\":\"The human-readable name of the airdrop.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDistributionCap(uint256)\":{\"details\":\"Only the owner can update the distribution cap.\",\"params\":{\"newDistributionCap_\":\"The new distribution cap (0 for no cap).\"}},\"token()\":{\"returns\":{\"_0\":\"The ERC20 token being distributed.\"}},\"totalDistributed()\":{\"returns\":{\"_0\":\"The total amount distributed.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"withdrawTokens(address)\":{\"params\":{\"to\":\"The address to send the withdrawn tokens to.\"}}},\"stateVariables\":{\"_distributionCap\":{\"details\":\"Set to 0 for no cap. Used to limit total distributions.\"},\"_totalDistributed\":{\"details\":\"Tracks the cumulative amount of tokens that have been distributed.\"}},\"title\":\"ATK Push Airdrop Implementation\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyDistributed()\":[{\"notice\":\"Thrown when tokens have already been distributed to a specific index.\"}],\"BatchSizeExceedsLimit()\":[{\"notice\":\"Error indicating that the batch size exceeds the maximum allowed limit.\"}],\"DistributionCapExceeded()\":[{\"notice\":\"Thrown when a distribution would exceed the configured distribution cap.\"}],\"InvalidAirdropName()\":[{\"notice\":\"Thrown when the airdrop name is empty or invalid.\"}],\"InvalidClaimTrackerAddress()\":[{\"notice\":\"Error indicating that an invalid claim tracker address was provided.\"}],\"InvalidDistributionAddress()\":[{\"notice\":\"Thrown when attempting to distribute to an invalid address.\"}],\"InvalidInputArrayLengths()\":[{\"notice\":\"Error indicating that input array lengths do not match in batch operations.\"}],\"InvalidMerkleProof()\":[{\"notice\":\"Error indicating that a provided Merkle proof is invalid for the claim parameters.\"}],\"InvalidMerkleRoot()\":[{\"notice\":\"Error indicating that a provided Merkle root is invalid.\"}],\"InvalidTokenAddress()\":[{\"notice\":\"Error indicating that an invalid token address was provided.\"}],\"InvalidWithdrawalAddress()\":[{\"notice\":\"Error indicating that an invalid withdrawal address was provided.\"}],\"PushAirdropClaimNotAllowed()\":[{\"notice\":\"Thrown when attempting to claim tokens from a push airdrop.\"}],\"ZeroAmountToDistribute()\":[{\"notice\":\"Thrown when attempting to distribute zero tokens.\"}]},\"events\":{\"BatchClaimed(address,uint256,uint256[],uint256[])\":{\"notice\":\"Emitted when a user claims multiple allocations in a single transaction.\"},\"BatchTokensDistributed(uint256,uint256,uint256[])\":{\"notice\":\"Emitted when tokens are distributed to multiple recipients in a batch.\"},\"Claimed(address,uint256,uint256)\":{\"notice\":\"Emitted when a user successfully claims their airdrop allocation.\"},\"DistributionCapUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the distribution cap is updated.\"},\"TokensDistributed(address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are distributed to a recipient.\"},\"TokensWithdrawn(address,uint256)\":{\"notice\":\"Emitted when the contract owner withdraws unclaimed tokens.\"}},\"kind\":\"user\",\"methods\":{\"MAX_BATCH_SIZE()\":{\"notice\":\"Maximum number of items allowed in batch operations to prevent OOM and gas limit issues.\"},\"batchClaim(uint256[],uint256[],bytes32[][])\":{\"notice\":\"Claims tokens for multiple recipients - NOT ALLOWED in push airdrops.\"},\"batchDistribute(uint256[],address[],uint256[],bytes32[][])\":{\"notice\":\"Distributes tokens to multiple recipients in a single transaction.\"},\"claim(uint256,uint256,bytes32[])\":{\"notice\":\"Claims tokens for a recipient - NOT ALLOWED in push airdrops.\"},\"claimTracker()\":{\"notice\":\"Returns the claim tracker contract.\"},\"distribute(uint256,address,uint256,bytes32[])\":{\"notice\":\"Distributes tokens to a single recipient with Merkle proof verification.\"},\"distributionCap()\":{\"notice\":\"Returns the distribution cap.\"},\"getClaimedAmount(uint256)\":{\"notice\":\"Gets the amount already claimed for a specific index.\"},\"initialize(string,address,bytes32,address,uint256)\":{\"notice\":\"Initializes the push airdrop contract with specified parameters.\"},\"isClaimed(uint256,uint256)\":{\"notice\":\"Checks if a claim has been fully claimed for a specific index.\"},\"isDistributed(uint256)\":{\"notice\":\"Checks if tokens have been distributed to a specific index.\"},\"merkleRoot()\":{\"notice\":\"Returns the Merkle root for verifying airdrop claims.\"},\"name()\":{\"notice\":\"Returns the name of this airdrop.\"},\"setDistributionCap(uint256)\":{\"notice\":\"Updates the distribution cap.\"},\"token()\":{\"notice\":\"Returns the token being distributed in this airdrop.\"},\"totalDistributed()\":{\"notice\":\"Returns the total amount of tokens distributed so far.\"},\"withdrawTokens(address)\":{\"notice\":\"Allows the owner to withdraw any tokens remaining in the contract.\"}},\"notice\":\"Implementation of a push airdrop contract where only the admin can distribute tokens to recipients in the ATK Protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/airdrop/push-airdrop/ATKPushAirdropImplementation.sol\":\"ATKPushAirdropImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/addons/airdrop/ATKAirdrop.sol\":{\"keccak256\":\"0xe38f2fbfe2c20bb38691181c91b1d61ae5049df58be7d118d45ee19e419406b8\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://23c96dcd63f23429890d5d7ca9243a5e7a0f479c16a764f37ece22b149d70c7f\",\"dweb:/ipfs/QmPDpZ65CHjuJUM2TEW4AcLWbK24M17kYqz1roD67Tqv1e\"]},\"contracts/addons/airdrop/ATKAirdropErrors.sol\":{\"keccak256\":\"0xce9f93552d1244b7a52bd97e887ff15fac1063bc9785f3697c6b47d368462fad\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://bae1c61355103bc43c257cd9ac37407b0c3f6f3badbca7cdb928f0c6c4c2c478\",\"dweb:/ipfs/QmaSiPbSpNvX4uDG1pJsQmhXwbEDZLBzkcSA8ZzqSRqRby\"]},\"contracts/addons/airdrop/IATKAirdrop.sol\":{\"keccak256\":\"0x5556406001ca17a94dfeb60a9db57417b262020690af11bf58dc5893085b7297\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f426858498d7594fdc8ec019332bb69689c5d6db8f6b5ee4c51b81d5fd3c2d13\",\"dweb:/ipfs/QmbA7Bc5JRPXn47hAHq9nWQo9LR5EDk18savmyxr5nqiSh\"]},\"contracts/addons/airdrop/claim-tracker/ATKBitmapClaimTracker.sol\":{\"keccak256\":\"0xad4a4e867e9592c44569e4a24d9e26357261a40c63adb8eaf149317a420d025c\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://34ef63b749eaf024b164d2d5edf3fa619a467f52097db9c20ed12c28cfecd1d0\",\"dweb:/ipfs/QmSparQqF7QMVo4zGugd3aNRZdBJGSAFmz8FFb5ysVTQ9V\"]},\"contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol\":{\"keccak256\":\"0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f\",\"dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne\"]},\"contracts/addons/airdrop/push-airdrop/ATKPushAirdropErrors.sol\":{\"keccak256\":\"0xf569486818486846fcc854365e21bfc279e1d2527e88ca5b8b0b6f73e7c280ef\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://b7cef762f1b66bcfa638020d992b81ce94b3b9ae8526218c243692e71514b4cc\",\"dweb:/ipfs/Qmf72qnmJSxU13ar1wQTgRwm497hVJyCJ29cbEHJNf5Zvy\"]},\"contracts/addons/airdrop/push-airdrop/ATKPushAirdropImplementation.sol\":{\"keccak256\":\"0xaff8da631b5699a390a530940a50de62ac2af8489bdc59aed141f29e4f9b2b32\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://cc3686be59ed5678bc8579e354a7ecf7fbd4d29d0cf060d0df9381818b8bb092\",\"dweb:/ipfs/QmfEDnvAhKTAPQJqMjKxMMT5dpdsfQPkaFeGnKKJHkRZHY\"]},\"contracts/addons/airdrop/push-airdrop/IATKPushAirdrop.sol\":{\"keccak256\":\"0x213d72f20969e05bcee296ae6c8e045f35b7097b88a868232ba548480c49a9a7\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://b9b66ca6f17ffde3198a1689a6e706280086435f13da18ac939f538b0ae2e615\",\"dweb:/ipfs/QmZAaZHhbyYsRVx1XSAQzVgpcK21BJsS6bbRWVTmKayPAw\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyDistributed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BatchSizeExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DistributionCapExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAirdropName"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaimTrackerAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidDistributionAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInputArrayLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMerkleProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMerkleRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTokenAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWithdrawalAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PushAirdropClaimNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAmountToDistribute"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "recipientCount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchTokensDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldCap",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newCap",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DistributionCapUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BATCH_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "batchClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "recipients",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "merkleProofs",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchDistribute"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimTracker",
          "outputs": [
            {
              "internalType": "contract IATKClaimTracker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distribute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributionCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "root_",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "distributionCap_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDistributed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newDistributionCap_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDistributionCap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDistributed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchClaim(uint256[],uint256[],bytes32[][])": {
            "details": "Overrides the abstract batchClaim function from ATKAirdrop to prevent user-initiated claims.      In push airdrops, only the admin can distribute tokens.      All parameters are unused as this function always reverts."
          },
          "batchDistribute(uint256[],address[],uint256[],bytes32[][])": {
            "details": "Only the contract owner can distribute tokens. Batch version for gas efficiency.",
            "params": {
              "amounts": "The amounts of tokens to distribute to each recipient.",
              "indices": "The indices of the distributions in the Merkle tree.",
              "merkleProofs": "The Merkle proof arrays for verification of each distribution.",
              "recipients": "The addresses to receive tokens."
            }
          },
          "claim(uint256,uint256,bytes32[])": {
            "details": "Overrides the abstract claim function from ATKAirdrop to prevent user-initiated claims.      In push airdrops, only the admin can distribute tokens.      All parameters are unused as this function always reverts."
          },
          "claimTracker()": {
            "returns": {
              "_0": "The claim tracker contract."
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor",
            "params": {
              "forwarder_": "The address of the forwarder contract."
            }
          },
          "distribute(uint256,address,uint256,bytes32[])": {
            "details": "Only the contract owner can distribute tokens. Verifies Merkle proof and distribution cap.",
            "params": {
              "amount": "The amount of tokens to distribute.",
              "index": "The index of the distribution in the Merkle tree.",
              "merkleProof": "The Merkle proof array for verification.",
              "recipient": "The address to receive tokens."
            }
          },
          "distributionCap()": {
            "returns": {
              "_0": "The maximum tokens that can be distributed (0 for no cap)."
            }
          },
          "getClaimedAmount(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "claimedAmount The amount already claimed for this index."
            }
          },
          "initialize(string,address,bytes32,address,uint256)": {
            "details": "Sets up the base airdrop functionality and push-specific parameters.      Deploys its own bitmap claim tracker for efficient distribution tracking.",
            "params": {
              "distributionCap_": "The maximum tokens that can be distributed (0 for no cap).",
              "name_": "The human-readable name for this airdrop.",
              "owner_": "The initial owner of the contract (admin who can distribute tokens).",
              "root_": "The Merkle root for verifying distributions.",
              "token_": "The address of the ERC20 token to be distributed."
            }
          },
          "isClaimed(uint256,uint256)": {
            "params": {
              "index": "The index to check in the Merkle tree.",
              "totalAmount": "The total amount allocated for this index."
            },
            "returns": {
              "_0": "claimed True if the index has been fully claimed, false otherwise."
            }
          },
          "isDistributed(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "distributed True if tokens have been distributed for this index."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "merkleRoot()": {
            "returns": {
              "_0": "The Merkle root for verifying airdrop claims."
            }
          },
          "name()": {
            "returns": {
              "_0": "The human-readable name of the airdrop."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setDistributionCap(uint256)": {
            "details": "Only the owner can update the distribution cap.",
            "params": {
              "newDistributionCap_": "The new distribution cap (0 for no cap)."
            }
          },
          "token()": {
            "returns": {
              "_0": "The ERC20 token being distributed."
            }
          },
          "totalDistributed()": {
            "returns": {
              "_0": "The total amount distributed."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          },
          "withdrawTokens(address)": {
            "params": {
              "to": "The address to send the withdrawn tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_BATCH_SIZE()": {
            "notice": "Maximum number of items allowed in batch operations to prevent OOM and gas limit issues."
          },
          "batchClaim(uint256[],uint256[],bytes32[][])": {
            "notice": "Claims tokens for multiple recipients - NOT ALLOWED in push airdrops."
          },
          "batchDistribute(uint256[],address[],uint256[],bytes32[][])": {
            "notice": "Distributes tokens to multiple recipients in a single transaction."
          },
          "claim(uint256,uint256,bytes32[])": {
            "notice": "Claims tokens for a recipient - NOT ALLOWED in push airdrops."
          },
          "claimTracker()": {
            "notice": "Returns the claim tracker contract."
          },
          "distribute(uint256,address,uint256,bytes32[])": {
            "notice": "Distributes tokens to a single recipient with Merkle proof verification."
          },
          "distributionCap()": {
            "notice": "Returns the distribution cap."
          },
          "getClaimedAmount(uint256)": {
            "notice": "Gets the amount already claimed for a specific index."
          },
          "initialize(string,address,bytes32,address,uint256)": {
            "notice": "Initializes the push airdrop contract with specified parameters."
          },
          "isClaimed(uint256,uint256)": {
            "notice": "Checks if a claim has been fully claimed for a specific index."
          },
          "isDistributed(uint256)": {
            "notice": "Checks if tokens have been distributed to a specific index."
          },
          "merkleRoot()": {
            "notice": "Returns the Merkle root for verifying airdrop claims."
          },
          "name()": {
            "notice": "Returns the name of this airdrop."
          },
          "setDistributionCap(uint256)": {
            "notice": "Updates the distribution cap."
          },
          "token()": {
            "notice": "Returns the token being distributed in this airdrop."
          },
          "totalDistributed()": {
            "notice": "Returns the total amount of tokens distributed so far."
          },
          "withdrawTokens(address)": {
            "notice": "Allows the owner to withdraw any tokens remaining in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/addons/airdrop/push-airdrop/ATKPushAirdropImplementation.sol": "ATKPushAirdropImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/addons/airdrop/ATKAirdrop.sol": {
        "keccak256": "0xe38f2fbfe2c20bb38691181c91b1d61ae5049df58be7d118d45ee19e419406b8",
        "urls": [
          "bzz-raw://23c96dcd63f23429890d5d7ca9243a5e7a0f479c16a764f37ece22b149d70c7f",
          "dweb:/ipfs/QmPDpZ65CHjuJUM2TEW4AcLWbK24M17kYqz1roD67Tqv1e"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/ATKAirdropErrors.sol": {
        "keccak256": "0xce9f93552d1244b7a52bd97e887ff15fac1063bc9785f3697c6b47d368462fad",
        "urls": [
          "bzz-raw://bae1c61355103bc43c257cd9ac37407b0c3f6f3badbca7cdb928f0c6c4c2c478",
          "dweb:/ipfs/QmaSiPbSpNvX4uDG1pJsQmhXwbEDZLBzkcSA8ZzqSRqRby"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/IATKAirdrop.sol": {
        "keccak256": "0x5556406001ca17a94dfeb60a9db57417b262020690af11bf58dc5893085b7297",
        "urls": [
          "bzz-raw://f426858498d7594fdc8ec019332bb69689c5d6db8f6b5ee4c51b81d5fd3c2d13",
          "dweb:/ipfs/QmbA7Bc5JRPXn47hAHq9nWQo9LR5EDk18savmyxr5nqiSh"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/ATKBitmapClaimTracker.sol": {
        "keccak256": "0xad4a4e867e9592c44569e4a24d9e26357261a40c63adb8eaf149317a420d025c",
        "urls": [
          "bzz-raw://34ef63b749eaf024b164d2d5edf3fa619a467f52097db9c20ed12c28cfecd1d0",
          "dweb:/ipfs/QmSparQqF7QMVo4zGugd3aNRZdBJGSAFmz8FFb5ysVTQ9V"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol": {
        "keccak256": "0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be",
        "urls": [
          "bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f",
          "dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/push-airdrop/ATKPushAirdropErrors.sol": {
        "keccak256": "0xf569486818486846fcc854365e21bfc279e1d2527e88ca5b8b0b6f73e7c280ef",
        "urls": [
          "bzz-raw://b7cef762f1b66bcfa638020d992b81ce94b3b9ae8526218c243692e71514b4cc",
          "dweb:/ipfs/Qmf72qnmJSxU13ar1wQTgRwm497hVJyCJ29cbEHJNf5Zvy"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/push-airdrop/ATKPushAirdropImplementation.sol": {
        "keccak256": "0xaff8da631b5699a390a530940a50de62ac2af8489bdc59aed141f29e4f9b2b32",
        "urls": [
          "bzz-raw://cc3686be59ed5678bc8579e354a7ecf7fbd4d29d0cf060d0df9381818b8bb092",
          "dweb:/ipfs/QmfEDnvAhKTAPQJqMjKxMMT5dpdsfQPkaFeGnKKJHkRZHY"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/push-airdrop/IATKPushAirdrop.sol": {
        "keccak256": "0x213d72f20969e05bcee296ae6c8e045f35b7097b88a868232ba548480c49a9a7",
        "urls": [
          "bzz-raw://b9b66ca6f17ffde3198a1689a6e706280086435f13da18ac939f538b0ae2e615",
          "dweb:/ipfs/QmZAaZHhbyYsRVx1XSAQzVgpcK21BJsS6bbRWVTmKayPAw"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/Hashes.sol": {
        "keccak256": "0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269",
        "urls": [
          "bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11",
          "dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134",
        "urls": [
          "bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6",
          "dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866",
        "urls": [
          "bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf",
          "dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MAX_BATCH_SIZE()": {
        "notice": "Maximum number of items allowed in batch operations to prevent OOM and gas limit issues."
      },
      "batchClaim(uint256[],uint256[],bytes32[][])": {
        "notice": "Claims tokens for multiple recipients - NOT ALLOWED in push airdrops."
      },
      "batchDistribute(uint256[],address[],uint256[],bytes32[][])": {
        "notice": "Distributes tokens to multiple recipients in a single transaction."
      },
      "claim(uint256,uint256,bytes32[])": {
        "notice": "Claims tokens for a recipient - NOT ALLOWED in push airdrops."
      },
      "claimTracker()": {
        "notice": "Returns the claim tracker contract."
      },
      "distribute(uint256,address,uint256,bytes32[])": {
        "notice": "Distributes tokens to a single recipient with Merkle proof verification."
      },
      "distributionCap()": {
        "notice": "Returns the distribution cap."
      },
      "getClaimedAmount(uint256)": {
        "notice": "Gets the amount already claimed for a specific index."
      },
      "initialize(string,address,bytes32,address,uint256)": {
        "notice": "Initializes the push airdrop contract with specified parameters."
      },
      "isClaimed(uint256,uint256)": {
        "notice": "Checks if a claim has been fully claimed for a specific index."
      },
      "isDistributed(uint256)": {
        "notice": "Checks if tokens have been distributed to a specific index."
      },
      "merkleRoot()": {
        "notice": "Returns the Merkle root for verifying airdrop claims."
      },
      "name()": {
        "notice": "Returns the name of this airdrop."
      },
      "setDistributionCap(uint256)": {
        "notice": "Updates the distribution cap."
      },
      "token()": {
        "notice": "Returns the token being distributed in this airdrop."
      },
      "totalDistributed()": {
        "notice": "Returns the total amount of tokens distributed so far."
      },
      "withdrawTokens(address)": {
        "notice": "Allows the owner to withdraw any tokens remaining in the contract."
      }
    },
    "events": {
      "BatchClaimed(address,uint256,uint256[],uint256[])": {
        "notice": "Emitted when a user claims multiple allocations in a single transaction."
      },
      "BatchTokensDistributed(uint256,uint256,uint256[])": {
        "notice": "Emitted when tokens are distributed to multiple recipients in a batch."
      },
      "Claimed(address,uint256,uint256)": {
        "notice": "Emitted when a user successfully claims their airdrop allocation."
      },
      "DistributionCapUpdated(uint256,uint256)": {
        "notice": "Emitted when the distribution cap is updated."
      },
      "TokensDistributed(address,uint256,uint256)": {
        "notice": "Emitted when tokens are distributed to a recipient."
      },
      "TokensWithdrawn(address,uint256)": {
        "notice": "Emitted when the contract owner withdraws unclaimed tokens."
      }
    },
    "errors": {
      "AlreadyDistributed()": [
        {
          "notice": "Thrown when tokens have already been distributed to a specific index."
        }
      ],
      "BatchSizeExceedsLimit()": [
        {
          "notice": "Error indicating that the batch size exceeds the maximum allowed limit."
        }
      ],
      "DistributionCapExceeded()": [
        {
          "notice": "Thrown when a distribution would exceed the configured distribution cap."
        }
      ],
      "InvalidAirdropName()": [
        {
          "notice": "Thrown when the airdrop name is empty or invalid."
        }
      ],
      "InvalidClaimTrackerAddress()": [
        {
          "notice": "Error indicating that an invalid claim tracker address was provided."
        }
      ],
      "InvalidDistributionAddress()": [
        {
          "notice": "Thrown when attempting to distribute to an invalid address."
        }
      ],
      "InvalidInputArrayLengths()": [
        {
          "notice": "Error indicating that input array lengths do not match in batch operations."
        }
      ],
      "InvalidMerkleProof()": [
        {
          "notice": "Error indicating that a provided Merkle proof is invalid for the claim parameters."
        }
      ],
      "InvalidMerkleRoot()": [
        {
          "notice": "Error indicating that a provided Merkle root is invalid."
        }
      ],
      "InvalidTokenAddress()": [
        {
          "notice": "Error indicating that an invalid token address was provided."
        }
      ],
      "InvalidWithdrawalAddress()": [
        {
          "notice": "Error indicating that an invalid withdrawal address was provided."
        }
      ],
      "PushAirdropClaimNotAllowed()": [
        {
          "notice": "Thrown when attempting to claim tokens from a push airdrop."
        }
      ],
      "ZeroAmountToDistribute()": [
        {
          "notice": "Thrown when attempting to distribute zero tokens."
        }
      ]
    },
    "notice": "Implementation of a push airdrop contract where only the admin can distribute tokens to recipients in the ATK Protocol."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This contract implements an admin-controlled distribution system where:      - Only the contract owner can distribute tokens to recipients      - Recipients cannot claim tokens themselves - they must be pushed by the admin      - Uses Merkle proof verification for secure distribution validation      - Tracks distributed status using ATKBitmapClaimTracker      - Supports both single and batch distributions      - Includes optional distribution cap for controlling total distributions      The contract extends ATKAirdrop but overrides claim functions to prevent user-initiated claims.",
    "methods": {
      "batchClaim(uint256[],uint256[],bytes32[][])": {
        "details": "Overrides the abstract batchClaim function from ATKAirdrop to prevent user-initiated claims.      In push airdrops, only the admin can distribute tokens.      All parameters are unused as this function always reverts."
      },
      "batchDistribute(uint256[],address[],uint256[],bytes32[][])": {
        "details": "Only the contract owner can distribute tokens. Batch version for gas efficiency.",
        "params": {
          "amounts": "The amounts of tokens to distribute to each recipient.",
          "indices": "The indices of the distributions in the Merkle tree.",
          "merkleProofs": "The Merkle proof arrays for verification of each distribution.",
          "recipients": "The addresses to receive tokens."
        }
      },
      "claim(uint256,uint256,bytes32[])": {
        "details": "Overrides the abstract claim function from ATKAirdrop to prevent user-initiated claims.      In push airdrops, only the admin can distribute tokens.      All parameters are unused as this function always reverts."
      },
      "claimTracker()": {
        "returns": {
          "_0": "The claim tracker contract."
        }
      },
      "constructor": {
        "params": {
          "forwarder_": "The address of the forwarder contract."
        }
      },
      "distribute(uint256,address,uint256,bytes32[])": {
        "details": "Only the contract owner can distribute tokens. Verifies Merkle proof and distribution cap.",
        "params": {
          "amount": "The amount of tokens to distribute.",
          "index": "The index of the distribution in the Merkle tree.",
          "merkleProof": "The Merkle proof array for verification.",
          "recipient": "The address to receive tokens."
        }
      },
      "distributionCap()": {
        "returns": {
          "_0": "The maximum tokens that can be distributed (0 for no cap)."
        }
      },
      "getClaimedAmount(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "claimedAmount The amount already claimed for this index."
        }
      },
      "initialize(string,address,bytes32,address,uint256)": {
        "details": "Sets up the base airdrop functionality and push-specific parameters.      Deploys its own bitmap claim tracker for efficient distribution tracking.",
        "params": {
          "distributionCap_": "The maximum tokens that can be distributed (0 for no cap).",
          "name_": "The human-readable name for this airdrop.",
          "owner_": "The initial owner of the contract (admin who can distribute tokens).",
          "root_": "The Merkle root for verifying distributions.",
          "token_": "The address of the ERC20 token to be distributed."
        }
      },
      "isClaimed(uint256,uint256)": {
        "params": {
          "index": "The index to check in the Merkle tree.",
          "totalAmount": "The total amount allocated for this index."
        },
        "returns": {
          "_0": "claimed True if the index has been fully claimed, false otherwise."
        }
      },
      "isDistributed(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "distributed True if tokens have been distributed for this index."
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "merkleRoot()": {
        "returns": {
          "_0": "The Merkle root for verifying airdrop claims."
        }
      },
      "name()": {
        "returns": {
          "_0": "The human-readable name of the airdrop."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setDistributionCap(uint256)": {
        "details": "Only the owner can update the distribution cap.",
        "params": {
          "newDistributionCap_": "The new distribution cap (0 for no cap)."
        }
      },
      "token()": {
        "returns": {
          "_0": "The ERC20 token being distributed."
        }
      },
      "totalDistributed()": {
        "returns": {
          "_0": "The total amount distributed."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      },
      "withdrawTokens(address)": {
        "params": {
          "to": "The address to send the withdrawn tokens to."
        }
      }
    },
    "events": {
      "BatchClaimed(address,uint256,uint256[],uint256[])": {
        "params": {
          "amounts": "The amounts claimed for each index.",
          "claimant": "The address that claimed the tokens.",
          "indices": "The indices of the claims in the Merkle tree.",
          "totalAmount": "The total amount of tokens claimed in the batch."
        }
      },
      "BatchTokensDistributed(uint256,uint256,uint256[])": {
        "params": {
          "indices": "The indices of the distributions in the Merkle tree.",
          "recipientCount": "The number of recipients in the batch.",
          "totalAmount": "The total amount of tokens distributed in the batch."
        }
      },
      "Claimed(address,uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens claimed.",
          "claimant": "The address that claimed the tokens.",
          "index": "The index of the claim in the Merkle tree."
        }
      },
      "DistributionCapUpdated(uint256,uint256)": {
        "params": {
          "newCap": "The new distribution cap.",
          "oldCap": "The previous distribution cap."
        }
      },
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "TokensDistributed(address,uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens distributed.",
          "index": "The index of the distribution in the Merkle tree.",
          "recipient": "The address that received the tokens."
        }
      },
      "TokensWithdrawn(address,uint256)": {
        "params": {
          "amount": "The amount of tokens withdrawn.",
          "to": "The address receiving the withdrawn tokens."
        }
      }
    },
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "PushAirdropClaimNotAllowed()": [
        {
          "details": "Push airdrops only allow admin-initiated distributions, not user claims."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ]
    },
    "title": "ATK Push Airdrop Implementation"
  },
  "id": 8
}