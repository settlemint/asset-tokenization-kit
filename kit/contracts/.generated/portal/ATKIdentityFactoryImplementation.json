{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "trustedForwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "TOKEN_METADATA_SALT_PREFIX",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "TOKEN_SALT_PREFIX",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WALLET_SALT_PREFIX",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateTokenIdentityAddress",
      "inputs": [
        {
          "name": "_name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "_symbol",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "_initialManager",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateWalletIdentityAddress",
      "inputs": [
        {
          "name": "_walletAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_initialManager",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "createIdentity",
      "inputs": [
        {
          "name": "_wallet",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_managementKeys",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createTokenIdentity",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_accessManager",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getIdentity",
      "inputs": [
        {
          "name": "_wallet",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSystem",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTokenIdentity",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "systemAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialAdmin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialIdentityIssuerAdmins",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "initialTokenIdentityIssuerAdmins",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "IdentityCreated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "identity",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "wallet",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokenIdentityCreated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "identity",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokenRegistrarRoleGranted",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokenRegistrarRoleRevoked",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessControlBadConfirmation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "neededRole",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "Create2EmptyBytecode",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DeploymentAddressMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "FailedDeployment",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientBalance",
      "inputs": [
        {
          "name": "balance",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "needed",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidIdentityImplementation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSystemAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidTokenIdentityImplementation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SaltAlreadyTaken",
      "inputs": [
        {
          "name": "salt",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "StringsInsufficientHexLength",
      "inputs": [
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "length",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "TokenAlreadyLinked",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "WalletAlreadyLinked",
      "inputs": [
        {
          "name": "wallet",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "WalletInManagementKeys",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroAddressNotAllowed",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a03461011057601f61294338819003918201601f19168301916001600160401b038311848410176101145780849260209460405283398101031261011057516001600160a01b0381168103610110576080525f5160206129235f395f51905f525460ff8160401c16610101576002600160401b03196001600160401b038216016100ab575b6040516127fa908161012982396080518181816106d201528181610c520152611c1c0152f35b6001600160401b0319166001600160401b039081175f5160206129235f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610085565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461105257508063248a9ca3146110135780632f2ff15d14610fc95780632fea7b8114610f8957806336568abe14610f3557806355c759ed14610c86578063572b6c0514610c325780636d752616146107015780637da0a877146106bd57806391d14854146106685780639df2a6941461064d578063a217fddf14610633578063a4e4fa9814610604578063ad0ca906146105dd578063ad70bdd7146105a5578063c6c7fb5614610565578063c9828cd51461051a578063d547741f146104c9578063e6aa44e2146101b85763f47ebbee146100f8575f80fd5b346101b45760803660031901126101b45760043567ffffffffffffffff81116101b457610129903690600401611220565b9060243567ffffffffffffffff81116101b45761014a903690600401611220565b929060443560ff811681036101b457606435926001600160a01b03841684036101b45760209561019661019c9461018e6101a2986101866111b4565b9536916112bd565b9236916112bd565b91611a43565b50611c08565b6040516001600160a01b039091168152f35b5f80fd5b346101b45760403660031901126101b4576101d16110d5565b6024359067ffffffffffffffff82116101b457366023830112156101b457816004013567ffffffffffffffff81116101b4576024830192602436918360051b0101116101b45761021f611c19565b6001600160a01b0381165f9081527f3d7bd0e883bad19d498b61127c4b24592990340db3e3d0dab8ce989302e5dbbb602052604090205460ff161561048557506001600160a01b038216918215610476575f838152600260205260409020546001600160a01b03166104635761029c816102976111ff565b6118d0565b815f52600160205260ff60405f20541661043a57506102ce816102bf84826119eb565b6102c885611cde565b91611da0565b905f52600160205260405f20600160ff1982541617905560018060a01b03169180610355575b5f84815260026020908152604090912080546001600160a01b0319168517905584846001600160a01b03610326611c19565b169181604051937f8f2e597fd6e795e9851eea530f987cceb641315e3c7c9d484b798e3159d420955f80a48152f35b5f916bffffffffffffffffffffffff199060601b16915b81811061037957506102f4565b6103848183886112ad565b3560405160208101908582526014815261039f6034826110eb565b5190201461042b576103b28183886112ad565b6040516274e04960e61b8152903560048201526001602482018190526044820152906020826064815f895af1918215610420576001926103f4575b500161036c565b6104149060203d8111610419575b61040c81836110eb565b81019061126d565b6103ed565b503d610402565b6040513d5f823e3d90fd5b63a9abb9cf60e01b5f5260045ffd5b6040516304d2fa9b60e41b81526020600482015290819061045f9060248301906111db565b0390fd5b82630195dd1b60e31b5f5260045260245ffd5b6342bcdf7f60e11b5f5260045ffd5b63e2517d3f60e01b5f9081526001600160a01b03919091166004527f5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb85602452604490fd5b346101b45760403660031901126101b4576105186004356104e86110bf565b9061051361050e825f525f5160206127ae5f395f51905f52602052600160405f20015490565b6112f3565b6117c4565b005b346101b4575f3660031901126101b45761056160405161053b6040826110eb565b60058152642a37b5b2b760d91b60208201526040519182916020835260208301906111db565b0390f35b346101b45760203660031901126101b4576001600160a01b036105866110d5565b165f526003602052602060018060a01b0360405f205416604051908152f35b346101b45760403660031901126101b45760206101a26105c36110d5565b6105d76105ce6110bf565b916102976111ff565b506119eb565b346101b4575f3660031901126101b4575f546040516001600160a01b039091168152602090f35b346101b4575f3660031901126101b45761056161061f6111ff565b6040519182916020835260208301906111db565b346101b4575f3660031901126101b45760206040515f8152f35b346101b4575f3660031901126101b45761056161061f6111b4565b346101b45760403660031901126101b4576106816110bf565b6004355f525f5160206127ae5f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101b4575f3660031901126101b4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101b45760803660031901126101b45761071a6110d5565b6107226110bf565b9060443567ffffffffffffffff81116101b457610743903690600401611121565b9160643567ffffffffffffffff81116101b457610764903690600401611121565b905f5160206127ce5f395f51905f52549260ff8460401c16159367ffffffffffffffff811680159081610c2a575b6001149081610c20575b159081610c17575b50610c085767ffffffffffffffff1981166001175f5160206127ce5f395f51905f525584610bdc575b506001600160a01b0316908115610bcd576107e6611c72565b6107ee611c72565b604051636d7203cb60e01b8152602081600481865afa908115610420576024916020915f91610bb0575b506040516301ffc9a760e01b815263189acdbd60e31b600482015292839182906001600160a01b03165afa908115610420575f91610b91575b5015610b8257604051631e6de76d60e11b8152602081600481865afa908115610420576024916020915f91610b55575b506040516301ffc9a760e01b815263189acdbd60e31b600482015292839182906001600160a01b03165afa908115610420575f91610b36575b5015610b27577f5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb855f8181525f5160206127ae5f395f51905f526020527f3d7bd0e883bad19d498b61127c4b24592990340db3e3d0dab8ce989302e5dbbc80547f3a303b8cb0c4ee296f6a2a8aae92535cb6a5147b05540b62111942e1c353b2e991829055610a17949391929091907fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9080a47f7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb5f8181525f5160206127ae5f395f51905f526020527f6e31da13781af3f8e64873c7b2f7d3b858ccea7969da480f63c614ffed4d961980547fab55121422db2e83f3da68f1a86ef03984cbd0d4c289dad3bc39e9ccee18e41191829055909290917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9080a461134f565b505f5b8451811015610a6457600190610a426001600160a01b03610a3b8389611285565b51166113fe565b50610a5d828060a01b03610a568389611285565b51166114c8565b5001610a1a565b50825f5b8351811015610ab257600190610a906001600160a01b03610a898388611285565b5116611592565b50610aab828060a01b03610aa48388611285565b511661165c565b5001610a68565b50906bffffffffffffffffffffffff60a01b5f5416175f55610ad057005b68ff0000000000000000195f5160206127ce5f395f51905f5254165f5160206127ce5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b63966fe0d960e01b5f5260045ffd5b610b4f915060203d6020116104195761040c81836110eb565b866108ba565b610b759150823d8411610b7b575b610b6d81836110eb565b81019061124e565b88610881565b503d610b63565b6301e5de5560e41b5f5260045ffd5b610baa915060203d6020116104195761040c81836110eb565b86610851565b610bc79150823d8411610b7b57610b6d81836110eb565b88610818565b633f997a3760e01b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f5160206127ce5f395f51905f5255856107cd565b63f92ee8a960e01b5f5260045ffd5b905015876107a4565b303b15915061079c565b869150610792565b346101b45760203660031901126101b4576020610c4d6110d5565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b346101b45760403660031901126101b457610c9f6110d5565b610ca76110bf565b90610cb0611c19565b6001600160a01b0381165f9081527f6e31da13781af3f8e64873c7b2f7d3b858ccea7969da480f63c614ffed4d9618602052604090205460ff1615610ef157506001600160a01b03168015610476576001600160a01b03821615610476575f818152600360205260409020546001600160a01b0316610edf576040516306fdde0360e01b81525f81600481855afa908115610420575f91610ec5575b506040516395d89b4160e01b8152905f82600481865afa918215610420575f92610ea1575b5060405163313ce56760e01b815291602083600481875afa918215610420575f92610e5f575b610da99350610da46111b4565b611a43565b815f93929352600160205260ff60405f20541661043a5750610ddb82846102c8610dd560209784611c08565b91611d54565b5f92835260018085526040808520805460ff19169092179091558284526003855290922080546001600160a01b0319166001600160a01b0380851691909117909155610e25611c19565b604051936001600160a01b031692918391167fbfb80e4490f93265711078bc7aa5476dc4edfd6c61b12612ea310063c20d35a85f80a48152f35b9150916020813d602011610e99575b81610e7b602093836110eb565b810103126101b457519160ff831683036101b457610da99291610d97565b3d9150610e6e565b610ebe9192503d805f833e610eb681836110eb565b81019061186d565b9084610d71565b610ed991503d805f833e610eb681836110eb565b83610d4c565b634b8f68dd60e11b5f5260045260245ffd5b63e2517d3f60e01b5f9081526001600160a01b03919091166004527f7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb602452604490fd5b346101b45760403660031901126101b457610f4e6110bf565b6001600160a01b03610f5e611c19565b166001600160a01b03821603610f7a57610518906004356117c4565b63334bd91960e11b5f5260045ffd5b346101b45760203660031901126101b4576001600160a01b03610faa6110d5565b165f526002602052602060018060a01b0360405f205416604051908152f35b346101b45760403660031901126101b457610518600435610fe86110bf565b9061100e61050e825f525f5160206127ae5f395f51905f52602052600160405f20015490565b611726565b346101b45760203660031901126101b457602061104a6004355f525f5160206127ae5f395f51905f52602052600160405f20015490565b604051908152f35b346101b45760203660031901126101b4576004359063ffffffff60e01b82168092036101b457602091636e3bbdf760e01b8114908115611094575b5015158152f35b637965db0b60e01b8114915081156110ae575b508361108d565b6301ffc9a760e01b149050836110a7565b602435906001600160a01b03821682036101b457565b600435906001600160a01b03821682036101b457565b90601f8019910116810190811067ffffffffffffffff82111761110d57604052565b634e487b7160e01b5f52604160045260245ffd5b81601f820112156101b45780359167ffffffffffffffff831161110d578260051b916040519361115460208501866110eb565b84526020808501938201019182116101b457602001915b8183106111785750505090565b82356001600160a01b03811681036101b45781526020928301920161116b565b67ffffffffffffffff811161110d57601f01601f191660200190565b604051906111c36040836110eb565b6009825268546f6b656e4d65746160b81b6020830152565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6040519061120e6040836110eb565b600382526213d25160ea1b6020830152565b9181601f840112156101b45782359167ffffffffffffffff83116101b457602083818601950101116101b457565b908160209103126101b457516001600160a01b03811681036101b45790565b908160209103126101b4575180151581036101b45790565b80518210156112995760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b91908110156112995760051b0190565b9291926112c982611198565b916112d760405193846110eb565b8294818452818301116101b4578281602093845f960137010152565b6112fb611c19565b815f525f5160206127ae5f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f20541615611332575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166113f9576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff191660011790556113d7611c19565b16906001600160a01b03165f5f51602061278e5f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081527f3d7bd0e883bad19d498b61127c4b24592990340db3e3d0dab8ce989302e5dbbb602052604090205460ff166113f9576001600160a01b038181165f9081527f3d7bd0e883bad19d498b61127c4b24592990340db3e3d0dab8ce989302e5dbbb60205260409020805460ff19166001179055611486611c19565b16906001600160a01b03167f5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb855f51602061278e5f395f51905f525f80a4600190565b6001600160a01b0381165f9081527fc611aefd8b1e4b2d6607d66c7ce1ee8200e02c6d6c87dc6a9f30a19095358d2e602052604090205460ff166113f9576001600160a01b038181165f9081527fc611aefd8b1e4b2d6607d66c7ce1ee8200e02c6d6c87dc6a9f30a19095358d2e60205260409020805460ff19166001179055611550611c19565b16906001600160a01b03167f3a303b8cb0c4ee296f6a2a8aae92535cb6a5147b05540b62111942e1c353b2e95f51602061278e5f395f51905f525f80a4600190565b6001600160a01b0381165f9081527f6e31da13781af3f8e64873c7b2f7d3b858ccea7969da480f63c614ffed4d9618602052604090205460ff166113f9576001600160a01b038181165f9081527f6e31da13781af3f8e64873c7b2f7d3b858ccea7969da480f63c614ffed4d961860205260409020805460ff1916600117905561161a611c19565b16906001600160a01b03167f7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb5f51602061278e5f395f51905f525f80a4600190565b6001600160a01b0381165f9081527f3e19f57d0902d19afdd822f408eaf6ac1a60ce12cbc5f0a5e45384c9abd1778f602052604090205460ff166113f9576001600160a01b038181165f9081527f3e19f57d0902d19afdd822f408eaf6ac1a60ce12cbc5f0a5e45384c9abd1778f60205260409020805460ff191660011790556116e4611c19565b16906001600160a01b03167fab55121422db2e83f3da68f1a86ef03984cbd0d4c289dad3bc39e9ccee18e4115f51602061278e5f395f51905f525f80a4600190565b5f8181525f5160206127ae5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff166117be575f8181525f5160206127ae5f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff1916600117905561179c611c19565b16916001600160a01b0316905f51602061278e5f395f51905f525f80a4600190565b50505f90565b5f8181525f5160206127ae5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16156117be575f8181525f5160206127ae5f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff19169055611838611c19565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b6020818303126101b45780519067ffffffffffffffff82116101b4570181601f820112156101b4578051906118a182611198565b926118af60405194856110eb565b828452602083830101116101b457815f9260208093018386015e8301015290565b60405190916001600160a01b031690816118eb6060836110eb565b602a8252602082019260403685378251156112995760308453825160011015611299576078602184015360295b60018111611991575061197a57509160206119619281946040519584879551918291018587015e840190838201905f8252519283915e01015f815203601f1981018352826110eb565b5f546119779082906001600160a01b0316611c9d565b91565b63e22e27eb60e01b5f52600452601460245260445ffd5b90600f81166010811015611299578451831015611299576f181899199a1a9b1b9c1cb0b131b232b360811b901a8483016020015360041c9080156119d7575f1901611918565b634e487b7160e01b5f52601160045260245ffd5b611a3760206119fc611a4094611cde565b826040949294519384928180850197805191829101895e8401908282015f8152815193849201905e01015f815203601f1981018352826110eb565b51902090611d2a565b90565b909260ff16805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015611be5575b806d04ee2d6d415b85acef8100000000600a921015611bca575b662386f26fc10000811015611bb6575b6305f5e100811015611ba5575b612710811015611b96575b6064811015611b88575b1015611b7e575b6001820190600a6021611ae8611ad285611198565b94611ae060405196876110eb565b808652611198565b602085019590601f19013687378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304908115611b2757600a90611af9565b50506020611961948180809860405199888b995191829101848b015e8801908282015f8152815193849201905e0101905f8252805192839101825e01905f8252518092825e015f815203601f1981018352826110eb565b9060010190611abd565b606460029104930192611ab6565b61271060049104930192611aac565b6305f5e10060089104930192611aa1565b662386f26fc1000060109104930192611a94565b6d04ee2d6d415b85acef810000000060209104930192611a84565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611a6a565b611a3760206119fc611a4094611d54565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611c67575b15611c635760131936013681116119d7573560601c90565b3390565b506014361015611c4b565b60ff5f5160206127ce5f395f51905f525460401c1615611c8e57565b631afcd79f60e31b5f5260045ffd5b90611cd8611cca91604051928391602083019560018060a01b0316865260408084015260608301906111db565b03601f1981018352826110eb565b51902090565b906104a460405190611cf360208201836110eb565b808252611e4660208301395f54604080516001600160a01b039283166020820152949091169084015291611a408160608101611cca565b90600b9160405191604083015260208201523081520160ff8153605590206001600160a01b031690565b906104a460405190611d6960208201836110eb565b8082526122ea60208301395f54604080516001600160a01b039283166020820152949091169084015291611a408160608101611cca565b9291611de0602091826040519384928180850197805191829101895e8401908282015f8152815193849201905e01015f815203601f1981018352826110eb565b805115611e365751905ff5903d1519821516610420576001600160a01b038216908115611e27576001600160a01b031603611e185790565b6362ec206960e01b5f5260045ffd5b63b06ebf3d60e01b5f5260045ffd5b631328927760e21b5f5260045ffdfe60806040523461018c5760406104a4803803809161001c826101a4565b6080391261018c5761002c6101f2565b61003660a0610208565b906001600160a01b0381168015908115610117575b50610108575f5160206104845f395f51905f5280546001600160a01b0319166001600160a01b039283161790558116156100f9575f5160206104845f395f51905f52546100ea916100d7916100e5906100ac906001600160a01b031661023f565b60405163189acdbd60e31b60208201526001600160a01b039093166024840152919283906044820190565b03601f1981018452836101cf565b6102cc565b60405161013b90816103498239f35b6342bcdf7f60e11b5f5260045ffd5b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815260016223dac160e01b031960048201529150602090829060249082905afa908115610187575f91610158575b50155f61004b565b61017a915060203d602011610180575b61017281836101cf565b81019061021c565b5f610150565b503d610168565b610234565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176101ca57604052565b610190565b601f909101601f19168101906001600160401b038211908210176101ca57604052565b608051906001600160a01b038216820361018c57565b51906001600160a01b038216820361018c57565b9081602091031261018c5751801515810361018c5790565b6040513d5f823e3d90fd5b604051636d7203cb60e01b815290602090829060049082906001600160a01b03165afa908115610187575f91610292575b506001600160a01b038116156102835790565b632384fcc160e11b5f5260045ffd5b90506020813d6020116102c4575b816102ad602093836101cf565b8101031261018c576102be90610208565b5f610270565b3d91506102a0565b6001600160a01b0381161561033957815f929160208493519201905af43d15610331573d906001600160401b0382116101ca5760405191610317601f8201601f1916602001846101cf565b82523d5f602084013e5b156103295750565b602081519101fd5b606090610321565b63ee0a129760e01b5f5260045ffdfe608060405236156100dc577f6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f9654636d7203cb60e01b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb57632384fcc160e11b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea164736f6c634300081c000a6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f9660806040523461018c5760406104a4803803809161001c826101a4565b6080391261018c5761002c6101f2565b61003660a0610208565b906001600160a01b0381168015908115610117575b50610108575f5160206104845f395f51905f5280546001600160a01b0319166001600160a01b039283161790558116156100f9575f5160206104845f395f51905f52546100ea916100d7916100e5906100ac906001600160a01b031661023f565b60405163189acdbd60e31b60208201526001600160a01b039093166024840152919283906044820190565b03601f1981018452836101cf565b6102cc565b60405161013b90816103498239f35b6342bcdf7f60e11b5f5260045ffd5b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815260016223dac160e01b031960048201529150602090829060249082905afa908115610187575f91610158575b50155f61004b565b61017a915060203d602011610180575b61017281836101cf565b81019061021c565b5f610150565b503d610168565b610234565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176101ca57604052565b610190565b601f909101601f19168101906001600160401b038211908210176101ca57604052565b608051906001600160a01b038216820361018c57565b51906001600160a01b038216820361018c57565b9081602091031261018c5751801515810361018c5790565b6040513d5f823e3d90fd5b604051631e6de76d60e11b815290602090829060049082906001600160a01b03165afa908115610187575f91610292575b506001600160a01b038116156102835790565b632384fcc160e11b5f5260045ffd5b90506020813d6020116102c4575b816102ad602093836101cf565b8101031261018c576102be90610208565b5f610270565b3d91506102a0565b6001600160a01b0381161561033957815f929160208493519201905af43d15610331573d906001600160401b0382116101ca5760405191610317601f8201601f1916602001846101cf565b82523d5f602084013e5b156103295750565b602081519101fd5b606090610321565b63ee0a129760e01b5f5260045ffdfe608060405236156100dc577f6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f9654631e6de76d60e11b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb57632384fcc160e11b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea164736f6c634300081c000a6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f962f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000af0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "sourceMap": "2615:33780:160:-:0;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;1623:37:242;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;;;7894:76:243;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;7983:34:243;7979:146;;-1:-1:-1;2615:33780:160;;;;;;;;1623:37:242;2615:33780:160;;;;;;;;;;;;;;;;7979:146:243;-1:-1:-1;;;;;;2615:33780:160;-1:-1:-1;;;;;2615:33780:160;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;;;8085:29:243;;2615:33780:160;;8085:29:243;7979:146;;;7894:76;7936:23;;;-1:-1:-1;7936:23:243;;-1:-1:-1;7936:23:243;2615:33780:160;-1:-1:-1;2615:33780:160;;;;;;-1:-1:-1;2615:33780:160;;;;;-1:-1:-1;2615:33780:160",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461105257508063248a9ca3146110135780632f2ff15d14610fc95780632fea7b8114610f8957806336568abe14610f3557806355c759ed14610c86578063572b6c0514610c325780636d752616146107015780637da0a877146106bd57806391d14854146106685780639df2a6941461064d578063a217fddf14610633578063a4e4fa9814610604578063ad0ca906146105dd578063ad70bdd7146105a5578063c6c7fb5614610565578063c9828cd51461051a578063d547741f146104c9578063e6aa44e2146101b85763f47ebbee146100f8575f80fd5b346101b45760803660031901126101b45760043567ffffffffffffffff81116101b457610129903690600401611220565b9060243567ffffffffffffffff81116101b45761014a903690600401611220565b929060443560ff811681036101b457606435926001600160a01b03841684036101b45760209561019661019c9461018e6101a2986101866111b4565b9536916112bd565b9236916112bd565b91611a43565b50611c08565b6040516001600160a01b039091168152f35b5f80fd5b346101b45760403660031901126101b4576101d16110d5565b6024359067ffffffffffffffff82116101b457366023830112156101b457816004013567ffffffffffffffff81116101b4576024830192602436918360051b0101116101b45761021f611c19565b6001600160a01b0381165f9081527f3d7bd0e883bad19d498b61127c4b24592990340db3e3d0dab8ce989302e5dbbb602052604090205460ff161561048557506001600160a01b038216918215610476575f838152600260205260409020546001600160a01b03166104635761029c816102976111ff565b6118d0565b815f52600160205260ff60405f20541661043a57506102ce816102bf84826119eb565b6102c885611cde565b91611da0565b905f52600160205260405f20600160ff1982541617905560018060a01b03169180610355575b5f84815260026020908152604090912080546001600160a01b0319168517905584846001600160a01b03610326611c19565b169181604051937f8f2e597fd6e795e9851eea530f987cceb641315e3c7c9d484b798e3159d420955f80a48152f35b5f916bffffffffffffffffffffffff199060601b16915b81811061037957506102f4565b6103848183886112ad565b3560405160208101908582526014815261039f6034826110eb565b5190201461042b576103b28183886112ad565b6040516274e04960e61b8152903560048201526001602482018190526044820152906020826064815f895af1918215610420576001926103f4575b500161036c565b6104149060203d8111610419575b61040c81836110eb565b81019061126d565b6103ed565b503d610402565b6040513d5f823e3d90fd5b63a9abb9cf60e01b5f5260045ffd5b6040516304d2fa9b60e41b81526020600482015290819061045f9060248301906111db565b0390fd5b82630195dd1b60e31b5f5260045260245ffd5b6342bcdf7f60e11b5f5260045ffd5b63e2517d3f60e01b5f9081526001600160a01b03919091166004527f5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb85602452604490fd5b346101b45760403660031901126101b4576105186004356104e86110bf565b9061051361050e825f525f5160206127ae5f395f51905f52602052600160405f20015490565b6112f3565b6117c4565b005b346101b4575f3660031901126101b45761056160405161053b6040826110eb565b60058152642a37b5b2b760d91b60208201526040519182916020835260208301906111db565b0390f35b346101b45760203660031901126101b4576001600160a01b036105866110d5565b165f526003602052602060018060a01b0360405f205416604051908152f35b346101b45760403660031901126101b45760206101a26105c36110d5565b6105d76105ce6110bf565b916102976111ff565b506119eb565b346101b4575f3660031901126101b4575f546040516001600160a01b039091168152602090f35b346101b4575f3660031901126101b45761056161061f6111ff565b6040519182916020835260208301906111db565b346101b4575f3660031901126101b45760206040515f8152f35b346101b4575f3660031901126101b45761056161061f6111b4565b346101b45760403660031901126101b4576106816110bf565b6004355f525f5160206127ae5f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101b4575f3660031901126101b4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101b45760803660031901126101b45761071a6110d5565b6107226110bf565b9060443567ffffffffffffffff81116101b457610743903690600401611121565b9160643567ffffffffffffffff81116101b457610764903690600401611121565b905f5160206127ce5f395f51905f52549260ff8460401c16159367ffffffffffffffff811680159081610c2a575b6001149081610c20575b159081610c17575b50610c085767ffffffffffffffff1981166001175f5160206127ce5f395f51905f525584610bdc575b506001600160a01b0316908115610bcd576107e6611c72565b6107ee611c72565b604051636d7203cb60e01b8152602081600481865afa908115610420576024916020915f91610bb0575b506040516301ffc9a760e01b815263189acdbd60e31b600482015292839182906001600160a01b03165afa908115610420575f91610b91575b5015610b8257604051631e6de76d60e11b8152602081600481865afa908115610420576024916020915f91610b55575b506040516301ffc9a760e01b815263189acdbd60e31b600482015292839182906001600160a01b03165afa908115610420575f91610b36575b5015610b27577f5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb855f8181525f5160206127ae5f395f51905f526020527f3d7bd0e883bad19d498b61127c4b24592990340db3e3d0dab8ce989302e5dbbc80547f3a303b8cb0c4ee296f6a2a8aae92535cb6a5147b05540b62111942e1c353b2e991829055610a17949391929091907fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9080a47f7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb5f8181525f5160206127ae5f395f51905f526020527f6e31da13781af3f8e64873c7b2f7d3b858ccea7969da480f63c614ffed4d961980547fab55121422db2e83f3da68f1a86ef03984cbd0d4c289dad3bc39e9ccee18e41191829055909290917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9080a461134f565b505f5b8451811015610a6457600190610a426001600160a01b03610a3b8389611285565b51166113fe565b50610a5d828060a01b03610a568389611285565b51166114c8565b5001610a1a565b50825f5b8351811015610ab257600190610a906001600160a01b03610a898388611285565b5116611592565b50610aab828060a01b03610aa48388611285565b511661165c565b5001610a68565b50906bffffffffffffffffffffffff60a01b5f5416175f55610ad057005b68ff0000000000000000195f5160206127ce5f395f51905f5254165f5160206127ce5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b63966fe0d960e01b5f5260045ffd5b610b4f915060203d6020116104195761040c81836110eb565b866108ba565b610b759150823d8411610b7b575b610b6d81836110eb565b81019061124e565b88610881565b503d610b63565b6301e5de5560e41b5f5260045ffd5b610baa915060203d6020116104195761040c81836110eb565b86610851565b610bc79150823d8411610b7b57610b6d81836110eb565b88610818565b633f997a3760e01b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f5160206127ce5f395f51905f5255856107cd565b63f92ee8a960e01b5f5260045ffd5b905015876107a4565b303b15915061079c565b869150610792565b346101b45760203660031901126101b4576020610c4d6110d5565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b346101b45760403660031901126101b457610c9f6110d5565b610ca76110bf565b90610cb0611c19565b6001600160a01b0381165f9081527f6e31da13781af3f8e64873c7b2f7d3b858ccea7969da480f63c614ffed4d9618602052604090205460ff1615610ef157506001600160a01b03168015610476576001600160a01b03821615610476575f818152600360205260409020546001600160a01b0316610edf576040516306fdde0360e01b81525f81600481855afa908115610420575f91610ec5575b506040516395d89b4160e01b8152905f82600481865afa918215610420575f92610ea1575b5060405163313ce56760e01b815291602083600481875afa918215610420575f92610e5f575b610da99350610da46111b4565b611a43565b815f93929352600160205260ff60405f20541661043a5750610ddb82846102c8610dd560209784611c08565b91611d54565b5f92835260018085526040808520805460ff19169092179091558284526003855290922080546001600160a01b0319166001600160a01b0380851691909117909155610e25611c19565b604051936001600160a01b031692918391167fbfb80e4490f93265711078bc7aa5476dc4edfd6c61b12612ea310063c20d35a85f80a48152f35b9150916020813d602011610e99575b81610e7b602093836110eb565b810103126101b457519160ff831683036101b457610da99291610d97565b3d9150610e6e565b610ebe9192503d805f833e610eb681836110eb565b81019061186d565b9084610d71565b610ed991503d805f833e610eb681836110eb565b83610d4c565b634b8f68dd60e11b5f5260045260245ffd5b63e2517d3f60e01b5f9081526001600160a01b03919091166004527f7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb602452604490fd5b346101b45760403660031901126101b457610f4e6110bf565b6001600160a01b03610f5e611c19565b166001600160a01b03821603610f7a57610518906004356117c4565b63334bd91960e11b5f5260045ffd5b346101b45760203660031901126101b4576001600160a01b03610faa6110d5565b165f526002602052602060018060a01b0360405f205416604051908152f35b346101b45760403660031901126101b457610518600435610fe86110bf565b9061100e61050e825f525f5160206127ae5f395f51905f52602052600160405f20015490565b611726565b346101b45760203660031901126101b457602061104a6004355f525f5160206127ae5f395f51905f52602052600160405f20015490565b604051908152f35b346101b45760203660031901126101b4576004359063ffffffff60e01b82168092036101b457602091636e3bbdf760e01b8114908115611094575b5015158152f35b637965db0b60e01b8114915081156110ae575b508361108d565b6301ffc9a760e01b149050836110a7565b602435906001600160a01b03821682036101b457565b600435906001600160a01b03821682036101b457565b90601f8019910116810190811067ffffffffffffffff82111761110d57604052565b634e487b7160e01b5f52604160045260245ffd5b81601f820112156101b45780359167ffffffffffffffff831161110d578260051b916040519361115460208501866110eb565b84526020808501938201019182116101b457602001915b8183106111785750505090565b82356001600160a01b03811681036101b45781526020928301920161116b565b67ffffffffffffffff811161110d57601f01601f191660200190565b604051906111c36040836110eb565b6009825268546f6b656e4d65746160b81b6020830152565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6040519061120e6040836110eb565b600382526213d25160ea1b6020830152565b9181601f840112156101b45782359167ffffffffffffffff83116101b457602083818601950101116101b457565b908160209103126101b457516001600160a01b03811681036101b45790565b908160209103126101b4575180151581036101b45790565b80518210156112995760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b91908110156112995760051b0190565b9291926112c982611198565b916112d760405193846110eb565b8294818452818301116101b4578281602093845f960137010152565b6112fb611c19565b815f525f5160206127ae5f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f20541615611332575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166113f9576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff191660011790556113d7611c19565b16906001600160a01b03165f5f51602061278e5f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081527f3d7bd0e883bad19d498b61127c4b24592990340db3e3d0dab8ce989302e5dbbb602052604090205460ff166113f9576001600160a01b038181165f9081527f3d7bd0e883bad19d498b61127c4b24592990340db3e3d0dab8ce989302e5dbbb60205260409020805460ff19166001179055611486611c19565b16906001600160a01b03167f5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb855f51602061278e5f395f51905f525f80a4600190565b6001600160a01b0381165f9081527fc611aefd8b1e4b2d6607d66c7ce1ee8200e02c6d6c87dc6a9f30a19095358d2e602052604090205460ff166113f9576001600160a01b038181165f9081527fc611aefd8b1e4b2d6607d66c7ce1ee8200e02c6d6c87dc6a9f30a19095358d2e60205260409020805460ff19166001179055611550611c19565b16906001600160a01b03167f3a303b8cb0c4ee296f6a2a8aae92535cb6a5147b05540b62111942e1c353b2e95f51602061278e5f395f51905f525f80a4600190565b6001600160a01b0381165f9081527f6e31da13781af3f8e64873c7b2f7d3b858ccea7969da480f63c614ffed4d9618602052604090205460ff166113f9576001600160a01b038181165f9081527f6e31da13781af3f8e64873c7b2f7d3b858ccea7969da480f63c614ffed4d961860205260409020805460ff1916600117905561161a611c19565b16906001600160a01b03167f7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb5f51602061278e5f395f51905f525f80a4600190565b6001600160a01b0381165f9081527f3e19f57d0902d19afdd822f408eaf6ac1a60ce12cbc5f0a5e45384c9abd1778f602052604090205460ff166113f9576001600160a01b038181165f9081527f3e19f57d0902d19afdd822f408eaf6ac1a60ce12cbc5f0a5e45384c9abd1778f60205260409020805460ff191660011790556116e4611c19565b16906001600160a01b03167fab55121422db2e83f3da68f1a86ef03984cbd0d4c289dad3bc39e9ccee18e4115f51602061278e5f395f51905f525f80a4600190565b5f8181525f5160206127ae5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff166117be575f8181525f5160206127ae5f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff1916600117905561179c611c19565b16916001600160a01b0316905f51602061278e5f395f51905f525f80a4600190565b50505f90565b5f8181525f5160206127ae5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16156117be575f8181525f5160206127ae5f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff19169055611838611c19565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b6020818303126101b45780519067ffffffffffffffff82116101b4570181601f820112156101b4578051906118a182611198565b926118af60405194856110eb565b828452602083830101116101b457815f9260208093018386015e8301015290565b60405190916001600160a01b031690816118eb6060836110eb565b602a8252602082019260403685378251156112995760308453825160011015611299576078602184015360295b60018111611991575061197a57509160206119619281946040519584879551918291018587015e840190838201905f8252519283915e01015f815203601f1981018352826110eb565b5f546119779082906001600160a01b0316611c9d565b91565b63e22e27eb60e01b5f52600452601460245260445ffd5b90600f81166010811015611299578451831015611299576f181899199a1a9b1b9c1cb0b131b232b360811b901a8483016020015360041c9080156119d7575f1901611918565b634e487b7160e01b5f52601160045260245ffd5b611a3760206119fc611a4094611cde565b826040949294519384928180850197805191829101895e8401908282015f8152815193849201905e01015f815203601f1981018352826110eb565b51902090611d2a565b90565b909260ff16805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015611be5575b806d04ee2d6d415b85acef8100000000600a921015611bca575b662386f26fc10000811015611bb6575b6305f5e100811015611ba5575b612710811015611b96575b6064811015611b88575b1015611b7e575b6001820190600a6021611ae8611ad285611198565b94611ae060405196876110eb565b808652611198565b602085019590601f19013687378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304908115611b2757600a90611af9565b50506020611961948180809860405199888b995191829101848b015e8801908282015f8152815193849201905e0101905f8252805192839101825e01905f8252518092825e015f815203601f1981018352826110eb565b9060010190611abd565b606460029104930192611ab6565b61271060049104930192611aac565b6305f5e10060089104930192611aa1565b662386f26fc1000060109104930192611a94565b6d04ee2d6d415b85acef810000000060209104930192611a84565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611a6a565b611a3760206119fc611a4094611d54565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611c67575b15611c635760131936013681116119d7573560601c90565b3390565b506014361015611c4b565b60ff5f5160206127ce5f395f51905f525460401c1615611c8e57565b631afcd79f60e31b5f5260045ffd5b90611cd8611cca91604051928391602083019560018060a01b0316865260408084015260608301906111db565b03601f1981018352826110eb565b51902090565b906104a460405190611cf360208201836110eb565b808252611e4660208301395f54604080516001600160a01b039283166020820152949091169084015291611a408160608101611cca565b90600b9160405191604083015260208201523081520160ff8153605590206001600160a01b031690565b906104a460405190611d6960208201836110eb565b8082526122ea60208301395f54604080516001600160a01b039283166020820152949091169084015291611a408160608101611cca565b9291611de0602091826040519384928180850197805191829101895e8401908282015f8152815193849201905e01015f815203601f1981018352826110eb565b805115611e365751905ff5903d1519821516610420576001600160a01b038216908115611e27576001600160a01b031603611e185790565b6362ec206960e01b5f5260045ffd5b63b06ebf3d60e01b5f5260045ffd5b631328927760e21b5f5260045ffdfe60806040523461018c5760406104a4803803809161001c826101a4565b6080391261018c5761002c6101f2565b61003660a0610208565b906001600160a01b0381168015908115610117575b50610108575f5160206104845f395f51905f5280546001600160a01b0319166001600160a01b039283161790558116156100f9575f5160206104845f395f51905f52546100ea916100d7916100e5906100ac906001600160a01b031661023f565b60405163189acdbd60e31b60208201526001600160a01b039093166024840152919283906044820190565b03601f1981018452836101cf565b6102cc565b60405161013b90816103498239f35b6342bcdf7f60e11b5f5260045ffd5b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815260016223dac160e01b031960048201529150602090829060249082905afa908115610187575f91610158575b50155f61004b565b61017a915060203d602011610180575b61017281836101cf565b81019061021c565b5f610150565b503d610168565b610234565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176101ca57604052565b610190565b601f909101601f19168101906001600160401b038211908210176101ca57604052565b608051906001600160a01b038216820361018c57565b51906001600160a01b038216820361018c57565b9081602091031261018c5751801515810361018c5790565b6040513d5f823e3d90fd5b604051636d7203cb60e01b815290602090829060049082906001600160a01b03165afa908115610187575f91610292575b506001600160a01b038116156102835790565b632384fcc160e11b5f5260045ffd5b90506020813d6020116102c4575b816102ad602093836101cf565b8101031261018c576102be90610208565b5f610270565b3d91506102a0565b6001600160a01b0381161561033957815f929160208493519201905af43d15610331573d906001600160401b0382116101ca5760405191610317601f8201601f1916602001846101cf565b82523d5f602084013e5b156103295750565b602081519101fd5b606090610321565b63ee0a129760e01b5f5260045ffdfe608060405236156100dc577f6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f9654636d7203cb60e01b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb57632384fcc160e11b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea164736f6c634300081c000a6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f9660806040523461018c5760406104a4803803809161001c826101a4565b6080391261018c5761002c6101f2565b61003660a0610208565b906001600160a01b0381168015908115610117575b50610108575f5160206104845f395f51905f5280546001600160a01b0319166001600160a01b039283161790558116156100f9575f5160206104845f395f51905f52546100ea916100d7916100e5906100ac906001600160a01b031661023f565b60405163189acdbd60e31b60208201526001600160a01b039093166024840152919283906044820190565b03601f1981018452836101cf565b6102cc565b60405161013b90816103498239f35b6342bcdf7f60e11b5f5260045ffd5b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815260016223dac160e01b031960048201529150602090829060249082905afa908115610187575f91610158575b50155f61004b565b61017a915060203d602011610180575b61017281836101cf565b81019061021c565b5f610150565b503d610168565b610234565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176101ca57604052565b610190565b601f909101601f19168101906001600160401b038211908210176101ca57604052565b608051906001600160a01b038216820361018c57565b51906001600160a01b038216820361018c57565b9081602091031261018c5751801515810361018c5790565b6040513d5f823e3d90fd5b604051631e6de76d60e11b815290602090829060049082906001600160a01b03165afa908115610187575f91610292575b506001600160a01b038116156102835790565b632384fcc160e11b5f5260045ffd5b90506020813d6020116102c4575b816102ad602093836101cf565b8101031261018c576102be90610208565b5f610270565b3d91506102a0565b6001600160a01b0381161561033957815f929160208493519201905af43d15610331573d906001600160401b0382116101ca5760405191610317601f8201601f1916602001846101cf565b82523d5f602084013e5b156103295750565b602081519101fd5b606090610321565b63ee0a129760e01b5f5260045ffdfe608060405236156100dc577f6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f9654631e6de76d60e11b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb57632384fcc160e11b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea164736f6c634300081c000a6430307501c2cc3d2d4fb0a554183112a402a38cdc96135a87867e0457146f962f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "2615:33780:160:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;20625:74;2615:33780;;20716:53;2615:33780;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;20625:74;;:::i;:::-;20716:53;;:::i;:::-;2615:33780;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34590:38;;:::i;:::-;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;4468:23:239;4464:108;;-1:-1:-1;;;;;;2615:33780:160;;;13873:21;;13869:57;;2615:33780;;;;13940:11;2615:33780;;;;;;-1:-1:-1;;;;;2615:33780:160;13936:75;;22074:50;2615:33780;;;:::i;:::-;22074:50;:::i;:::-;2615:33780;;;22139:18;2615:33780;;;;;;;;22135:70;;29589:55;29782:71;29589:55;;;;;:::i;:::-;29715:50;;;:::i;:::-;29782:71;;:::i;:::-;2615:33780;;;22139:18;2615:33780;;;;;22139:18;2615:33780;;;;;;;;;;;;;;14299:26;;14295:638;;2615:33780;;;;;13940:11;2615:33780;;;;;;;;;;-1:-1:-1;;;;;;2615:33780:160;;;;;;;-1:-1:-1;;;;;34590:38:160;;:::i;:::-;2615:33780;;;;;14989:48;;2615:33780;14989:48;;2615:33780;;;14295:638;2615:33780;;;;;;;;14408:515;14428:24;;;;;;14295:638;;;14413:13;14574:18;;;;;:::i;:::-;2615:33780;;;;14606:25;;2615:33780;;;;14606:25;;;;;;;:::i;:::-;2615:33780;14596:36;;14574:58;14570:95;;14707:18;;;;;:::i;:::-;2615:33780;;-1:-1:-1;;;14683:49:160;;2615:33780;;;14683:49;;2615:33780;22139:18;2615:33780;;;;;;;;;;;;;14683:49;2615:33780;-1:-1:-1;14683:49:160;;;;;;;;22139:18;14683:49;;;14413:13;1752:45:143;;14413:13:160;;14683:49;;;2615:33780;14683:49;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;2615:33780;;;;;;;;;14570:95;14641:24;;;2615:33780;14641:24;2615:33780;;14641:24;22135:70;2615:33780;;-1:-1:-1;;;22177:28:160;;2615:33780;;22177:28;;2615:33780;;;;;;;;;;;:::i;:::-;22177:28;;;13936:75;13983:28;;;;2615:33780;13983:28;2615:33780;;;;13983:28;13869:57;16500:23;;;2615:33780;13903:23;2615:33780;;13903:23;4464:108:239;-1:-1:-1;;;2615:33780:160;4514:47:239;;;-1:-1:-1;;;;;2615:33780:160;;;;;;1062:33:143;2615:33780:160;;;;4514:47:239;2615:33780:160;;;;;;-1:-1:-1;;2615:33780:160;;;;5767:26:239;2615:33780:160;;;;:::i;:::-;5737:18:239;3202:4;5737:18;;-1:-1:-1;2615:33780:160;-1:-1:-1;;;;;;;;;;;2615:33780:160;;4919:24:239;2615:33780:160;-1:-1:-1;2615:33780:160;4919:24:239;2615:33780:160;4759:191:239;;5737:18;3202:4;:::i;:::-;5767:26;:::i;:::-;2615:33780:160;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2615:33780:160;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;-1:-1:-1;;;;;2615:33780:160;;:::i;:::-;;;;17975:16;2615:33780;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;19347:54;2615:33780;;:::i;:::-;19280:50;2615:33780;;:::i;:::-;;;;:::i;19280:50::-;19347:54;;:::i;2615:33780::-;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2615:33780:160;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;;3901:31:239;2615:33780:160;;;;;;-1:-1:-1;2615:33780:160;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;1830:17:242;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;;;;4301:16:243;2615:33780:160;;;;4724:16:243;;:34;;;;2615:33780:160;4803:1:243;4788:16;:50;;;;2615:33780:160;4853:13:243;:30;;;;2615:33780:160;4849:91:243;;;-1:-1:-1;;2615:33780:160;;4803:1:243;2615:33780:160;-1:-1:-1;;;;;;;;;;;2615:33780:160;;4977:67:243;;2615:33780:160;-1:-1:-1;;;;;;2615:33780:160;;10367:27;;10363:62;;6891:76:243;;:::i;:::-;;;:::i;:::-;2615:33780:160;;-1:-1:-1;;;10540:50:160;;2615:33780;;;;10540:50;;;;;;;;2615:33780;10540:50;2615:33780;10540:50;2615:33780;10540:50;;;2615:33780;-1:-1:-1;2615:33780:160;;-1:-1:-1;;;10532:139:160;;-1:-1:-1;;;2615:33780:160;10532:139;;2615:33780;;;;;;-1:-1:-1;;;;;2615:33780:160;10532:139;;;;;;;2615:33780;10532:139;;;2615:33780;10531:140;;10514:231;;2615:33780;;-1:-1:-1;;;10781:55:160;;2615:33780;;;;10781:55;;;;;;;;2615:33780;10781:55;2615:33780;10781:55;2615:33780;10781:55;;;2615:33780;-1:-1:-1;2615:33780:160;;-1:-1:-1;;;10773:149:160;;-1:-1:-1;;;2615:33780:160;10773:149;;2615:33780;;;;;;-1:-1:-1;;;;;2615:33780:160;10773:149;;;;;;;2615:33780;10773:149;;;2615:33780;10772:150;;10755:246;;1062:33:143;2615:33780:160;;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;4919:24:239;2615:33780:160;;1282:39:143;2615:33780:160;;;;11230:44;;6898:18:239;1282:39:143;;2615:33780:160;;1062:33:143;6977:52:239;;2615:33780:160;6977:52:239;1508:39:143;2615:33780:160;;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;4919:24:239;2615:33780:160;;1752:45:143;2615:33780:160;;;;1752:45:143;;2615:33780:160;;6977:52:239;;2615:33780:160;6977:52:239;11230:44:160;:::i;:::-;;2615:33780;11345:3;2615:33780;;11305:38;;;;;4803:1:243;;11364:79:160;-1:-1:-1;;;;;11412:30:160;2615:33780;11412:30;;:::i;:::-;1752:45:143;2615:33780:160;11364:79;:::i;:::-;;11457:85;2615:33780;;;;;11511:30;;;;:::i;:::-;1752:45:143;2615:33780:160;11457:85;:::i;:::-;;1752:45:143;11290:13:160;;11305:38;;;2615:33780;11628:3;2615:33780;;11583:43;;;;;4803:1:243;;11647:90:160;-1:-1:-1;;;;;11701:35:160;2615:33780;11701:35;;:::i;:::-;1752:45:143;2615:33780:160;11647:90;:::i;:::-;;11751:96;2615:33780;;;;;11811:35;;;;:::i;:::-;1752:45:143;2615:33780:160;11751:96;:::i;:::-;;1752:45:143;11568:13:160;;11583:43;;;2615:33780;;;;;;;;;5064:101:243;;2615:33780:160;5064:101:243;2615:33780:160;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;-1:-1:-1;;;;;;;;;;;2615:33780:160;5140:14:243;2615:33780:160;;;4803:1:243;2615:33780:160;;5140:14:243;2615:33780:160;10755:246;10954:36;;;2615:33780;10954:36;2615:33780;;10954:36;10773:149;;;;2615:33780;10773:149;2615:33780;10773:149;;;;;;;:::i;:::-;;;;10781:55;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;10514:231;10703:31;;;2615:33780;10703:31;2615:33780;;10703:31;10532:139;;;;2615:33780;10532:139;2615:33780;10532:139;;;;;;;:::i;:::-;;;;10540:50;;;;;;;;;;;;;;:::i;:::-;;;;10363:62;10403:22;;;2615:33780;10403:22;2615:33780;;10403:22;4977:67:243;-1:-1:-1;;2615:33780:160;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;4977:67:243;;;4849:91;4906:23;;;2615:33780:160;4906:23:243;2615:33780:160;;4906:23:243;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:243;;4724:34;;;-1:-1:-1;4724:34:243;;2615:33780:160;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;:::i;:::-;;;1830:17:242;-1:-1:-1;;;;;2615:33780:160;;;;;2054:31:242;;;;2615:33780:160;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;:::i;:::-;;;:::i;:::-;34590:38;;;:::i;:::-;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;4468:23:239;4464:108;;-1:-1:-1;;;;;;2615:33780:160;16471:20;;16467:56;;-1:-1:-1;;;;;2615:33780:160;;16537:28;16533:64;;2615:33780;;;;16611:16;2615:33780;;;;;;-1:-1:-1;;;;;2615:33780:160;16607:77;;2615:33780;;-1:-1:-1;;;23310:12:160;;2615:33780;;;;23310:12;;;;;;;;2615:33780;23310:12;;;2615:33780;-1:-1:-1;2615:33780:160;;-1:-1:-1;;;23355:14:160;;2615:33780;;;;;23355:14;;;;;;;;2615:33780;23355:14;;;2615:33780;-1:-1:-1;2615:33780:160;;-1:-1:-1;;;23396:16:160;;2615:33780;;;;;23396:16;;;;;;;;2615:33780;23396:16;;;2615:33780;23483:71;2615:33780;;;;:::i;:::-;23483:71;:::i;:::-;2615:33780;;;;;;23569:18;2615:33780;;;;;;;;23565:70;;30510:53;30699:71;30510:53;;30634:48;30510:53;2615:33780;30510:53;;;:::i;:::-;30634:48;;:::i;30699:71::-;2615:33780;;;;23569:18;2615:33780;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;;;;16611:16;2615:33780;;;;;;;-1:-1:-1;;;;;;2615:33780:160;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;34590:38;;:::i;:::-;2615:33780;;;-1:-1:-1;;;;;2615:33780:160;;;;;;16913:52;2615:33780;;16913:52;2615:33780;;;23396:16;;;;2615:33780;23396:16;;2615:33780;23396:16;;;;;;2615:33780;23396:16;;;:::i;:::-;;;2615:33780;;;;;;;;;;;;;23483:71;23396:16;;;;;;;-1:-1:-1;23396:16:160;;23355:14;;;;;;;2615:33780;23355:14;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;23310:12;;;;;;2615:33780;23310:12;;;;;;:::i;:::-;;;;16607:77;16658:26;;;2615:33780;16658:26;2615:33780;;;;16658:26;4464:108:239;-1:-1:-1;;;2615:33780:160;4514:47:239;;;-1:-1:-1;;;;;2615:33780:160;;;;;;1508:39:143;2615:33780:160;;;;4514:47:239;2615:33780:160;;;;;;-1:-1:-1;;2615:33780:160;;;;;;:::i;:::-;-1:-1:-1;;;;;34590:38:160;;:::i;:::-;2615:33780;-1:-1:-1;;;;;2615:33780:160;;6441:34:239;6437:102;;6549:37;2615:33780:160;;;6549:37:239;:::i;6437:102::-;6498:30;;;2615:33780:160;6498:30:239;2615:33780:160;;6498:30:239;2615:33780:160;;;;;;-1:-1:-1;;2615:33780:160;;;;-1:-1:-1;;;;;2615:33780:160;;:::i;:::-;;;;17483:11;2615:33780;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;5350:25:239;2615:33780:160;;;;:::i;:::-;5320:18:239;3202:4;5320:18;;-1:-1:-1;2615:33780:160;-1:-1:-1;;;;;;;;;;;2615:33780:160;;4919:24:239;2615:33780:160;-1:-1:-1;2615:33780:160;4919:24:239;2615:33780:160;4759:191:239;;3202:4;5350:25;:::i;2615:33780:160:-;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;;-1:-1:-1;2615:33780:160;-1:-1:-1;;;;;;;;;;;2615:33780:160;;4919:24:239;2615:33780:160;-1:-1:-1;2615:33780:160;4919:24:239;2615:33780:160;4759:191:239;;2615:33780:160;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;36294:52:160;;;:92;;;;2615:33780;;;;;;;36294:92;-1:-1:-1;;;3551:47:239;;;-1:-1:-1;3551:87:239;;;;36294:92:160;;;;;3551:87:239;-1:-1:-1;;;1134:40:252;;-1:-1:-1;3551:87:239;;;2615:33780:160;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2615:33780:160;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2615:33780:160;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;-1:-1:-1;;2615:33780:160;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2615:33780:160;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;1752:45:143:-;2615:33780:160;;1752:45:143;;;;;;;;;;;;:::o;:::-;2615:33780:160;;;1752:45:143;;;;;;;;2615:33780:160;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;:::o;4148:103:239:-;34590:38:160;;:::i;:::-;2615:33780;-1:-1:-1;2615:33780:160;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;-1:-1:-1;2615:33780:160;;;;;;;;-1:-1:-1;2615:33780:160;;;;;-1:-1:-1;2615:33780:160;;;4468:23:239;4464:108;;4148:103;;:::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:239;2615:33780:160;;;;;;4514:47:239;2615:33780:160;;;;-1:-1:-1;4514:47:239;7270:387;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;34590:38;;:::i;:::-;2615:33780;;-1:-1:-1;;;;;2615:33780:160;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;7532:40:239;7509:4;7586:11;:::o;7432:219::-;7628:12;2615:33780:160;7628:12:239;:::o;7270:387::-;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;34590:38;;:::i;:::-;2615:33780;;-1:-1:-1;;;;;2615:33780:160;1062:33:143;-1:-1:-1;;;;;;;;;;;2615:33780:160;;7532:40:239;7509:4;7586:11;:::o;7270:387::-;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;34590:38;;:::i;:::-;2615:33780;;-1:-1:-1;;;;;2615:33780:160;1282:39:143;-1:-1:-1;;;;;;;;;;;2615:33780:160;;7532:40:239;7509:4;7586:11;:::o;7270:387::-;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;34590:38;;:::i;:::-;2615:33780;;-1:-1:-1;;;;;2615:33780:160;1508:39:143;-1:-1:-1;;;;;;;;;;;2615:33780:160;;7532:40:239;7509:4;7586:11;:::o;7270:387::-;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;34590:38;;:::i;:::-;2615:33780;;-1:-1:-1;;;;;2615:33780:160;1752:45:143;-1:-1:-1;;;;;;;;;;;2615:33780:160;;7532:40:239;7509:4;7586:11;:::o;7270:387::-;2615:33780:160;;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;;;34590:38;;:::i;:::-;2615:33780;;-1:-1:-1;;;;;2615:33780:160;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;7532:40:239;7509:4;7586:11;:::o;7432:219::-;7628:12;;2615:33780:160;7628:12:239;:::o;7894:388::-;2615:33780:160;;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;;;;;;;;;;-1:-1:-1;;2615:33780:160;;;34590:38;;:::i;:::-;2615:33780;;-1:-1:-1;;;;;2615:33780:160;;8157:40:239;2615:33780:160;;8157:40:239;2615:33780:160;8211:11:239;:::o;2615:33780:160:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;;;;:::o;24649:408::-;2615:33780;;24649:408;;-1:-1:-1;;;;;2615:33780:160;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2803:15:225;;;2615:33780:160;;;;;;;2828:15:225;2615:33780:160;;;2828:15:225;2615:33780:160;2886:5:225;2615:33780:160;2886:5:225;;;;3006:15;3002:96;;2615:33780:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;:::i;:::-;-1:-1:-1;2615:33780:160;24938:45;;24846:70;;-1:-1:-1;;;;;2615:33780:160;24938:45;:::i;:::-;24649:408;:::o;3002:96:225:-;3044:43;;;-1:-1:-1;3044:43:225;2981:1;2615:33780:160;448:2:225;384:18;2615:33780:160;384:18:225;-1:-1:-1;3044:43:225;2893:3;2935:16;2948:3;2935:16;;2924:28;;;;;;2615:33780:160;;;;;;;-1:-1:-1;;;2924:28:225;;2615:33780:160;;;;;2912:40:225;2981:1;384:18;2893:3;2615:33780:160;;;;-1:-1:-1;;2615:33780:160;2858:26:225;;2615:33780:160;;;;-1:-1:-1;2615:33780:160;;2981:1:225;2615:33780:160;;-1:-1:-1;2615:33780:160;27566:414;27923:48;;27750:50;27878:95;27566:414;27750:50;:::i;:::-;2615:33780;;;;;;27923:48;;;;;;;2615:33780;;;;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;27923:48;2615:33780;;27923:48;;;;;;:::i;:::-;2615:33780;27913:59;;27878:95;;:::i;:::-;27566:414;:::o;25827:486::-;;;2615:33780;;1430:17:225;-1:-1:-1;29282:17:233;-1:-1:-1;;;29282:17:233;;;29278:103;;25827:486:160;29398:17:233;29407:8;29978:7;29398:17;;;29394:103;;25827:486:160;29523:8:233;29514:17;;;29510:103;;25827:486:160;29639:7:233;29630:16;;;29626:100;;25827:486:160;29752:7:233;29743:16;;;29739:100;;25827:486:160;29865:7:233;29856:16;;;29852:100;;25827:486:160;29969:16:233;;29965:66;;25827:486:160;1450:1:225;2615:33780:160;;;29978:7:233;1545:92:225;2615:33780:160;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;2615:33780:160;;;;1545:92:225;;;1650:247;-1:-1:-1;;2615:33780:160;;-1:-1:-1;;;1704:111:225;;;;2615:33780:160;1704:111:225;2615:33780:160;1865:10:225;;;1861:21;;29978:7:233;;1650:247:225;;1861:21;1877:5;;2615:33780:160;;1877:5:225;;;;;2615:33780:160;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;:::i;29965:66:233:-;2615:33780:160;30015:1:233;2615:33780:160;29965:66:233;;;29852:100;29865:7;29936:1;2615:33780:160;;;;29852:100:233;;;29739;29752:7;29823:1;2615:33780:160;;;;29739:100:233;;;29626;29639:7;29710:1;2615:33780:160;;;;29626:100:233;;;29510:103;29523:8;29596:2;2615:33780:160;;;;29510:103:233;;;29394;29407:8;29480:2;2615:33780:160;;;;29394:103:233;;;29278;-1:-1:-1;29364:2:233;;-1:-1:-1;;;;2615:33780:160;;29278:103:233;;28499:412:160;28854:48;;28682:49;28809:95;28499:412;28682:49;:::i;2329:429:242:-;2545:10;1830:17;-1:-1:-1;;;;;2615:33780:160;2054:31:242;;2526:71;;2329:429;2522:230;;;2615:33780:160;;2435:8:242;2615:33780:160;2435:8:242;2615:33780:160;;;;;;;;2613:72:242:o;2522:230::-;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;;7082:141:243;2615:33780:160;-1:-1:-1;;;;;;;;;;;2615:33780:160;;;;7148:18:243;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:243;;-1:-1:-1;7189:17:243;26688:237:160;;26880:37;2615:33780;26688:237;2615:33780;;26880:37;;;;;;2615:33780;;;;;;;;;;;;;;;;;;;:::i;:::-;26880:37;2615:33780;;26880:37;;;;;;:::i;:::-;2615:33780;26870:48;;26688:237;:::o;31300:375::-;;31502:35;2615:33780;;31502:35;2615:33780;31502:35;;;2615:33780;;:::i;:::-;31502:35;;;;;;;;-1:-1:-1;2615:33780:160;;;;-1:-1:-1;;;;;2615:33780:160;;;31502:35;31565:36;;2615:33780;;;;;;;;;;31565:36;2615:33780;;;;31565:36;2615:33780;2261:165:216;;2794:1663;2261:165;2794:1663;;;;;;;;;;;2413:4;2794:1663;;;;;;;;;-1:-1:-1;;;;;2794:1663:216;;2261:165::o;32248:377:160:-;;32448:40;2615:33780;;32448:40;2615:33780;32448:40;;;2615:33780;;:::i;:::-;32448:40;;;;;;;;-1:-1:-1;2615:33780:160;;;;-1:-1:-1;;;;;2615:33780:160;;;32448:40;32516:35;;2615:33780;;;;;;;;;;32516:35;2615:33780;;;;32516:35;2615:33780;33594:513;;;33848:50;;33594:513;2615:33780;;;33848:50;;;;;;;2615:33780;;;;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;;;;;;;;;;;-1:-1:-1;2615:33780:160;;33848:50;2615:33780;;33848:50;;;;;;:::i;:::-;2615:33780;;1459:20:216;1455:80;;1544:417;;-1:-1:-1;1544:417:216;;;;;;;;;;-1:-1:-1;;;;;2615:33780:160;;;1974:18:216;;1970:81;;-1:-1:-1;;;;;2615:33780:160;33999:33;33995:73;;33594:513;:::o;33995:73::-;34041:27;;;-1:-1:-1;34041:27:160;;-1:-1:-1;34041:27:160;1970:81:216;2015:25;;;-1:-1:-1;2015:25:216;;-1:-1:-1;2015:25:216;1455:80;1502:22;;;-1:-1:-1;1502:22:216;;-1:-1:-1;1502:22:216",
    "linkReferences": {},
    "immutableReferences": {
      "59716": [
        {
          "start": 1746,
          "length": 32
        },
        {
          "start": 3154,
          "length": 32
        },
        {
          "start": 7196,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "TOKEN_METADATA_SALT_PREFIX()": "9df2a694",
    "TOKEN_SALT_PREFIX()": "c9828cd5",
    "WALLET_SALT_PREFIX()": "a4e4fa98",
    "calculateTokenIdentityAddress(string,string,uint8,address)": "f47ebbee",
    "calculateWalletIdentityAddress(address,address)": "ad70bdd7",
    "createIdentity(address,bytes32[])": "e6aa44e2",
    "createTokenIdentity(address,address)": "55c759ed",
    "getIdentity(address)": "2fea7b81",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getSystem()": "ad0ca906",
    "getTokenIdentity(address)": "c6c7fb56",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address,address[],address[])": "6d752616",
    "isTrustedForwarder(address)": "572b6c05",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "trustedForwarder()": "7da0a877"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentAddressMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIdentityImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSystemAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenIdentityImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"salt\",\"type\":\"string\"}],\"name\":\"SaltAlreadyTaken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAlreadyLinked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WalletAlreadyLinked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WalletInManagementKeys\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"IdentityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenIdentityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"TokenRegistrarRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"TokenRegistrarRoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_METADATA_SALT_PREFIX\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_SALT_PREFIX\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WALLET_SALT_PREFIX\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_initialManager\",\"type\":\"address\"}],\"name\":\"calculateTokenIdentityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walletAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialManager\",\"type\":\"address\"}],\"name\":\"calculateWalletIdentityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_managementKeys\",\"type\":\"bytes32[]\"}],\"name\":\"createIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_accessManager\",\"type\":\"address\"}],\"name\":\"createTokenIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"getIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"initialIdentityIssuerAdmins\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"initialTokenIdentityIssuerAdmins\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"It leverages OpenZeppelin's `Create2` library to deploy identity proxy contracts (`ATKIdentityProxy` for wallets,      `ATKTokenIdentityProxy` for tokens) at deterministic addresses. These proxies point to logic implementations      whose addresses are provided by the central `IATKSystem` contract, enabling upgradeability of the identity logic.      The factory uses `AccessControlUpgradeable` for role-based access control, notably the `REGISTRAR_ROLE`      for creating identities. It is also `ERC2771ContextUpgradeable` for meta-transaction support.      The identities created are based on the ERC725 (OnchainID) standard, managed via ERC734 for key management.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}],\"DeploymentAddressMismatch()\":[{\"details\":\"This is a critical error suggesting a potential issue in the CREATE2 computation, salt, or deployment bytecode, or an unexpected change in blockchain state between prediction and deployment.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidSystemAddress()\":[{\"details\":\"This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SaltAlreadyTaken(string)\":[{\"details\":\"Salts must be unique for each CREATE2 deployment from the same factory to ensure unique addresses.\",\"params\":{\"salt\":\"The string representation of the salt that was already taken.\"}}],\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"TokenAlreadyLinked(address)\":[{\"params\":{\"token\":\"The address of the token contract that is already linked to an identity.\"}}],\"WalletAlreadyLinked(address)\":[{\"params\":{\"wallet\":\"The address of the wallet that is already linked to an identity.\"}}],\"WalletInManagementKeys()\":[{\"details\":\"An identity's own wallet address (if it represents a user) typically has management capabilities by default or through specific key types; explicitly adding it as a generic management key might be redundant or an error.\"}]},\"events\":{\"IdentityCreated(address,address,address)\":{\"params\":{\"identity\":\"The address of the newly deployed `ATKIdentityProxy` contract.\",\"sender\":\"The address that initiated the identity creation (e.g., an address with `REGISTRAR_ROLE`).\",\"wallet\":\"The investor wallet address for which the identity was created.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TokenIdentityCreated(address,address,address)\":{\"params\":{\"identity\":\"The address of the newly deployed `ATKTokenIdentityProxy` contract.\",\"sender\":\"The address that initiated the token identity creation (e.g., an address with `REGISTRAR_ROLE`).\",\"token\":\"The address of the token contract for which the identity was created.\"}},\"TokenRegistrarRoleGranted(address,address)\":{\"params\":{\"account\":\"The account that was granted the role.\",\"sender\":\"The account that granted the role.\"}},\"TokenRegistrarRoleRevoked(address,address)\":{\"params\":{\"account\":\"The account that had the role revoked.\",\"sender\":\"The account that revoked the role.\"}}},\"kind\":\"dev\",\"methods\":{\"calculateTokenIdentityAddress(string,string,uint8,address)\":{\"details\":\"Uses token metadata (name, symbol, decimals) combined with token address to calculate deployment address.      It calls `_computeTokenProxyAddress` with the calculated metadata-based salt and `_initialManager`.\",\"params\":{\"_decimals\":\"The decimals of the token used in salt generation.\",\"_initialManager\":\"The address that would be (or was) set as the initial management key for the token identity's proxy constructor.\",\"_name\":\"The name of the token used in salt generation.\",\"_symbol\":\"The symbol of the token used in salt generation.\"},\"returns\":{\"_0\":\"address The pre-computed CREATE2 deployment address for the token's identity contract.\"}},\"calculateWalletIdentityAddress(address,address)\":{\"details\":\"This function uses the `CREATE2` address calculation logic. It first calculates a unique salt using      the `WALLET_SALT_PREFIX` and the `_walletAddress`. Then, it calls `_computeWalletProxyAddress` with this salt      and the `_initialManager` (which is part of the proxy's constructor arguments, affecting its creation code hash).      This allows prediction of the identity address before actual deployment.\",\"params\":{\"_initialManager\":\"The address that would be (or was) set as the initial management key for the identity's proxy constructor.\",\"_walletAddress\":\"The investor wallet address for which to calculate the potential identity contract address.\"},\"returns\":{\"_0\":\"address The pre-computed CREATE2 deployment address for the wallet's identity contract.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor Required by OpenZeppelin Upgrades plugins for upgradeable contracts.\",\"details\":\"This is part of OpenZeppelin's upgradeable contracts pattern. It initializes `ERC2771ContextUpgradeable` with the `trustedForwarder` address for meta-transactions. `_disableInitializers()` prevents the `initialize` function from being called on the implementation contract directly, reserving it for the proxy context during deployment or upgrade.\",\"params\":{\"trustedForwarder\":\"The address of the ERC-2771 trusted forwarder for gasless transactions.\"}},\"createIdentity(address,bytes32[])\":{\"details\":\"This function can only be called by an address with the `REGISTRAR_ROLE`. It performs several steps: 1. Validates that `_wallet` is not the zero address and that an identity doesn't already exist for this wallet. 2. Calls `_createAndRegisterWalletIdentity` to handle the deterministic deployment of the `ATKIdentityProxy`.    The `_wallet` itself is passed as the `_initialManager` to the proxy constructor. 3. Interacts with the newly deployed identity contract (as `IERC734`) to add any additional `_managementKeys` provided.    It ensures a management key is not the wallet itself (which is already a manager). 4. Stores the mapping from the `_wallet` address to the new `identity` contract address. 5. Emits an `IdentityCreated` event.\",\"params\":{\"_managementKeys\":\"An array of `bytes32` values representing additional management keys (keccak256 hashes of public keys or addresses) to be added to the identity.                        These keys are granted `MANAGEMENT_KEY` purpose (purpose 1) according to ERC734.\",\"_wallet\":\"The investor wallet address for which the identity is being created. This address will also be set as an initial manager of the identity.\"},\"returns\":{\"_0\":\"address The address of the newly created and registered `ATKIdentityProxy` contract.\"}},\"createTokenIdentity(address,address)\":{\"details\":\"This function can only be called by an address with the `REGISTRAR_ROLE`. It performs several steps: 1. Validates that `_token` and `_tokenOwner` are not zero addresses and that an identity doesn't already exist for this token. 2. Calls `_createAndRegisterTokenIdentityWithMetadata` to handle the deterministic deployment of the `ATKTokenIdentityProxy`.    The `_tokenOwner` is passed as the `_initialManager` to the proxy constructor. 3. Stores the mapping from the `_token` address to the new `identity` contract address. 4. Emits a `TokenIdentityCreated` event.\",\"params\":{\"_accessManager\":\"The address of the access manager contract that will be set as the initial owner/manager of the token's identity.\",\"_token\":\"The address of the token contract for which the identity is being created.\"},\"returns\":{\"_0\":\"address The address of the newly created and registered `ATKTokenIdentityProxy` contract.\"}},\"getIdentity(address)\":{\"params\":{\"_wallet\":\"The investor wallet address to query.\"},\"returns\":{\"_0\":\"address The address of the `ATKIdentityProxy` if one has been created for the `_wallet`, otherwise `address(0)`.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSystem()\":{\"details\":\"The `IATKSystem` contract provides the addresses for the actual logic implementations      of `ATKIdentity` and `ATKTokenIdentity` that the deployed proxies will delegate to.\",\"returns\":{\"_0\":\"address The address of the configured `IATKSystem` contract.\"}},\"getTokenIdentity(address)\":{\"params\":{\"_token\":\"The token contract address to query.\"},\"returns\":{\"_0\":\"address The address of the `ATKTokenIdentityProxy` if one has been created for the `_token`, otherwise `address(0)`.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address[],address[])\":{\"details\":\"Sets up essential state for the factory: 1. Validates that `systemAddress` is not the zero address. 2. Initializes ERC165 for interface detection. 3. Initializes AccessControl, granting `DEFAULT_ADMIN_ROLE` and `REGISTRAR_ROLE` to `initialAdmin`.    The `DEFAULT_ADMIN_ROLE` can manage other roles, while `REGISTRAR_ROLE` allows identity creation. 4. Stores the `systemAddress` which provides identity logic implementations.The `initializer` modifier ensures this function can only be called once.\",\"params\":{\"initialAdmin\":\"The address that will be granted initial administrative and registrar privileges over this factory.\",\"initialIdentityIssuerAdmins\":\"The addresses that will be granted initial administrative and registrar privileges over this factory for identity issuers.\",\"initialTokenIdentityIssuerAdmins\":\"The addresses that will be granted initial administrative and registrar privileges over this factory for token identity issuers.\",\"systemAddress\":\"The address of the central `IATKSystem` contract. This contract is crucial as it dictates                      which identity logic implementation contracts the new identity proxies will point to.\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"This function is part of the ERC165 standard, allowing other contracts to query what interfaces this contract implements. It declares support for the `IATKIdentityFactory` interface and any interfaces supported by its parent contracts (like `AccessControlUpgradeable` and `ERC165Upgradeable`).\",\"params\":{\"interfaceId\":\"The interface identifier (bytes4) to check.\"},\"returns\":{\"_0\":\"`true` if the contract supports the `interfaceId`, `false` otherwise.\"}},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"TOKEN_METADATA_SALT_PREFIX\":{\"details\":\"For example, salt might be `keccak256(abi.encodePacked(\\\"TokenMeta\\\", <name>, <symbol>, <decimals>, <tokenAddressHex>))`.\"},\"TOKEN_SALT_PREFIX\":{\"details\":\"For example, salt might be `keccak256(abi.encodePacked(\\\"Token\\\", <tokenAddressHex>))`.\"},\"WALLET_SALT_PREFIX\":{\"details\":\"For example, salt might be `keccak256(abi.encodePacked(\\\"OID\\\", <walletAddressHex>))` (OID stands for OnchainID).\"},\"_identities\":{\"details\":\"This allows for quick lookup of an existing identity for a given wallet.\"},\"_saltTakenByteSalt\":{\"details\":\"This prevents deploying multiple contracts at the same deterministic address, which would fail or overwrite. `bytes32` is used as the key for gas efficiency compared to `string`.\"},\"_system\":{\"details\":\"This system contract provides the addresses of the current logic implementations for `ATKIdentity`      and `ATKTokenIdentity` contracts that the deployed proxies will point to.\"},\"_tokenIdentities\":{\"details\":\"This allows for quick lookup of an existing identity for a given token.\"}},\"title\":\"ATK Identity Factory Implementation\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAddressMismatch()\":[{\"notice\":\"Indicates that the address deployed via CREATE2 does not match the pre-calculated predicted address.\"}],\"InvalidIdentityImplementation()\":[{\"notice\":\"Indicates that the identity implementation is invalid.\"}],\"InvalidSystemAddress()\":[{\"notice\":\"Error indicating that an invalid system address was provided or encountered.\"}],\"InvalidTokenIdentityImplementation()\":[{\"notice\":\"Indicates that the token identity implementation is invalid.\"}],\"SaltAlreadyTaken(string)\":[{\"notice\":\"Indicates that a deterministic deployment (CREATE2) was attempted with a salt that has already been used.\"}],\"TokenAlreadyLinked(address)\":[{\"notice\":\"Indicates an attempt to create an identity for a token that already has one linked in this factory.\"}],\"WalletAlreadyLinked(address)\":[{\"notice\":\"Indicates an attempt to create an identity for a wallet that already has one linked in this factory.\"}],\"WalletInManagementKeys()\":[{\"notice\":\"Indicates that a wallet address was found within the list of management keys being added to its own identity.\"}],\"ZeroAddressNotAllowed()\":[{\"notice\":\"Indicates that an operation was attempted with the zero address (address(0))         where a valid, non-zero address was expected (e.g., for a wallet or token owner).\"}]},\"events\":{\"IdentityCreated(address,address,address)\":{\"notice\":\"Emitted when a new identity contract is successfully created and registered for an investor wallet.\"},\"TokenIdentityCreated(address,address,address)\":{\"notice\":\"Emitted when a new identity contract is successfully created and registered for a token contract.\"},\"TokenRegistrarRoleGranted(address,address)\":{\"notice\":\"Emitted when the TOKEN_REGISTRAR_ROLE is granted to an account.\"},\"TokenRegistrarRoleRevoked(address,address)\":{\"notice\":\"Emitted when the TOKEN_REGISTRAR_ROLE is revoked from an account.\"}},\"kind\":\"user\",\"methods\":{\"TOKEN_METADATA_SALT_PREFIX()\":{\"notice\":\"Prefix used in salt calculation for creating token identities with metadata-based salts.\"},\"TOKEN_SALT_PREFIX()\":{\"notice\":\"Prefix used in salt calculation for creating token identities to ensure unique salt generation.\"},\"WALLET_SALT_PREFIX()\":{\"notice\":\"Prefix used in salt calculation for creating wallet identities to ensure unique salt generation.\"},\"calculateTokenIdentityAddress(string,string,uint8,address)\":{\"notice\":\"Computes the deterministic address at which a `ATKTokenIdentityProxy` for a token contract will be deployed (or was deployed) using metadata-based salt.\"},\"calculateWalletIdentityAddress(address,address)\":{\"notice\":\"Computes the deterministic address at which a `ATKIdentityProxy` for an investor wallet will be deployed (or was deployed).\"},\"constructor\":{\"notice\":\"Constructor for the identity factory implementation.\"},\"createIdentity(address,bytes32[])\":{\"notice\":\"Creates a deterministic on-chain identity (a `ATKIdentityProxy`) for a given investor wallet address.\"},\"createTokenIdentity(address,address)\":{\"notice\":\"Creates a deterministic on-chain identity (a `ATKTokenIdentityProxy`) for a given token contract.\"},\"getIdentity(address)\":{\"notice\":\"Retrieves the deployed `ATKIdentityProxy` address associated with a given investor wallet.\"},\"getSystem()\":{\"notice\":\"Returns the address of the `IATKSystem` contract that this factory uses.\"},\"getTokenIdentity(address)\":{\"notice\":\"Retrieves the deployed `ATKTokenIdentityProxy` address associated with a given token contract.\"},\"initialize(address,address,address[],address[])\":{\"notice\":\"Initializes the `ATKIdentityFactoryImplementation` contract, typically called once by the proxy after deployment.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if the contract supports a given interface ID.\"}},\"notice\":\"This contract is the upgradeable logic implementation for creating and managing on-chain identities         for both user wallets and token contracts within the ATK Protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/identity-factory/ATKIdentityFactoryImplementation.sol\":\"ATKIdentityFactoryImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/smart/interface/ERC-3643/IERC3643IdentityRegistryStorage.sol\":{\"keccak256\":\"0x3a8a72df8da5bf4d988bbfb00151b933ff17cdc8d4be47dc121cd9e2083ba86f\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://369250658bf8d3ebb583946820afa494271ce6bfde607d15c7060cdf7a303cf3\",\"dweb:/ipfs/QmSJjaK6vyv8K9RX1k3rwxsoKfVNyMoHEszxyxdTQfDKQG\"]},\"contracts/smart/interface/ERC-3643/IERC3643TrustedIssuersRegistry.sol\":{\"keccak256\":\"0x15b72940814cd959b57bf75623f16c51fc6c50eab51fd2420a8b653519ebd76c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://479f5e24a1b608776d9d5d7da9c76dd3c9b1dd300d8b4eee7a15dcfba4817bee\",\"dweb:/ipfs/QmPhMBfQAqt5NeRcSu3jDTwhoQXnB7nXNEcmoJ7KoWVt7V\"]},\"contracts/smart/interface/ISMART.sol\":{\"keccak256\":\"0xfce323160dd5cd8c9db34de0ea872bec41fd2ea8d8496e1e3c17865d374994da\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://1a1fafbdec0c59e078798438d2a3cd05bd70b864d7dfa67faf135d5634c5ae51\",\"dweb:/ipfs/QmehZwexgZN2BZKA6eFrG3DHUMRUZnzYTen6j5Ry5Znbf2\"]},\"contracts/smart/interface/ISMARTCompliance.sol\":{\"keccak256\":\"0x948341e4ad374e1dded6d1b30c395ad0f01e6ea2099fb6b96c5476e8b28c1d77\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://d261e9a0c8682f11ac86048f13e367caee6d5f512d51b8752186b8c01b6ba618\",\"dweb:/ipfs/Qmdp14emh3NFSAphyuAgsTE7qZt1g1UYcNLS3tNNM8T6Hv\"]},\"contracts/smart/interface/ISMARTIdentityRegistry.sol\":{\"keccak256\":\"0x62a95a9db2ac97ceaf59f7585d7bbaf3acb65ed9b5e57597b9d1fe1b4d7c4eda\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://bd870710359396db48e70ef7e40449125ff744c6c8ce15ad7e1894df430c87ea\",\"dweb:/ipfs/QmZ6khf5Vm6hBkkUgYC1b161jSQaZeegJVRY6ndjRW1EcG\"]},\"contracts/smart/interface/ISMARTIdentityRegistryStorage.sol\":{\"keccak256\":\"0x219b3d03958859e2f082aac5cbf3b40acf243e326ee6e74e6bb03be7724c2985\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://8cf8d30ec47cb2aed5b51d373837584fb6f08deab1d35142510271e733404f52\",\"dweb:/ipfs/Qmc9NnABx9ouhhCR8qgJC3RtU5oAyycSjZkY6nGtuWFwuz\"]},\"contracts/smart/interface/ISMARTTopicSchemeRegistry.sol\":{\"keccak256\":\"0xec5e42dcf7d929f8a0db42c9c8a0fa81d089a9f7177b7da10df029f94334ca8a\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://e346e3241e3110b3f17d2b244a49d68a1d79c6928bef7d372ea3458c1029cea0\",\"dweb:/ipfs/QmeSyCYN9qYXRjn799fRFP7X9apf7bubVhnFEUGQatx3xd\"]},\"contracts/smart/interface/structs/SMARTComplianceModuleParamPair.sol\":{\"keccak256\":\"0x489a55538b554a0c935bee7efc28f7e821e161638c5726c9d367a644a0b7c62a\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://04bb06aed3ee3c5c6f3df9a59721c08ddd57b5521da1c9c6fd96b7c8b57db813\",\"dweb:/ipfs/QmRuzqKDr2sBHNuQhCzWGa8euNiMyvP7LTjSFjvAj5uFqh\"]},\"contracts/system/ATKSystemErrors.sol\":{\"keccak256\":\"0xb25dad91c3bd82830df4fd80d645264a54303a04f2a7e3599b7953546f6d5e28\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://728ea6df7945ec4772b493e82a3028809b25205adc6638185d0d2f0f11d7fc13\",\"dweb:/ipfs/QmNzsofiSzpSwJcRqYhgVU9EaexNNiYmfKnDmztrjX4Z6Y\"]},\"contracts/system/ATKSystemRoles.sol\":{\"keccak256\":\"0x880cc7f3eb0ec9ad022494e53e690b4e70a3381f17a9de2a64fe0155767e27de\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://6d39377217ea5aa2652398b135ed475a026c070dbe64869e8cea6c7d3fc3ac1a\",\"dweb:/ipfs/QmaKPMcyJYbpD8iMNT3mPqNxZBoizJUXhAw9piSigYFTS9\"]},\"contracts/system/AbstractATKSystemProxy.sol\":{\"keccak256\":\"0xc45c4c9b6e1b90c26b6bf3ef63c22830dd8d456017a62dee13931213b58ced51\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://02be110c93e54cf1cceecab8df64f2d6b57afd86af0f8b93895c0a6d8502a24e\",\"dweb:/ipfs/QmPAevhzSNTPbS4KKEV8h5YzNkk57BbCS9osVf5JthRLRa\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x9b142a029ec94141890b4000c54583ac8bd261c4c9cc1a17724f8601c581293b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ac8c729ce44ab357ea1bd0de2c7a04cc7666550af9c8253a30e3329c29c13551\",\"dweb:/ipfs/QmTJPSssQ8WS5Uw34WpzAHyvebe9Z2XAojUD6yzMS6iqYC\"]},\"contracts/system/identity-factory/ATKIdentityErrors.sol\":{\"keccak256\":\"0x151b6bd463c83b9bb167a0d96d5e7d36a24eca0baa738dab81291bbf0182e32b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ba4324b5fb219c25895388c0d6864064017f06674bd75312c0350001e952ccea\",\"dweb:/ipfs/QmVf4odkCVCrtEXySTnaLNfQBnWGFtNoeMAu4fwVjCuWDA\"]},\"contracts/system/identity-factory/ATKIdentityFactoryImplementation.sol\":{\"keccak256\":\"0xd1be675126c86814918c5361bd404ca3da79f60665bded6e1cdeca8c973ef2d9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://898db0137904da666c4f7e564d176161bf1a675c8ad6cae44dd00e2740f46700\",\"dweb:/ipfs/QmYbXyYMuFdJ7ig7ukhQkGqqAGNod618BEF3eMZQAUL97t\"]},\"contracts/system/identity-factory/IATKIdentityFactory.sol\":{\"keccak256\":\"0x79ee1b0d79341dcecc591cbcd68e8408b6caa9c05be462861f8537d5eab5b780\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://2c0a7862190edf86618e716a344d92707700f3f7702b919bfcee6da7d62c918f\",\"dweb:/ipfs/QmWKe3LWaz5Rc6YS3951AjCNjBtAKFqgEtySsayBUbUiZg\"]},\"contracts/system/identity-factory/identities/ATKIdentityProxy.sol\":{\"keccak256\":\"0x504bbc09c4af6c6f66ddf2aa2ec8ad2dbf2b68f1ed1c6f4d7a393d04edaccfe3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2d658b1fff7d764c667adb5343d6553f190d45985684704fe9dd22994c0dcdca\",\"dweb:/ipfs/QmQZUPs95hhbRLqCRyFtoRNP7CWiJ2j5c61gU18i9ZUKFM\"]},\"contracts/system/identity-factory/identities/ATKTokenIdentityProxy.sol\":{\"keccak256\":\"0x730552959313517708995a460550339b8eed0f15f25916cb5ee73507892399be\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d6a43317f51e3e85476e01c22eb003ade9cd5c57c90460c45d01c3e88b4a9092\",\"dweb:/ipfs/QmXhUxTQUJfUpWwcRtvBosKBwrGkzioNocUxCN5vRPXwu9\"]},\"contracts/system/identity-factory/identities/IATKIdentity.sol\":{\"keccak256\":\"0x51b82c502cec43a6167b1af2fe2c77d53cfdf9e04e1d5588d4325634f03d50d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cc237227e91d2037a1a71fad340bcaf97a4b800df2e52c56db5298c18482c30b\",\"dweb:/ipfs/QmX7oyqQeKFJegazXeaadPaRTPtx8goFd5QioLXrXtqzwc\"]},\"contracts/system/identity-factory/identities/IATKTokenIdentity.sol\":{\"keccak256\":\"0xcb99992b48e9492498db97b301a8b7cc2730d018f535b851a216df7dc2c6b67b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://df28d69b1c6d62d9746b165badcca360134409fef934224469db4aa2c5ab0146\",\"dweb:/ipfs/QmRahsqaYy8qhjyuNEWZUu3swujZ61QpdEHQeNNP67UqLh\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e\",\"dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb\",\"dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e\",\"dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D\"]},\"dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8\",\"dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"dependencies/@openzeppelin-contracts-5.3.0/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trustedForwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Create2EmptyBytecode"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeploymentAddressMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedDeployment"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidIdentityImplementation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSystemAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTokenIdentityImplementation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "salt",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "SaltAlreadyTaken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StringsInsufficientHexLength"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "TokenAlreadyLinked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "WalletAlreadyLinked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WalletInManagementKeys"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "identity",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "IdentityCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "identity",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokenIdentityCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokenRegistrarRoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokenRegistrarRoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TOKEN_METADATA_SALT_PREFIX",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TOKEN_SALT_PREFIX",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WALLET_SALT_PREFIX",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "_decimals",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "_initialManager",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTokenIdentityAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_walletAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_initialManager",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateWalletIdentityAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_wallet",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "_managementKeys",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createIdentity",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_accessManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createTokenIdentity",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_wallet",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getIdentity",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSystem",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenIdentity",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "systemAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialAdmin",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "initialIdentityIssuerAdmins",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "initialTokenIdentityIssuerAdmins",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateTokenIdentityAddress(string,string,uint8,address)": {
            "details": "Uses token metadata (name, symbol, decimals) combined with token address to calculate deployment address.      It calls `_computeTokenProxyAddress` with the calculated metadata-based salt and `_initialManager`.",
            "params": {
              "_decimals": "The decimals of the token used in salt generation.",
              "_initialManager": "The address that would be (or was) set as the initial management key for the token identity's proxy constructor.",
              "_name": "The name of the token used in salt generation.",
              "_symbol": "The symbol of the token used in salt generation."
            },
            "returns": {
              "_0": "address The pre-computed CREATE2 deployment address for the token's identity contract."
            }
          },
          "calculateWalletIdentityAddress(address,address)": {
            "details": "This function uses the `CREATE2` address calculation logic. It first calculates a unique salt using      the `WALLET_SALT_PREFIX` and the `_walletAddress`. Then, it calls `_computeWalletProxyAddress` with this salt      and the `_initialManager` (which is part of the proxy's constructor arguments, affecting its creation code hash).      This allows prediction of the identity address before actual deployment.",
            "params": {
              "_initialManager": "The address that would be (or was) set as the initial management key for the identity's proxy constructor.",
              "_walletAddress": "The investor wallet address for which to calculate the potential identity contract address."
            },
            "returns": {
              "_0": "address The pre-computed CREATE2 deployment address for the wallet's identity contract."
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor Required by OpenZeppelin Upgrades plugins for upgradeable contracts.",
            "details": "This is part of OpenZeppelin's upgradeable contracts pattern. It initializes `ERC2771ContextUpgradeable` with the `trustedForwarder` address for meta-transactions. `_disableInitializers()` prevents the `initialize` function from being called on the implementation contract directly, reserving it for the proxy context during deployment or upgrade.",
            "params": {
              "trustedForwarder": "The address of the ERC-2771 trusted forwarder for gasless transactions."
            }
          },
          "createIdentity(address,bytes32[])": {
            "details": "This function can only be called by an address with the `REGISTRAR_ROLE`. It performs several steps: 1. Validates that `_wallet` is not the zero address and that an identity doesn't already exist for this wallet. 2. Calls `_createAndRegisterWalletIdentity` to handle the deterministic deployment of the `ATKIdentityProxy`.    The `_wallet` itself is passed as the `_initialManager` to the proxy constructor. 3. Interacts with the newly deployed identity contract (as `IERC734`) to add any additional `_managementKeys` provided.    It ensures a management key is not the wallet itself (which is already a manager). 4. Stores the mapping from the `_wallet` address to the new `identity` contract address. 5. Emits an `IdentityCreated` event.",
            "params": {
              "_managementKeys": "An array of `bytes32` values representing additional management keys (keccak256 hashes of public keys or addresses) to be added to the identity.                        These keys are granted `MANAGEMENT_KEY` purpose (purpose 1) according to ERC734.",
              "_wallet": "The investor wallet address for which the identity is being created. This address will also be set as an initial manager of the identity."
            },
            "returns": {
              "_0": "address The address of the newly created and registered `ATKIdentityProxy` contract."
            }
          },
          "createTokenIdentity(address,address)": {
            "details": "This function can only be called by an address with the `REGISTRAR_ROLE`. It performs several steps: 1. Validates that `_token` and `_tokenOwner` are not zero addresses and that an identity doesn't already exist for this token. 2. Calls `_createAndRegisterTokenIdentityWithMetadata` to handle the deterministic deployment of the `ATKTokenIdentityProxy`.    The `_tokenOwner` is passed as the `_initialManager` to the proxy constructor. 3. Stores the mapping from the `_token` address to the new `identity` contract address. 4. Emits a `TokenIdentityCreated` event.",
            "params": {
              "_accessManager": "The address of the access manager contract that will be set as the initial owner/manager of the token's identity.",
              "_token": "The address of the token contract for which the identity is being created."
            },
            "returns": {
              "_0": "address The address of the newly created and registered `ATKTokenIdentityProxy` contract."
            }
          },
          "getIdentity(address)": {
            "params": {
              "_wallet": "The investor wallet address to query."
            },
            "returns": {
              "_0": "address The address of the `ATKIdentityProxy` if one has been created for the `_wallet`, otherwise `address(0)`."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getSystem()": {
            "details": "The `IATKSystem` contract provides the addresses for the actual logic implementations      of `ATKIdentity` and `ATKTokenIdentity` that the deployed proxies will delegate to.",
            "returns": {
              "_0": "address The address of the configured `IATKSystem` contract."
            }
          },
          "getTokenIdentity(address)": {
            "params": {
              "_token": "The token contract address to query."
            },
            "returns": {
              "_0": "address The address of the `ATKTokenIdentityProxy` if one has been created for the `_token`, otherwise `address(0)`."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize(address,address,address[],address[])": {
            "details": "Sets up essential state for the factory: 1. Validates that `systemAddress` is not the zero address. 2. Initializes ERC165 for interface detection. 3. Initializes AccessControl, granting `DEFAULT_ADMIN_ROLE` and `REGISTRAR_ROLE` to `initialAdmin`.    The `DEFAULT_ADMIN_ROLE` can manage other roles, while `REGISTRAR_ROLE` allows identity creation. 4. Stores the `systemAddress` which provides identity logic implementations.The `initializer` modifier ensures this function can only be called once.",
            "params": {
              "initialAdmin": "The address that will be granted initial administrative and registrar privileges over this factory.",
              "initialIdentityIssuerAdmins": "The addresses that will be granted initial administrative and registrar privileges over this factory for identity issuers.",
              "initialTokenIdentityIssuerAdmins": "The addresses that will be granted initial administrative and registrar privileges over this factory for token identity issuers.",
              "systemAddress": "The address of the central `IATKSystem` contract. This contract is crucial as it dictates                      which identity logic implementation contracts the new identity proxies will point to."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "This function is part of the ERC165 standard, allowing other contracts to query what interfaces this contract implements. It declares support for the `IATKIdentityFactory` interface and any interfaces supported by its parent contracts (like `AccessControlUpgradeable` and `ERC165Upgradeable`).",
            "params": {
              "interfaceId": "The interface identifier (bytes4) to check."
            },
            "returns": {
              "_0": "`true` if the contract supports the `interfaceId`, `false` otherwise."
            }
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "TOKEN_METADATA_SALT_PREFIX()": {
            "notice": "Prefix used in salt calculation for creating token identities with metadata-based salts."
          },
          "TOKEN_SALT_PREFIX()": {
            "notice": "Prefix used in salt calculation for creating token identities to ensure unique salt generation."
          },
          "WALLET_SALT_PREFIX()": {
            "notice": "Prefix used in salt calculation for creating wallet identities to ensure unique salt generation."
          },
          "calculateTokenIdentityAddress(string,string,uint8,address)": {
            "notice": "Computes the deterministic address at which a `ATKTokenIdentityProxy` for a token contract will be deployed (or was deployed) using metadata-based salt."
          },
          "calculateWalletIdentityAddress(address,address)": {
            "notice": "Computes the deterministic address at which a `ATKIdentityProxy` for an investor wallet will be deployed (or was deployed)."
          },
          "constructor": {
            "notice": "Constructor for the identity factory implementation."
          },
          "createIdentity(address,bytes32[])": {
            "notice": "Creates a deterministic on-chain identity (a `ATKIdentityProxy`) for a given investor wallet address."
          },
          "createTokenIdentity(address,address)": {
            "notice": "Creates a deterministic on-chain identity (a `ATKTokenIdentityProxy`) for a given token contract."
          },
          "getIdentity(address)": {
            "notice": "Retrieves the deployed `ATKIdentityProxy` address associated with a given investor wallet."
          },
          "getSystem()": {
            "notice": "Returns the address of the `IATKSystem` contract that this factory uses."
          },
          "getTokenIdentity(address)": {
            "notice": "Retrieves the deployed `ATKTokenIdentityProxy` address associated with a given token contract."
          },
          "initialize(address,address,address[],address[])": {
            "notice": "Initializes the `ATKIdentityFactoryImplementation` contract, typically called once by the proxy after deployment."
          },
          "supportsInterface(bytes4)": {
            "notice": "Checks if the contract supports a given interface ID."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/identity-factory/ATKIdentityFactoryImplementation.sol": "ATKIdentityFactoryImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/smart/interface/ERC-3643/IERC3643IdentityRegistryStorage.sol": {
        "keccak256": "0x3a8a72df8da5bf4d988bbfb00151b933ff17cdc8d4be47dc121cd9e2083ba86f",
        "urls": [
          "bzz-raw://369250658bf8d3ebb583946820afa494271ce6bfde607d15c7060cdf7a303cf3",
          "dweb:/ipfs/QmSJjaK6vyv8K9RX1k3rwxsoKfVNyMoHEszxyxdTQfDKQG"
        ],
        "license": "CC0-1.0"
      },
      "contracts/smart/interface/ERC-3643/IERC3643TrustedIssuersRegistry.sol": {
        "keccak256": "0x15b72940814cd959b57bf75623f16c51fc6c50eab51fd2420a8b653519ebd76c",
        "urls": [
          "bzz-raw://479f5e24a1b608776d9d5d7da9c76dd3c9b1dd300d8b4eee7a15dcfba4817bee",
          "dweb:/ipfs/QmPhMBfQAqt5NeRcSu3jDTwhoQXnB7nXNEcmoJ7KoWVt7V"
        ],
        "license": "CC0-1.0"
      },
      "contracts/smart/interface/ISMART.sol": {
        "keccak256": "0xfce323160dd5cd8c9db34de0ea872bec41fd2ea8d8496e1e3c17865d374994da",
        "urls": [
          "bzz-raw://1a1fafbdec0c59e078798438d2a3cd05bd70b864d7dfa67faf135d5634c5ae51",
          "dweb:/ipfs/QmehZwexgZN2BZKA6eFrG3DHUMRUZnzYTen6j5Ry5Znbf2"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTCompliance.sol": {
        "keccak256": "0x948341e4ad374e1dded6d1b30c395ad0f01e6ea2099fb6b96c5476e8b28c1d77",
        "urls": [
          "bzz-raw://d261e9a0c8682f11ac86048f13e367caee6d5f512d51b8752186b8c01b6ba618",
          "dweb:/ipfs/Qmdp14emh3NFSAphyuAgsTE7qZt1g1UYcNLS3tNNM8T6Hv"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTIdentityRegistry.sol": {
        "keccak256": "0x62a95a9db2ac97ceaf59f7585d7bbaf3acb65ed9b5e57597b9d1fe1b4d7c4eda",
        "urls": [
          "bzz-raw://bd870710359396db48e70ef7e40449125ff744c6c8ce15ad7e1894df430c87ea",
          "dweb:/ipfs/QmZ6khf5Vm6hBkkUgYC1b161jSQaZeegJVRY6ndjRW1EcG"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTIdentityRegistryStorage.sol": {
        "keccak256": "0x219b3d03958859e2f082aac5cbf3b40acf243e326ee6e74e6bb03be7724c2985",
        "urls": [
          "bzz-raw://8cf8d30ec47cb2aed5b51d373837584fb6f08deab1d35142510271e733404f52",
          "dweb:/ipfs/Qmc9NnABx9ouhhCR8qgJC3RtU5oAyycSjZkY6nGtuWFwuz"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/ISMARTTopicSchemeRegistry.sol": {
        "keccak256": "0xec5e42dcf7d929f8a0db42c9c8a0fa81d089a9f7177b7da10df029f94334ca8a",
        "urls": [
          "bzz-raw://e346e3241e3110b3f17d2b244a49d68a1d79c6928bef7d372ea3458c1029cea0",
          "dweb:/ipfs/QmeSyCYN9qYXRjn799fRFP7X9apf7bubVhnFEUGQatx3xd"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/smart/interface/structs/SMARTComplianceModuleParamPair.sol": {
        "keccak256": "0x489a55538b554a0c935bee7efc28f7e821e161638c5726c9d367a644a0b7c62a",
        "urls": [
          "bzz-raw://04bb06aed3ee3c5c6f3df9a59721c08ddd57b5521da1c9c6fd96b7c8b57db813",
          "dweb:/ipfs/QmRuzqKDr2sBHNuQhCzWGa8euNiMyvP7LTjSFjvAj5uFqh"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/ATKSystemErrors.sol": {
        "keccak256": "0xb25dad91c3bd82830df4fd80d645264a54303a04f2a7e3599b7953546f6d5e28",
        "urls": [
          "bzz-raw://728ea6df7945ec4772b493e82a3028809b25205adc6638185d0d2f0f11d7fc13",
          "dweb:/ipfs/QmNzsofiSzpSwJcRqYhgVU9EaexNNiYmfKnDmztrjX4Z6Y"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/ATKSystemRoles.sol": {
        "keccak256": "0x880cc7f3eb0ec9ad022494e53e690b4e70a3381f17a9de2a64fe0155767e27de",
        "urls": [
          "bzz-raw://6d39377217ea5aa2652398b135ed475a026c070dbe64869e8cea6c7d3fc3ac1a",
          "dweb:/ipfs/QmaKPMcyJYbpD8iMNT3mPqNxZBoizJUXhAw9piSigYFTS9"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/AbstractATKSystemProxy.sol": {
        "keccak256": "0xc45c4c9b6e1b90c26b6bf3ef63c22830dd8d456017a62dee13931213b58ced51",
        "urls": [
          "bzz-raw://02be110c93e54cf1cceecab8df64f2d6b57afd86af0f8b93895c0a6d8502a24e",
          "dweb:/ipfs/QmPAevhzSNTPbS4KKEV8h5YzNkk57BbCS9osVf5JthRLRa"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/IATKSystem.sol": {
        "keccak256": "0x9b142a029ec94141890b4000c54583ac8bd261c4c9cc1a17724f8601c581293b",
        "urls": [
          "bzz-raw://ac8c729ce44ab357ea1bd0de2c7a04cc7666550af9c8253a30e3329c29c13551",
          "dweb:/ipfs/QmTJPSssQ8WS5Uw34WpzAHyvebe9Z2XAojUD6yzMS6iqYC"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/identity-factory/ATKIdentityErrors.sol": {
        "keccak256": "0x151b6bd463c83b9bb167a0d96d5e7d36a24eca0baa738dab81291bbf0182e32b",
        "urls": [
          "bzz-raw://ba4324b5fb219c25895388c0d6864064017f06674bd75312c0350001e952ccea",
          "dweb:/ipfs/QmVf4odkCVCrtEXySTnaLNfQBnWGFtNoeMAu4fwVjCuWDA"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/identity-factory/ATKIdentityFactoryImplementation.sol": {
        "keccak256": "0xd1be675126c86814918c5361bd404ca3da79f60665bded6e1cdeca8c973ef2d9",
        "urls": [
          "bzz-raw://898db0137904da666c4f7e564d176161bf1a675c8ad6cae44dd00e2740f46700",
          "dweb:/ipfs/QmYbXyYMuFdJ7ig7ukhQkGqqAGNod618BEF3eMZQAUL97t"
        ],
        "license": "GPL-3.0"
      },
      "contracts/system/identity-factory/IATKIdentityFactory.sol": {
        "keccak256": "0x79ee1b0d79341dcecc591cbcd68e8408b6caa9c05be462861f8537d5eab5b780",
        "urls": [
          "bzz-raw://2c0a7862190edf86618e716a344d92707700f3f7702b919bfcee6da7d62c918f",
          "dweb:/ipfs/QmWKe3LWaz5Rc6YS3951AjCNjBtAKFqgEtySsayBUbUiZg"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/identity-factory/identities/ATKIdentityProxy.sol": {
        "keccak256": "0x504bbc09c4af6c6f66ddf2aa2ec8ad2dbf2b68f1ed1c6f4d7a393d04edaccfe3",
        "urls": [
          "bzz-raw://2d658b1fff7d764c667adb5343d6553f190d45985684704fe9dd22994c0dcdca",
          "dweb:/ipfs/QmQZUPs95hhbRLqCRyFtoRNP7CWiJ2j5c61gU18i9ZUKFM"
        ],
        "license": "GPL-3.0"
      },
      "contracts/system/identity-factory/identities/ATKTokenIdentityProxy.sol": {
        "keccak256": "0x730552959313517708995a460550339b8eed0f15f25916cb5ee73507892399be",
        "urls": [
          "bzz-raw://d6a43317f51e3e85476e01c22eb003ade9cd5c57c90460c45d01c3e88b4a9092",
          "dweb:/ipfs/QmXhUxTQUJfUpWwcRtvBosKBwrGkzioNocUxCN5vRPXwu9"
        ],
        "license": "GPL-3.0"
      },
      "contracts/system/identity-factory/identities/IATKIdentity.sol": {
        "keccak256": "0x51b82c502cec43a6167b1af2fe2c77d53cfdf9e04e1d5588d4325634f03d50d1",
        "urls": [
          "bzz-raw://cc237227e91d2037a1a71fad340bcaf97a4b800df2e52c56db5298c18482c30b",
          "dweb:/ipfs/QmX7oyqQeKFJegazXeaadPaRTPtx8goFd5QioLXrXtqzwc"
        ],
        "license": "GPL-3.0"
      },
      "contracts/system/identity-factory/identities/IATKTokenIdentity.sol": {
        "keccak256": "0xcb99992b48e9492498db97b301a8b7cc2730d018f535b851a216df7dc2c6b67b",
        "urls": [
          "bzz-raw://df28d69b1c6d62d9746b165badcca360134409fef934224469db4aa2c5ab0146",
          "dweb:/ipfs/QmRahsqaYy8qhjyuNEWZUu3swujZ61QpdEHQeNNP67UqLh"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IClaimIssuer.sol": {
        "keccak256": "0xae785f63b3cb3a94bcb454ef4ad6376aa4848fa29cff1cc8db3bef4a2994a779",
        "urls": [
          "bzz-raw://d8223d2710c51ee39cdfd2cb2f1858b3d64a3222c78ea8ed5eb3e11a93e1222e",
          "dweb:/ipfs/QmYRXPCww7BorScTC6QNMbrRm2zprUmSYFpWomwarJH7Df"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC734.sol": {
        "keccak256": "0x35a14a0d1a3ed51689f1a2cb12e26d30601afbcc1cc9b9b288a03cd11e6d049e",
        "urls": [
          "bzz-raw://156aac402e73e6bd2fa8c0ccd85b2add8d1bb505d8a652218173dbc8e7b9a3cb",
          "dweb:/ipfs/QmPzPyc3kKxoNCGqKAooUju6YvMkDN4MCUH198TEXnA82o"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IERC735.sol": {
        "keccak256": "0xeac82c37b16c1c1c83df3e88be987332b1230ed13e1d017f9d2929f978ac0122",
        "urls": [
          "bzz-raw://695a66b789ac417b7b2b78c578981779db374704382921ff499351cccab0323e",
          "dweb:/ipfs/QmeZoogvsEWf688Z849zZ2dLPDnor6YnnNQLMgedY9Tc9D"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@onchainid-v2.2.1/contracts/interface/IIdentity.sol": {
        "keccak256": "0x5ed42ab81b9b734c79e61d1f7e0734baab5479a356ab6bb469414d3c66269862",
        "urls": [
          "bzz-raw://a0863999b1ed334179a43e699e6057815eea011a78ed51e61b6110fc392e26f8",
          "dweb:/ipfs/Qme6hdHZCAy1V4sLgAZ5NxdrEjEf5mYMabf5UDmUDjkuzW"
        ],
        "license": "GPL-3.0"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Create2.sol": {
        "keccak256": "0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06",
        "urls": [
          "bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e",
          "dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Strings.sol": {
        "keccak256": "0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae",
        "urls": [
          "bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6",
          "dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534",
        "urls": [
          "bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da",
          "dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "TOKEN_METADATA_SALT_PREFIX()": {
        "notice": "Prefix used in salt calculation for creating token identities with metadata-based salts."
      },
      "TOKEN_SALT_PREFIX()": {
        "notice": "Prefix used in salt calculation for creating token identities to ensure unique salt generation."
      },
      "WALLET_SALT_PREFIX()": {
        "notice": "Prefix used in salt calculation for creating wallet identities to ensure unique salt generation."
      },
      "calculateTokenIdentityAddress(string,string,uint8,address)": {
        "notice": "Computes the deterministic address at which a `ATKTokenIdentityProxy` for a token contract will be deployed (or was deployed) using metadata-based salt."
      },
      "calculateWalletIdentityAddress(address,address)": {
        "notice": "Computes the deterministic address at which a `ATKIdentityProxy` for an investor wallet will be deployed (or was deployed)."
      },
      "constructor": {
        "notice": "Constructor for the identity factory implementation."
      },
      "createIdentity(address,bytes32[])": {
        "notice": "Creates a deterministic on-chain identity (a `ATKIdentityProxy`) for a given investor wallet address."
      },
      "createTokenIdentity(address,address)": {
        "notice": "Creates a deterministic on-chain identity (a `ATKTokenIdentityProxy`) for a given token contract."
      },
      "getIdentity(address)": {
        "notice": "Retrieves the deployed `ATKIdentityProxy` address associated with a given investor wallet."
      },
      "getSystem()": {
        "notice": "Returns the address of the `IATKSystem` contract that this factory uses."
      },
      "getTokenIdentity(address)": {
        "notice": "Retrieves the deployed `ATKTokenIdentityProxy` address associated with a given token contract."
      },
      "initialize(address,address,address[],address[])": {
        "notice": "Initializes the `ATKIdentityFactoryImplementation` contract, typically called once by the proxy after deployment."
      },
      "supportsInterface(bytes4)": {
        "notice": "Checks if the contract supports a given interface ID."
      }
    },
    "events": {
      "IdentityCreated(address,address,address)": {
        "notice": "Emitted when a new identity contract is successfully created and registered for an investor wallet."
      },
      "TokenIdentityCreated(address,address,address)": {
        "notice": "Emitted when a new identity contract is successfully created and registered for a token contract."
      },
      "TokenRegistrarRoleGranted(address,address)": {
        "notice": "Emitted when the TOKEN_REGISTRAR_ROLE is granted to an account."
      },
      "TokenRegistrarRoleRevoked(address,address)": {
        "notice": "Emitted when the TOKEN_REGISTRAR_ROLE is revoked from an account."
      }
    },
    "errors": {
      "DeploymentAddressMismatch()": [
        {
          "notice": "Indicates that the address deployed via CREATE2 does not match the pre-calculated predicted address."
        }
      ],
      "InvalidIdentityImplementation()": [
        {
          "notice": "Indicates that the identity implementation is invalid."
        }
      ],
      "InvalidSystemAddress()": [
        {
          "notice": "Error indicating that an invalid system address was provided or encountered."
        }
      ],
      "InvalidTokenIdentityImplementation()": [
        {
          "notice": "Indicates that the token identity implementation is invalid."
        }
      ],
      "SaltAlreadyTaken(string)": [
        {
          "notice": "Indicates that a deterministic deployment (CREATE2) was attempted with a salt that has already been used."
        }
      ],
      "TokenAlreadyLinked(address)": [
        {
          "notice": "Indicates an attempt to create an identity for a token that already has one linked in this factory."
        }
      ],
      "WalletAlreadyLinked(address)": [
        {
          "notice": "Indicates an attempt to create an identity for a wallet that already has one linked in this factory."
        }
      ],
      "WalletInManagementKeys()": [
        {
          "notice": "Indicates that a wallet address was found within the list of management keys being added to its own identity."
        }
      ],
      "ZeroAddressNotAllowed()": [
        {
          "notice": "Indicates that an operation was attempted with the zero address (address(0))         where a valid, non-zero address was expected (e.g., for a wallet or token owner)."
        }
      ]
    },
    "notice": "This contract is the upgradeable logic implementation for creating and managing on-chain identities         for both user wallets and token contracts within the ATK Protocol."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "It leverages OpenZeppelin's `Create2` library to deploy identity proxy contracts (`ATKIdentityProxy` for wallets,      `ATKTokenIdentityProxy` for tokens) at deterministic addresses. These proxies point to logic implementations      whose addresses are provided by the central `IATKSystem` contract, enabling upgradeability of the identity logic.      The factory uses `AccessControlUpgradeable` for role-based access control, notably the `REGISTRAR_ROLE`      for creating identities. It is also `ERC2771ContextUpgradeable` for meta-transaction support.      The identities created are based on the ERC725 (OnchainID) standard, managed via ERC734 for key management.",
    "methods": {
      "calculateTokenIdentityAddress(string,string,uint8,address)": {
        "details": "Uses token metadata (name, symbol, decimals) combined with token address to calculate deployment address.      It calls `_computeTokenProxyAddress` with the calculated metadata-based salt and `_initialManager`.",
        "params": {
          "_decimals": "The decimals of the token used in salt generation.",
          "_initialManager": "The address that would be (or was) set as the initial management key for the token identity's proxy constructor.",
          "_name": "The name of the token used in salt generation.",
          "_symbol": "The symbol of the token used in salt generation."
        },
        "returns": {
          "_0": "address The pre-computed CREATE2 deployment address for the token's identity contract."
        }
      },
      "calculateWalletIdentityAddress(address,address)": {
        "details": "This function uses the `CREATE2` address calculation logic. It first calculates a unique salt using      the `WALLET_SALT_PREFIX` and the `_walletAddress`. Then, it calls `_computeWalletProxyAddress` with this salt      and the `_initialManager` (which is part of the proxy's constructor arguments, affecting its creation code hash).      This allows prediction of the identity address before actual deployment.",
        "params": {
          "_initialManager": "The address that would be (or was) set as the initial management key for the identity's proxy constructor.",
          "_walletAddress": "The investor wallet address for which to calculate the potential identity contract address."
        },
        "returns": {
          "_0": "address The pre-computed CREATE2 deployment address for the wallet's identity contract."
        }
      },
      "constructor": {
        "details": "This is part of OpenZeppelin's upgradeable contracts pattern. It initializes `ERC2771ContextUpgradeable` with the `trustedForwarder` address for meta-transactions. `_disableInitializers()` prevents the `initialize` function from being called on the implementation contract directly, reserving it for the proxy context during deployment or upgrade.",
        "params": {
          "trustedForwarder": "The address of the ERC-2771 trusted forwarder for gasless transactions."
        }
      },
      "createIdentity(address,bytes32[])": {
        "details": "This function can only be called by an address with the `REGISTRAR_ROLE`. It performs several steps: 1. Validates that `_wallet` is not the zero address and that an identity doesn't already exist for this wallet. 2. Calls `_createAndRegisterWalletIdentity` to handle the deterministic deployment of the `ATKIdentityProxy`.    The `_wallet` itself is passed as the `_initialManager` to the proxy constructor. 3. Interacts with the newly deployed identity contract (as `IERC734`) to add any additional `_managementKeys` provided.    It ensures a management key is not the wallet itself (which is already a manager). 4. Stores the mapping from the `_wallet` address to the new `identity` contract address. 5. Emits an `IdentityCreated` event.",
        "params": {
          "_managementKeys": "An array of `bytes32` values representing additional management keys (keccak256 hashes of public keys or addresses) to be added to the identity.                        These keys are granted `MANAGEMENT_KEY` purpose (purpose 1) according to ERC734.",
          "_wallet": "The investor wallet address for which the identity is being created. This address will also be set as an initial manager of the identity."
        },
        "returns": {
          "_0": "address The address of the newly created and registered `ATKIdentityProxy` contract."
        }
      },
      "createTokenIdentity(address,address)": {
        "details": "This function can only be called by an address with the `REGISTRAR_ROLE`. It performs several steps: 1. Validates that `_token` and `_tokenOwner` are not zero addresses and that an identity doesn't already exist for this token. 2. Calls `_createAndRegisterTokenIdentityWithMetadata` to handle the deterministic deployment of the `ATKTokenIdentityProxy`.    The `_tokenOwner` is passed as the `_initialManager` to the proxy constructor. 3. Stores the mapping from the `_token` address to the new `identity` contract address. 4. Emits a `TokenIdentityCreated` event.",
        "params": {
          "_accessManager": "The address of the access manager contract that will be set as the initial owner/manager of the token's identity.",
          "_token": "The address of the token contract for which the identity is being created."
        },
        "returns": {
          "_0": "address The address of the newly created and registered `ATKTokenIdentityProxy` contract."
        }
      },
      "getIdentity(address)": {
        "params": {
          "_wallet": "The investor wallet address to query."
        },
        "returns": {
          "_0": "address The address of the `ATKIdentityProxy` if one has been created for the `_wallet`, otherwise `address(0)`."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getSystem()": {
        "details": "The `IATKSystem` contract provides the addresses for the actual logic implementations      of `ATKIdentity` and `ATKTokenIdentity` that the deployed proxies will delegate to.",
        "returns": {
          "_0": "address The address of the configured `IATKSystem` contract."
        }
      },
      "getTokenIdentity(address)": {
        "params": {
          "_token": "The token contract address to query."
        },
        "returns": {
          "_0": "address The address of the `ATKTokenIdentityProxy` if one has been created for the `_token`, otherwise `address(0)`."
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "initialize(address,address,address[],address[])": {
        "details": "Sets up essential state for the factory: 1. Validates that `systemAddress` is not the zero address. 2. Initializes ERC165 for interface detection. 3. Initializes AccessControl, granting `DEFAULT_ADMIN_ROLE` and `REGISTRAR_ROLE` to `initialAdmin`.    The `DEFAULT_ADMIN_ROLE` can manage other roles, while `REGISTRAR_ROLE` allows identity creation. 4. Stores the `systemAddress` which provides identity logic implementations.The `initializer` modifier ensures this function can only be called once.",
        "params": {
          "initialAdmin": "The address that will be granted initial administrative and registrar privileges over this factory.",
          "initialIdentityIssuerAdmins": "The addresses that will be granted initial administrative and registrar privileges over this factory for identity issuers.",
          "initialTokenIdentityIssuerAdmins": "The addresses that will be granted initial administrative and registrar privileges over this factory for token identity issuers.",
          "systemAddress": "The address of the central `IATKSystem` contract. This contract is crucial as it dictates                      which identity logic implementation contracts the new identity proxies will point to."
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "This function is part of the ERC165 standard, allowing other contracts to query what interfaces this contract implements. It declares support for the `IATKIdentityFactory` interface and any interfaces supported by its parent contracts (like `AccessControlUpgradeable` and `ERC165Upgradeable`).",
        "params": {
          "interfaceId": "The interface identifier (bytes4) to check."
        },
        "returns": {
          "_0": "`true` if the contract supports the `interfaceId`, `false` otherwise."
        }
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      }
    },
    "events": {
      "IdentityCreated(address,address,address)": {
        "params": {
          "identity": "The address of the newly deployed `ATKIdentityProxy` contract.",
          "sender": "The address that initiated the identity creation (e.g., an address with `REGISTRAR_ROLE`).",
          "wallet": "The investor wallet address for which the identity was created."
        }
      },
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "TokenIdentityCreated(address,address,address)": {
        "params": {
          "identity": "The address of the newly deployed `ATKTokenIdentityProxy` contract.",
          "sender": "The address that initiated the token identity creation (e.g., an address with `REGISTRAR_ROLE`).",
          "token": "The address of the token contract for which the identity was created."
        }
      },
      "TokenRegistrarRoleGranted(address,address)": {
        "params": {
          "account": "The account that was granted the role.",
          "sender": "The account that granted the role."
        }
      },
      "TokenRegistrarRoleRevoked(address,address)": {
        "params": {
          "account": "The account that had the role revoked.",
          "sender": "The account that revoked the role."
        }
      }
    },
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "Create2EmptyBytecode()": [
        {
          "details": "There's no code to deploy."
        }
      ],
      "DeploymentAddressMismatch()": [
        {
          "details": "This is a critical error suggesting a potential issue in the CREATE2 computation, salt, or deployment bytecode, or an unexpected change in blockchain state between prediction and deployment."
        }
      ],
      "FailedDeployment()": [
        {
          "details": "The deployment failed."
        }
      ],
      "InsufficientBalance(uint256,uint256)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ],
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "InvalidSystemAddress()": [
        {
          "details": "This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "SaltAlreadyTaken(string)": [
        {
          "details": "Salts must be unique for each CREATE2 deployment from the same factory to ensure unique addresses.",
          "params": {
            "salt": "The string representation of the salt that was already taken."
          }
        }
      ],
      "StringsInsufficientHexLength(uint256,uint256)": [
        {
          "details": "The `value` string doesn't fit in the specified `length`."
        }
      ],
      "TokenAlreadyLinked(address)": [
        {
          "params": {
            "token": "The address of the token contract that is already linked to an identity."
          }
        }
      ],
      "WalletAlreadyLinked(address)": [
        {
          "params": {
            "wallet": "The address of the wallet that is already linked to an identity."
          }
        }
      ],
      "WalletInManagementKeys()": [
        {
          "details": "An identity's own wallet address (if it represents a user) typically has management capabilities by default or through specific key types; explicitly adding it as a generic management key might be redundant or an error."
        }
      ]
    },
    "title": "ATK Identity Factory Implementation"
  },
  "id": 160
}