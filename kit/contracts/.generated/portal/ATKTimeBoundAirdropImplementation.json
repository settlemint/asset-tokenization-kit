{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "forwarder_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_BATCH_SIZE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchClaim",
      "inputs": [
        {
          "name": "indices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "totalAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "merkleProofs",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimTracker",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IATKClaimTracker"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "endTime",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimedAmount",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTimeRemaining",
      "inputs": [],
      "outputs": [
        {
          "name": "timeRemaining",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "name_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "token_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "root_",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "owner_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "startTime_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "endTime_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isActive",
      "inputs": [],
      "outputs": [
        {
          "name": "active",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isClaimed",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "merkleRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "startTime",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "token",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdrawTokens",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "BatchClaimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "indices",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Claimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TimeWindowSet",
      "inputs": [
        {
          "name": "startTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "endTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensWithdrawn",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AirdropEnded",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AirdropNotStarted",
      "inputs": []
    },
    {
      "type": "error",
      "name": "BatchSizeExceedsLimit",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IndexAlreadyClaimed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAirdropName",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidClaimAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidClaimTrackerAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEndTime",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInputArrayLengths",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMerkleProof",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMerkleRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidStartTime",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidTokenAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWithdrawalAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ZeroClaimAmount",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a03461008857601f611be838819003918201601f19168301916001600160401b0383118484101761008c5780849260209460405283398101031261008857516001600160a01b03811681036100885760805261005a6100a0565b6100626100a0565b604051611a9190816101378239608051818181610a0e01528181610ae101526115010152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f516020611bc85f395f51905f525460ff8160401c16610127576002600160401b03196001600160401b038216016100d55750565b6001600160401b0319166001600160401b039081175f516020611bc85f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b63f92ee8a960e01b5f5260045ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde031461116757508063222abc111461113f57806322f3e2d41461110a5780632eb4a7ab146110ed5780633197cbb6146110d0578063429c6e5b1461104657806349df728c14610f5c5780634be7adee14610b15578063572b6c0514610ac1578063715018a614610a5a57806378e9792514610a3d5780637da0a877146109f95780638da5cb5b146109c5578063ae0b51df14610781578063cfdbf25414610766578063dac6270d14610744578063ed0ea232146101e9578063f2fde38b146101be578063f364c90c146101245763fc0c546a146100f8575f80fd5b34610120575f366003190112610120576001546040516001600160a01b039091168152602090f35b5f80fd5b3461012057604036600319011261012057600354604051633cd9324360e21b81526004803590820152602480359082015290602090829060449082906001600160a01b03165afa80156101b3576020915f91610186575b506040519015158152f35b6101a69150823d84116101ac575b61019e8183611286565b8101906113a9565b8261017b565b503d610194565b6040513d5f823e3d90fd5b34610120576020366003190112610120576101e76101da611240565b6101e26113c1565b611338565b005b346101205760c0366003190112610120576004356001600160401b03811161012057366023820112156101205780600401356001600160401b0381116106345760405191610241601f8301601f191660200184611286565b818352366024838301011161012057815f9260246020930183860137830101526024356001600160a01b0381169081900361012057604435906064356001600160a01b0381168103610120576084359260a435925f516020611a655f395f51905f52549560ff8760401c1615966001600160401b0381168015908161073c575b6001149081610732575b159081610729575b5061071a5767ffffffffffffffff1981166001175f516020611a655f395f51905f5255876106ee575b504286106106df57858511156106d057604051610398808201908282106001600160401b0383111761063457602091839161166d83393081520301905ff080156101b3576001600160a01b031693610352611641565b8151156106c15782156106b25783156106a3578415610694576040516318160ddd60e01b8152602081600481875afa9081610665575b5061039c57630f58058360e11b5f5260045ffd5b604051633cd9324360e21b81525f600482018190526024820152602081604481895afa9081610648575b506103da57632b58d96960e01b5f5260045ffd5b6103ee906103e6611641565b6101e2611641565b8051906001600160401b038211610634576104095f546112a7565b601f81116105cd575b50602090601f83116001146105375791807f6f7ee0cbd39a3eac4bdd3fffe695ed5a509c06080a238d4ced6e2881a9af7abc9896949260409896945f9261052c575b50508160011b915f199060031b1c1916175f555b6bffffffffffffffffffffffff60a01b60015416176001556002556bffffffffffffffffffffffff60a01b60035416176003556104a3611641565b6104ab611641565b60015f516020611a455f395f51905f5255816004558060055582519182526020820152a16104d557005b68ff0000000000000000195f516020611a655f395f51905f5254165f516020611a655f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a80610454565b90601f198316915f80525f516020611a255f395f51905f52925f5b8181106105b5575092600192859260409a98967f6f7ee0cbd39a3eac4bdd3fffe695ed5a509c06080a238d4ced6e2881a9af7abc9c9a98961061059d575b505050811b015f55610468565b01515f1960f88460031b161c191690558a8080610590565b92936020600181928786015181550195019301610552565b5f8052601f830160051c5f516020611a255f395f51905f5201906020841061061f575b601f0160051c5f516020611a255f395f51905f5201905b8181106106145750610412565b5f8155600101610607565b5f516020611a255f395f51905f5291506105f0565b634e487b7160e01b5f52604160045260245ffd5b6106609060203d6020116101ac5761019e8183611286565b6103c6565b6020813d60201161068c575b8161067e60209383611286565b810103126101205751610388565b3d9150610671565b632b58d96960e01b5f5260045ffd5b639dd854d360e01b5f5260045ffd5b630f58058360e11b5f5260045ffd5b632e43296560e01b5f5260045ffd5b6338af65f760e01b5f5260045ffd5b632ca4094f60e21b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f516020611a655f395f51905f5255876102fc565b63f92ee8a960e01b5f5260045ffd5b905015896102d3565b303b1591506102cb565b8991506102c1565b34610120575f36600319011261012057602061075e611303565b604051908152f35b34610120575f36600319011261012057602060405160648152f35b34610120576060366003190112610120576024356004356044356001600160401b038111610120576107b7903690600401611256565b919060045442106109b65760055442116109a7576107d36114a2565b6107db6114fe565b9084156109985760018060a01b036003541693604051633cd9324360e21b8152846004820152866024820152602081604481895afa9081156101b3575f91610979575b5061096a5761082f91868486611557565b1561095b57604051635ea05ef360e11b8152600481018390526024810185905260448101859052602081606481875afa9081156101b3575f9161093c575b501561092d57823b156101205760405163762ba3ff60e11b8152600481018390526024810185905260448101859052925f908490606490829084905af19182156101b3577f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a9360409361091d575b506001546108f590869084906001600160a01b0316611414565b825194855260208501526001600160a01b031692a260015f516020611a455f395f51905f5255005b5f61092791611286565b856108db565b63843ce46b60e01b5f5260045ffd5b610955915060203d6020116101ac5761019e8183611286565b8561086d565b63582f497d60e11b5f5260045ffd5b63b708ca1560e01b5f5260045ffd5b610992915060203d6020116101ac5761019e8183611286565b8761081e565b6360640efd60e11b5f5260045ffd5b63061ddd4f60e51b5f5260045ffd5b63b820fc9760e01b5f5260045ffd5b34610120575f366003190112610120575f516020611a055f395f51905f52546040516001600160a01b039091168152602090f35b34610120575f366003190112610120576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610120575f366003190112610120576020600454604051908152f35b34610120575f36600319011261012057610a726113c1565b5f516020611a055f395f51905f5280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610120576020366003190112610120576020610adc611240565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610120576060366003190112610120576004356001600160401b03811161012057610b45903690600401611256565b6024356001600160401b03811161012057610b64903690600401611256565b90916044356001600160401b03811161012057610b85903690600401611256565b91909460045442106109b65760055442116109a757610ba26114a2565b60648211610f4d57610bb26114fe565b93610bbc816112df565b95610bca6040519788611286565b818752602087018260051b8201903682116101205782905b828210610f3d5750505086518281861491821592610f32575b50508015610f28575b610f1957959396905f96610c17856112df565b95610c256040519788611286565b858752610c31866112df565b602088019a90601f1901368c375f945b878610610d275750505050505084610c67575b60015f516020611a455f395f51905f5255005b600154610c8090869086906001600160a01b0316611414565b60405194855260606020860181905285018290526001600160fb1b0382116101205760a09160051b80916080870137840160808101926080868303016040870152518093520193905f5b818110610d11575050506001600160a01b0316917fb9df54cb8716695fe6cd84e5e4b88eca0d9c862970bcd45797aabb77d71b48ee919081900390a2808080808080610c54565b8251865260209586019590920191600101610cca565b909192939499610d388b89896114da565b359a610d4481866114ea565b519b610d518289896114da565b359085831015610f05578260051b850135601e1986360301811215610120578501916001600160401b0383351161012057823560051b36036020840113610120578e156109985760018060a01b036003541692604051633cd9324360e21b8152836004820152826024820152602081604481885afa9081156101b3575f91610ee7575b5061096a57808f836020610dec943593019186611557565b1561095b57610e268f826020916040519384928392635ea05ef360e11b845288600485016040919493926060820195825260208201520152565b0381875afa9081156101b3575f91610ec9575b501561092d57823b156101205760405163762ba3ff60e11b81526004810192909252602482018f90526044820152905f908290606490829084905af180156101b357610eb9575b508b8201809211610ea5576001919b610e99828c6114ea565b52019493929190610c41565b634e487b7160e01b5f52601160045260245ffd5b5f610ec391611286565b8d610e80565b610ee1915060203d81116101ac5761019e8183611286565b5f610e39565b610eff915060203d81116101ac5761019e8183611286565b5f610dd4565b634e487b7160e01b5f52603260045260245ffd5b632c635df560e11b5f5260045ffd5b5084821415610c04565b14159050828a610bfb565b8135815260209182019101610be2565b632a8677b560e21b5f5260045ffd5b3461012057602036600319011261012057610f75611240565b610f7d6113c1565b6001600160a01b038116908115611037576001546040516370a0823160e01b815230600482015291906001600160a01b0316602083602481845afa9283156101b3575f93610fff575b5091610ff6816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b95611414565b604051908152a2005b9250906020833d60201161102f575b8161101b60209383611286565b810103126101205791519190610ff6610fc6565b3d915061100e565b634261081360e11b5f5260045ffd5b346101205760203660031901126101205760035460405163429c6e5b60e01b8152600480359082015290602090829060249082906001600160a01b03165afa80156101b3575f9061109d575b602090604051908152f35b506020813d6020116110c8575b816110b760209383611286565b810103126101205760209051611092565b3d91506110aa565b34610120575f366003190112610120576020600554604051908152f35b34610120575f366003190112610120576020600254604051908152f35b34610120575f3660031901126101205760045442101580611133575b6020906040519015158152f35b50600554421115611126565b34610120575f366003190112610120576003546040516001600160a01b039091168152602090f35b34610120575f366003190112610120575f905f5491611185836112a7565b80835260208301936001811690811561122557506001146111dc575b50906111b1816040930382611286565b8151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b5f8080525f516020611a255f395f51905f52939250905b80821061120b575090915081016020016111b16111a1565b9192600181602092548385880101520191019092916111f3565b60ff1916855250151560051b820160200190506111b16111a1565b600435906001600160a01b038216820361012057565b9181601f84011215610120578235916001600160401b038311610120576020808501948460051b01011161012057565b90601f801991011681019081106001600160401b0382111761063457604052565b90600182811c921680156112d5575b60208310146112c157565b634e487b7160e01b5f52602260045260245ffd5b91607f16916112b6565b6001600160401b0381116106345760051b60200190565b91908203918211610ea557565b6004548042105f1461131d5761131a9042906112f6565b90565b506005544281106113335761131a9042906112f6565b505f90565b6001600160a01b03168015611396575f516020611a055f395f51905f5280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b631e4fbdf760e01b5f525f60045260245ffd5b90816020910312610120575180151581036101205790565b5f516020611a055f395f51905f52546001600160a01b03908116906113e46114fe565b16036113ec57565b6113f46114fe565b63118cdaa760e01b5f9081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f91611452606482611286565b519082855af1156101b3575f513d61149957506001600160a01b0381163b155b6114795750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415611472565b60025f516020611a455f395f51905f5254146114cb5760025f516020611a455f395f51905f5255565b633ee5aeb560e01b5f5260045ffd5b9190811015610f055760051b0190565b8051821015610f055760209160051b010190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061154c575b15611548576013193601368111610ea5573560601c90565b3390565b506014361015611530565b9194929394604051916020830193845260018060a01b03166040830152606082015260608152611588608082611286565b51902060405160208101918252602081526115a4604082611286565b519020600254926115b4856112df565b946115c26040519687611286565b808652602086019060051b82019136831161012057905b82821061163157505050905f915b8451831015611629576115fa83866114ea565b519081811015611618575f52602052600160405f205b9201916115e7565b905f52602052600160405f20611610565b915092501490565b81358152602091820191016115d9565b60ff5f516020611a655f395f51905f525460401c161561165d57565b631afcd79f60e31b5f5260045ffdfe60803460b857601f61039838819003918201601f19168301916001600160401b0383118484101760bc5780849260209460405283398101031260b857516001600160a01b0381169081900360b857801560a5575f80546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36102c790816100d18239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c908163429c6e5b1461023357508063715018a6146101dc5780638da5cb5b146101b5578063bd40bde614610186578063ec5747fe14610125578063f2fde38b1461009c5763f364c90c14610069575f80fd5b34610098576040366003190112610098576004355f526001602052602060243560405f20541015604051908152f35b5f80fd5b34610098576020366003190112610098576004356001600160a01b03811690819003610098576100ca610294565b8015610112575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100985760407f08401774913e94f43659333293c99fdfdea868c488d679967e054abc8b5ae83461015636610259565b610161949294610294565b845f526001602052825f20610177838254610273565b905582519182526020820152a2005b346100985760206101ab61019936610259565b92915f526001845260405f2054610273565b1115604051908152f35b34610098575f366003190112610098575f546040516001600160a01b039091168152602090f35b34610098575f366003190112610098576101f4610294565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610098576020366003190112610098576020906004355f526001825260405f20548152f35b606090600319011261009857600435906024359060443590565b9190820180921161028057565b634e487b7160e01b5f52601160045260245ffd5b5f546001600160a01b031633036102a757565b63118cdaa760e01b5f523360045260245ffdfea164736f6c634300081c000a9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000af0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "sourceMap": "1796:5517:14:-:0;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;1623:37:242;;5105:109:0;;:::i;:::-;2969:94:14;;:::i;:::-;1796:5517;;;;;;;;1623:37:242;1796:5517:14;;;;;;;;;;;;;;;;;-1:-1:-1;1796:5517:14;;;;;;-1:-1:-1;1796:5517:14;;;;;-1:-1:-1;1796:5517:14;7709:422:243;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;;;;7894:76:243;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;7983:34:243;7979:146;;7709:422;:::o;7979:146::-;-1:-1:-1;;;;;;1796:5517:14;-1:-1:-1;;;;;1796:5517:14;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;;;;8085:29:243;;1796:5517:14;;8085:29:243;7709:422::o;7894:76::-;7936:23;;;-1:-1:-1;7936:23:243;;-1:-1:-1;7936:23:243",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde031461116757508063222abc111461113f57806322f3e2d41461110a5780632eb4a7ab146110ed5780633197cbb6146110d0578063429c6e5b1461104657806349df728c14610f5c5780634be7adee14610b15578063572b6c0514610ac1578063715018a614610a5a57806378e9792514610a3d5780637da0a877146109f95780638da5cb5b146109c5578063ae0b51df14610781578063cfdbf25414610766578063dac6270d14610744578063ed0ea232146101e9578063f2fde38b146101be578063f364c90c146101245763fc0c546a146100f8575f80fd5b34610120575f366003190112610120576001546040516001600160a01b039091168152602090f35b5f80fd5b3461012057604036600319011261012057600354604051633cd9324360e21b81526004803590820152602480359082015290602090829060449082906001600160a01b03165afa80156101b3576020915f91610186575b506040519015158152f35b6101a69150823d84116101ac575b61019e8183611286565b8101906113a9565b8261017b565b503d610194565b6040513d5f823e3d90fd5b34610120576020366003190112610120576101e76101da611240565b6101e26113c1565b611338565b005b346101205760c0366003190112610120576004356001600160401b03811161012057366023820112156101205780600401356001600160401b0381116106345760405191610241601f8301601f191660200184611286565b818352366024838301011161012057815f9260246020930183860137830101526024356001600160a01b0381169081900361012057604435906064356001600160a01b0381168103610120576084359260a435925f516020611a655f395f51905f52549560ff8760401c1615966001600160401b0381168015908161073c575b6001149081610732575b159081610729575b5061071a5767ffffffffffffffff1981166001175f516020611a655f395f51905f5255876106ee575b504286106106df57858511156106d057604051610398808201908282106001600160401b0383111761063457602091839161166d83393081520301905ff080156101b3576001600160a01b031693610352611641565b8151156106c15782156106b25783156106a3578415610694576040516318160ddd60e01b8152602081600481875afa9081610665575b5061039c57630f58058360e11b5f5260045ffd5b604051633cd9324360e21b81525f600482018190526024820152602081604481895afa9081610648575b506103da57632b58d96960e01b5f5260045ffd5b6103ee906103e6611641565b6101e2611641565b8051906001600160401b038211610634576104095f546112a7565b601f81116105cd575b50602090601f83116001146105375791807f6f7ee0cbd39a3eac4bdd3fffe695ed5a509c06080a238d4ced6e2881a9af7abc9896949260409896945f9261052c575b50508160011b915f199060031b1c1916175f555b6bffffffffffffffffffffffff60a01b60015416176001556002556bffffffffffffffffffffffff60a01b60035416176003556104a3611641565b6104ab611641565b60015f516020611a455f395f51905f5255816004558060055582519182526020820152a16104d557005b68ff0000000000000000195f516020611a655f395f51905f5254165f516020611a655f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a80610454565b90601f198316915f80525f516020611a255f395f51905f52925f5b8181106105b5575092600192859260409a98967f6f7ee0cbd39a3eac4bdd3fffe695ed5a509c06080a238d4ced6e2881a9af7abc9c9a98961061059d575b505050811b015f55610468565b01515f1960f88460031b161c191690558a8080610590565b92936020600181928786015181550195019301610552565b5f8052601f830160051c5f516020611a255f395f51905f5201906020841061061f575b601f0160051c5f516020611a255f395f51905f5201905b8181106106145750610412565b5f8155600101610607565b5f516020611a255f395f51905f5291506105f0565b634e487b7160e01b5f52604160045260245ffd5b6106609060203d6020116101ac5761019e8183611286565b6103c6565b6020813d60201161068c575b8161067e60209383611286565b810103126101205751610388565b3d9150610671565b632b58d96960e01b5f5260045ffd5b639dd854d360e01b5f5260045ffd5b630f58058360e11b5f5260045ffd5b632e43296560e01b5f5260045ffd5b6338af65f760e01b5f5260045ffd5b632ca4094f60e21b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f516020611a655f395f51905f5255876102fc565b63f92ee8a960e01b5f5260045ffd5b905015896102d3565b303b1591506102cb565b8991506102c1565b34610120575f36600319011261012057602061075e611303565b604051908152f35b34610120575f36600319011261012057602060405160648152f35b34610120576060366003190112610120576024356004356044356001600160401b038111610120576107b7903690600401611256565b919060045442106109b65760055442116109a7576107d36114a2565b6107db6114fe565b9084156109985760018060a01b036003541693604051633cd9324360e21b8152846004820152866024820152602081604481895afa9081156101b3575f91610979575b5061096a5761082f91868486611557565b1561095b57604051635ea05ef360e11b8152600481018390526024810185905260448101859052602081606481875afa9081156101b3575f9161093c575b501561092d57823b156101205760405163762ba3ff60e11b8152600481018390526024810185905260448101859052925f908490606490829084905af19182156101b3577f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a9360409361091d575b506001546108f590869084906001600160a01b0316611414565b825194855260208501526001600160a01b031692a260015f516020611a455f395f51905f5255005b5f61092791611286565b856108db565b63843ce46b60e01b5f5260045ffd5b610955915060203d6020116101ac5761019e8183611286565b8561086d565b63582f497d60e11b5f5260045ffd5b63b708ca1560e01b5f5260045ffd5b610992915060203d6020116101ac5761019e8183611286565b8761081e565b6360640efd60e11b5f5260045ffd5b63061ddd4f60e51b5f5260045ffd5b63b820fc9760e01b5f5260045ffd5b34610120575f366003190112610120575f516020611a055f395f51905f52546040516001600160a01b039091168152602090f35b34610120575f366003190112610120576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610120575f366003190112610120576020600454604051908152f35b34610120575f36600319011261012057610a726113c1565b5f516020611a055f395f51905f5280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610120576020366003190112610120576020610adc611240565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610120576060366003190112610120576004356001600160401b03811161012057610b45903690600401611256565b6024356001600160401b03811161012057610b64903690600401611256565b90916044356001600160401b03811161012057610b85903690600401611256565b91909460045442106109b65760055442116109a757610ba26114a2565b60648211610f4d57610bb26114fe565b93610bbc816112df565b95610bca6040519788611286565b818752602087018260051b8201903682116101205782905b828210610f3d5750505086518281861491821592610f32575b50508015610f28575b610f1957959396905f96610c17856112df565b95610c256040519788611286565b858752610c31866112df565b602088019a90601f1901368c375f945b878610610d275750505050505084610c67575b60015f516020611a455f395f51905f5255005b600154610c8090869086906001600160a01b0316611414565b60405194855260606020860181905285018290526001600160fb1b0382116101205760a09160051b80916080870137840160808101926080868303016040870152518093520193905f5b818110610d11575050506001600160a01b0316917fb9df54cb8716695fe6cd84e5e4b88eca0d9c862970bcd45797aabb77d71b48ee919081900390a2808080808080610c54565b8251865260209586019590920191600101610cca565b909192939499610d388b89896114da565b359a610d4481866114ea565b519b610d518289896114da565b359085831015610f05578260051b850135601e1986360301811215610120578501916001600160401b0383351161012057823560051b36036020840113610120578e156109985760018060a01b036003541692604051633cd9324360e21b8152836004820152826024820152602081604481885afa9081156101b3575f91610ee7575b5061096a57808f836020610dec943593019186611557565b1561095b57610e268f826020916040519384928392635ea05ef360e11b845288600485016040919493926060820195825260208201520152565b0381875afa9081156101b3575f91610ec9575b501561092d57823b156101205760405163762ba3ff60e11b81526004810192909252602482018f90526044820152905f908290606490829084905af180156101b357610eb9575b508b8201809211610ea5576001919b610e99828c6114ea565b52019493929190610c41565b634e487b7160e01b5f52601160045260245ffd5b5f610ec391611286565b8d610e80565b610ee1915060203d81116101ac5761019e8183611286565b5f610e39565b610eff915060203d81116101ac5761019e8183611286565b5f610dd4565b634e487b7160e01b5f52603260045260245ffd5b632c635df560e11b5f5260045ffd5b5084821415610c04565b14159050828a610bfb565b8135815260209182019101610be2565b632a8677b560e21b5f5260045ffd5b3461012057602036600319011261012057610f75611240565b610f7d6113c1565b6001600160a01b038116908115611037576001546040516370a0823160e01b815230600482015291906001600160a01b0316602083602481845afa9283156101b3575f93610fff575b5091610ff6816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b95611414565b604051908152a2005b9250906020833d60201161102f575b8161101b60209383611286565b810103126101205791519190610ff6610fc6565b3d915061100e565b634261081360e11b5f5260045ffd5b346101205760203660031901126101205760035460405163429c6e5b60e01b8152600480359082015290602090829060249082906001600160a01b03165afa80156101b3575f9061109d575b602090604051908152f35b506020813d6020116110c8575b816110b760209383611286565b810103126101205760209051611092565b3d91506110aa565b34610120575f366003190112610120576020600554604051908152f35b34610120575f366003190112610120576020600254604051908152f35b34610120575f3660031901126101205760045442101580611133575b6020906040519015158152f35b50600554421115611126565b34610120575f366003190112610120576003546040516001600160a01b039091168152602090f35b34610120575f366003190112610120575f905f5491611185836112a7565b80835260208301936001811690811561122557506001146111dc575b50906111b1816040930382611286565b8151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b5f8080525f516020611a255f395f51905f52939250905b80821061120b575090915081016020016111b16111a1565b9192600181602092548385880101520191019092916111f3565b60ff1916855250151560051b820160200190506111b16111a1565b600435906001600160a01b038216820361012057565b9181601f84011215610120578235916001600160401b038311610120576020808501948460051b01011161012057565b90601f801991011681019081106001600160401b0382111761063457604052565b90600182811c921680156112d5575b60208310146112c157565b634e487b7160e01b5f52602260045260245ffd5b91607f16916112b6565b6001600160401b0381116106345760051b60200190565b91908203918211610ea557565b6004548042105f1461131d5761131a9042906112f6565b90565b506005544281106113335761131a9042906112f6565b505f90565b6001600160a01b03168015611396575f516020611a055f395f51905f5280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b631e4fbdf760e01b5f525f60045260245ffd5b90816020910312610120575180151581036101205790565b5f516020611a055f395f51905f52546001600160a01b03908116906113e46114fe565b16036113ec57565b6113f46114fe565b63118cdaa760e01b5f9081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f91611452606482611286565b519082855af1156101b3575f513d61149957506001600160a01b0381163b155b6114795750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415611472565b60025f516020611a455f395f51905f5254146114cb5760025f516020611a455f395f51905f5255565b633ee5aeb560e01b5f5260045ffd5b9190811015610f055760051b0190565b8051821015610f055760209160051b010190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061154c575b15611548576013193601368111610ea5573560601c90565b3390565b506014361015611530565b9194929394604051916020830193845260018060a01b03166040830152606082015260608152611588608082611286565b51902060405160208101918252602081526115a4604082611286565b519020600254926115b4856112df565b946115c26040519687611286565b808652602086019060051b82019136831161012057905b82821061163157505050905f915b8451831015611629576115fa83866114ea565b519081811015611618575f52602052600160405f205b9201916115e7565b905f52602052600160405f20611610565b915092501490565b81358152602091820191016115d9565b60ff5f516020611a655f395f51905f525460401c161561165d57565b631afcd79f60e31b5f5260045ffdfe60803460b857601f61039838819003918201601f19168301916001600160401b0383118484101760bc5780849260209460405283398101031260b857516001600160a01b0381169081900360b857801560a5575f80546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36102c790816100d18239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c908163429c6e5b1461023357508063715018a6146101dc5780638da5cb5b146101b5578063bd40bde614610186578063ec5747fe14610125578063f2fde38b1461009c5763f364c90c14610069575f80fd5b34610098576040366003190112610098576004355f526001602052602060243560405f20541015604051908152f35b5f80fd5b34610098576020366003190112610098576004356001600160a01b03811690819003610098576100ca610294565b8015610112575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100985760407f08401774913e94f43659333293c99fdfdea868c488d679967e054abc8b5ae83461015636610259565b610161949294610294565b845f526001602052825f20610177838254610273565b905582519182526020820152a2005b346100985760206101ab61019936610259565b92915f526001845260405f2054610273565b1115604051908152f35b34610098575f366003190112610098575f546040516001600160a01b039091168152602090f35b34610098575f366003190112610098576101f4610294565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610098576020366003190112610098576020906004355f526001825260405f20548152f35b606090600319011261009857600435906024359060443590565b9190820180921161028057565b634e487b7160e01b5f52601160045260245ffd5b5f546001600160a01b031633036102a757565b63118cdaa760e01b5f523360045260245ffdfea164736f6c634300081c000a9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "1796:5517:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;8274:13:0;1796:5517:14;;;-1:-1:-1;;;8274:43:0;;1796:5517:14;;;8274:43:0;;;1796:5517:14;;;;;;;;;;;;;8274:43:0;;1796:5517:14;;-1:-1:-1;;;;;1796:5517:14;8274:43:0;;;;;;1796:5517:14;8274:43:0;1796:5517:14;8274:43:0;;;1796:5517:14;;;;;;;;;;8274:43:0;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1796:5517:14;;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;2357:1:240;1796:5517:14;;:::i;:::-;2303:62:240;;:::i;:::-;2357:1;:::i;:::-;1796:5517:14;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;;;;;4301:16:243;1796:5517:14;-1:-1:-1;;;;;1796:5517:14;;4724:16:243;;:34;;;;1796:5517:14;;4788:16:243;:50;;;;1796:5517:14;4853:13:243;:30;;;;1796:5517:14;4849:91:243;;;-1:-1:-1;;1796:5517:14;;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;4977:67:243;;1796:5517:14;3971:15;;3958:28;;3954:59;;4027:22;;;;4023:51;;1796:5517;;4174:40;;;;;;;;-1:-1:-1;;;;;4174:40:14;;;;;1796:5517;4174:40;;;;;;4208:4;1796:5517;;4174:40;;;1796:5517;4174:40;;;;;-1:-1:-1;;;;;1796:5517:14;;6891:76:243;;:::i;:::-;1796:5517:14;;5937:24:0;5933:57;;6004:20;;6000:54;;6068:19;;6064:51;;6129:27;;6125:68;;1796:5517:14;;-1:-1:-1;;;6312:28:0;;1796:5517:14;;;;6312:28:0;;;;;;;1796:5517:14;-1:-1:-1;6308:175:0;;6033:21;;;1796:5517:14;6451:21:0;1796:5517:14;;6451:21:0;6308:175;1796:5517:14;;-1:-1:-1;;;6630:47:0;;1796:5517:14;;6630:47:0;;1796:5517:14;;;;;;;;;;;6630:47:0;;;;;;;6308:175;-1:-1:-1;6626:208:0;;6165:28;;;1796:5517:14;6795:28:0;1796:5517:14;;6795:28:0;6626:208;6959:1:243;6626:208:0;6891:76:243;;:::i;:::-;;;:::i;6959:1::-;1796:5517:14;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;:::i;:::-;;;;;;6626:208:0;1796:5517:14;;;;;;;;;;;;4486:35;1796:5517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6933:19:0;1796:5517:14;;;;6962:47:0;1796:5517:14;;;6962:47:0;1796:5517:14;6891:76:243;;:::i;:::-;;;:::i;:::-;1796:5517:14;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;;;4451:19;1796:5517;;;;;;;;;;4486:35;5064:101:243;;1796:5517:14;5064:101:243;1796:5517:14;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;-1:-1:-1;;;;;;;;;;;1796:5517:14;5140:14:243;1796:5517:14;;;;;;5140:14:243;1796:5517:14;;;;;-1:-1:-1;1796:5517:14;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;;;;;;;;;;;;;;;;4486:35;1796:5517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;-1:-1:-1;1796:5517:14;;;;;;;;;;;;;;6630:47:0;;;1796:5517:14;6630:47:0;1796:5517:14;6630:47:0;;;;;;;:::i;:::-;;;6312:28;1796:5517:14;6312:28:0;;1796:5517:14;6312:28:0;;;;;;1796:5517:14;6312:28:0;;;:::i;:::-;;;1796:5517:14;;;;;6312:28:0;;;;;-1:-1:-1;6312:28:0;;6125:68;6165:28;;;1796:5517:14;6165:28:0;1796:5517:14;;6165:28:0;6064:51;6096:19;;;1796:5517:14;6096:19:0;1796:5517:14;;6096:19:0;6000:54;6033:21;;;1796:5517:14;6033:21:0;1796:5517:14;;6033:21:0;5933:57;5970:20;;;1796:5517:14;5970:20:0;1796:5517:14;;5970:20:0;4023:51:14;4058:16;;;1796:5517;4058:16;1796:5517;;4058:16;3954:59;3995:18;;;1796:5517;3995:18;1796:5517;;3995:18;4977:67:243;-1:-1:-1;;1796:5517:14;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;4977:67:243;;;4849:91;4906:23;;;1796:5517:14;4906:23:243;1796:5517:14;;4906:23:243;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:243;;4724:34;;;-1:-1:-1;4724:34:243;;1796:5517:14;;;;;;-1:-1:-1;;1796:5517:14;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;;2817:3:0;1796:5517:14;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;:::i;:::-;;;;;2427:15;:28;2423:60;;2515:8;1796:5517;2427:15;2497:26;2493:53;;3361:103:250;;:::i;:::-;15245:38:0;;:::i;:::-;11777:16;;;11773:46;;1796:5517:14;;;;;11876:13:0;1796:5517:14;;;;;;;;11876:43:0;;;1796:5517:14;11876:43:0;;1796:5517:14;;;;;;;11876:43:0;1796:5517:14;11876:43:0;;;;;;;;;1796:5517:14;11876:43:0;;;1796:5517:14;11872:77:0;;;11996:60;;;;;;:::i;:::-;11995:61;11991:119;;1796:5517:14;;-1:-1:-1;;;12175:65:0;;1796:5517:14;12175:65:0;;1796:5517:14;;;;;;;;;;;;;;;;;;;12175:65:0;;;;;;;;1796:5517:14;12175:65:0;;;1796:5517:14;12174:66:0;;12170:124;;12332:58;;;;;1796:5517:14;;-1:-1:-1;;;12332:58:0;;1796:5517:14;12332:58:0;;1796:5517:14;;;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;-1:-1:-1;;12332:58:0;;;;;;;12484:36;12332:58;1796:5517:14;12332:58:0;;;1796:5517:14;-1:-1:-1;1796:5517:14;;12457:11:0;;1796:5517:14;;;;-1:-1:-1;;;;;1796:5517:14;12457:11:0;:::i;:::-;1796:5517:14;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;12484:36:0;1796:5517:14;-1:-1:-1;;;;;;;;;;;1796:5517:14;;12332:58:0;1796:5517:14;12332:58:0;;;:::i;:::-;;;;12170:124;14440:20;;;1796:5517:14;12263:20:0;1796:5517:14;;12263:20:0;12175:65;;;;1796:5517:14;12175:65:0;1796:5517:14;12175:65:0;;;;;;;:::i;:::-;;;;11991:119;14240:20;;;1796:5517:14;12079:20:0;1796:5517:14;;12079:20:0;11872:77;14077:21;;;1796:5517:14;11928:21:0;1796:5517:14;;11928:21:0;11876:43;;;;1796:5517:14;11876:43:0;1796:5517:14;11876:43:0;;;;;;;:::i;:::-;;;;11773:46;13943:17;;;1796:5517:14;11802:17:0;1796:5517:14;;11802:17:0;2493:53:14;2532:14;;;1796:5517;2532:14;1796:5517;;2532:14;2423:60;2464:19;;;1796:5517;2464:19;1796:5517;;2464:19;1796:5517;;;;;;-1:-1:-1;;1796:5517:14;;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;1830:17:242;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;2303:62:240;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1796:5517:14;;-1:-1:-1;;;;;;1796:5517:14;;;;;;;-1:-1:-1;;;;;1796:5517:14;3975:40:240;1796:5517:14;;3975:40:240;1796:5517:14;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;;:::i;:::-;;;1830:17:242;-1:-1:-1;;;;;1796:5517:14;;;;;2054:31:242;;;;1796:5517:14;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;:::i;:::-;;;;;;2427:15;:28;2423:60;;2515:8;1796:5517;2427:15;2497:26;2493:53;;3361:103:250;;:::i;:::-;2817:3:0;3044:26;;3040:87;;15245:38;;:::i;:::-;1796:5517:14;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2515:8;1796:5517;;;;;;;;;;;;;;;;;3040:87:0;;;1796:5517:14;;13318:37:0;;;;;;;:83;;;1796:5517:14;13318:145:0;;;;;;1796:5517:14;13301:231:0;;13542:20;;;;1796:5517:14;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1796:5517:14;;;;;13650:1035:0;13670:18;;;;;;14699:20;;;;;;;14695:184;;13650:1035;1796:5517:14;-1:-1:-1;;;;;;;;;;;1796:5517:14;;14695:184:0;1796:5517:14;;14764:16:0;;1796:5517:14;;;;-1:-1:-1;;;;;1796:5517:14;14764:16:0;:::i;:::-;1796:5517:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;2515:8;1796:5517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1796:5517:14;;14800:68:0;;;;;;;;14695:184;;;;;;;;1796:5517:14;;;;;;;;;;;;;;;;;;13690:3:0;13725:10;;;;;;;;;;;:::i;:::-;1796:5517:14;13771:15:0;;;;;:::i;:::-;1796:5517:14;13822:15:0;;;;;;:::i;:::-;1796:5517:14;;;;;;;;;2515:8;1796:5517;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;2515:8;1796:5517;;;;;;;;;13918:16:0;;13914:46;;1796:5517:14;;;;;14025:13:0;1796:5517:14;;;;;;;;14025:43:0;;;1796:5517:14;14025:43:0;;1796:5517:14;;;;;;;14025:43:0;1796:5517:14;14025:43:0;;;;;;;;;1796:5517:14;14025:43:0;;;13690:3;14021:77;;;1796:5517:14;;;;14153:60:0;1796:5517:14;;;;14153:60:0;;;:::i;:::-;14152:61;14148:127;;14348:65;1796:5517:14;;;;;;;;;;;;;;14348:65:0;;;1796:5517:14;14348:65:0;;1796:5517:14;;;;;;;;;;;;;;;;;;14348:65:0;;;;;;;;;;;1796:5517:14;14348:65:0;;;13690:3;14347:66;;14343:132;;14521:58;;;;;1796:5517:14;;-1:-1:-1;;;14521:58:0;;1796:5517:14;14521:58:0;;1796:5517:14;;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;-1:-1:-1;;14521:58:0;;;;;;;;13690:3;1796:5517:14;;;;;;;;;;14594:31:0;14639:35;;;;;:::i;:::-;1796:5517:14;;13655:13:0;;;;;;;1796:5517:14;;;;;;;;;;;;14521:58:0;1796:5517:14;14521:58:0;;;:::i;:::-;;;;14348:65;;;;1796:5517:14;14348:65:0;;;;;;;;;:::i;:::-;;;;14025:43;;;;1796:5517:14;14025:43:0;;;;;;;;;:::i;:::-;;;;1796:5517:14;;;;;;;;;;;;13301:231:0;13495:26;;;1796:5517:14;13495:26:0;1796:5517:14;;13495:26:0;13318:145;13421:42;;;;;13318:145;;:83;13359:42;;;-1:-1:-1;13318:83:0;;;;1796:5517:14;;;;;;;;;;;;;3040:87:0;3093:23;;;1796:5517:14;3093:23:0;1796:5517:14;;3093:23:0;1796:5517:14;;;;;;-1:-1:-1;;1796:5517:14;;;;;;:::i;:::-;2303:62:240;;:::i;:::-;-1:-1:-1;;;;;1796:5517:14;;;10057:16:0;;10053:55;;1796:5517:14;;;;-1:-1:-1;;;10136:31:0;;10161:4;1796:5517:14;10136:31:0;;1796:5517:14;;;-1:-1:-1;;;;;1796:5517:14;;;10136:31:0;1796:5517:14;;10136:31:0;;;;;;;1796:5517:14;10136:31:0;;;1796:5517:14;10201:7:0;;;;1796:5517:14;10201:7:0;10224:28;10201:7;;:::i;:::-;1796:5517:14;;;;;10224:28:0;1796:5517:14;10136:31:0;;;;1796:5517:14;10136:31:0;;1796:5517:14;10136:31:0;;;;;;1796:5517:14;10136:31:0;;;:::i;:::-;;;1796:5517:14;;;;;;;10136:31:0;10201:7;10136:31;;;;;-1:-1:-1;10136:31:0;;10053:55;10082:26;;;1796:5517:14;10082:26:0;1796:5517:14;;10082:26:0;1796:5517:14;;;;;;-1:-1:-1;;1796:5517:14;;;;8602:13:0;1796:5517:14;;;-1:-1:-1;;;8602:37:0;;1796:5517:14;;;8602:37:0;;;1796:5517:14;;;;;;8602:37:0;;1796:5517:14;;-1:-1:-1;;;;;1796:5517:14;8602:37:0;;;;;;1796:5517:14;8602:37:0;;;1796:5517:14;;;;;;;;;8602:37:0;;1796:5517:14;8602:37:0;;1796:5517:14;8602:37:0;;;;;;1796:5517:14;8602:37:0;;;:::i;:::-;;;1796:5517:14;;;;;;;8602:37:0;;;;;-1:-1:-1;8602:37:0;;1796:5517:14;;;;;;-1:-1:-1;;1796:5517:14;;;;;4969:8;1796:5517;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;7655:11:0;1796:5517:14;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;5223:15;:29;;:60;;;1796:5517;;;;;;;;;;;5223:60;-1:-1:-1;5275:8:14;1796:5517;5223:15;5256:27;;5223:60;;1796:5517;;;;;;-1:-1:-1;;1796:5517:14;;;;7857:13:0;1796:5517:14;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;-1:-1:-1;1796:5517:14;;;;;;;-1:-1:-1;1796:5517:14;;-1:-1:-1;1796:5517:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1796:5517:14;;;-1:-1:-1;1796:5517:14;;;;;;;;;-1:-1:-1;1796:5517:14;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;5477:320::-;5583:10;1796:5517;5565:15;;:28;5561:230;5565:28;;;5616;5565:15;;5616:28;;:::i;:::-;5609:35;:::o;5561:230::-;-1:-1:-1;5684:8:14;1796:5517;5565:15;5665:27;-1:-1:-1;5665:27:14;;5715:26;5565:15;;5715:26;;:::i;5661:130::-;5772:8;1796:5517;5772:8;:::o;3405:215:240:-;-1:-1:-1;;;;;1796:5517:14;3489:22:240;;3485:91;;-1:-1:-1;;;;;;;;;;;1796:5517:14;;-1:-1:-1;;;;;;1796:5517:14;;;;;;;-1:-1:-1;;;;;1796:5517:14;3975:40:240;-1:-1:-1;;3975:40:240;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;1796:5517:14;;3509:1:240;3534:31;1796:5517:14;;;;;;;;;;;;;;;;;;:::o;2658:162:240:-;-1:-1:-1;;;;;;;;;;;1796:5517:14;-1:-1:-1;;;;;1796:5517:14;;;;15245:38:0;;:::i;:::-;1796:5517:14;2717:23:240;2713:101;;2658:162::o;2713:101::-;15245:38:0;;:::i;:::-;-1:-1:-1;;;;2763:40:240;;;-1:-1:-1;;;;;1796:5517:14;;;;2763:40:240;1796:5517:14;;;2763:40:240;1219:160:211;1796:5517:14;;-1:-1:-1;;;1328:43:211;;;;;;;-1:-1:-1;;;;;1796:5517:14;;;1328:43:211;;;1796:5517:14;;;;;;;;;1328:43:211;;;1219:160;;-1:-1:-1;;1328:43:211;;1796:5517:14;1328:43:211;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:211;;8942:15;;-1:-1:-1;;;;;;1796:5517:14;;8960:26:211;:31;8942:68;8938:146;;1219:160;:::o;8938:146::-;-1:-1:-1;;;;9033:40:211;;;-1:-1:-1;;;;;1796:5517:14;;;;9033:40:211;1796:5517:14;1328:43:211;;9033:40;8942:68;9009:1;8994:16;;8942:68;;3470:384:250;1991:1;-1:-1:-1;;;;;;;;;;;1796:5517:14;3670:20:250;3666:88;;1991:1;-1:-1:-1;;;;;;;;;;;1796:5517:14;3470:384:250:o;3666:88::-;3713:30;;;-1:-1:-1;3713:30:250;;-1:-1:-1;3713:30:250;1796:5517:14;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;2329:429:242:-;2545:10;1830:17;-1:-1:-1;;;;;1796:5517:14;2054:31:242;;2526:71;;2329:429;2522:230;;;1796:5517:14;;2435:8:242;1796:5517:14;2435:8:242;1796:5517:14;;;;;;;;2613:72:242:o;2522:230::-;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;;10765:461:0;;;;;;1796:5517:14;;11110:39:0;;;;1796:5517:14;;;;;;;;;;;;;;;;;;11110:39:0;;;;;;:::i;:::-;1796:5517:14;11100:50:0;;1796:5517:14;;11110:39:0;11089:62;;1796:5517:14;;;11110:39:0;11089:62;;;1796:5517:14;11089:62:0;;:::i;:::-;1796:5517:14;11079:73:0;;11201:11;1796:5517:14;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;11110:39:0;1796:5517:14;;;;;;;;;;;;;;;;;;;;2559:27:229;;;2601:13;-1:-1:-1;2596:134:229;2634:3;1796:5517:14;;2616:16:229;;;;;2710:8;;;;:::i;:::-;1796:5517:14;;605:5:228;;;;;;-1:-1:-1;889:135:228;11110:39:0;889:135:228;1796:5517:14;;-1:-1:-1;889:135:228;605:59;2634:3:229;1796:5517:14;2601:13:229;;;605:59:228;889:135;-1:-1:-1;889:135:228;11110:39:0;889:135:228;1796:5517:14;;-1:-1:-1;889:135:228;605:59;;2616:16:229;;;;;2016:33;10765:461:0;:::o;1796:5517:14:-;;;;;11110:39:0;1796:5517:14;;;;;;;7082:141:243;1796:5517:14;-1:-1:-1;;;;;;;;;;;1796:5517:14;;;;7148:18:243;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:243;;-1:-1:-1;7189:17:243",
    "linkReferences": {},
    "immutableReferences": {
      "58779": [
        {
          "start": 2574,
          "length": 32
        },
        {
          "start": 2785,
          "length": 32
        },
        {
          "start": 5377,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_BATCH_SIZE()": "cfdbf254",
    "batchClaim(uint256[],uint256[],bytes32[][])": "4be7adee",
    "claim(uint256,uint256,bytes32[])": "ae0b51df",
    "claimTracker()": "222abc11",
    "endTime()": "3197cbb6",
    "getClaimedAmount(uint256)": "429c6e5b",
    "getTimeRemaining()": "dac6270d",
    "initialize(string,address,bytes32,address,uint256,uint256)": "ed0ea232",
    "isActive()": "22f3e2d4",
    "isClaimed(uint256,uint256)": "f364c90c",
    "isTrustedForwarder(address)": "572b6c05",
    "merkleRoot()": "2eb4a7ab",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "startTime()": "78e97925",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b",
    "trustedForwarder()": "7da0a877",
    "withdrawTokens(address)": "49df728c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AirdropEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AirdropNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BatchSizeExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAirdropName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimTrackerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInputArrayLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStartTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWithdrawalAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroClaimAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"TimeWindowSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"totalAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTracker\",\"outputs\":[{\"internalType\":\"contract IATKClaimTracker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getClaimedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeRemaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This contract implements a time-restricted claim system where:      - Claims can only be made within a specified time window (startTime to endTime)      - Users can claim their full allocation or partial amounts      - Uses Merkle proof verification for secure claim validation      - Tracks claimed amounts using ATKAmountClaimTracker for partial claims support      - Supports both single and batch claims      - Extends ATKAirdrop base functionality with time constraints      The contract is designed for standard airdrops where all users can claim during the active period.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"BatchClaimed(address,uint256,uint256[],uint256[])\":{\"params\":{\"amounts\":\"The amounts claimed for each index.\",\"claimant\":\"The address that claimed the tokens.\",\"indices\":\"The indices of the claims in the Merkle tree.\",\"totalAmount\":\"The total amount of tokens claimed in the batch.\"}},\"Claimed(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens claimed.\",\"claimant\":\"The address that claimed the tokens.\",\"index\":\"The index of the claim in the Merkle tree.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TimeWindowSet(uint256,uint256)\":{\"params\":{\"endTime\":\"The timestamp when claims end.\",\"startTime\":\"The timestamp when claims can begin.\"}},\"TokensWithdrawn(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens withdrawn.\",\"to\":\"The address receiving the withdrawn tokens.\"}}},\"kind\":\"dev\",\"methods\":{\"batchClaim(uint256[],uint256[],bytes32[][])\":{\"details\":\"Batch version for gas efficiency. Uses onlyActive modifier for time validation.\",\"params\":{\"indices\":\"The indices of the claims in the Merkle tree.\",\"merkleProofs\":\"The Merkle proof arrays for verification of each claim.\",\"totalAmounts\":\"The total amounts allocated for each index.\"}},\"claim(uint256,uint256,bytes32[])\":{\"details\":\"Validates time constraints, Merkle proof, and processes claims.\",\"params\":{\"index\":\"The index of the claim in the Merkle tree.\",\"merkleProof\":\"The Merkle proof array for verification.\",\"totalAmount\":\"The total amount allocated for this index.\"}},\"claimTracker()\":{\"returns\":{\"_0\":\"The claim tracker contract.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"params\":{\"forwarder_\":\"The address of the forwarder contract.\"}},\"endTime()\":{\"returns\":{\"_0\":\"The timestamp when claims end.\"}},\"getClaimedAmount(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"claimedAmount The amount already claimed for this index.\"}},\"getTimeRemaining()\":{\"returns\":{\"timeRemaining\":\"The number of seconds remaining, 0 if ended.\"}},\"initialize(string,address,bytes32,address,uint256,uint256)\":{\"details\":\"Sets up the base airdrop functionality and time-bound specific parameters.      Deploys its own amount claim tracker for partial claims support.\",\"params\":{\"endTime_\":\"The timestamp when claims end.\",\"name_\":\"The human-readable name for this airdrop.\",\"owner_\":\"The initial owner of the contract.\",\"root_\":\"The Merkle root for verifying claims.\",\"startTime_\":\"The timestamp when claims can begin.\",\"token_\":\"The address of the ERC20 token to be distributed.\"}},\"isActive()\":{\"returns\":{\"active\":\"True if the current time is within the claim window.\"}},\"isClaimed(uint256,uint256)\":{\"params\":{\"index\":\"The index to check in the Merkle tree.\",\"totalAmount\":\"The total amount allocated for this index.\"},\"returns\":{\"_0\":\"claimed True if the index has been fully claimed, false otherwise.\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"merkleRoot()\":{\"returns\":{\"_0\":\"The Merkle root for verifying airdrop claims.\"}},\"name()\":{\"returns\":{\"_0\":\"The human-readable name of the airdrop.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startTime()\":{\"returns\":{\"_0\":\"The timestamp when claims can begin.\"}},\"token()\":{\"returns\":{\"_0\":\"The ERC20 token being distributed.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"withdrawTokens(address)\":{\"params\":{\"to\":\"The address to send the withdrawn tokens to.\"}}},\"stateVariables\":{\"_endTime\":{\"details\":\"Claims cannot be made after this time.\"},\"_startTime\":{\"details\":\"Claims cannot be made before this time.\"}},\"title\":\"ATK Time-Bound Airdrop Implementation\",\"version\":1},\"userdoc\":{\"errors\":{\"AirdropEnded()\":[{\"notice\":\"Thrown when attempting to claim after the airdrop has ended.\"}],\"AirdropNotStarted()\":[{\"notice\":\"Thrown when attempting to claim before the airdrop has started.\"}],\"BatchSizeExceedsLimit()\":[{\"notice\":\"Error indicating that the batch size exceeds the maximum allowed limit.\"}],\"IndexAlreadyClaimed()\":[{\"notice\":\"Error indicating that a claim is attempted for an index that has already been claimed.\"}],\"InvalidAirdropName()\":[{\"notice\":\"Thrown when the airdrop name is empty or invalid.\"}],\"InvalidClaimAmount()\":[{\"notice\":\"Error indicating that the claim amount exceeds the total allocated amount for the index.\"}],\"InvalidClaimTrackerAddress()\":[{\"notice\":\"Error indicating that an invalid claim tracker address was provided.\"}],\"InvalidEndTime()\":[{\"notice\":\"Thrown when the provided end time is invalid (e.g., before start time).\"}],\"InvalidInputArrayLengths()\":[{\"notice\":\"Error indicating that input array lengths do not match in batch operations.\"}],\"InvalidMerkleProof()\":[{\"notice\":\"Error indicating that a provided Merkle proof is invalid for the claim parameters.\"}],\"InvalidMerkleRoot()\":[{\"notice\":\"Error indicating that a provided Merkle root is invalid.\"}],\"InvalidStartTime()\":[{\"notice\":\"Thrown when the provided start time is invalid (e.g., in the past).\"}],\"InvalidTokenAddress()\":[{\"notice\":\"Error indicating that an invalid token address was provided.\"}],\"InvalidWithdrawalAddress()\":[{\"notice\":\"Error indicating that an invalid withdrawal address was provided.\"}],\"ZeroClaimAmount()\":[{\"notice\":\"Error indicating that the claim amount is zero.\"}]},\"events\":{\"BatchClaimed(address,uint256,uint256[],uint256[])\":{\"notice\":\"Emitted when a user claims multiple allocations in a single transaction.\"},\"Claimed(address,uint256,uint256)\":{\"notice\":\"Emitted when a user successfully claims their airdrop allocation.\"},\"TimeWindowSet(uint256,uint256)\":{\"notice\":\"Emitted when the time window for the airdrop is set or updated.\"},\"TokensWithdrawn(address,uint256)\":{\"notice\":\"Emitted when the contract owner withdraws unclaimed tokens.\"}},\"kind\":\"user\",\"methods\":{\"MAX_BATCH_SIZE()\":{\"notice\":\"Maximum number of items allowed in batch operations to prevent OOM and gas limit issues.\"},\"batchClaim(uint256[],uint256[],bytes32[][])\":{\"notice\":\"Claims multiple airdrop allocations for the caller in a single transaction.\"},\"claim(uint256,uint256,bytes32[])\":{\"notice\":\"Claims an airdrop allocation for the caller within the time window.\"},\"claimTracker()\":{\"notice\":\"Returns the claim tracker contract.\"},\"endTime()\":{\"notice\":\"Returns the end time when claims are no longer available.\"},\"getClaimedAmount(uint256)\":{\"notice\":\"Gets the amount already claimed for a specific index.\"},\"getTimeRemaining()\":{\"notice\":\"Returns the time remaining until the airdrop starts (if not started) or ends (if active).\"},\"initialize(string,address,bytes32,address,uint256,uint256)\":{\"notice\":\"Initializes the time-bound airdrop contract with specified parameters.\"},\"isActive()\":{\"notice\":\"Checks if the airdrop is currently active (within the time window).\"},\"isClaimed(uint256,uint256)\":{\"notice\":\"Checks if a claim has been fully claimed for a specific index.\"},\"merkleRoot()\":{\"notice\":\"Returns the Merkle root for verifying airdrop claims.\"},\"name()\":{\"notice\":\"Returns the name of this airdrop.\"},\"startTime()\":{\"notice\":\"Returns the start time when claims become available.\"},\"token()\":{\"notice\":\"Returns the token being distributed in this airdrop.\"},\"withdrawTokens(address)\":{\"notice\":\"Allows the owner to withdraw any tokens remaining in the contract.\"}},\"notice\":\"Implementation of a time-bound airdrop contract where claims are restricted to a specific time window in the ATK Protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/airdrop/time-bound-airdrop/ATKTimeBoundAirdropImplementation.sol\":\"ATKTimeBoundAirdropImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/addons/airdrop/ATKAirdrop.sol\":{\"keccak256\":\"0xe38f2fbfe2c20bb38691181c91b1d61ae5049df58be7d118d45ee19e419406b8\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://23c96dcd63f23429890d5d7ca9243a5e7a0f479c16a764f37ece22b149d70c7f\",\"dweb:/ipfs/QmPDpZ65CHjuJUM2TEW4AcLWbK24M17kYqz1roD67Tqv1e\"]},\"contracts/addons/airdrop/ATKAirdropErrors.sol\":{\"keccak256\":\"0xce9f93552d1244b7a52bd97e887ff15fac1063bc9785f3697c6b47d368462fad\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://bae1c61355103bc43c257cd9ac37407b0c3f6f3badbca7cdb928f0c6c4c2c478\",\"dweb:/ipfs/QmaSiPbSpNvX4uDG1pJsQmhXwbEDZLBzkcSA8ZzqSRqRby\"]},\"contracts/addons/airdrop/IATKAirdrop.sol\":{\"keccak256\":\"0x5556406001ca17a94dfeb60a9db57417b262020690af11bf58dc5893085b7297\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f426858498d7594fdc8ec019332bb69689c5d6db8f6b5ee4c51b81d5fd3c2d13\",\"dweb:/ipfs/QmbA7Bc5JRPXn47hAHq9nWQo9LR5EDk18savmyxr5nqiSh\"]},\"contracts/addons/airdrop/claim-tracker/ATKAmountClaimTracker.sol\":{\"keccak256\":\"0x4a59b468381db957bfe7f8a694f2bf8ae7c61548766d449d84551682a13c13d9\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://d018ee8c5fef07cbdbdf9feff62b7a738786020b4501601e4d7bf70b330f7209\",\"dweb:/ipfs/QmPZJ56q8gYGX6WRBR3CnaRUmWemVVqmKQaEg9RFpLcT7X\"]},\"contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol\":{\"keccak256\":\"0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f\",\"dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne\"]},\"contracts/addons/airdrop/time-bound-airdrop/ATKTimeBoundAirdropErrors.sol\":{\"keccak256\":\"0xcd508a26e8fc31170fb906a2acc45ae1d1a2c71e3ea53050854e9891ff3d76cf\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://2c6bff83a19dda02eb5fd9b445ce6cfa018008e9ed50e552d1e2a1485fb007c9\",\"dweb:/ipfs/QmZHp1rcH4hBVHs4qFcFdbEot7NGbgoKPhitbmzQiETRHi\"]},\"contracts/addons/airdrop/time-bound-airdrop/ATKTimeBoundAirdropImplementation.sol\":{\"keccak256\":\"0x398a07c09bf2fba84cfc375561646db26fbeae89822cbefa25d3e866474d0e1d\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://b50f5ad592c9397aa9c63d40270573506acb341850ff70fe467dc869b83b6bcf\",\"dweb:/ipfs/QmNTACRrdsTi9ELixyKqywkrtHa4B3Exh4GNhGiFV9Xa6P\"]},\"contracts/addons/airdrop/time-bound-airdrop/IATKTimeBoundAirdrop.sol\":{\"keccak256\":\"0x304354b3b7b1208f1f71c0ca677c4aec61fc6f67e956aae00a98443dd46d5891\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://15b76e5dbaf8d12323393e15cc59a74458d4850feebe74228a91dd8f6b8bdf81\",\"dweb:/ipfs/QmXahQLS6coAtJQmFWzDv92j9ePutqzuPjzfAPEVH8iXW3\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AirdropEnded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AirdropNotStarted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BatchSizeExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexAlreadyClaimed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAirdropName"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaimAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaimTrackerAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEndTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInputArrayLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMerkleProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMerkleRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidStartTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTokenAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWithdrawalAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroClaimAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TimeWindowSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BATCH_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "totalAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "merkleProofs",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimTracker",
          "outputs": [
            {
              "internalType": "contract IATKClaimTracker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "endTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeRemaining",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "timeRemaining",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "root_",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "startTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchClaim(uint256[],uint256[],bytes32[][])": {
            "details": "Batch version for gas efficiency. Uses onlyActive modifier for time validation.",
            "params": {
              "indices": "The indices of the claims in the Merkle tree.",
              "merkleProofs": "The Merkle proof arrays for verification of each claim.",
              "totalAmounts": "The total amounts allocated for each index."
            }
          },
          "claim(uint256,uint256,bytes32[])": {
            "details": "Validates time constraints, Merkle proof, and processes claims.",
            "params": {
              "index": "The index of the claim in the Merkle tree.",
              "merkleProof": "The Merkle proof array for verification.",
              "totalAmount": "The total amount allocated for this index."
            }
          },
          "claimTracker()": {
            "returns": {
              "_0": "The claim tracker contract."
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor",
            "params": {
              "forwarder_": "The address of the forwarder contract."
            }
          },
          "endTime()": {
            "returns": {
              "_0": "The timestamp when claims end."
            }
          },
          "getClaimedAmount(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "claimedAmount The amount already claimed for this index."
            }
          },
          "getTimeRemaining()": {
            "returns": {
              "timeRemaining": "The number of seconds remaining, 0 if ended."
            }
          },
          "initialize(string,address,bytes32,address,uint256,uint256)": {
            "details": "Sets up the base airdrop functionality and time-bound specific parameters.      Deploys its own amount claim tracker for partial claims support.",
            "params": {
              "endTime_": "The timestamp when claims end.",
              "name_": "The human-readable name for this airdrop.",
              "owner_": "The initial owner of the contract.",
              "root_": "The Merkle root for verifying claims.",
              "startTime_": "The timestamp when claims can begin.",
              "token_": "The address of the ERC20 token to be distributed."
            }
          },
          "isActive()": {
            "returns": {
              "active": "True if the current time is within the claim window."
            }
          },
          "isClaimed(uint256,uint256)": {
            "params": {
              "index": "The index to check in the Merkle tree.",
              "totalAmount": "The total amount allocated for this index."
            },
            "returns": {
              "_0": "claimed True if the index has been fully claimed, false otherwise."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "merkleRoot()": {
            "returns": {
              "_0": "The Merkle root for verifying airdrop claims."
            }
          },
          "name()": {
            "returns": {
              "_0": "The human-readable name of the airdrop."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "startTime()": {
            "returns": {
              "_0": "The timestamp when claims can begin."
            }
          },
          "token()": {
            "returns": {
              "_0": "The ERC20 token being distributed."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          },
          "withdrawTokens(address)": {
            "params": {
              "to": "The address to send the withdrawn tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_BATCH_SIZE()": {
            "notice": "Maximum number of items allowed in batch operations to prevent OOM and gas limit issues."
          },
          "batchClaim(uint256[],uint256[],bytes32[][])": {
            "notice": "Claims multiple airdrop allocations for the caller in a single transaction."
          },
          "claim(uint256,uint256,bytes32[])": {
            "notice": "Claims an airdrop allocation for the caller within the time window."
          },
          "claimTracker()": {
            "notice": "Returns the claim tracker contract."
          },
          "endTime()": {
            "notice": "Returns the end time when claims are no longer available."
          },
          "getClaimedAmount(uint256)": {
            "notice": "Gets the amount already claimed for a specific index."
          },
          "getTimeRemaining()": {
            "notice": "Returns the time remaining until the airdrop starts (if not started) or ends (if active)."
          },
          "initialize(string,address,bytes32,address,uint256,uint256)": {
            "notice": "Initializes the time-bound airdrop contract with specified parameters."
          },
          "isActive()": {
            "notice": "Checks if the airdrop is currently active (within the time window)."
          },
          "isClaimed(uint256,uint256)": {
            "notice": "Checks if a claim has been fully claimed for a specific index."
          },
          "merkleRoot()": {
            "notice": "Returns the Merkle root for verifying airdrop claims."
          },
          "name()": {
            "notice": "Returns the name of this airdrop."
          },
          "startTime()": {
            "notice": "Returns the start time when claims become available."
          },
          "token()": {
            "notice": "Returns the token being distributed in this airdrop."
          },
          "withdrawTokens(address)": {
            "notice": "Allows the owner to withdraw any tokens remaining in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/addons/airdrop/time-bound-airdrop/ATKTimeBoundAirdropImplementation.sol": "ATKTimeBoundAirdropImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/addons/airdrop/ATKAirdrop.sol": {
        "keccak256": "0xe38f2fbfe2c20bb38691181c91b1d61ae5049df58be7d118d45ee19e419406b8",
        "urls": [
          "bzz-raw://23c96dcd63f23429890d5d7ca9243a5e7a0f479c16a764f37ece22b149d70c7f",
          "dweb:/ipfs/QmPDpZ65CHjuJUM2TEW4AcLWbK24M17kYqz1roD67Tqv1e"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/ATKAirdropErrors.sol": {
        "keccak256": "0xce9f93552d1244b7a52bd97e887ff15fac1063bc9785f3697c6b47d368462fad",
        "urls": [
          "bzz-raw://bae1c61355103bc43c257cd9ac37407b0c3f6f3badbca7cdb928f0c6c4c2c478",
          "dweb:/ipfs/QmaSiPbSpNvX4uDG1pJsQmhXwbEDZLBzkcSA8ZzqSRqRby"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/IATKAirdrop.sol": {
        "keccak256": "0x5556406001ca17a94dfeb60a9db57417b262020690af11bf58dc5893085b7297",
        "urls": [
          "bzz-raw://f426858498d7594fdc8ec019332bb69689c5d6db8f6b5ee4c51b81d5fd3c2d13",
          "dweb:/ipfs/QmbA7Bc5JRPXn47hAHq9nWQo9LR5EDk18savmyxr5nqiSh"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/ATKAmountClaimTracker.sol": {
        "keccak256": "0x4a59b468381db957bfe7f8a694f2bf8ae7c61548766d449d84551682a13c13d9",
        "urls": [
          "bzz-raw://d018ee8c5fef07cbdbdf9feff62b7a738786020b4501601e4d7bf70b330f7209",
          "dweb:/ipfs/QmPZJ56q8gYGX6WRBR3CnaRUmWemVVqmKQaEg9RFpLcT7X"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol": {
        "keccak256": "0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be",
        "urls": [
          "bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f",
          "dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/time-bound-airdrop/ATKTimeBoundAirdropErrors.sol": {
        "keccak256": "0xcd508a26e8fc31170fb906a2acc45ae1d1a2c71e3ea53050854e9891ff3d76cf",
        "urls": [
          "bzz-raw://2c6bff83a19dda02eb5fd9b445ce6cfa018008e9ed50e552d1e2a1485fb007c9",
          "dweb:/ipfs/QmZHp1rcH4hBVHs4qFcFdbEot7NGbgoKPhitbmzQiETRHi"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/time-bound-airdrop/ATKTimeBoundAirdropImplementation.sol": {
        "keccak256": "0x398a07c09bf2fba84cfc375561646db26fbeae89822cbefa25d3e866474d0e1d",
        "urls": [
          "bzz-raw://b50f5ad592c9397aa9c63d40270573506acb341850ff70fe467dc869b83b6bcf",
          "dweb:/ipfs/QmNTACRrdsTi9ELixyKqywkrtHa4B3Exh4GNhGiFV9Xa6P"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/time-bound-airdrop/IATKTimeBoundAirdrop.sol": {
        "keccak256": "0x304354b3b7b1208f1f71c0ca677c4aec61fc6f67e956aae00a98443dd46d5891",
        "urls": [
          "bzz-raw://15b76e5dbaf8d12323393e15cc59a74458d4850feebe74228a91dd8f6b8bdf81",
          "dweb:/ipfs/QmXahQLS6coAtJQmFWzDv92j9ePutqzuPjzfAPEVH8iXW3"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/Hashes.sol": {
        "keccak256": "0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269",
        "urls": [
          "bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11",
          "dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134",
        "urls": [
          "bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6",
          "dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866",
        "urls": [
          "bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf",
          "dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MAX_BATCH_SIZE()": {
        "notice": "Maximum number of items allowed in batch operations to prevent OOM and gas limit issues."
      },
      "batchClaim(uint256[],uint256[],bytes32[][])": {
        "notice": "Claims multiple airdrop allocations for the caller in a single transaction."
      },
      "claim(uint256,uint256,bytes32[])": {
        "notice": "Claims an airdrop allocation for the caller within the time window."
      },
      "claimTracker()": {
        "notice": "Returns the claim tracker contract."
      },
      "endTime()": {
        "notice": "Returns the end time when claims are no longer available."
      },
      "getClaimedAmount(uint256)": {
        "notice": "Gets the amount already claimed for a specific index."
      },
      "getTimeRemaining()": {
        "notice": "Returns the time remaining until the airdrop starts (if not started) or ends (if active)."
      },
      "initialize(string,address,bytes32,address,uint256,uint256)": {
        "notice": "Initializes the time-bound airdrop contract with specified parameters."
      },
      "isActive()": {
        "notice": "Checks if the airdrop is currently active (within the time window)."
      },
      "isClaimed(uint256,uint256)": {
        "notice": "Checks if a claim has been fully claimed for a specific index."
      },
      "merkleRoot()": {
        "notice": "Returns the Merkle root for verifying airdrop claims."
      },
      "name()": {
        "notice": "Returns the name of this airdrop."
      },
      "startTime()": {
        "notice": "Returns the start time when claims become available."
      },
      "token()": {
        "notice": "Returns the token being distributed in this airdrop."
      },
      "withdrawTokens(address)": {
        "notice": "Allows the owner to withdraw any tokens remaining in the contract."
      }
    },
    "events": {
      "BatchClaimed(address,uint256,uint256[],uint256[])": {
        "notice": "Emitted when a user claims multiple allocations in a single transaction."
      },
      "Claimed(address,uint256,uint256)": {
        "notice": "Emitted when a user successfully claims their airdrop allocation."
      },
      "TimeWindowSet(uint256,uint256)": {
        "notice": "Emitted when the time window for the airdrop is set or updated."
      },
      "TokensWithdrawn(address,uint256)": {
        "notice": "Emitted when the contract owner withdraws unclaimed tokens."
      }
    },
    "errors": {
      "AirdropEnded()": [
        {
          "notice": "Thrown when attempting to claim after the airdrop has ended."
        }
      ],
      "AirdropNotStarted()": [
        {
          "notice": "Thrown when attempting to claim before the airdrop has started."
        }
      ],
      "BatchSizeExceedsLimit()": [
        {
          "notice": "Error indicating that the batch size exceeds the maximum allowed limit."
        }
      ],
      "IndexAlreadyClaimed()": [
        {
          "notice": "Error indicating that a claim is attempted for an index that has already been claimed."
        }
      ],
      "InvalidAirdropName()": [
        {
          "notice": "Thrown when the airdrop name is empty or invalid."
        }
      ],
      "InvalidClaimAmount()": [
        {
          "notice": "Error indicating that the claim amount exceeds the total allocated amount for the index."
        }
      ],
      "InvalidClaimTrackerAddress()": [
        {
          "notice": "Error indicating that an invalid claim tracker address was provided."
        }
      ],
      "InvalidEndTime()": [
        {
          "notice": "Thrown when the provided end time is invalid (e.g., before start time)."
        }
      ],
      "InvalidInputArrayLengths()": [
        {
          "notice": "Error indicating that input array lengths do not match in batch operations."
        }
      ],
      "InvalidMerkleProof()": [
        {
          "notice": "Error indicating that a provided Merkle proof is invalid for the claim parameters."
        }
      ],
      "InvalidMerkleRoot()": [
        {
          "notice": "Error indicating that a provided Merkle root is invalid."
        }
      ],
      "InvalidStartTime()": [
        {
          "notice": "Thrown when the provided start time is invalid (e.g., in the past)."
        }
      ],
      "InvalidTokenAddress()": [
        {
          "notice": "Error indicating that an invalid token address was provided."
        }
      ],
      "InvalidWithdrawalAddress()": [
        {
          "notice": "Error indicating that an invalid withdrawal address was provided."
        }
      ],
      "ZeroClaimAmount()": [
        {
          "notice": "Error indicating that the claim amount is zero."
        }
      ]
    },
    "notice": "Implementation of a time-bound airdrop contract where claims are restricted to a specific time window in the ATK Protocol."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This contract implements a time-restricted claim system where:      - Claims can only be made within a specified time window (startTime to endTime)      - Users can claim their full allocation or partial amounts      - Uses Merkle proof verification for secure claim validation      - Tracks claimed amounts using ATKAmountClaimTracker for partial claims support      - Supports both single and batch claims      - Extends ATKAirdrop base functionality with time constraints      The contract is designed for standard airdrops where all users can claim during the active period.",
    "methods": {
      "batchClaim(uint256[],uint256[],bytes32[][])": {
        "details": "Batch version for gas efficiency. Uses onlyActive modifier for time validation.",
        "params": {
          "indices": "The indices of the claims in the Merkle tree.",
          "merkleProofs": "The Merkle proof arrays for verification of each claim.",
          "totalAmounts": "The total amounts allocated for each index."
        }
      },
      "claim(uint256,uint256,bytes32[])": {
        "details": "Validates time constraints, Merkle proof, and processes claims.",
        "params": {
          "index": "The index of the claim in the Merkle tree.",
          "merkleProof": "The Merkle proof array for verification.",
          "totalAmount": "The total amount allocated for this index."
        }
      },
      "claimTracker()": {
        "returns": {
          "_0": "The claim tracker contract."
        }
      },
      "constructor": {
        "params": {
          "forwarder_": "The address of the forwarder contract."
        }
      },
      "endTime()": {
        "returns": {
          "_0": "The timestamp when claims end."
        }
      },
      "getClaimedAmount(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "claimedAmount The amount already claimed for this index."
        }
      },
      "getTimeRemaining()": {
        "returns": {
          "timeRemaining": "The number of seconds remaining, 0 if ended."
        }
      },
      "initialize(string,address,bytes32,address,uint256,uint256)": {
        "details": "Sets up the base airdrop functionality and time-bound specific parameters.      Deploys its own amount claim tracker for partial claims support.",
        "params": {
          "endTime_": "The timestamp when claims end.",
          "name_": "The human-readable name for this airdrop.",
          "owner_": "The initial owner of the contract.",
          "root_": "The Merkle root for verifying claims.",
          "startTime_": "The timestamp when claims can begin.",
          "token_": "The address of the ERC20 token to be distributed."
        }
      },
      "isActive()": {
        "returns": {
          "active": "True if the current time is within the claim window."
        }
      },
      "isClaimed(uint256,uint256)": {
        "params": {
          "index": "The index to check in the Merkle tree.",
          "totalAmount": "The total amount allocated for this index."
        },
        "returns": {
          "_0": "claimed True if the index has been fully claimed, false otherwise."
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "merkleRoot()": {
        "returns": {
          "_0": "The Merkle root for verifying airdrop claims."
        }
      },
      "name()": {
        "returns": {
          "_0": "The human-readable name of the airdrop."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "startTime()": {
        "returns": {
          "_0": "The timestamp when claims can begin."
        }
      },
      "token()": {
        "returns": {
          "_0": "The ERC20 token being distributed."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      },
      "withdrawTokens(address)": {
        "params": {
          "to": "The address to send the withdrawn tokens to."
        }
      }
    },
    "events": {
      "BatchClaimed(address,uint256,uint256[],uint256[])": {
        "params": {
          "amounts": "The amounts claimed for each index.",
          "claimant": "The address that claimed the tokens.",
          "indices": "The indices of the claims in the Merkle tree.",
          "totalAmount": "The total amount of tokens claimed in the batch."
        }
      },
      "Claimed(address,uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens claimed.",
          "claimant": "The address that claimed the tokens.",
          "index": "The index of the claim in the Merkle tree."
        }
      },
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "TimeWindowSet(uint256,uint256)": {
        "params": {
          "endTime": "The timestamp when claims end.",
          "startTime": "The timestamp when claims can begin."
        }
      },
      "TokensWithdrawn(address,uint256)": {
        "params": {
          "amount": "The amount of tokens withdrawn.",
          "to": "The address receiving the withdrawn tokens."
        }
      }
    },
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ]
    },
    "title": "ATK Time-Bound Airdrop Implementation"
  },
  "id": 14
}