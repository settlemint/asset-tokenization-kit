{
  "abi": [
    {
      "type": "function",
      "name": "allAirdropsLength",
      "inputs": [],
      "outputs": [
        {
          "name": "count",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "atkTimeBoundAirdropImplementation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "create",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "startTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "endTime",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "airdropProxyAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "predictTimeBoundAirdropAddress",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "root",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "startTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "endTime",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "predictedAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "ATKTimeBoundAirdropCreated",
      "inputs": [
        {
          "name": "airdropAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "creator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ImplementationUpdated",
      "inputs": [
        {
          "name": "oldImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newImplementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "InvalidAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidImplementation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SameAddress",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allAirdropsLength()": "150117bd",
    "atkTimeBoundAirdropImplementation()": "7eff00f3",
    "create(string,address,bytes32,address,uint256,uint256)": "6cbc9103",
    "predictTimeBoundAirdropAddress(string,address,bytes32,address,uint256,uint256)": "856146cc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"airdropAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"ATKTimeBoundAirdropCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allAirdropsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atkTimeBoundAirdropImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"airdropProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"predictTimeBoundAirdropAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"predictedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the standard for factories that create time-bound airdrop contracts\",\"events\":{\"ATKTimeBoundAirdropCreated(address,address)\":{\"params\":{\"airdropAddress\":\"The address of the newly created time-bound airdrop proxy\",\"creator\":\"The address that created the time-bound airdrop\"}},\"ImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new implementation\",\"oldImplementation\":\"The address of the previous implementation\"}}},\"kind\":\"dev\",\"methods\":{\"allAirdropsLength()\":{\"returns\":{\"count\":\"The number of time-bound airdrop proxies created\"}},\"atkTimeBoundAirdropImplementation()\":{\"returns\":{\"_0\":\"The address of the time-bound airdrop implementation\"}},\"create(string,address,bytes32,address,uint256,uint256)\":{\"params\":{\"endTime\":\"The timestamp when claims end\",\"name\":\"The human-readable name for the airdrop\",\"owner\":\"The initial owner of the contract\",\"root\":\"The Merkle root for verifying claims\",\"startTime\":\"The timestamp when claims can begin\",\"token\":\"The address of the ERC20 token to be distributed\"},\"returns\":{\"airdropProxyAddress\":\"The address of the newly created time-bound airdrop proxy\"}},\"predictTimeBoundAirdropAddress(string,address,bytes32,address,uint256,uint256)\":{\"params\":{\"endTime\":\"The timestamp when claims end\",\"name\":\"The human-readable name for the airdrop\",\"owner\":\"The initial owner of the contract\",\"root\":\"The Merkle root for verifying claims\",\"startTime\":\"The timestamp when claims can begin\",\"token\":\"The address of the ERC20 token to be distributed\"},\"returns\":{\"predictedAddress\":\"The predicted address of the time-bound airdrop proxy\"}}},\"title\":\"Interface for ATK Time-Bound Airdrop Factory\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAddress()\":[{\"notice\":\"Custom error for invalid address parameter.\"}],\"InvalidImplementation()\":[{\"notice\":\"Custom error for invalid implementation address.\"}],\"SameAddress()\":[{\"notice\":\"Custom error when attempting to set the same address.\"}]},\"events\":{\"ATKTimeBoundAirdropCreated(address,address)\":{\"notice\":\"Emitted when a new time-bound airdrop proxy is created\"},\"ImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation contract is updated\"}},\"kind\":\"user\",\"methods\":{\"allAirdropsLength()\":{\"notice\":\"Returns the total number of time-bound airdrop proxies created by this factory\"},\"atkTimeBoundAirdropImplementation()\":{\"notice\":\"Returns the address of the current ATKTimeBoundAirdrop logic contract (implementation)\"},\"create(string,address,bytes32,address,uint256,uint256)\":{\"notice\":\"Creates a new time-bound airdrop proxy contract\"},\"predictTimeBoundAirdropAddress(string,address,bytes32,address,uint256,uint256)\":{\"notice\":\"Predicts the deployment address of a time-bound airdrop proxy\"}},\"notice\":\"Interface for creating and managing ATK Time-Bound Airdrop proxies\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/airdrop/time-bound-airdrop/IATKTimeBoundAirdropFactory.sol\":\"IATKTimeBoundAirdropFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/addons/airdrop/IATKAirdrop.sol\":{\"keccak256\":\"0x5556406001ca17a94dfeb60a9db57417b262020690af11bf58dc5893085b7297\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f426858498d7594fdc8ec019332bb69689c5d6db8f6b5ee4c51b81d5fd3c2d13\",\"dweb:/ipfs/QmbA7Bc5JRPXn47hAHq9nWQo9LR5EDk18savmyxr5nqiSh\"]},\"contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol\":{\"keccak256\":\"0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f\",\"dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne\"]},\"contracts/addons/airdrop/time-bound-airdrop/IATKTimeBoundAirdrop.sol\":{\"keccak256\":\"0x304354b3b7b1208f1f71c0ca677c4aec61fc6f67e956aae00a98443dd46d5891\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://15b76e5dbaf8d12323393e15cc59a74458d4850feebe74228a91dd8f6b8bdf81\",\"dweb:/ipfs/QmXahQLS6coAtJQmFWzDv92j9ePutqzuPjzfAPEVH8iXW3\"]},\"contracts/addons/airdrop/time-bound-airdrop/IATKTimeBoundAirdropFactory.sol\":{\"keccak256\":\"0x2e127939b56fdda918029c727dcb902957479b2b128025b09bef6786d464f55c\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://efa868ed18be95014c42bdee06004e514bc24cb528729e765bbdcc90e88c9171\",\"dweb:/ipfs/QmVNRq1qzHr5VuoAtfH1JJqUrKMgZkQpoWqeVEHHmPnnF8\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidImplementation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "airdropAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ATKTimeBoundAirdropCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldImplementation",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ImplementationUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allAirdropsLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "atkTimeBoundAirdropImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "address",
              "name": "airdropProxyAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "predictTimeBoundAirdropAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "predictedAddress",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allAirdropsLength()": {
            "returns": {
              "count": "The number of time-bound airdrop proxies created"
            }
          },
          "atkTimeBoundAirdropImplementation()": {
            "returns": {
              "_0": "The address of the time-bound airdrop implementation"
            }
          },
          "create(string,address,bytes32,address,uint256,uint256)": {
            "params": {
              "endTime": "The timestamp when claims end",
              "name": "The human-readable name for the airdrop",
              "owner": "The initial owner of the contract",
              "root": "The Merkle root for verifying claims",
              "startTime": "The timestamp when claims can begin",
              "token": "The address of the ERC20 token to be distributed"
            },
            "returns": {
              "airdropProxyAddress": "The address of the newly created time-bound airdrop proxy"
            }
          },
          "predictTimeBoundAirdropAddress(string,address,bytes32,address,uint256,uint256)": {
            "params": {
              "endTime": "The timestamp when claims end",
              "name": "The human-readable name for the airdrop",
              "owner": "The initial owner of the contract",
              "root": "The Merkle root for verifying claims",
              "startTime": "The timestamp when claims can begin",
              "token": "The address of the ERC20 token to be distributed"
            },
            "returns": {
              "predictedAddress": "The predicted address of the time-bound airdrop proxy"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allAirdropsLength()": {
            "notice": "Returns the total number of time-bound airdrop proxies created by this factory"
          },
          "atkTimeBoundAirdropImplementation()": {
            "notice": "Returns the address of the current ATKTimeBoundAirdrop logic contract (implementation)"
          },
          "create(string,address,bytes32,address,uint256,uint256)": {
            "notice": "Creates a new time-bound airdrop proxy contract"
          },
          "predictTimeBoundAirdropAddress(string,address,bytes32,address,uint256,uint256)": {
            "notice": "Predicts the deployment address of a time-bound airdrop proxy"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/addons/airdrop/time-bound-airdrop/IATKTimeBoundAirdropFactory.sol": "IATKTimeBoundAirdropFactory"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/addons/airdrop/IATKAirdrop.sol": {
        "keccak256": "0x5556406001ca17a94dfeb60a9db57417b262020690af11bf58dc5893085b7297",
        "urls": [
          "bzz-raw://f426858498d7594fdc8ec019332bb69689c5d6db8f6b5ee4c51b81d5fd3c2d13",
          "dweb:/ipfs/QmbA7Bc5JRPXn47hAHq9nWQo9LR5EDk18savmyxr5nqiSh"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol": {
        "keccak256": "0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be",
        "urls": [
          "bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f",
          "dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/time-bound-airdrop/IATKTimeBoundAirdrop.sol": {
        "keccak256": "0x304354b3b7b1208f1f71c0ca677c4aec61fc6f67e956aae00a98443dd46d5891",
        "urls": [
          "bzz-raw://15b76e5dbaf8d12323393e15cc59a74458d4850feebe74228a91dd8f6b8bdf81",
          "dweb:/ipfs/QmXahQLS6coAtJQmFWzDv92j9ePutqzuPjzfAPEVH8iXW3"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/time-bound-airdrop/IATKTimeBoundAirdropFactory.sol": {
        "keccak256": "0x2e127939b56fdda918029c727dcb902957479b2b128025b09bef6786d464f55c",
        "urls": [
          "bzz-raw://efa868ed18be95014c42bdee06004e514bc24cb528729e765bbdcc90e88c9171",
          "dweb:/ipfs/QmVNRq1qzHr5VuoAtfH1JJqUrKMgZkQpoWqeVEHHmPnnF8"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "allAirdropsLength()": {
        "notice": "Returns the total number of time-bound airdrop proxies created by this factory"
      },
      "atkTimeBoundAirdropImplementation()": {
        "notice": "Returns the address of the current ATKTimeBoundAirdrop logic contract (implementation)"
      },
      "create(string,address,bytes32,address,uint256,uint256)": {
        "notice": "Creates a new time-bound airdrop proxy contract"
      },
      "predictTimeBoundAirdropAddress(string,address,bytes32,address,uint256,uint256)": {
        "notice": "Predicts the deployment address of a time-bound airdrop proxy"
      }
    },
    "events": {
      "ATKTimeBoundAirdropCreated(address,address)": {
        "notice": "Emitted when a new time-bound airdrop proxy is created"
      },
      "ImplementationUpdated(address,address)": {
        "notice": "Emitted when the implementation contract is updated"
      }
    },
    "errors": {
      "InvalidAddress()": [
        {
          "notice": "Custom error for invalid address parameter."
        }
      ],
      "InvalidImplementation()": [
        {
          "notice": "Custom error for invalid implementation address."
        }
      ],
      "SameAddress()": [
        {
          "notice": "Custom error when attempting to set the same address."
        }
      ]
    },
    "notice": "Interface for creating and managing ATK Time-Bound Airdrop proxies"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "details": "This interface defines the standard for factories that create time-bound airdrop contracts",
    "methods": {
      "allAirdropsLength()": {
        "returns": {
          "count": "The number of time-bound airdrop proxies created"
        }
      },
      "atkTimeBoundAirdropImplementation()": {
        "returns": {
          "_0": "The address of the time-bound airdrop implementation"
        }
      },
      "create(string,address,bytes32,address,uint256,uint256)": {
        "params": {
          "endTime": "The timestamp when claims end",
          "name": "The human-readable name for the airdrop",
          "owner": "The initial owner of the contract",
          "root": "The Merkle root for verifying claims",
          "startTime": "The timestamp when claims can begin",
          "token": "The address of the ERC20 token to be distributed"
        },
        "returns": {
          "airdropProxyAddress": "The address of the newly created time-bound airdrop proxy"
        }
      },
      "predictTimeBoundAirdropAddress(string,address,bytes32,address,uint256,uint256)": {
        "params": {
          "endTime": "The timestamp when claims end",
          "name": "The human-readable name for the airdrop",
          "owner": "The initial owner of the contract",
          "root": "The Merkle root for verifying claims",
          "startTime": "The timestamp when claims can begin",
          "token": "The address of the ERC20 token to be distributed"
        },
        "returns": {
          "predictedAddress": "The predicted address of the time-bound airdrop proxy"
        }
      }
    },
    "events": {
      "ATKTimeBoundAirdropCreated(address,address)": {
        "params": {
          "airdropAddress": "The address of the newly created time-bound airdrop proxy",
          "creator": "The address that created the time-bound airdrop"
        }
      },
      "ImplementationUpdated(address,address)": {
        "params": {
          "newImplementation": "The address of the new implementation",
          "oldImplementation": "The address of the previous implementation"
        }
      }
    },
    "title": "Interface for ATK Time-Bound Airdrop Factory"
  },
  "id": 17
}