{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "trustedForwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchRegisterTopicSchemes",
      "inputs": [
        {
          "name": "names",
          "type": "string[]",
          "internalType": "string[]"
        },
        {
          "name": "signatures",
          "type": "string[]",
          "internalType": "string[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAllTopicIds",
      "inputs": [],
      "outputs": [
        {
          "name": "topicIds",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTopicId",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "topicId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getTopicSchemeCount",
      "inputs": [],
      "outputs": [
        {
          "name": "count",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTopicSchemeSignature",
      "inputs": [
        {
          "name": "topicId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "signature",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTopicSchemeSignatureByName",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "signature",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasTopicScheme",
      "inputs": [
        {
          "name": "topicId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "exists",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasTopicSchemeByName",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "exists",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialAdmin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialRegistrars",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerTopicScheme",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "signature",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeTopicScheme",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateTopicScheme",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "newSignature",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TopicSchemeRegistered",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "topicId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "name",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "signature",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TopicSchemeRemoved",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "topicId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "name",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TopicSchemeUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "topicId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "name",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "oldSignature",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "newSignature",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TopicSchemesBatchRegistered",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "topicIds",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "names",
          "type": "string[]",
          "indexed": false,
          "internalType": "string[]"
        },
        {
          "name": "signatures",
          "type": "string[]",
          "indexed": false,
          "internalType": "string[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessControlBadConfirmation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "neededRole",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "ArrayLengthMismatch",
      "inputs": [
        {
          "name": "namesLength",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "signaturesLength",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "EmptyArraysProvided",
      "inputs": []
    },
    {
      "type": "error",
      "name": "EmptyName",
      "inputs": []
    },
    {
      "type": "error",
      "name": "EmptySignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SignatureUnchanged",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "signature",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TopicIdNotFoundInArray",
      "inputs": [
        {
          "name": "topicId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "TopicSchemeAlreadyExists",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TopicSchemeDoesNotExist",
      "inputs": [
        {
          "name": "topicId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "TopicSchemeDoesNotExistByName",
      "inputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a03461011057601f611d7e38819003918201601f19168301916001600160401b038311848410176101145780849260209460405283398101031261011057516001600160a01b0381168103610110576080525f516020611d5e5f395f51905f525460ff8160401c16610101576002600160401b03196001600160401b038216016100ab575b604051611c3590816101298239608051818181610c58015281816110d10152611b670152f35b6001600160401b0319166001600160401b039081175f516020611d5e5f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610085565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461126257508063138309b7146111ff578063172a0ddb146111e2578063248a9ca3146111a35780632f2ff15d1461115957806336568abe14611105578063572b6c05146110b157806358280e9814610d6a5780636aa085eb14610cb85780636cc45eca14610c875780637da0a87714610c4357806391d1485414610bee578063946d9204146109ef578063a217fddf146109d5578063bd2716b51461096c578063c4456bda146108e0578063c6f1bf231461068f578063d547741f1461063e578063dafb0ca314610402578063e7a3d72b1461038b5763f263b66314610103575f80fd5b34610387576101113661141a565b9161011d939193611781565b8015610378578215610369576040516020810190828483376101526020828581015f838201520301601f1981018352826113af565b51902093845f525f60205260ff600260405f200154161561034457845f525f602052610183600160405f20016116e3565b93845160208601206101963683856114f3565b602081519101201461032157855f525f602052600160405f20016001600160401b03821161030d576101d2826101cc8354611538565b83611586565b5f601f831160011461028257917fb8a96f0d94f26765140c549819b353cecb77b033cb6e3098b0ce28f5059787ba959493916102278280610272965f91610277575b508160011b915f199060031b1c19161790565b90555b6102646001600160a01b0361023d611b64565b16976102566040519788976060895260608901916114d3565b908682036020880152611370565b9184830360408601526114d3565b0390a3005b90508501355f610214565b601f19831690825f5260205f20915f5b8181106102f55750917fb8a96f0d94f26765140c549819b353cecb77b033cb6e3098b0ce28f5059787ba9796959391856102729694106102dc575b5050600182811b01905561022a565b8401355f19600385901b60f8161c191690555f806102cd565b9192602060018192868a013581550194019201610292565b634e487b7160e01b5f52604160045260245ffd5b60405163d38f72b360e01b815292839261034092918660048601611634565b0390fd5b5061034060405192839263b6549bc360e01b84526020600485015260248401916114d3565b63ac241e1160e01b5f5260045ffd5b632ef1310560e01b5f5260045ffd5b5f80fd5b34610387576020366003190112610387576004356001600160401b038111610387576103bb9036906004016112e7565b6103e2602060405183819483830196873781015f838201520301601f1981018352826113af565b5190205f525f602052602060ff600260405f200154166040519015158152f35b34610387576104103661141a565b929161041a611781565b80156103785783156103695760405160208101908285833761044f6020828581015f838201520301601f1981018352826113af565b51902092835f525f60205260ff600260405f20015416610619576040519461047686611394565b8486526104843682866114f3565b95602081019687526040810160018152865f525f60205260405f20915182556001820197519788516001600160401b03811161030d576104ce816104c88454611538565b84611586565b6020601f8211600114610588579261027295949261052c83600294610545977f09e70994ce281f8a63bb36732f8d2df907074776eee02f8af110938bc4e477a59d9e9f5f9261057d575b50508160011b915f199060031b1c19161790565b90555b51151591019060ff801983541691151516179055565b61054e876115e3565b6001545f888152600260205260409020556001600160a01b0361056f611b64565b169560405194859485611634565b015190508f80610518565b601f1982169a835f52815f209b5f5b8181106106015750837f09e70994ce281f8a63bb36732f8d2df907074776eee02f8af110938bc4e477a59b9c9d61054597946102729a999794600297600195106105e9575b505050811b01905561052f565b01515f1960f88460031b161c191690558e80806105dc565b838301518e556001909d019c60209384019301610597565b60405163510e797760e11b8152602060048201529182916103409160248401916114d3565b346103875760403660031901126103875761068d60043561065d611314565b90610688610683825f525f516020611be95f395f51905f52602052600160405f20015490565b61180f565b611abb565b005b34610387576020366003190112610387576004356001600160401b038111610387576106bf9036906004016112e7565b6106c7611781565b8015610378576040516020810190828483376106f66020828581015f838201520301601f1981018352826113af565b51902091825f525f60205260ff600260405f20015416156108bb57825f52600260205260405f205480156108a8575f198101818111610894576001545f19810190811161089457808203610849575b505050600154908115610835577f6ae52b3fe6d4919b329e8314788041384cae2d045707c2983ae594c7cad27cd3915f1901610780816115cb565b8154905f199060031b1b19169055600155835f5260026020525f6040812055835f525f6020525f600260408220828155600181016107be8154611538565b90816107f2575b505001556001600160a01b036107d9611b64565b16926102726040519283926020845260208401916114d3565b81601f8693116001146108095750555b87806107c5565b8183526020832061082591601f0160051c810190600101611570565b8082528160208120915555610802565b634e487b7160e01b5f52603160045260245ffd5b61086891610859610880926115cb565b90549060031b1c9283916115cb565b90919082549060031b91821b915f19901b1916179055565b5f52600260205260405f2055838080610745565b634e487b7160e01b5f52601160045260245ffd5b836322cd5b3360e11b5f5260045260245ffd5b60405163b6549bc360e01b8152602060048201529182916103409160248401916114d3565b34610387575f3660031901126103875760405180602060015491828152019060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6905f5b818110610956576109528561093e818703826113af565b6040519182916020835260208301906113e7565b0390f35b8254845260209093019260019283019201610927565b3461038757602036600319011261038757600435805f525f60205260ff600260405f20015416156109c3575f525f6020526109526109af600160405f20016116e3565b604051918291602083526020830190611370565b6310ebeb9b60e21b5f5260045260245ffd5b34610387575f3660031901126103875760206040515f8152f35b3461038757604036600319011261038757610a0861132a565b6024356001600160401b0381116103875736602382011215610387578060040135610a32816113d0565b91610a4060405193846113af565b8183526024602084019260051b8201019036821161038757602401915b818310610bce575050505f516020611c095f395f51905f525460ff8160401c1615926001600160401b03821680159081610bc6575b6001149081610bbc575b159081610bb3575b50610ba45767ffffffffffffffff1982166001175f516020611c095f395f51905f5255610ae79184610b78575b50610ada611bbd565b610ae2611bbd565b61186b565b508051905f5b828110610b525783610afb57005b68ff0000000000000000195f516020611c095f395f51905f5254165f516020611c095f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b600190610b716001600160a01b03610b6a83866114bf565b511661192d565b5001610aed565b68ffffffffffffffffff191668010000000000000001175f516020611c095f395f51905f525584610ad1565b63f92ee8a960e01b5f5260045ffd5b90501585610aa4565b303b159150610a9c565b859150610a92565b82356001600160a01b038116810361038757815260209283019201610a5d565b3461038757604036600319011261038757610c07611314565b6004355f525f516020611be95f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610387575f366003190112610387576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610387576020366003190112610387576004355f525f602052602060ff600260405f200154166040519015158152f35b34610387576020366003190112610387576004356001600160401b03811161038757610ce89036906004016112e7565b90604051602081019083838337610d126020828681015f838201520301601f1981018352826113af565b51902091825f525f60205260ff600260405f2001541615610d4657825f525f6020526109526109af600160405f20016116e3565b61034060405192839263b6549bc360e01b84526020600485015260248401916114d3565b34610387576040366003190112610387576004356001600160401b03811161038757610d9a903690600401611340565b6024356001600160401b03811161038757610db9903690600401611340565b90610dc2611781565b82156110a25781830361108b5760015491610ddc846113d0565b92610dea60405194856113af565b848452601f19610df9866113d0565b013660208601375f5b858110610e7f57857fcae12d0ba7b14d1ec9f693a507cb7e312550184c818ade2163b8ace4fed013dc610e5e87610e7a8888610e6c8e6001600160a01b03610e48611b64565b16986040519788976060895260608901906113e7565b91878303602089015261165e565b91848303604086015261165e565b0390a2005b610e8a81878961146a565b610e9883868895949561146a565b94821561037857851561036957604051602081019084878337610ece6020828781015f838201520301601f1981018352826113af565b5190209283610edd868c6114bf565b52835f525f60205260ff600260405f2001541661106557604051610f0081611394565b848152610f0e3689866114f3565b60208201908152604082019060018252865f525f60205260405f20925183556001830190518051906001600160401b03821161030d57610f5882610f528554611538565b85611586565b602090601f8311600114610ffb5782610f8f9695936002959361052c935f92610ff05750508160011b915f199060031b1c19161790565b610f98846115e3565b5f19821461089457600195610fe7877f09e70994ce281f8a63bb36732f8d2df907074776eee02f8af110938bc4e477a5940198865f5260026020528960405f2055888060a01b0361056f611b64565b0390a301610e02565b015190505f80610518565b90601f19831691845f52815f20925f5b81811061104d5750926001928592610f8f999896600298961061103557505050811b01905561052f565b01515f1960f88460031b161c191690555f80806105dc565b9293602060018192878601518155019501930161100b565b60405163510e797760e11b815260206004820152908190610340906024830190896114d3565b5090631f4bb7c160e31b5f5260045260245260445ffd5b63d213204160e01b5f5260045ffd5b346103875760203660031901126103875760206110cc61132a565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b346103875760403660031901126103875761111e611314565b6001600160a01b0361112e611b64565b166001600160a01b0382160361114a5761068d90600435611abb565b63334bd91960e11b5f5260045ffd5b346103875760403660031901126103875761068d600435611178611314565b9061119e610683825f525f516020611be95f395f51905f52602052600160405f20015490565b611a0a565b346103875760203660031901126103875760206111da6004355f525f516020611be95f395f51905f52602052600160405f20015490565b604051908152f35b34610387575f366003190112610387576020600154604051908152f35b34610387576020366003190112610387576004356001600160401b0381116103875761123160209136906004016112e7565b6112578360405183819483830196873781015f838201520301601f1981018352826113af565b519020604051908152f35b34610387576020366003190112610387576004359063ffffffff60e01b82168092036103875760209163251b648160e21b81149081156112d6575b81156112ab575b5015158152f35b637965db0b60e01b8114915081156112c5575b50836112a4565b6301ffc9a760e01b149050836112be565b631526bf3960e11b8114915061129d565b9181601f84011215610387578235916001600160401b038311610387576020838186019501011161038757565b602435906001600160a01b038216820361038757565b600435906001600160a01b038216820361038757565b9181601f84011215610387578235916001600160401b038311610387576020808501948460051b01011161038757565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b606081019081106001600160401b0382111761030d57604052565b90601f801991011681019081106001600160401b0382111761030d57604052565b6001600160401b03811161030d5760051b60200190565b90602080835192838152019201905f5b8181106114045750505090565b82518452602093840193909201916001016113f7565b6040600319820112610387576004356001600160401b0381116103875781611444916004016112e7565b92909291602435906001600160401b03821161038757611466916004016112e7565b9091565b91908110156114ab5760051b81013590601e19813603018212156103875701908135916001600160401b038311610387576020018236038113610387579190565b634e487b7160e01b5f52603260045260245ffd5b80518210156114ab5760209160051b010190565b908060209392818452848401375f828201840152601f01601f1916010190565b9291926001600160401b03821161030d576040519161151c601f8201601f1916602001846113af565b829481845281830111610387578281602093845f960137010152565b90600182811c92168015611566575b602083101461155257565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611547565b81811061157b575050565b5f8155600101611570565b9190601f811161159557505050565b6115bf925f5260205f20906020601f840160051c830193106115c1575b601f0160051c0190611570565b565b90915081906115b2565b6001548110156114ab5760015f5260205f2001905f90565b600154906801000000000000000082101561030d57600182016001556001548210156114ab5760015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910155565b929061164d9061165b95936040865260408601916114d3565b9260208185039101526114d3565b90565b90602083828152019060208160051b85010193835f915b8383106116855750505050505090565b909192939495601f198282030186528635601e198436030181121561038757830190602082359201916001600160401b038111610387578036038313610387576116d560209283926001956114d3565b980196019493019190611675565b9060405191825f8254926116f684611538565b808452936001811690811561175f575060011461171b575b506115bf925003836113af565b90505f9291925260205f20905f915b8183106117435750509060206115bf928201015f61170e565b602091935080600191548385890101520191019091849261172a565b9050602092506115bf94915060ff191682840152151560051b8201015f61170e565b611789611b64565b6001600160a01b0381165f9081527f07966f2ab141347034724e9b2a472c2f77f5cd745aeba27cacba797b8fcb7086602052604090205460ff16156117cb5750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004527fedcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c309238602452604490fd5b611817611b64565b815f525f516020611be95f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f2054161561184e575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611928576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff191660011790556118f3611b64565b16906001600160a01b03165f7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f07966f2ab141347034724e9b2a472c2f77f5cd745aeba27cacba797b8fcb7086602052604090205460ff16611928576001600160a01b038181165f9081527f07966f2ab141347034724e9b2a472c2f77f5cd745aeba27cacba797b8fcb708660205260409020805460ff191660011790556119b5611b64565b16906001600160a01b03167fedcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c3092387f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b5f8181525f516020611be95f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16611ab5575f8181525f516020611be95f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff19166001179055611a80611b64565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f8181525f516020611be95f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615611ab5575f8181525f516020611be95f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff19169055611b2f611b64565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611bb2575b15611bae576013193601368111610894573560601c90565b3390565b506014361015611b96565b60ff5f516020611c095f395f51905f525460401c1615611bd957565b631afcd79f60e31b5f5260045ffdfe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000af0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "sourceMap": "1297:13646:176:-:0;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;1623:37:242;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;;;7894:76:243;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;7983:34:243;7979:146;;-1:-1:-1;1297:13646:176;;;;;;;;1623:37:242;1297:13646:176;;;;;;;;;;;;;;;;7979:146:243;-1:-1:-1;;;;;;1297:13646:176;-1:-1:-1;;;;;1297:13646:176;;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;;;8085:29:243;;1297:13646:176;;8085:29:243;7979:146;;;7894:76;7936:23;;;-1:-1:-1;7936:23:243;;-1:-1:-1;7936:23:243;1297:13646:176;-1:-1:-1;1297:13646:176;;;;;;-1:-1:-1;1297:13646:176;;;;;-1:-1:-1;1297:13646:176",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461126257508063138309b7146111ff578063172a0ddb146111e2578063248a9ca3146111a35780632f2ff15d1461115957806336568abe14611105578063572b6c05146110b157806358280e9814610d6a5780636aa085eb14610cb85780636cc45eca14610c875780637da0a87714610c4357806391d1485414610bee578063946d9204146109ef578063a217fddf146109d5578063bd2716b51461096c578063c4456bda146108e0578063c6f1bf231461068f578063d547741f1461063e578063dafb0ca314610402578063e7a3d72b1461038b5763f263b66314610103575f80fd5b34610387576101113661141a565b9161011d939193611781565b8015610378578215610369576040516020810190828483376101526020828581015f838201520301601f1981018352826113af565b51902093845f525f60205260ff600260405f200154161561034457845f525f602052610183600160405f20016116e3565b93845160208601206101963683856114f3565b602081519101201461032157855f525f602052600160405f20016001600160401b03821161030d576101d2826101cc8354611538565b83611586565b5f601f831160011461028257917fb8a96f0d94f26765140c549819b353cecb77b033cb6e3098b0ce28f5059787ba959493916102278280610272965f91610277575b508160011b915f199060031b1c19161790565b90555b6102646001600160a01b0361023d611b64565b16976102566040519788976060895260608901916114d3565b908682036020880152611370565b9184830360408601526114d3565b0390a3005b90508501355f610214565b601f19831690825f5260205f20915f5b8181106102f55750917fb8a96f0d94f26765140c549819b353cecb77b033cb6e3098b0ce28f5059787ba9796959391856102729694106102dc575b5050600182811b01905561022a565b8401355f19600385901b60f8161c191690555f806102cd565b9192602060018192868a013581550194019201610292565b634e487b7160e01b5f52604160045260245ffd5b60405163d38f72b360e01b815292839261034092918660048601611634565b0390fd5b5061034060405192839263b6549bc360e01b84526020600485015260248401916114d3565b63ac241e1160e01b5f5260045ffd5b632ef1310560e01b5f5260045ffd5b5f80fd5b34610387576020366003190112610387576004356001600160401b038111610387576103bb9036906004016112e7565b6103e2602060405183819483830196873781015f838201520301601f1981018352826113af565b5190205f525f602052602060ff600260405f200154166040519015158152f35b34610387576104103661141a565b929161041a611781565b80156103785783156103695760405160208101908285833761044f6020828581015f838201520301601f1981018352826113af565b51902092835f525f60205260ff600260405f20015416610619576040519461047686611394565b8486526104843682866114f3565b95602081019687526040810160018152865f525f60205260405f20915182556001820197519788516001600160401b03811161030d576104ce816104c88454611538565b84611586565b6020601f8211600114610588579261027295949261052c83600294610545977f09e70994ce281f8a63bb36732f8d2df907074776eee02f8af110938bc4e477a59d9e9f5f9261057d575b50508160011b915f199060031b1c19161790565b90555b51151591019060ff801983541691151516179055565b61054e876115e3565b6001545f888152600260205260409020556001600160a01b0361056f611b64565b169560405194859485611634565b015190508f80610518565b601f1982169a835f52815f209b5f5b8181106106015750837f09e70994ce281f8a63bb36732f8d2df907074776eee02f8af110938bc4e477a59b9c9d61054597946102729a999794600297600195106105e9575b505050811b01905561052f565b01515f1960f88460031b161c191690558e80806105dc565b838301518e556001909d019c60209384019301610597565b60405163510e797760e11b8152602060048201529182916103409160248401916114d3565b346103875760403660031901126103875761068d60043561065d611314565b90610688610683825f525f516020611be95f395f51905f52602052600160405f20015490565b61180f565b611abb565b005b34610387576020366003190112610387576004356001600160401b038111610387576106bf9036906004016112e7565b6106c7611781565b8015610378576040516020810190828483376106f66020828581015f838201520301601f1981018352826113af565b51902091825f525f60205260ff600260405f20015416156108bb57825f52600260205260405f205480156108a8575f198101818111610894576001545f19810190811161089457808203610849575b505050600154908115610835577f6ae52b3fe6d4919b329e8314788041384cae2d045707c2983ae594c7cad27cd3915f1901610780816115cb565b8154905f199060031b1b19169055600155835f5260026020525f6040812055835f525f6020525f600260408220828155600181016107be8154611538565b90816107f2575b505001556001600160a01b036107d9611b64565b16926102726040519283926020845260208401916114d3565b81601f8693116001146108095750555b87806107c5565b8183526020832061082591601f0160051c810190600101611570565b8082528160208120915555610802565b634e487b7160e01b5f52603160045260245ffd5b61086891610859610880926115cb565b90549060031b1c9283916115cb565b90919082549060031b91821b915f19901b1916179055565b5f52600260205260405f2055838080610745565b634e487b7160e01b5f52601160045260245ffd5b836322cd5b3360e11b5f5260045260245ffd5b60405163b6549bc360e01b8152602060048201529182916103409160248401916114d3565b34610387575f3660031901126103875760405180602060015491828152019060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6905f5b818110610956576109528561093e818703826113af565b6040519182916020835260208301906113e7565b0390f35b8254845260209093019260019283019201610927565b3461038757602036600319011261038757600435805f525f60205260ff600260405f20015416156109c3575f525f6020526109526109af600160405f20016116e3565b604051918291602083526020830190611370565b6310ebeb9b60e21b5f5260045260245ffd5b34610387575f3660031901126103875760206040515f8152f35b3461038757604036600319011261038757610a0861132a565b6024356001600160401b0381116103875736602382011215610387578060040135610a32816113d0565b91610a4060405193846113af565b8183526024602084019260051b8201019036821161038757602401915b818310610bce575050505f516020611c095f395f51905f525460ff8160401c1615926001600160401b03821680159081610bc6575b6001149081610bbc575b159081610bb3575b50610ba45767ffffffffffffffff1982166001175f516020611c095f395f51905f5255610ae79184610b78575b50610ada611bbd565b610ae2611bbd565b61186b565b508051905f5b828110610b525783610afb57005b68ff0000000000000000195f516020611c095f395f51905f5254165f516020611c095f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b600190610b716001600160a01b03610b6a83866114bf565b511661192d565b5001610aed565b68ffffffffffffffffff191668010000000000000001175f516020611c095f395f51905f525584610ad1565b63f92ee8a960e01b5f5260045ffd5b90501585610aa4565b303b159150610a9c565b859150610a92565b82356001600160a01b038116810361038757815260209283019201610a5d565b3461038757604036600319011261038757610c07611314565b6004355f525f516020611be95f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610387575f366003190112610387576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610387576020366003190112610387576004355f525f602052602060ff600260405f200154166040519015158152f35b34610387576020366003190112610387576004356001600160401b03811161038757610ce89036906004016112e7565b90604051602081019083838337610d126020828681015f838201520301601f1981018352826113af565b51902091825f525f60205260ff600260405f2001541615610d4657825f525f6020526109526109af600160405f20016116e3565b61034060405192839263b6549bc360e01b84526020600485015260248401916114d3565b34610387576040366003190112610387576004356001600160401b03811161038757610d9a903690600401611340565b6024356001600160401b03811161038757610db9903690600401611340565b90610dc2611781565b82156110a25781830361108b5760015491610ddc846113d0565b92610dea60405194856113af565b848452601f19610df9866113d0565b013660208601375f5b858110610e7f57857fcae12d0ba7b14d1ec9f693a507cb7e312550184c818ade2163b8ace4fed013dc610e5e87610e7a8888610e6c8e6001600160a01b03610e48611b64565b16986040519788976060895260608901906113e7565b91878303602089015261165e565b91848303604086015261165e565b0390a2005b610e8a81878961146a565b610e9883868895949561146a565b94821561037857851561036957604051602081019084878337610ece6020828781015f838201520301601f1981018352826113af565b5190209283610edd868c6114bf565b52835f525f60205260ff600260405f2001541661106557604051610f0081611394565b848152610f0e3689866114f3565b60208201908152604082019060018252865f525f60205260405f20925183556001830190518051906001600160401b03821161030d57610f5882610f528554611538565b85611586565b602090601f8311600114610ffb5782610f8f9695936002959361052c935f92610ff05750508160011b915f199060031b1c19161790565b610f98846115e3565b5f19821461089457600195610fe7877f09e70994ce281f8a63bb36732f8d2df907074776eee02f8af110938bc4e477a5940198865f5260026020528960405f2055888060a01b0361056f611b64565b0390a301610e02565b015190505f80610518565b90601f19831691845f52815f20925f5b81811061104d5750926001928592610f8f999896600298961061103557505050811b01905561052f565b01515f1960f88460031b161c191690555f80806105dc565b9293602060018192878601518155019501930161100b565b60405163510e797760e11b815260206004820152908190610340906024830190896114d3565b5090631f4bb7c160e31b5f5260045260245260445ffd5b63d213204160e01b5f5260045ffd5b346103875760203660031901126103875760206110cc61132a565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b346103875760403660031901126103875761111e611314565b6001600160a01b0361112e611b64565b166001600160a01b0382160361114a5761068d90600435611abb565b63334bd91960e11b5f5260045ffd5b346103875760403660031901126103875761068d600435611178611314565b9061119e610683825f525f516020611be95f395f51905f52602052600160405f20015490565b611a0a565b346103875760203660031901126103875760206111da6004355f525f516020611be95f395f51905f52602052600160405f20015490565b604051908152f35b34610387575f366003190112610387576020600154604051908152f35b34610387576020366003190112610387576004356001600160401b0381116103875761123160209136906004016112e7565b6112578360405183819483830196873781015f838201520301601f1981018352826113af565b519020604051908152f35b34610387576020366003190112610387576004359063ffffffff60e01b82168092036103875760209163251b648160e21b81149081156112d6575b81156112ab575b5015158152f35b637965db0b60e01b8114915081156112c5575b50836112a4565b6301ffc9a760e01b149050836112be565b631526bf3960e11b8114915061129d565b9181601f84011215610387578235916001600160401b038311610387576020838186019501011161038757565b602435906001600160a01b038216820361038757565b600435906001600160a01b038216820361038757565b9181601f84011215610387578235916001600160401b038311610387576020808501948460051b01011161038757565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b606081019081106001600160401b0382111761030d57604052565b90601f801991011681019081106001600160401b0382111761030d57604052565b6001600160401b03811161030d5760051b60200190565b90602080835192838152019201905f5b8181106114045750505090565b82518452602093840193909201916001016113f7565b6040600319820112610387576004356001600160401b0381116103875781611444916004016112e7565b92909291602435906001600160401b03821161038757611466916004016112e7565b9091565b91908110156114ab5760051b81013590601e19813603018212156103875701908135916001600160401b038311610387576020018236038113610387579190565b634e487b7160e01b5f52603260045260245ffd5b80518210156114ab5760209160051b010190565b908060209392818452848401375f828201840152601f01601f1916010190565b9291926001600160401b03821161030d576040519161151c601f8201601f1916602001846113af565b829481845281830111610387578281602093845f960137010152565b90600182811c92168015611566575b602083101461155257565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611547565b81811061157b575050565b5f8155600101611570565b9190601f811161159557505050565b6115bf925f5260205f20906020601f840160051c830193106115c1575b601f0160051c0190611570565b565b90915081906115b2565b6001548110156114ab5760015f5260205f2001905f90565b600154906801000000000000000082101561030d57600182016001556001548210156114ab5760015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910155565b929061164d9061165b95936040865260408601916114d3565b9260208185039101526114d3565b90565b90602083828152019060208160051b85010193835f915b8383106116855750505050505090565b909192939495601f198282030186528635601e198436030181121561038757830190602082359201916001600160401b038111610387578036038313610387576116d560209283926001956114d3565b980196019493019190611675565b9060405191825f8254926116f684611538565b808452936001811690811561175f575060011461171b575b506115bf925003836113af565b90505f9291925260205f20905f915b8183106117435750509060206115bf928201015f61170e565b602091935080600191548385890101520191019091849261172a565b9050602092506115bf94915060ff191682840152151560051b8201015f61170e565b611789611b64565b6001600160a01b0381165f9081527f07966f2ab141347034724e9b2a472c2f77f5cd745aeba27cacba797b8fcb7086602052604090205460ff16156117cb5750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004527fedcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c309238602452604490fd5b611817611b64565b815f525f516020611be95f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f2054161561184e575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611928576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff191660011790556118f3611b64565b16906001600160a01b03165f7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f07966f2ab141347034724e9b2a472c2f77f5cd745aeba27cacba797b8fcb7086602052604090205460ff16611928576001600160a01b038181165f9081527f07966f2ab141347034724e9b2a472c2f77f5cd745aeba27cacba797b8fcb708660205260409020805460ff191660011790556119b5611b64565b16906001600160a01b03167fedcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c3092387f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b5f8181525f516020611be95f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16611ab5575f8181525f516020611be95f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff19166001179055611a80611b64565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f8181525f516020611be95f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615611ab5575f8181525f516020611be95f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff19169055611b2f611b64565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611bb2575b15611bae576013193601368111610894573560601c90565b3390565b506014361015611b96565b60ff5f516020611c095f395f51905f525460401c1615611bd957565b631afcd79f60e31b5f5260045ffdfe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "1297:13646:176:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3202:4:239;;;;;;:::i;:::-;8903:23:176;;8899:47;;8960:31;;8956:60;;1297:13646;;9101:22;;;1297:13646;;;;;9101:22;;1297:13646;;;;;;;;;9101:22;;11645;;9101;;;;;;:::i;:::-;1297:13646;9091:33;;1297:13646;;;;;9101:22;1297:13646;;9141:29;1297:13646;;;9141:29;1297:13646;;9140:30;9136:78;;1297:13646;;;;9101:22;1297:13646;;9254:32;1297:13646;;;9254:32;1297:13646;:::i;:::-;;;;9101:22;1297:13646;;9300:30;1297:13646;;;;;:::i;:::-;9101:22;1297:13646;;;;9334:30;9300:64;9296:140;;1297:13646;;;;9101:22;1297:13646;9254:32;1297:13646;;;9446:32;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;9509:75;1297:13646;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14091:38:176;;:::i;:::-;1297:13646;;;;;;;;;;;;;;;;:::i;:::-;;;;;9101:22;1297:13646;;;;:::i;:::-;;;;;;;;;;:::i;:::-;9509:75;;;1297:13646;;;;;;;;;;;11645:22;;1297:13646;;;;;;9101:22;1297:13646;;;;;;;;;;;;9509:75;1297:13646;;;;;;;;;;;;;;;9254:32;1297:13646;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;;;;;;;;;;;;9101:22;9254:32;1297:13646;;;;;;;;;;;;;;;;;;;;;;;;;;;9296:140;1297:13646;;-1:-1:-1;;;9387:38:176;;1297:13646;;;9387:38;;1297:13646;;;9387:38;;;:::i;:::-;;;;9136:78;1297:13646;;;;11376:35;;;;;;9179;;9101:22;1297:13646;9179:35;;1297:13646;;;;;;:::i;8956:60::-;7695:16;;;1297:13646;9000:16;1297:13646;;9000:16;8899:47;7629:11;;;1297:13646;8935:11;1297:13646;;8935:11;1297:13646;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;:::i;:::-;10670:22;1297:13646;;;10670:22;;;;;;1297:13646;;;;;;;;;;10670:22;;11645;;10670;;;;;;:::i;:::-;1297:13646;10660:33;;1297:13646;;;;;;;10711:29;1297:13646;;;10711:29;1297:13646;;;;;;;;;;;;;;;;;:::i;:::-;3202:4:239;;;;:::i;:::-;5593:23:176;;5589:47;;5650:28;;5646:57;;1297:13646;;5788:22;;;1297:13646;;;;;5788:22;;1297:13646;;;;;;;;;5788:22;;11645;;5788;;;;;;:::i;:::-;1297:13646;5778:33;;1297:13646;;;;;5788:22;1297:13646;;5827:29;1297:13646;;;5827:29;1297:13646;;5823:72;;1297:13646;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;5965:69;5788:22;5965:69;;1297:13646;;;;5965:69;;6027:4;1297:13646;;;;;;5788:22;1297:13646;;;;;;;;6027:4;1297:13646;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;:::i;:::-;;;:::i;:::-;5788:22;1297:13646;;;;;;;;6190:61;1297:13646;;;;;5827:29;1297:13646;;;6190:61;1297:13646;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6081:23;;;:::i;:::-;6027:4;1297:13646;;;;;5827:29;5788:22;1297:13646;;;;;-1:-1:-1;;;;;14091:38:176;;:::i;:::-;1297:13646;;;;6190:61;;;;;:::i;1297:13646::-;;;;-1:-1:-1;1297:13646:176;;;;;11645:22;;1297:13646;;;;;;;;;;;;;;;;;;;6190:61;1297:13646;;;;;;6190:61;1297:13646;;;;5827:29;1297:13646;6027:4;1297:13646;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6027:4;1297:13646;;;;5788:22;1297:13646;;;;;;;5823:72;1297:13646;;-1:-1:-1;;;5865:30:176;;5788:22;1297:13646;5865:30;;1297:13646;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1297:13646:176;;;;5767:26:239;1297:13646:176;;;;:::i;:::-;5737:18:239;3202:4;5737:18;;-1:-1:-1;1297:13646:176;-1:-1:-1;;;;;;;;;;;1297:13646:176;;4919:24:239;1297:13646:176;-1:-1:-1;1297:13646:176;4919:24:239;1297:13646:176;4759:191:239;;5737:18;3202:4;:::i;:::-;5767:26;:::i;:::-;1297:13646:176;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;:::i;:::-;3202:4:239;;:::i;:::-;9764:23:176;;9760:47;;1297:13646;;;9892:22;;1297:13646;;;;;9892:22;1297:13646;;;;;;;;;;9892:22;;11645;;9892;;;;;;:::i;:::-;1297:13646;9882:33;;1297:13646;;;;;;;;9932:29;1297:13646;;;9932:29;1297:13646;;9931:30;9927:78;;1297:13646;;;9932:29;1297:13646;;;;;;12443:17;;12439:61;;-1:-1:-1;;1297:13646:176;;;;;;;12542:1;1297:13646;-1:-1:-1;;1297:13646:176;;;;;;;12608:18;;;12604:306;;1297:13646;;;;12542:1;1297:13646;;;;;;10199:47;;-1:-1:-1;;1297:13646:176;;;;:::i;:::-;;;;;;;;;;;;;;12542:1;1297:13646;;;;9932:29;1297:13646;;;;;;;;;;;;;;9932:29;1297:13646;;;;;;12542:1;1297:13646;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1297:13646:176;;-1:-1:-1;;;;;14091:38:176;;:::i;:::-;1297:13646;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12542:1;1297:13646;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;12604:306;12780:16;12746:20;;12780:30;12746:20;;:::i;:::-;1297:13646;;;;;;12780:16;;;;:::i;:::-;:30;1297:13646;;;;;;;;;;;;;;;;;;;;;12780:30;1297:13646;;9932:29;1297:13646;;;;;;12604:306;;;;;1297:13646;;;;;;;;;;;;12439:61;12469:31;;;;1297:13646;12469:31;1297:13646;;;;12469:31;9927:78;1297:13646;;-1:-1:-1;;;9970:35:176;;1297:13646;;9970:35;;1297:13646;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;;11830:9;1297:13646;;;;;;;11830:9;1297:13646;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;11830:9;1297:13646;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;;;;;;;10921:29;1297:13646;;;10921:29;1297:13646;;10920:30;10916:75;;1297:13646;;;;;;;;;;;11008:32;1297:13646;:::i;:::-;;;;;;;;;;;;;;:::i;10916:75::-;10959:32;;;1297:13646;10959:32;1297:13646;;;;10959:32;1297:13646;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;;;4301:16:243;1297:13646:176;-1:-1:-1;;;;;1297:13646:176;;4724:16:243;;:34;;;;1297:13646:176;4803:1:243;4788:16;:50;;;;1297:13646:176;4853:13:243;:30;;;;1297:13646:176;4849:91:243;;;-1:-1:-1;;1297:13646:176;;4803:1:243;1297:13646:176;-1:-1:-1;;;;;;;;;;;1297:13646:176;5020:44;;1297:13646;4977:67:243;;1297:13646:176;6891:76:243;;;:::i;:::-;;;:::i;:::-;5020:44:176;:::i;:::-;;1297:13646;;5148:13;1297:13646;5163:27;;;;;;5064:101:243;;;1297:13646:176;5064:101:243;1297:13646:176;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;-1:-1:-1;;;;;;;;;;;1297:13646:176;5140:14:243;1297:13646:176;;;4803:1:243;1297:13646:176;;5140:14:243;1297:13646:176;5192:3;4803:1:243;;5211:63:176;-1:-1:-1;;;;;5253:20:176;1297:13646;5253:20;;:::i;:::-;1297:13646;;5211:63;:::i;:::-;;1297:13646;5148:13;;4977:67:243;-1:-1:-1;;1297:13646:176;;;-1:-1:-1;;;;;;;;;;;1297:13646:176;4977:67:243;;;4849:91;4906:23;;;1297:13646:176;4906:23:243;1297:13646:176;;4906:23:243;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:243;;4724:34;;;-1:-1:-1;4724:34:243;;1297:13646:176;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;;3901:31:239;1297:13646:176;;;;;;-1:-1:-1;1297:13646:176;;;;;;-1:-1:-1;1297:13646:176;;;;;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;1830:17:242;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;;;;;;;10439:29;1297:13646;;;10439:29;1297:13646;;;;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;:::i;:::-;;;;;11299:22;;1297:13646;;;;;11299:22;1297:13646;;;;;;;;;;11299:22;;11645;;11299;;;;;;:::i;:::-;1297:13646;11289:33;;1297:13646;;;;;;;;11338:29;1297:13646;;;11338:29;1297:13646;;11337:30;11333:78;;1297:13646;;;;;;;;11428:32;1297:13646;;;11428:32;1297:13646;:::i;11333:78::-;1297:13646;;;11376:35;;;;;;;;1297:13646;;11376:35;;1297:13646;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1297:13646:176;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;:::i;:::-;3202:4:239;;;:::i;:::-;6654:16:176;;6650:50;;6714:31;;;6710:119;;6952:9;1297:13646;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1297:13646:176;;;:::i;:::-;;;;;;;;7412:15;;;;;;1297:13646;8573:70;1297:13646;;;;;;;-1:-1:-1;;;;;14091:38:176;;:::i;:::-;1297:13646;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;8573:70;;;1297:13646;7397:13;7467:8;;;;;:::i;:::-;7517:13;;;;;;;;:::i;:::-;7597:23;;;7593:47;;7658:28;;7654:57;;1297:13646;;;7804:22;;1297:13646;;;;;7804:22;1297:13646;;;;;;;;;;7804:22;;11645;;7804;;;;;;:::i;:::-;1297:13646;7794:33;;7842:21;;;;;;:::i;:::-;1297:13646;;;;;;;;7211:13;1297:13646;;;7882:29;1297:13646;;7878:72;;1297:13646;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;8028:69;;1297:13646;;;;8028:69;;1297:13646;6952:9;1297:13646;;;;;;;;;;;;;;;6952:9;1297:13646;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;7211:13;1297:13646;;;;;;;;;;;;;;;;;;;;;;;;;;8152:23;;;:::i;:::-;-1:-1:-1;;1297:13646:176;;;;6952:9;1297:13646;8398:61;1297:13646;8398:61;1297:13646;;;;;;7211:13;1297:13646;;;;;;;;;;;;14091:38;;:::i;8398:61::-;;;;1297:13646;7397:13;;1297:13646;;;;-1:-1:-1;1297:13646:176;;;;;11645:22;;;1297:13646;;;;;;;;;;;;;;;;;;;6952:9;1297:13646;;;;;;;7211:13;1297:13646;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6952:9;1297:13646;;;;;;;;;;;;;;;7878:72;1297:13646;;-1:-1:-1;;;7920:30:176;;1297:13646;;7920:30;;1297:13646;;;;;;;;;;;;:::i;6710:119::-;6768:50;;;;;1297:13646;6768:50;1297:13646;;;;;;6768:50;6650;6679:21;;;1297:13646;6679:21;1297:13646;;6679:21;1297:13646;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;:::i;:::-;;;1830:17:242;-1:-1:-1;;;;;1297:13646:176;;;;;2054:31:242;;;;1297:13646:176;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;:::i;:::-;-1:-1:-1;;;;;14091:38:176;;:::i;:::-;1297:13646;-1:-1:-1;;;;;1297:13646:176;;6441:34:239;6437:102;;6549:37;1297:13646:176;;;6549:37:239;:::i;6437:102::-;6498:30;;;1297:13646:176;6498:30:239;1297:13646:176;;6498:30:239;1297:13646:176;;;;;;-1:-1:-1;;1297:13646:176;;;;5350:25:239;1297:13646:176;;;;:::i;:::-;5320:18:239;3202:4;5320:18;;-1:-1:-1;1297:13646:176;-1:-1:-1;;;;;;;;;;;1297:13646:176;;4919:24:239;1297:13646:176;-1:-1:-1;1297:13646:176;4919:24:239;1297:13646:176;4759:191:239;;3202:4;5350:25;:::i;1297:13646:176:-;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;;-1:-1:-1;1297:13646:176;-1:-1:-1;;;;;;;;;;;1297:13646:176;;4919:24:239;1297:13646:176;-1:-1:-1;1297:13646:176;4919:24:239;1297:13646:176;4759:191:239;;1297:13646:176;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;11993:9;1297:13646;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;:::i;:::-;11645:22;1297:13646;;;11645:22;;;;;;1297:13646;;;;;;;;;;11645:22;;;;;;;;;;:::i;:::-;1297:13646;11635:33;;1297:13646;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13542:56:176;;;:130;;;;1297:13646;13542:170;;;;1297:13646;;;;;;;13542:170;-1:-1:-1;;;3551:47:239;;;-1:-1:-1;3551:87:239;;;;13542:170:176;;;;;3551:87:239;-1:-1:-1;;;1134:40:252;;-1:-1:-1;3551:87:239;;;13542:130:176;-1:-1:-1;;;13614:58:176;;;-1:-1:-1;13542:130:176;;1297:13646;;;;;;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1297:13646:176;;;;;;;;-1:-1:-1;;1297:13646:176;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;:::o;:::-;;;11645:22;;1297:13646;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;:::o;:::-;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;1297:13646:176;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1297:13646:176;;;;;;;;-1:-1:-1;;1297:13646:176;;;;:::o;:::-;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;11645:22;1297:13646;;-1:-1:-1;;1297:13646:176;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1297:13646:176;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;1297:13646:176;;-1:-1:-1;1297:13646:176;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;1297:13646:176;;;;;12542:1;1297:13646;;;;;;12542:1;-1:-1:-1;1297:13646:176;;-1:-1:-1;1297:13646:176;;;-1:-1:-1;1297:13646:176;:::o;:::-;6952:9;1297:13646;;;;;;;;6952:9;1297:13646;;6952:9;1297:13646;6952:9;1297:13646;;;;;;6952:9;-1:-1:-1;1297:13646:176;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;1297:13646:176;;;;;;;;;;;;;;:::o;:::-;11645:22;;;;;;;;1297:13646;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;1297:13646:176;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1297:13646:176;;;;;-1:-1:-1;1297:13646:176;;-1:-1:-1;1297:13646:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4148:103:239;14091:38:176;;:::i;:::-;-1:-1:-1;;;;;1297:13646:176;;-1:-1:-1;1297:13646:176;;;;;;;;;;;;4468:23:239;4464:108;;4148:103;:::o;4464:108::-;-1:-1:-1;;;;4514:47:239;;;-1:-1:-1;;;;;1297:13646:176;;;;4514:47:239;1297:13646:176;658:27:143;1297:13646:176;;;;4514:47:239;4148:103;14091:38:176;;:::i;:::-;1297:13646;-1:-1:-1;1297:13646:176;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;-1:-1:-1;1297:13646:176;;;;;;;;-1:-1:-1;1297:13646:176;;;;;-1:-1:-1;1297:13646:176;;;4468:23:239;4464:108;;4148:103;;:::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:239;1297:13646:176;;;;;;4514:47:239;1297:13646:176;;;;-1:-1:-1;4514:47:239;7270:387;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;14091:38;;:::i;:::-;1297:13646;;-1:-1:-1;;;;;1297:13646:176;;7532:40:239;1297:13646:176;;7532:40:239;7509:4;7586:11;:::o;7432:219::-;7628:12;1297:13646:176;7628:12:239;:::o;7270:387::-;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;14091:38;;:::i;:::-;1297:13646;;-1:-1:-1;;;;;1297:13646:176;658:27:143;7532:40:239;1297:13646:176;;7532:40:239;7509:4;7586:11;:::o;7270:387::-;1297:13646:176;;;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;;;14091:38;;:::i;:::-;1297:13646;;-1:-1:-1;;;;;1297:13646:176;;7532:40:239;1297:13646:176;;7532:40:239;7509:4;7586:11;:::o;7432:219::-;7628:12;;1297:13646:176;7628:12:239;:::o;7894:388::-;1297:13646:176;;;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;;;;;-1:-1:-1;;;;;1297:13646:176;;;;;;;;;;;;-1:-1:-1;;1297:13646:176;;;14091:38;;:::i;:::-;1297:13646;;-1:-1:-1;;;;;1297:13646:176;;8157:40:239;1297:13646:176;;8157:40:239;1297:13646:176;8211:11:239;:::o;2329:429:242:-;2545:10;1830:17;-1:-1:-1;;;;;1297:13646:176;2054:31:242;;2526:71;;2329:429;2522:230;;;1297:13646:176;;2435:8:242;1297:13646:176;2435:8:242;1297:13646:176;;;;;;;;2613:72:242:o;2522:230::-;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;;7082:141:243;1297:13646:176;-1:-1:-1;;;;;;;;;;;1297:13646:176;;;;7148:18:243;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:243;;-1:-1:-1;7189:17:243",
    "linkReferences": {},
    "immutableReferences": {
      "59716": [
        {
          "start": 3160,
          "length": 32
        },
        {
          "start": 4305,
          "length": 32
        },
        {
          "start": 7015,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "batchRegisterTopicSchemes(string[],string[])": "58280e98",
    "getAllTopicIds()": "c4456bda",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getTopicId(string)": "138309b7",
    "getTopicSchemeCount()": "172a0ddb",
    "getTopicSchemeSignature(uint256)": "bd2716b5",
    "getTopicSchemeSignatureByName(string)": "6aa085eb",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasTopicScheme(uint256)": "6cc45eca",
    "hasTopicSchemeByName(string)": "e7a3d72b",
    "initialize(address,address[])": "946d9204",
    "isTrustedForwarder(address)": "572b6c05",
    "registerTopicScheme(string,string)": "dafb0ca3",
    "removeTopicScheme(string)": "c6f1bf23",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "trustedForwarder()": "7da0a877",
    "updateTopicScheme(string,string)": "f263b663"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"namesLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signaturesLength\",\"type\":\"uint256\"}],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyArraysProvided\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"}],\"name\":\"SignatureUnchanged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"}],\"name\":\"TopicIdNotFoundInArray\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"TopicSchemeAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"}],\"name\":\"TopicSchemeDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"TopicSchemeDoesNotExistByName\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"}],\"name\":\"TopicSchemeRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"TopicSchemeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldSignature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newSignature\",\"type\":\"string\"}],\"name\":\"TopicSchemeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"topicIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"}],\"name\":\"TopicSchemesBatchRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"}],\"name\":\"batchRegisterTopicSchemes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTopicIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"topicIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getTopicId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTopicSchemeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"}],\"name\":\"getTopicSchemeSignature\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getTopicSchemeSignatureByName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topicId\",\"type\":\"uint256\"}],\"name\":\"hasTopicScheme\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"hasTopicSchemeByName\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"initialRegistrars\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"}],\"name\":\"registerTopicScheme\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"removeTopicScheme\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newSignature\",\"type\":\"string\"}],\"name\":\"updateTopicScheme\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This contract manages the registration and lifecycle of topic schemes used for claim data structures\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ArrayLengthMismatch(uint256,uint256)\":[{\"params\":{\"namesLength\":\"The length of the names array\",\"signaturesLength\":\"The length of the signatures array\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SignatureUnchanged(string,string)\":[{\"params\":{\"name\":\"The name of the topic scheme being updated\",\"signature\":\"The signature that is already set\"}}],\"TopicIdNotFoundInArray(uint256)\":[{\"params\":{\"topicId\":\"The topic ID that was not found\"}}],\"TopicSchemeAlreadyExists(string)\":[{\"params\":{\"name\":\"The name that already exists\"}}],\"TopicSchemeDoesNotExist(uint256)\":[{\"params\":{\"topicId\":\"The topic ID that doesn't exist\"}}],\"TopicSchemeDoesNotExistByName(string)\":[{\"params\":{\"name\":\"The name that doesn't exist\"}}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TopicSchemeRegistered(address,uint256,string,string)\":{\"params\":{\"name\":\"The name of the registered topic scheme\",\"sender\":\"The address that registered the topic scheme\",\"signature\":\"The signature associated with the topic scheme\",\"topicId\":\"The unique identifier of the registered topic scheme\"}},\"TopicSchemeRemoved(address,uint256,string)\":{\"params\":{\"name\":\"The name of the removed topic scheme\",\"sender\":\"The address that removed the topic scheme\",\"topicId\":\"The unique identifier of the removed topic scheme\"}},\"TopicSchemeUpdated(address,uint256,string,string,string)\":{\"params\":{\"name\":\"The name of the updated topic scheme\",\"newSignature\":\"The new signature\",\"oldSignature\":\"The previous signature\",\"sender\":\"The address that updated the topic scheme\",\"topicId\":\"The unique identifier of the updated topic scheme\"}},\"TopicSchemesBatchRegistered(address,uint256[],string[],string[])\":{\"params\":{\"names\":\"The names of the registered topic schemes\",\"sender\":\"The address that registered the topic schemes\",\"signatures\":\"The signatures associated with the topic schemes\",\"topicIds\":\"The unique identifiers of the registered topic schemes\"}}},\"kind\":\"dev\",\"methods\":{\"batchRegisterTopicSchemes(string[],string[])\":{\"details\":\"topicIds are generated from names using keccak256 hash\",\"params\":{\"names\":\"Array of human-readable names for the topic schemes\",\"signatures\":\"Array of signature strings used for encoding/decoding data\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"details\":\"Initializes ERC2771Context with trusted forwarder and disables initializers for UUPS pattern\",\"params\":{\"trustedForwarder\":\"The address of the trusted forwarder for meta-transactions\"}},\"getAllTopicIds()\":{\"returns\":{\"topicIds\":\"Array of all registered topic scheme identifiers\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTopicId(string)\":{\"params\":{\"name\":\"The name of the topic scheme\"},\"returns\":{\"topicId\":\"The unique identifier generated from the name\"}},\"getTopicSchemeCount()\":{\"returns\":{\"count\":\"The number of registered topic schemes\"}},\"getTopicSchemeSignature(uint256)\":{\"params\":{\"topicId\":\"The unique identifier of the topic scheme\"},\"returns\":{\"signature\":\"The signature string for the topic scheme\"}},\"getTopicSchemeSignatureByName(string)\":{\"params\":{\"name\":\"The name of the topic scheme\"},\"returns\":{\"signature\":\"The signature string for the topic scheme\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasTopicScheme(uint256)\":{\"params\":{\"topicId\":\"The unique identifier to check\"},\"returns\":{\"exists\":\"True if the topic scheme is registered, false otherwise\"}},\"hasTopicSchemeByName(string)\":{\"params\":{\"name\":\"The name to check\"},\"returns\":{\"exists\":\"True if the topic scheme is registered, false otherwise\"}},\"initialize(address,address[])\":{\"details\":\"Sets up access control and grants initial roles to the admin\",\"params\":{\"initialAdmin\":\"The address that will receive admin and registrar roles\",\"initialRegistrars\":\"The addresses that will receive registrar roles\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"registerTopicScheme(string,string)\":{\"details\":\"topicId is generated as uint256(keccak256(abi.encodePacked(name)))\",\"params\":{\"name\":\"The human-readable name for the topic scheme\",\"signature\":\"The signature string used for encoding/decoding data\"}},\"removeTopicScheme(string)\":{\"params\":{\"name\":\"The name of the topic scheme to remove\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Supports ISMARTTopicSchemeRegistry and inherited interfaces\",\"params\":{\"interfaceId\":\"The interface identifier to check\"},\"returns\":{\"_0\":\"True if the interface is supported\"}},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"updateTopicScheme(string,string)\":{\"params\":{\"name\":\"The name of the topic scheme to update\",\"newSignature\":\"The new signature string\"}}},\"stateVariables\":{\"_topicIdIndex\":{\"details\":\"Used for efficient removal from _topicIds array using swap-and-pop technique Value of 0 means the topic ID is not in the array, non-zero values represent (actualIndex + 1)\"},\"_topicIds\":{\"details\":\"Allows iteration over all registered topic schemes\"},\"_topicSchemes\":{\"details\":\"Maps topicId => TopicScheme struct containing id, signature, and existence flag\"}},\"title\":\"ATK Topic Scheme Registry Implementation\",\"version\":1},\"userdoc\":{\"errors\":{\"ArrayLengthMismatch(uint256,uint256)\":[{\"notice\":\"Error thrown when input arrays have mismatched lengths\"}],\"EmptyArraysProvided()\":[{\"notice\":\"Error thrown when attempting batch operations with empty arrays\"}],\"EmptyName()\":[{\"notice\":\"Error thrown when attempting to register a topic scheme with an empty name\"}],\"EmptySignature()\":[{\"notice\":\"Error thrown when attempting to register a topic scheme with an empty signature\"}],\"SignatureUnchanged(string,string)\":[{\"notice\":\"Error thrown when attempting to update a topic scheme with the same signature\"}],\"TopicIdNotFoundInArray(uint256)\":[{\"notice\":\"Error thrown when a topic ID is not found in the enumeration array during removal\"}],\"TopicSchemeAlreadyExists(string)\":[{\"notice\":\"Error thrown when attempting to register a topic scheme that already exists\"}],\"TopicSchemeDoesNotExist(uint256)\":[{\"notice\":\"Error thrown when attempting to operate on a topic scheme that doesn't exist\"}],\"TopicSchemeDoesNotExistByName(string)\":[{\"notice\":\"Error thrown when attempting to operate on a topic scheme that doesn't exist by name\"}]},\"events\":{\"TopicSchemeRegistered(address,uint256,string,string)\":{\"notice\":\"Emitted when a new topic scheme is registered\"},\"TopicSchemeRemoved(address,uint256,string)\":{\"notice\":\"Emitted when a topic scheme is removed\"},\"TopicSchemeUpdated(address,uint256,string,string,string)\":{\"notice\":\"Emitted when a topic scheme is updated\"},\"TopicSchemesBatchRegistered(address,uint256[],string[],string[])\":{\"notice\":\"Emitted when multiple topic schemes are registered in batch\"}},\"kind\":\"user\",\"methods\":{\"batchRegisterTopicSchemes(string[],string[])\":{\"notice\":\"Registers multiple topic schemes in a single transaction\"},\"constructor\":{\"notice\":\"Constructor for the SMARTTopicSchemeRegistryImplementation\"},\"getAllTopicIds()\":{\"notice\":\"Gets all registered topic IDs\"},\"getTopicId(string)\":{\"notice\":\"Gets the topic ID for a given name\"},\"getTopicSchemeCount()\":{\"notice\":\"Gets the total number of registered topic schemes\"},\"getTopicSchemeSignature(uint256)\":{\"notice\":\"Gets the signature for a specific topic scheme by ID\"},\"getTopicSchemeSignatureByName(string)\":{\"notice\":\"Gets the signature for a specific topic scheme by name\"},\"hasTopicScheme(uint256)\":{\"notice\":\"Checks if a topic scheme exists by ID\"},\"hasTopicSchemeByName(string)\":{\"notice\":\"Checks if a topic scheme exists by name\"},\"initialize(address,address[])\":{\"notice\":\"Initializes the SMARTTopicSchemeRegistryImplementation contract\"},\"registerTopicScheme(string,string)\":{\"notice\":\"Registers a new topic scheme with its name and signature\"},\"removeTopicScheme(string)\":{\"notice\":\"Removes a topic scheme from the registry\"},\"supportsInterface(bytes4)\":{\"notice\":\"Returns true if this contract implements the interface defined by interfaceId\"},\"updateTopicScheme(string,string)\":{\"notice\":\"Updates an existing topic scheme's signature\"}},\"notice\":\"Implementation for managing topic schemes with their signatures for data encoding/decoding\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/topic-scheme-registry/ATKTopicSchemeRegistryImplementation.sol\":\"ATKTopicSchemeRegistryImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/smart/interface/ISMARTTopicSchemeRegistry.sol\":{\"keccak256\":\"0xec5e42dcf7d929f8a0db42c9c8a0fa81d089a9f7177b7da10df029f94334ca8a\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://e346e3241e3110b3f17d2b244a49d68a1d79c6928bef7d372ea3458c1029cea0\",\"dweb:/ipfs/QmeSyCYN9qYXRjn799fRFP7X9apf7bubVhnFEUGQatx3xd\"]},\"contracts/system/ATKSystemRoles.sol\":{\"keccak256\":\"0x880cc7f3eb0ec9ad022494e53e690b4e70a3381f17a9de2a64fe0155767e27de\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://6d39377217ea5aa2652398b135ed475a026c070dbe64869e8cea6c7d3fc3ac1a\",\"dweb:/ipfs/QmaKPMcyJYbpD8iMNT3mPqNxZBoizJUXhAw9piSigYFTS9\"]},\"contracts/system/topic-scheme-registry/ATKTopicSchemeRegistryImplementation.sol\":{\"keccak256\":\"0x7d1e9d14b86975f894428253953b0387098634fcbfd3377e6ed2340cb5b82280\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://88715b5e8645714a7d0cf6ed10635aa13d1d78ad3260b4386a9b66a2b5c9174e\",\"dweb:/ipfs/QmSuYE9FNqNWnS9t4GPe5G6PhhdRwL7iACPxCJx9NEUbUM\"]},\"contracts/system/topic-scheme-registry/IATKTopicSchemeRegistry.sol\":{\"keccak256\":\"0x79a87fb5f12dde5d23cea0b682df3a7af68b42d64bfe47fa1dcf83eb9fd3fd10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54943d29ce96388928757d8976582127a79ef917e1c0bcc114b5394f33b1cf8\",\"dweb:/ipfs/QmRn7Hkze8rxjNW8wZon5GX42XZoNSzDhRpPtYtSzrfCpp\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trustedForwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "namesLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "signaturesLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyArraysProvided"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyName"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptySignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "signature",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "SignatureUnchanged"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "topicId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TopicIdNotFoundInArray"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "TopicSchemeAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "topicId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TopicSchemeDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "TopicSchemeDoesNotExistByName"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topicId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "signature",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TopicSchemeRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topicId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TopicSchemeRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "topicId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "oldSignature",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newSignature",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TopicSchemeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "topicIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]",
              "indexed": false
            },
            {
              "internalType": "string[]",
              "name": "signatures",
              "type": "string[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TopicSchemesBatchRegistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string[]",
              "name": "names",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "signatures",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRegisterTopicSchemes"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllTopicIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "topicIds",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTopicId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "topicId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTopicSchemeCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "topicId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTopicSchemeSignature",
          "outputs": [
            {
              "internalType": "string",
              "name": "signature",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTopicSchemeSignatureByName",
          "outputs": [
            {
              "internalType": "string",
              "name": "signature",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "topicId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasTopicScheme",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasTopicSchemeByName",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialAdmin",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "initialRegistrars",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "signature",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerTopicScheme"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeTopicScheme"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "newSignature",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTopicScheme"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchRegisterTopicSchemes(string[],string[])": {
            "details": "topicIds are generated from names using keccak256 hash",
            "params": {
              "names": "Array of human-readable names for the topic schemes",
              "signatures": "Array of signature strings used for encoding/decoding data"
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor",
            "details": "Initializes ERC2771Context with trusted forwarder and disables initializers for UUPS pattern",
            "params": {
              "trustedForwarder": "The address of the trusted forwarder for meta-transactions"
            }
          },
          "getAllTopicIds()": {
            "returns": {
              "topicIds": "Array of all registered topic scheme identifiers"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getTopicId(string)": {
            "params": {
              "name": "The name of the topic scheme"
            },
            "returns": {
              "topicId": "The unique identifier generated from the name"
            }
          },
          "getTopicSchemeCount()": {
            "returns": {
              "count": "The number of registered topic schemes"
            }
          },
          "getTopicSchemeSignature(uint256)": {
            "params": {
              "topicId": "The unique identifier of the topic scheme"
            },
            "returns": {
              "signature": "The signature string for the topic scheme"
            }
          },
          "getTopicSchemeSignatureByName(string)": {
            "params": {
              "name": "The name of the topic scheme"
            },
            "returns": {
              "signature": "The signature string for the topic scheme"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "hasTopicScheme(uint256)": {
            "params": {
              "topicId": "The unique identifier to check"
            },
            "returns": {
              "exists": "True if the topic scheme is registered, false otherwise"
            }
          },
          "hasTopicSchemeByName(string)": {
            "params": {
              "name": "The name to check"
            },
            "returns": {
              "exists": "True if the topic scheme is registered, false otherwise"
            }
          },
          "initialize(address,address[])": {
            "details": "Sets up access control and grants initial roles to the admin",
            "params": {
              "initialAdmin": "The address that will receive admin and registrar roles",
              "initialRegistrars": "The addresses that will receive registrar roles"
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "registerTopicScheme(string,string)": {
            "details": "topicId is generated as uint256(keccak256(abi.encodePacked(name)))",
            "params": {
              "name": "The human-readable name for the topic scheme",
              "signature": "The signature string used for encoding/decoding data"
            }
          },
          "removeTopicScheme(string)": {
            "params": {
              "name": "The name of the topic scheme to remove"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Supports ISMARTTopicSchemeRegistry and inherited interfaces",
            "params": {
              "interfaceId": "The interface identifier to check"
            },
            "returns": {
              "_0": "True if the interface is supported"
            }
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          },
          "updateTopicScheme(string,string)": {
            "params": {
              "name": "The name of the topic scheme to update",
              "newSignature": "The new signature string"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchRegisterTopicSchemes(string[],string[])": {
            "notice": "Registers multiple topic schemes in a single transaction"
          },
          "constructor": {
            "notice": "Constructor for the SMARTTopicSchemeRegistryImplementation"
          },
          "getAllTopicIds()": {
            "notice": "Gets all registered topic IDs"
          },
          "getTopicId(string)": {
            "notice": "Gets the topic ID for a given name"
          },
          "getTopicSchemeCount()": {
            "notice": "Gets the total number of registered topic schemes"
          },
          "getTopicSchemeSignature(uint256)": {
            "notice": "Gets the signature for a specific topic scheme by ID"
          },
          "getTopicSchemeSignatureByName(string)": {
            "notice": "Gets the signature for a specific topic scheme by name"
          },
          "hasTopicScheme(uint256)": {
            "notice": "Checks if a topic scheme exists by ID"
          },
          "hasTopicSchemeByName(string)": {
            "notice": "Checks if a topic scheme exists by name"
          },
          "initialize(address,address[])": {
            "notice": "Initializes the SMARTTopicSchemeRegistryImplementation contract"
          },
          "registerTopicScheme(string,string)": {
            "notice": "Registers a new topic scheme with its name and signature"
          },
          "removeTopicScheme(string)": {
            "notice": "Removes a topic scheme from the registry"
          },
          "supportsInterface(bytes4)": {
            "notice": "Returns true if this contract implements the interface defined by interfaceId"
          },
          "updateTopicScheme(string,string)": {
            "notice": "Updates an existing topic scheme's signature"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/system/topic-scheme-registry/ATKTopicSchemeRegistryImplementation.sol": "ATKTopicSchemeRegistryImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/smart/interface/ISMARTTopicSchemeRegistry.sol": {
        "keccak256": "0xec5e42dcf7d929f8a0db42c9c8a0fa81d089a9f7177b7da10df029f94334ca8a",
        "urls": [
          "bzz-raw://e346e3241e3110b3f17d2b244a49d68a1d79c6928bef7d372ea3458c1029cea0",
          "dweb:/ipfs/QmeSyCYN9qYXRjn799fRFP7X9apf7bubVhnFEUGQatx3xd"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/ATKSystemRoles.sol": {
        "keccak256": "0x880cc7f3eb0ec9ad022494e53e690b4e70a3381f17a9de2a64fe0155767e27de",
        "urls": [
          "bzz-raw://6d39377217ea5aa2652398b135ed475a026c070dbe64869e8cea6c7d3fc3ac1a",
          "dweb:/ipfs/QmaKPMcyJYbpD8iMNT3mPqNxZBoizJUXhAw9piSigYFTS9"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/topic-scheme-registry/ATKTopicSchemeRegistryImplementation.sol": {
        "keccak256": "0x7d1e9d14b86975f894428253953b0387098634fcbfd3377e6ed2340cb5b82280",
        "urls": [
          "bzz-raw://88715b5e8645714a7d0cf6ed10635aa13d1d78ad3260b4386a9b66a2b5c9174e",
          "dweb:/ipfs/QmSuYE9FNqNWnS9t4GPe5G6PhhdRwL7iACPxCJx9NEUbUM"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/system/topic-scheme-registry/IATKTopicSchemeRegistry.sol": {
        "keccak256": "0x79a87fb5f12dde5d23cea0b682df3a7af68b42d64bfe47fa1dcf83eb9fd3fd10",
        "urls": [
          "bzz-raw://c54943d29ce96388928757d8976582127a79ef917e1c0bcc114b5394f33b1cf8",
          "dweb:/ipfs/QmRn7Hkze8rxjNW8wZon5GX42XZoNSzDhRpPtYtSzrfCpp"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534",
        "urls": [
          "bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da",
          "dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "batchRegisterTopicSchemes(string[],string[])": {
        "notice": "Registers multiple topic schemes in a single transaction"
      },
      "constructor": {
        "notice": "Constructor for the SMARTTopicSchemeRegistryImplementation"
      },
      "getAllTopicIds()": {
        "notice": "Gets all registered topic IDs"
      },
      "getTopicId(string)": {
        "notice": "Gets the topic ID for a given name"
      },
      "getTopicSchemeCount()": {
        "notice": "Gets the total number of registered topic schemes"
      },
      "getTopicSchemeSignature(uint256)": {
        "notice": "Gets the signature for a specific topic scheme by ID"
      },
      "getTopicSchemeSignatureByName(string)": {
        "notice": "Gets the signature for a specific topic scheme by name"
      },
      "hasTopicScheme(uint256)": {
        "notice": "Checks if a topic scheme exists by ID"
      },
      "hasTopicSchemeByName(string)": {
        "notice": "Checks if a topic scheme exists by name"
      },
      "initialize(address,address[])": {
        "notice": "Initializes the SMARTTopicSchemeRegistryImplementation contract"
      },
      "registerTopicScheme(string,string)": {
        "notice": "Registers a new topic scheme with its name and signature"
      },
      "removeTopicScheme(string)": {
        "notice": "Removes a topic scheme from the registry"
      },
      "supportsInterface(bytes4)": {
        "notice": "Returns true if this contract implements the interface defined by interfaceId"
      },
      "updateTopicScheme(string,string)": {
        "notice": "Updates an existing topic scheme's signature"
      }
    },
    "events": {
      "TopicSchemeRegistered(address,uint256,string,string)": {
        "notice": "Emitted when a new topic scheme is registered"
      },
      "TopicSchemeRemoved(address,uint256,string)": {
        "notice": "Emitted when a topic scheme is removed"
      },
      "TopicSchemeUpdated(address,uint256,string,string,string)": {
        "notice": "Emitted when a topic scheme is updated"
      },
      "TopicSchemesBatchRegistered(address,uint256[],string[],string[])": {
        "notice": "Emitted when multiple topic schemes are registered in batch"
      }
    },
    "errors": {
      "ArrayLengthMismatch(uint256,uint256)": [
        {
          "notice": "Error thrown when input arrays have mismatched lengths"
        }
      ],
      "EmptyArraysProvided()": [
        {
          "notice": "Error thrown when attempting batch operations with empty arrays"
        }
      ],
      "EmptyName()": [
        {
          "notice": "Error thrown when attempting to register a topic scheme with an empty name"
        }
      ],
      "EmptySignature()": [
        {
          "notice": "Error thrown when attempting to register a topic scheme with an empty signature"
        }
      ],
      "SignatureUnchanged(string,string)": [
        {
          "notice": "Error thrown when attempting to update a topic scheme with the same signature"
        }
      ],
      "TopicIdNotFoundInArray(uint256)": [
        {
          "notice": "Error thrown when a topic ID is not found in the enumeration array during removal"
        }
      ],
      "TopicSchemeAlreadyExists(string)": [
        {
          "notice": "Error thrown when attempting to register a topic scheme that already exists"
        }
      ],
      "TopicSchemeDoesNotExist(uint256)": [
        {
          "notice": "Error thrown when attempting to operate on a topic scheme that doesn't exist"
        }
      ],
      "TopicSchemeDoesNotExistByName(string)": [
        {
          "notice": "Error thrown when attempting to operate on a topic scheme that doesn't exist by name"
        }
      ]
    },
    "notice": "Implementation for managing topic schemes with their signatures for data encoding/decoding"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This contract manages the registration and lifecycle of topic schemes used for claim data structures",
    "methods": {
      "batchRegisterTopicSchemes(string[],string[])": {
        "details": "topicIds are generated from names using keccak256 hash",
        "params": {
          "names": "Array of human-readable names for the topic schemes",
          "signatures": "Array of signature strings used for encoding/decoding data"
        }
      },
      "constructor": {
        "details": "Initializes ERC2771Context with trusted forwarder and disables initializers for UUPS pattern",
        "params": {
          "trustedForwarder": "The address of the trusted forwarder for meta-transactions"
        }
      },
      "getAllTopicIds()": {
        "returns": {
          "topicIds": "Array of all registered topic scheme identifiers"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getTopicId(string)": {
        "params": {
          "name": "The name of the topic scheme"
        },
        "returns": {
          "topicId": "The unique identifier generated from the name"
        }
      },
      "getTopicSchemeCount()": {
        "returns": {
          "count": "The number of registered topic schemes"
        }
      },
      "getTopicSchemeSignature(uint256)": {
        "params": {
          "topicId": "The unique identifier of the topic scheme"
        },
        "returns": {
          "signature": "The signature string for the topic scheme"
        }
      },
      "getTopicSchemeSignatureByName(string)": {
        "params": {
          "name": "The name of the topic scheme"
        },
        "returns": {
          "signature": "The signature string for the topic scheme"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "hasTopicScheme(uint256)": {
        "params": {
          "topicId": "The unique identifier to check"
        },
        "returns": {
          "exists": "True if the topic scheme is registered, false otherwise"
        }
      },
      "hasTopicSchemeByName(string)": {
        "params": {
          "name": "The name to check"
        },
        "returns": {
          "exists": "True if the topic scheme is registered, false otherwise"
        }
      },
      "initialize(address,address[])": {
        "details": "Sets up access control and grants initial roles to the admin",
        "params": {
          "initialAdmin": "The address that will receive admin and registrar roles",
          "initialRegistrars": "The addresses that will receive registrar roles"
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "registerTopicScheme(string,string)": {
        "details": "topicId is generated as uint256(keccak256(abi.encodePacked(name)))",
        "params": {
          "name": "The human-readable name for the topic scheme",
          "signature": "The signature string used for encoding/decoding data"
        }
      },
      "removeTopicScheme(string)": {
        "params": {
          "name": "The name of the topic scheme to remove"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Supports ISMARTTopicSchemeRegistry and inherited interfaces",
        "params": {
          "interfaceId": "The interface identifier to check"
        },
        "returns": {
          "_0": "True if the interface is supported"
        }
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      },
      "updateTopicScheme(string,string)": {
        "params": {
          "name": "The name of the topic scheme to update",
          "newSignature": "The new signature string"
        }
      }
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "TopicSchemeRegistered(address,uint256,string,string)": {
        "params": {
          "name": "The name of the registered topic scheme",
          "sender": "The address that registered the topic scheme",
          "signature": "The signature associated with the topic scheme",
          "topicId": "The unique identifier of the registered topic scheme"
        }
      },
      "TopicSchemeRemoved(address,uint256,string)": {
        "params": {
          "name": "The name of the removed topic scheme",
          "sender": "The address that removed the topic scheme",
          "topicId": "The unique identifier of the removed topic scheme"
        }
      },
      "TopicSchemeUpdated(address,uint256,string,string,string)": {
        "params": {
          "name": "The name of the updated topic scheme",
          "newSignature": "The new signature",
          "oldSignature": "The previous signature",
          "sender": "The address that updated the topic scheme",
          "topicId": "The unique identifier of the updated topic scheme"
        }
      },
      "TopicSchemesBatchRegistered(address,uint256[],string[],string[])": {
        "params": {
          "names": "The names of the registered topic schemes",
          "sender": "The address that registered the topic schemes",
          "signatures": "The signatures associated with the topic schemes",
          "topicIds": "The unique identifiers of the registered topic schemes"
        }
      }
    },
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "ArrayLengthMismatch(uint256,uint256)": [
        {
          "params": {
            "namesLength": "The length of the names array",
            "signaturesLength": "The length of the signatures array"
          }
        }
      ],
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "SignatureUnchanged(string,string)": [
        {
          "params": {
            "name": "The name of the topic scheme being updated",
            "signature": "The signature that is already set"
          }
        }
      ],
      "TopicIdNotFoundInArray(uint256)": [
        {
          "params": {
            "topicId": "The topic ID that was not found"
          }
        }
      ],
      "TopicSchemeAlreadyExists(string)": [
        {
          "params": {
            "name": "The name that already exists"
          }
        }
      ],
      "TopicSchemeDoesNotExist(uint256)": [
        {
          "params": {
            "topicId": "The topic ID that doesn't exist"
          }
        }
      ],
      "TopicSchemeDoesNotExistByName(string)": [
        {
          "params": {
            "name": "The name that doesn't exist"
          }
        }
      ]
    },
    "title": "ATK Topic Scheme Registry Implementation"
  },
  "id": 176
}