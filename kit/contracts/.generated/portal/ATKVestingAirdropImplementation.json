{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "forwarder_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_BATCH_SIZE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchClaim",
      "inputs": [
        {
          "name": "indices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "totalAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "merkleProofs",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchInitializeVesting",
      "inputs": [
        {
          "name": "indices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "totalAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "merkleProofs",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimPeriodEnd",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimTracker",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IATKClaimTracker"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimedAmount",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getInitializationTimestamp",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "token_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "root_",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "owner_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "vestingStrategy_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initializationDeadline_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initializeVesting",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isClaimed",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isVestingInitialized",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "merkleRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setVestingStrategy",
      "inputs": [
        {
          "name": "newVestingStrategy_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "token",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "vestingStrategy",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IATKVestingStrategy"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdrawTokens",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "BatchClaimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "indices",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchVestingInitialized",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "indices",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "totalAmounts",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Claimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensWithdrawn",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VestingInitialized",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VestingStrategyUpdated",
      "inputs": [
        {
          "name": "oldStrategy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newStrategy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "BatchSizeExceedsLimit",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IndexAlreadyClaimed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InitializationDeadlinePassed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidClaimAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidClaimTrackerAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitializationDeadline",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInputArrayLengths",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMerkleProof",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMerkleRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidTokenAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidVestingStrategy",
      "inputs": [
        {
          "name": "vestingStrategy",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidVestingStrategyAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWithdrawalAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "VestingAlreadyInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "VestingNotInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroAmountToTransfer",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroClaimAmount",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a03461008857601f611d8738819003918201601f19168301916001600160401b0383118484101761008c5780849260209460405283398101031261008857516001600160a01b03811681036100885760805261005a6100a0565b6100626100a0565b604051611c3090816101378239608051818181610941015281816109f701526117aa0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f516020611d675f395f51905f525460ff8160401c16610127576002600160401b03196001600160401b038216016100d55750565b6001600160401b0319166001600160401b039081175f516020611d675f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b63f92ee8a960e01b5f5260045ffdfe60806040526004361015610011575f80fd5b5f3560e01c806310639fef14611206578063222abc11146111de5780632eb4a7ab146111c15780633da082a0146111a45780633ecfea49146110c357806341162b7514610f82578063429c6e5b14610f5c57806349df728c14610e735780634be7adee14610a5557806352ae2c2014610a2b578063572b6c05146109d7578063715018a6146109705780637da0a8771461092c5780638da5cb5b146108f8578063ae0b51df1461063f578063bd3f22b214610613578063cfdbf254146105f8578063e30e28f414610223578063f2fde38b146101f8578063f364c90c1461015e578063f567fa9d146101365763fc0c546a1461010b575f80fd5b34610132575f366003190112610132575f546040516001600160a01b039091168152602090f35b5f80fd5b34610132575f366003190112610132576003546040516001600160a01b039091168152602090f35b3461013257604036600319011261013257600254604051633cd9324360e21b81526004803590820152602480359082015290602090829060449082906001600160a01b03165afa80156101ed576020915f916101c0575b506040519015158152f35b6101e09150823d84116101e6575b6101d881836113a1565b8101906113c3565b826101b5565b503d6101ce565b6040513d5f823e3d90fd5b346101325760203660031901126101325761022161021461131a565b61021c6116c6565b611533565b005b346101325760a03660031901126101325761023c61131a565b6044356024356001600160a01b0382168203610132576064356001600160a01b038116939084900361013257608435915f516020611c045f395f51905f52549360ff8560401c16159467ffffffffffffffff8116801590816105f0575b60011490816105e6575b1590816105dd575b506105ce5767ffffffffffffffff1981166001175f516020611c045f395f51905f5255856105a2575b508515610593574284111561058457604051637c13428d60e11b81526020816004818a5afa5f9181610563575b506103195786632a4aa22360e11b5f5260045260245ffd5b9593949515610550576040516103988082019082821067ffffffffffffffff83111761053c57602091839161182c83393081520301905ff080156101ed576001600160a01b031692610369611800565b6001600160a01b031690811561052d57821561051e57831561050f576040516318160ddd60e01b8152602081600481865afa90816104e0575b506103b657630f58058360e11b5f5260045ffd5b604051633cd9324360e21b81525f600482018190526024820152602081604481885afa90816104c3575b506103f457632b58d96960e01b5f5260045ffd5b61040890610400611800565b61021c611800565b6001600160601b0360a01b5f5416175f556001556001600160601b0360a01b6002541617600255610437611800565b61043f611800565b60015f516020611be45f395f51905f52556001600160601b0360a01b600354161760035560045561046c57005b68ff0000000000000000195f516020611c045f395f51905f5254165f516020611c045f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b6104db9060203d6020116101e6576101d881836113a1565b6103e0565b6020813d602011610507575b816104f9602093836113a1565b8101031261013257516103a2565b3d91506104ec565b632b58d96960e01b5f5260045ffd5b639dd854d360e01b5f5260045ffd5b630f58058360e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b83632a4aa22360e11b5f5260045260245ffd5b61057d91925060203d6020116101e6576101d881836113a1565b9088610301565b6310b2668560e11b5f5260045ffd5b6385d923df60e01b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f516020611c045f395f51905f5255866102d4565b63f92ee8a960e01b5f5260045ffd5b905015886102ab565b303b1591506102a3565b879150610299565b34610132575f36600319011261013257602060405160648152f35b34610132576020366003190112610132576004355f526005602052602060405f20541515604051908152f35b346101325761064d366112e3565b92906106576115a4565b815f52600560205260405f2054156108e9576106d893825f52600560205260405f205491602061068685611468565b61068e6117a7565b6003546040516307a297ab60e01b81526001600160a01b038084166004830152602482018b9052604482019890985260648101939093529198909589921690829081906084820190565b03915afa9586156101ed575f966108b5575b5085156108a65760018060a01b036002541691604051633cd9324360e21b8152856004820152866024820152602081604481875afa9081156101ed575f91610887575b506108785761073e918685876115dc565b1561086957604051635ea05ef360e11b8152600481018490526024810186905260448101859052602081606481855afa9081156101ed575f9161084a575b501561083b57803b156101325760405163762ba3ff60e11b8152600481018490526024810186905260448101949094525f908490606490829084905af19182156101ed577f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a9360409361082b575b505f5461080390869084906001600160a01b0316611719565b825194855260208501526001600160a01b031692a260015f516020611be45f395f51905f5255005b5f610835916113a1565b856107ea565b63843ce46b60e01b5f5260045ffd5b610863915060203d6020116101e6576101d881836113a1565b8661077c565b63582f497d60e11b5f5260045ffd5b63b708ca1560e01b5f5260045ffd5b6108a0915060203d6020116101e6576101d881836113a1565b8861072d565b63723a162160e11b5f5260045ffd5b9095506020813d6020116108e1575b816108d1602093836113a1565b81010312610132575194866106ea565b3d91506108c4565b63d2e8cc1760e01b5f5260045ffd5b34610132575f366003190112610132575f516020611bc45f395f51905f52546040516001600160a01b039091168152602090f35b34610132575f366003190112610132576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610132575f366003190112610132576109886116c6565b5f516020611bc45f395f51905f5280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101325760203660031901126101325760206109f261131a565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610132576020366003190112610132576004355f526005602052602060405f2054604051908152f35b3461013257610a6336611330565b9391610a709591956115a4565b60648311610e6457808314801590610e5a575b610d5d57610a8f6117a7565b93610a99846114ed565b6003546001600160a01b03165f5b868110610d8157505080518381871491821592610d76575b50508015610d6c575b610d5d579591905f96610ada866114ed565b985f945b878610610ba65750505050505083610b04575b60015f516020611be45f395f51905f5255005b610b3391610b1c858560018060a01b035f5416611719565b604051948552606060208601526060850191611444565b8281036040840152602080855192838152019401905f5b818110610b90575050506001600160a01b0316917fb9df54cb8716695fe6cd84e5e4b88eca0d9c862970bcd45797aabb77d71b48ee919081900390a28080808080610af1565b8251865260209586019590920191600101610b4a565b90919293949998610bb88b89896113db565b359a610bc4818661151f565b51809c610bd2838a8a6113db565b35610bde8487896113ff565b9315610d4e5760018060a01b036002541693604051633cd9324360e21b8152846004820152836024820152602081604481895afa9081156101ed575f91610d30575b5061087857610c32918f8490866115dc565b1561086957610c6c8f826020916040519384928392635ea05ef360e11b845288600485016040919493926060820195825260208201520152565b0381875afa9081156101ed575f91610d12575b501561083b57823b156101325760405163762ba3ff60e11b81526004810192909252602482018f90526044820152905f908290606490829084905af180156101ed57610d02575b508b8201809211610cee576001919b610cdf828d61151f565b52019493929190999899610ade565b634e487b7160e01b5f52601160045260245ffd5b5f610d0c916113a1565b8c610cc6565b610d2a915060203d81116101e6576101d881836113a1565b5f610c7f565b610d48915060203d81116101e6576101d881836113a1565b5f610c20565b6360640efd60e11b5f5260045ffd5b632c635df560e11b5f5260045ffd5b5086831415610ac8565b14159050838a610abf565b610d8c8188886113db565b3590815f52600560205260405f2054156108e9576020610dad8288886113db565b35835f52600582528a610e01610dc760405f205496611468565b60405196879485946307a297ab60e01b86526004860190949392606092608083019660018060a01b03168352602083015260408201520152565b0381865afa80156101ed575f90610e28575b60019250610e21828661151f565b5201610aa7565b506020823d8211610e52575b81610e41602093836113a1565b810103126101325760019151610e13565b3d9150610e34565b5084811415610a83565b632a8677b560e21b5f5260045ffd5b3461013257602036600319011261013257610e8c61131a565b610e946116c6565b6001600160a01b038116908115610f4d575f546040516370a0823160e01b815230600482015291906001600160a01b0316602083602481845afa9283156101ed575f93610f15575b5091610f0c816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b95611719565b604051908152a2005b9250906020833d602011610f45575b81610f31602093836113a1565b810103126101325791519190610f0c610edc565b3d9150610f24565b634261081360e11b5f5260045ffd5b34610132576020366003190112610132576020610f7a600435611468565b604051908152f35b3461013257610f9036611330565b610f9e9593959492946115a4565b60648311610e64578483148015906110b9575b610d5d57610fbd6117a7565b9160045442116110aa575f5b84811061103f57505050611029907f8f59e3de0f866848efefecafdbbf1c97262b4187d7355cb68c9c6e50b6ead9a994611010604051958695604087526040870191611444565b84810360208601526001600160a01b0390921696611444565b0390a260015f516020611be45f395f51905f5255005b61104a8186886113db565b359061105781898b6113db565b35825f52600560205260405f205461109b57611080906110788387876113ff565b9188866115dc565b15610869576001915f5260056020524260405f205501610fc9565b638ef519d560e01b5f5260045ffd5b63df370ae560e01b5f5260045ffd5b5080851415610fb1565b34610132576020366003190112610132576110dc61131a565b6110e46116c6565b6001600160a01b0316801561059357604051637c13428d60e11b8152602081600481855afa5f9181611183575b506111295750632a4aa22360e11b5f5260045260245ffd5b1561117157600380546001600160a01b0319811683179091556001600160a01b03167fc831910db935648f19a9acfe07a53355b2d00e33523edf8b0b80aa48f6f5dca85f80a3005b632a4aa22360e11b5f5260045260245ffd5b61119d91925060203d6020116101e6576101d881836113a1565b9083611111565b34610132575f366003190112610132576020600454604051908152f35b34610132575f366003190112610132576020600154604051908152f35b34610132575f366003190112610132576002546040516001600160a01b039091168152602090f35b3461013257611214366112e3565b61121c6115a4565b835f52600560205260405f205461109b5760045442116110aa5761124991836112436117a7565b866115dc565b15610869575f82815260056020526040908190204290557ffaf76b5ef3ee6a1b42c79e4744b2596312a788e7cbbaee17f2db55bfc304f7de916001600160a01b036112926117a7565b169382519182526020820152a260015f516020611be45f395f51905f5255005b9181601f840112156101325782359167ffffffffffffffff8311610132576020808501948460051b01011161013257565b60606003198201126101325760043591602435916044359067ffffffffffffffff821161013257611316916004016112b2565b9091565b600435906001600160a01b038216820361013257565b60606003198201126101325760043567ffffffffffffffff8111610132578161135b916004016112b2565b9290929160243567ffffffffffffffff8111610132578161137e916004016112b2565b929092916044359067ffffffffffffffff821161013257611316916004016112b2565b90601f8019910116810190811067ffffffffffffffff82111761053c57604052565b90816020910312610132575180151581036101325790565b91908110156113eb5760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91908110156113eb5760051b81013590601e198136030182121561013257019081359167ffffffffffffffff8311610132576020018260051b36038113610132579190565b81835290916001600160fb1b0383116101325760209260051b809284830137010190565b60025460405163429c6e5b60e01b81526004810192909252602090829060249082906001600160a01b03165afa9081156101ed575f916114a6575090565b90506020813d6020116114cd575b816114c1602093836113a1565b81010312610132575190565b3d91506114b4565b67ffffffffffffffff811161053c5760051b60200190565b906114f7826114d5565b61150460405191826113a1565b8281528092611515601f19916114d5565b0190602036910137565b80518210156113eb5760209160051b010190565b6001600160a01b03168015611591575f516020611bc45f395f51905f5280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b631e4fbdf760e01b5f525f60045260245ffd5b60025f516020611be45f395f51905f5254146115cd5760025f516020611be45f395f51905f5255565b633ee5aeb560e01b5f5260045ffd5b9194929394604051916020830193845260018060a01b0316604083015260608201526060815261160d6080826113a1565b51902060405160208101918252602081526116296040826113a1565b51902060015492611639856114d5565b9461164760405196876113a1565b808652602086019060051b82019136831161013257905b8282106116b657505050905f915b84518310156116ae5761167f838661151f565b51908181101561169d575f52602052600160405f205b92019161166c565b905f52602052600160405f20611695565b915092501490565b813581526020918201910161165e565b5f516020611bc45f395f51905f52546001600160a01b03908116906116e96117a7565b16036116f157565b6116f96117a7565b63118cdaa760e01b5f9081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f916117576064826113a1565b519082855af1156101ed575f513d61179e57506001600160a01b0381163b155b61177e5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415611777565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806117f5575b156117f1576013193601368111610cee573560601c90565b3390565b5060143610156117d9565b60ff5f516020611c045f395f51905f525460401c161561181c57565b631afcd79f60e31b5f5260045ffdfe60803460b857601f61039838819003918201601f19168301916001600160401b0383118484101760bc5780849260209460405283398101031260b857516001600160a01b0381169081900360b857801560a5575f80546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36102c790816100d18239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c908163429c6e5b1461023357508063715018a6146101dc5780638da5cb5b146101b5578063bd40bde614610186578063ec5747fe14610125578063f2fde38b1461009c5763f364c90c14610069575f80fd5b34610098576040366003190112610098576004355f526001602052602060243560405f20541015604051908152f35b5f80fd5b34610098576020366003190112610098576004356001600160a01b03811690819003610098576100ca610294565b8015610112575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100985760407f08401774913e94f43659333293c99fdfdea868c488d679967e054abc8b5ae83461015636610259565b610161949294610294565b845f526001602052825f20610177838254610273565b905582519182526020820152a2005b346100985760206101ab61019936610259565b92915f526001845260405f2054610273565b1115604051908152f35b34610098575f366003190112610098575f546040516001600160a01b039091168152602090f35b34610098575f366003190112610098576101f4610294565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610098576020366003190112610098576020906004355f526001825260405f20548152f35b606090600319011261009857600435906024359060443590565b9190820180921161028057565b634e487b7160e01b5f52601160045260245ffd5b5f546001600160a01b031633036102a757565b63118cdaa760e01b5f523360045260245ffdfea164736f6c634300081c000a9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000af0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00",
    "sourceMap": "1891:12127:15:-:0;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12127:15;;;;;;1623:37:236;;4930:109:0;;:::i;:::-;3922:94:15;;:::i;:::-;1891:12127;;;;;;;;1623:37:236;1891:12127:15;;;;;;;;;;;;;;;;;-1:-1:-1;1891:12127:15;;;;;;-1:-1:-1;1891:12127:15;;;;;-1:-1:-1;1891:12127:15;7709:422:237;-1:-1:-1;;;;;;;;;;;1891:12127:15;;;;;;7894:76:237;;-1:-1:-1;;;;;;;;;;;1891:12127:15;;7983:34:237;7979:146;;7709:422;:::o;7979:146::-;-1:-1:-1;;;;;;1891:12127:15;-1:-1:-1;;;;;1891:12127:15;;;-1:-1:-1;;;;;;;;;;;1891:12127:15;;;;;;8085:29:237;;1891:12127:15;;8085:29:237;7709:422::o;7894:76::-;7936:23;;;-1:-1:-1;7936:23:237;;-1:-1:-1;7936:23:237",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c806310639fef14611206578063222abc11146111de5780632eb4a7ab146111c15780633da082a0146111a45780633ecfea49146110c357806341162b7514610f82578063429c6e5b14610f5c57806349df728c14610e735780634be7adee14610a5557806352ae2c2014610a2b578063572b6c05146109d7578063715018a6146109705780637da0a8771461092c5780638da5cb5b146108f8578063ae0b51df1461063f578063bd3f22b214610613578063cfdbf254146105f8578063e30e28f414610223578063f2fde38b146101f8578063f364c90c1461015e578063f567fa9d146101365763fc0c546a1461010b575f80fd5b34610132575f366003190112610132575f546040516001600160a01b039091168152602090f35b5f80fd5b34610132575f366003190112610132576003546040516001600160a01b039091168152602090f35b3461013257604036600319011261013257600254604051633cd9324360e21b81526004803590820152602480359082015290602090829060449082906001600160a01b03165afa80156101ed576020915f916101c0575b506040519015158152f35b6101e09150823d84116101e6575b6101d881836113a1565b8101906113c3565b826101b5565b503d6101ce565b6040513d5f823e3d90fd5b346101325760203660031901126101325761022161021461131a565b61021c6116c6565b611533565b005b346101325760a03660031901126101325761023c61131a565b6044356024356001600160a01b0382168203610132576064356001600160a01b038116939084900361013257608435915f516020611c045f395f51905f52549360ff8560401c16159467ffffffffffffffff8116801590816105f0575b60011490816105e6575b1590816105dd575b506105ce5767ffffffffffffffff1981166001175f516020611c045f395f51905f5255856105a2575b508515610593574284111561058457604051637c13428d60e11b81526020816004818a5afa5f9181610563575b506103195786632a4aa22360e11b5f5260045260245ffd5b9593949515610550576040516103988082019082821067ffffffffffffffff83111761053c57602091839161182c83393081520301905ff080156101ed576001600160a01b031692610369611800565b6001600160a01b031690811561052d57821561051e57831561050f576040516318160ddd60e01b8152602081600481865afa90816104e0575b506103b657630f58058360e11b5f5260045ffd5b604051633cd9324360e21b81525f600482018190526024820152602081604481885afa90816104c3575b506103f457632b58d96960e01b5f5260045ffd5b61040890610400611800565b61021c611800565b6001600160601b0360a01b5f5416175f556001556001600160601b0360a01b6002541617600255610437611800565b61043f611800565b60015f516020611be45f395f51905f52556001600160601b0360a01b600354161760035560045561046c57005b68ff0000000000000000195f516020611c045f395f51905f5254165f516020611c045f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b6104db9060203d6020116101e6576101d881836113a1565b6103e0565b6020813d602011610507575b816104f9602093836113a1565b8101031261013257516103a2565b3d91506104ec565b632b58d96960e01b5f5260045ffd5b639dd854d360e01b5f5260045ffd5b630f58058360e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b83632a4aa22360e11b5f5260045260245ffd5b61057d91925060203d6020116101e6576101d881836113a1565b9088610301565b6310b2668560e11b5f5260045ffd5b6385d923df60e01b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f516020611c045f395f51905f5255866102d4565b63f92ee8a960e01b5f5260045ffd5b905015886102ab565b303b1591506102a3565b879150610299565b34610132575f36600319011261013257602060405160648152f35b34610132576020366003190112610132576004355f526005602052602060405f20541515604051908152f35b346101325761064d366112e3565b92906106576115a4565b815f52600560205260405f2054156108e9576106d893825f52600560205260405f205491602061068685611468565b61068e6117a7565b6003546040516307a297ab60e01b81526001600160a01b038084166004830152602482018b9052604482019890985260648101939093529198909589921690829081906084820190565b03915afa9586156101ed575f966108b5575b5085156108a65760018060a01b036002541691604051633cd9324360e21b8152856004820152866024820152602081604481875afa9081156101ed575f91610887575b506108785761073e918685876115dc565b1561086957604051635ea05ef360e11b8152600481018490526024810186905260448101859052602081606481855afa9081156101ed575f9161084a575b501561083b57803b156101325760405163762ba3ff60e11b8152600481018490526024810186905260448101949094525f908490606490829084905af19182156101ed577f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a9360409361082b575b505f5461080390869084906001600160a01b0316611719565b825194855260208501526001600160a01b031692a260015f516020611be45f395f51905f5255005b5f610835916113a1565b856107ea565b63843ce46b60e01b5f5260045ffd5b610863915060203d6020116101e6576101d881836113a1565b8661077c565b63582f497d60e11b5f5260045ffd5b63b708ca1560e01b5f5260045ffd5b6108a0915060203d6020116101e6576101d881836113a1565b8861072d565b63723a162160e11b5f5260045ffd5b9095506020813d6020116108e1575b816108d1602093836113a1565b81010312610132575194866106ea565b3d91506108c4565b63d2e8cc1760e01b5f5260045ffd5b34610132575f366003190112610132575f516020611bc45f395f51905f52546040516001600160a01b039091168152602090f35b34610132575f366003190112610132576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610132575f366003190112610132576109886116c6565b5f516020611bc45f395f51905f5280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101325760203660031901126101325760206109f261131a565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610132576020366003190112610132576004355f526005602052602060405f2054604051908152f35b3461013257610a6336611330565b9391610a709591956115a4565b60648311610e6457808314801590610e5a575b610d5d57610a8f6117a7565b93610a99846114ed565b6003546001600160a01b03165f5b868110610d8157505080518381871491821592610d76575b50508015610d6c575b610d5d579591905f96610ada866114ed565b985f945b878610610ba65750505050505083610b04575b60015f516020611be45f395f51905f5255005b610b3391610b1c858560018060a01b035f5416611719565b604051948552606060208601526060850191611444565b8281036040840152602080855192838152019401905f5b818110610b90575050506001600160a01b0316917fb9df54cb8716695fe6cd84e5e4b88eca0d9c862970bcd45797aabb77d71b48ee919081900390a28080808080610af1565b8251865260209586019590920191600101610b4a565b90919293949998610bb88b89896113db565b359a610bc4818661151f565b51809c610bd2838a8a6113db565b35610bde8487896113ff565b9315610d4e5760018060a01b036002541693604051633cd9324360e21b8152846004820152836024820152602081604481895afa9081156101ed575f91610d30575b5061087857610c32918f8490866115dc565b1561086957610c6c8f826020916040519384928392635ea05ef360e11b845288600485016040919493926060820195825260208201520152565b0381875afa9081156101ed575f91610d12575b501561083b57823b156101325760405163762ba3ff60e11b81526004810192909252602482018f90526044820152905f908290606490829084905af180156101ed57610d02575b508b8201809211610cee576001919b610cdf828d61151f565b52019493929190999899610ade565b634e487b7160e01b5f52601160045260245ffd5b5f610d0c916113a1565b8c610cc6565b610d2a915060203d81116101e6576101d881836113a1565b5f610c7f565b610d48915060203d81116101e6576101d881836113a1565b5f610c20565b6360640efd60e11b5f5260045ffd5b632c635df560e11b5f5260045ffd5b5086831415610ac8565b14159050838a610abf565b610d8c8188886113db565b3590815f52600560205260405f2054156108e9576020610dad8288886113db565b35835f52600582528a610e01610dc760405f205496611468565b60405196879485946307a297ab60e01b86526004860190949392606092608083019660018060a01b03168352602083015260408201520152565b0381865afa80156101ed575f90610e28575b60019250610e21828661151f565b5201610aa7565b506020823d8211610e52575b81610e41602093836113a1565b810103126101325760019151610e13565b3d9150610e34565b5084811415610a83565b632a8677b560e21b5f5260045ffd5b3461013257602036600319011261013257610e8c61131a565b610e946116c6565b6001600160a01b038116908115610f4d575f546040516370a0823160e01b815230600482015291906001600160a01b0316602083602481845afa9283156101ed575f93610f15575b5091610f0c816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b95611719565b604051908152a2005b9250906020833d602011610f45575b81610f31602093836113a1565b810103126101325791519190610f0c610edc565b3d9150610f24565b634261081360e11b5f5260045ffd5b34610132576020366003190112610132576020610f7a600435611468565b604051908152f35b3461013257610f9036611330565b610f9e9593959492946115a4565b60648311610e64578483148015906110b9575b610d5d57610fbd6117a7565b9160045442116110aa575f5b84811061103f57505050611029907f8f59e3de0f866848efefecafdbbf1c97262b4187d7355cb68c9c6e50b6ead9a994611010604051958695604087526040870191611444565b84810360208601526001600160a01b0390921696611444565b0390a260015f516020611be45f395f51905f5255005b61104a8186886113db565b359061105781898b6113db565b35825f52600560205260405f205461109b57611080906110788387876113ff565b9188866115dc565b15610869576001915f5260056020524260405f205501610fc9565b638ef519d560e01b5f5260045ffd5b63df370ae560e01b5f5260045ffd5b5080851415610fb1565b34610132576020366003190112610132576110dc61131a565b6110e46116c6565b6001600160a01b0316801561059357604051637c13428d60e11b8152602081600481855afa5f9181611183575b506111295750632a4aa22360e11b5f5260045260245ffd5b1561117157600380546001600160a01b0319811683179091556001600160a01b03167fc831910db935648f19a9acfe07a53355b2d00e33523edf8b0b80aa48f6f5dca85f80a3005b632a4aa22360e11b5f5260045260245ffd5b61119d91925060203d6020116101e6576101d881836113a1565b9083611111565b34610132575f366003190112610132576020600454604051908152f35b34610132575f366003190112610132576020600154604051908152f35b34610132575f366003190112610132576002546040516001600160a01b039091168152602090f35b3461013257611214366112e3565b61121c6115a4565b835f52600560205260405f205461109b5760045442116110aa5761124991836112436117a7565b866115dc565b15610869575f82815260056020526040908190204290557ffaf76b5ef3ee6a1b42c79e4744b2596312a788e7cbbaee17f2db55bfc304f7de916001600160a01b036112926117a7565b169382519182526020820152a260015f516020611be45f395f51905f5255005b9181601f840112156101325782359167ffffffffffffffff8311610132576020808501948460051b01011161013257565b60606003198201126101325760043591602435916044359067ffffffffffffffff821161013257611316916004016112b2565b9091565b600435906001600160a01b038216820361013257565b60606003198201126101325760043567ffffffffffffffff8111610132578161135b916004016112b2565b9290929160243567ffffffffffffffff8111610132578161137e916004016112b2565b929092916044359067ffffffffffffffff821161013257611316916004016112b2565b90601f8019910116810190811067ffffffffffffffff82111761053c57604052565b90816020910312610132575180151581036101325790565b91908110156113eb5760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91908110156113eb5760051b81013590601e198136030182121561013257019081359167ffffffffffffffff8311610132576020018260051b36038113610132579190565b81835290916001600160fb1b0383116101325760209260051b809284830137010190565b60025460405163429c6e5b60e01b81526004810192909252602090829060249082906001600160a01b03165afa9081156101ed575f916114a6575090565b90506020813d6020116114cd575b816114c1602093836113a1565b81010312610132575190565b3d91506114b4565b67ffffffffffffffff811161053c5760051b60200190565b906114f7826114d5565b61150460405191826113a1565b8281528092611515601f19916114d5565b0190602036910137565b80518210156113eb5760209160051b010190565b6001600160a01b03168015611591575f516020611bc45f395f51905f5280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b631e4fbdf760e01b5f525f60045260245ffd5b60025f516020611be45f395f51905f5254146115cd5760025f516020611be45f395f51905f5255565b633ee5aeb560e01b5f5260045ffd5b9194929394604051916020830193845260018060a01b0316604083015260608201526060815261160d6080826113a1565b51902060405160208101918252602081526116296040826113a1565b51902060015492611639856114d5565b9461164760405196876113a1565b808652602086019060051b82019136831161013257905b8282106116b657505050905f915b84518310156116ae5761167f838661151f565b51908181101561169d575f52602052600160405f205b92019161166c565b905f52602052600160405f20611695565b915092501490565b813581526020918201910161165e565b5f516020611bc45f395f51905f52546001600160a01b03908116906116e96117a7565b16036116f157565b6116f96117a7565b63118cdaa760e01b5f9081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f916117576064826113a1565b519082855af1156101ed575f513d61179e57506001600160a01b0381163b155b61177e5750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415611777565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806117f5575b156117f1576013193601368111610cee573560601c90565b3390565b5060143610156117d9565b60ff5f516020611c045f395f51905f525460401c161561181c57565b631afcd79f60e31b5f5260045ffdfe60803460b857601f61039838819003918201601f19168301916001600160401b0383118484101760bc5780849260209460405283398101031260b857516001600160a01b0381169081900360b857801560a5575f80546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36102c790816100d18239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c908163429c6e5b1461023357508063715018a6146101dc5780638da5cb5b146101b5578063bd40bde614610186578063ec5747fe14610125578063f2fde38b1461009c5763f364c90c14610069575f80fd5b34610098576040366003190112610098576004355f526001602052602060243560405f20541015604051908152f35b5f80fd5b34610098576020366003190112610098576004356001600160a01b03811690819003610098576100ca610294565b8015610112575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100985760407f08401774913e94f43659333293c99fdfdea868c488d679967e054abc8b5ae83461015636610259565b610161949294610294565b845f526001602052825f20610177838254610273565b905582519182526020820152a2005b346100985760206101ab61019936610259565b92915f526001845260405f2054610273565b1115604051908152f35b34610098575f366003190112610098575f546040516001600160a01b039091168152602090f35b34610098575f366003190112610098576101f4610294565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610098576020366003190112610098576020906004355f526001825260405f20548152f35b606090600319011261009857600435906024359060443590565b9190820180921161028057565b634e487b7160e01b5f52601160045260245ffd5b5f546001600160a01b031633036102a757565b63118cdaa760e01b5f523360045260245ffdfea164736f6c634300081c000a9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "1891:12127:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;;;;;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;6127:16;1891:12127;;;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;7716:13:0;1891:12127:15;;;-1:-1:-1;;;7716:43:0;;1891:12127:15;;;7716:43:0;;;1891:12127:15;;;;;;;;;;;;;7716:43:0;;1891:12127:15;;-1:-1:-1;;;;;1891:12127:15;7716:43:0;;;;;;1891:12127:15;7716:43:0;1891:12127:15;7716:43:0;;;1891:12127:15;;;;;;;;;;7716:43:0;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1891:12127:15;;;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;2357:1:234;1891:12127:15;;:::i;:::-;2303:62:234;;:::i;:::-;2357:1;:::i;:::-;1891:12127:15;;;;;;;-1:-1:-1;;1891:12127:15;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1891:12127:15;;;;;;;;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1891:12127:15;;;;;;;4301:16:237;1891:12127:15;;;;4724:16:237;;:34;;;;1891:12127:15;;4788:16:237;:50;;;;1891:12127:15;4853:13:237;:30;;;;1891:12127:15;4849:91:237;;;-1:-1:-1;;1891:12127:15;;;;-1:-1:-1;;;;;;;;;;;1891:12127:15;;4977:67:237;;1891:12127:15;4908:30;;;4904:74;;5019:15;4992:42;;;4988:86;;1891:12127;;-1:-1:-1;;;5176:62:15;;1891:12127;;;;5176:62;;;1891:12127;;5176:62;;;1891:12127;-1:-1:-1;5172:273:15;;7781:43;;;;1891:12127;5394:40;1891:12127;;;;5394:40;5172:273;5289:17;;;;;5285:70;;1891:12127;;5537:40;;;;;;;;1891:12127;5537:40;;;;;1891:12127;5537:40;;;;;;5571:4;1891:12127;;5537:40;;;1891:12127;5537:40;;;;;-1:-1:-1;;;;;1891:12127:15;;6891:76:237;;:::i;:::-;-1:-1:-1;;;;;1891:12127:15;;5664:20:0;;5660:54;;5728:19;;5724:51;;5789:27;;5785:68;;1891:12127:15;;-1:-1:-1;;;5972:28:0;;1891:12127:15;;;;5972:28:0;;;;;;;5172:273:15;-1:-1:-1;5968:175:0;;5693:21;;;1891:12127:15;6111:21:0;1891:12127:15;;6111:21:0;5968:175;1891:12127:15;;-1:-1:-1;;;6290:47:0;;1891:12127:15;;6290:47:0;;1891:12127:15;;;;;;;;;;;6290:47:0;;;;;;;5968:175;-1:-1:-1;6286:208:0;;5825:28;;;1891:12127:15;6455:28:0;1891:12127:15;;6455:28:0;6286:208;6959:1:237;6286:208:0;6891:76:237;;:::i;:::-;;;:::i;6959:1::-;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;-1:-1:-1;;;;;1891:12127:15;;6599:47:0;1891:12127:15;;;6599:47:0;1891:12127:15;6891:76:237;;:::i;:::-;;;:::i;:::-;1891:12127:15;-1:-1:-1;;;;;;;;;;;1891:12127:15;-1:-1:-1;;;;;1891:12127:15;;5771:56;1891:12127;;;5771:56;1891:12127;;;5064:101:237;;1891:12127:15;5064:101:237;1891:12127:15;;-1:-1:-1;;;;;;;;;;;1891:12127:15;;-1:-1:-1;;;;;;;;;;;1891:12127:15;5140:14:237;1891:12127:15;;;;;;5140:14:237;1891:12127:15;6290:47:0;;;1891:12127:15;6290:47:0;1891:12127:15;6290:47:0;;;;;;;:::i;:::-;;;5972:28;1891:12127:15;5972:28:0;;1891:12127:15;5972:28:0;;;;;;1891:12127:15;5972:28:0;;;:::i;:::-;;;1891:12127:15;;;;;5972:28:0;;;;;-1:-1:-1;5972:28:0;;5785:68;5825:28;;;1891:12127:15;5825:28:0;1891:12127:15;;5825:28:0;5724:51;5756:19;;;1891:12127:15;5756:19:0;1891:12127:15;;5756:19:0;5660:54;5693:21;;;1891:12127:15;5693:21:0;1891:12127:15;;5693:21:0;5537:40:15;1891:12127;;;;;;;;;;;5285:70;7781:43;;;;1891:12127;5315:40;1891:12127;;;;5315:40;5176:62;;;;;1891:12127;5176:62;1891:12127;5176:62;;;;;;;:::i;:::-;;;;;4988:86;5043:31;;;1891:12127;5043:31;1891:12127;;5043:31;4904:74;7525:31;;;1891:12127;4947:31;1891:12127;;4947:31;4977:67:237;-1:-1:-1;;1891:12127:15;;;-1:-1:-1;;;;;;;;;;;1891:12127:15;4977:67:237;;;4849:91;4906:23;;;1891:12127:15;4906:23:237;1891:12127:15;;4906:23:237;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:237;;4724:34;;;-1:-1:-1;4724:34:237;;1891:12127:15;;;;;;-1:-1:-1;;1891:12127:15;;;;;;;2793:3:0;1891:12127:15;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;;;;;7062:24;1891:12127;;;;;;;7062:36;;1891:12127;;;;;;;;;;;;;:::i;:::-;3361:103:244;;;;:::i;:::-;1891:12127:15;;;11694:24;1891:12127;;;;;;11694:36;11690:72;;12037:91;1891:12127;;;;11694:24;1891:12127;;;;;;11861:23;1891:12127;11861:23;;;:::i;:::-;14687:38:0;;:::i;:::-;12037:16:15;1891:12127;;;-1:-1:-1;;;12037:91:15;;-1:-1:-1;;;;;1891:12127:15;;;;12037:91;;1891:12127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12037:91;;;;;;;;;;1891:12127;12037:91;;;1891:12127;12143:20;;;12139:55;;1891:12127;;;;;11318:13:0;1891:12127:15;;;;;;;;11318:43:0;;;1891:12127:15;11318:43:0;;1891:12127:15;;;;;;;11318:43:0;;;;;;;;;;;1891:12127:15;11318:43:0;;;1891:12127:15;11314:77:0;;;11438:60;;;;;;:::i;:::-;11437:61;11433:119;;1891:12127:15;;-1:-1:-1;;;11617:65:0;;1891:12127:15;11617:65:0;;1891:12127:15;;;;;;;;;;;;;;;;;;;11617:65:0;;;;;;;;1891:12127:15;11617:65:0;;;1891:12127:15;11616:66:0;;11612:124;;11774:58;;;;;1891:12127:15;;-1:-1:-1;;;11774:58:0;;1891:12127:15;11774:58:0;;1891:12127:15;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;;;-1:-1:-1;;11774:58:0;;;;;;;11926:36;11774:58;1891:12127:15;11774:58:0;;;1891:12127:15;-1:-1:-1;1891:12127:15;;11899:11:0;;1891:12127:15;;;;-1:-1:-1;;;;;1891:12127:15;11899:11:0;:::i;:::-;1891:12127:15;;;;;;;;;-1:-1:-1;;;;;1891:12127:15;;11926:36:0;1949:1:244;-1:-1:-1;;;;;;;;;;;1891:12127:15;;11774:58:0;1891:12127:15;11774:58:0;;;:::i;:::-;;;;11612:124;13882:20;;;1891:12127:15;11705:20:0;1891:12127:15;;11705:20:0;11617:65;;;;1891:12127:15;11617:65:0;1891:12127:15;11617:65:0;;;;;;;:::i;:::-;;;;11433:119;9091:20:15;;;1891:12127;11521:20:0;1891:12127:15;;11521:20:0;11314:77;13519:21;;;1891:12127:15;11370:21:0;1891:12127:15;;11370:21:0;11318:43;;;;1891:12127:15;11318:43:0;1891:12127:15;11318:43:0;;;;;;;:::i;:::-;;;;12139:55:15;12172:22;;;1891:12127;12172:22;1891:12127;;12172:22;12037:91;;;;1891:12127;12037:91;;1891:12127;12037:91;;;;;;1891:12127;12037:91;;;:::i;:::-;;;1891:12127;;;;;12037:91;;;;;;;-1:-1:-1;12037:91:15;;11690:72;13503:23;;;1891:12127;11739:23;1891:12127;;11739:23;1891:12127;;;;;;-1:-1:-1;;1891:12127:15;;;;-1:-1:-1;;;;;;;;;;;1891:12127:15;;;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;;;1830:17:236;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;2303:62:234;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1891:12127:15;;-1:-1:-1;;;;;;1891:12127:15;;;;;;;-1:-1:-1;;;;;1891:12127:15;3975:40:234;1891:12127:15;;3975:40:234;1891:12127:15;;;;;;;-1:-1:-1;;1891:12127:15;;;;;;;:::i;:::-;;;1830:17:236;-1:-1:-1;;;;;1891:12127:15;;;;;2054:31:236;;;;1891:12127:15;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;;;;;6730:24;1891:12127;;;;;;;;;;;;;;;;;;;;:::i;:::-;3361:103:244;;;;;;;:::i;:::-;2793:3:0;3020:26;;3016:87;;13087:37:15;;;;;:83;;;1891:12127;13083:147;;14687:38:0;;:::i;:::-;13315:29:15;;;;:::i;:::-;13764:16;1891:12127;-1:-1:-1;;;;;1891:12127:15;;13375:18;;;;;;3016:87:0;;1891:12127:15;;12760:37:0;;;;;;;:83;;;13355:563:15;12760:145:0;;;;;;13355:563:15;12743:231:0;;12984:20;;;1891:12127:15;13052:29:0;;;;:::i;:::-;13097:13;1891:12127:15;13092:1035:0;13112:18;;;;;;14141:20;;;;;;;14137:184;;13092:1035;1891:12127:15;-1:-1:-1;;;;;;;;;;;1891:12127:15;;14137:184:0;1891:12127:15;;14206:16:0;1891:12127:15;;;;;;;;;;14206:16:0;:::i;:::-;1891:12127:15;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1891:12127:15;;14242:68:0;;;;;;;;14137:184;;;;;;;1891:12127:15;;;;;;;;;;;;;;;;;;13132:3:0;13167:10;;;;;;;;;;;;:::i;:::-;1891:12127:15;13213:15:0;;;;;:::i;:::-;1891:12127:15;13264:15:0;;;;;;;:::i;:::-;1891:12127:15;13326:15:0;;;;;:::i;:::-;13360:16;;13356:46;;1891:12127:15;;;;;13467:13:0;1891:12127:15;;;;;;;;13467:43:0;;;1891:12127:15;13467:43:0;;1891:12127:15;;;;;;;13467:43:0;;;;;;;;;;;1891:12127:15;13467:43:0;;;13132:3;13463:77;;;13595:60;;;;;;;:::i;:::-;13594:61;13590:127;;13790:65;1891:12127:15;;;;;;;;;;;;;;13790:65:0;;;1891:12127:15;13790:65:0;;1891:12127:15;;;;;;;;;;;;;;;;;;13790:65:0;;;;;;;;;;;1891:12127:15;13790:65:0;;;13132:3;13789:66;;13785:132;;13963:58;;;;;1891:12127:15;;-1:-1:-1;;;13963:58:0;;1891:12127:15;13963:58:0;;1891:12127:15;;;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;;;-1:-1:-1;;13963:58:0;;;;;;;;13132:3;1891:12127:15;;;;;;;;;;14036:31:0;14081:35;;;;;:::i;:::-;1891:12127:15;;13097:13:0;;;;;;;;;;1891:12127:15;;;;;;;;;;;;13963:58:0;1891:12127:15;13963:58:0;;;:::i;:::-;;;;13790:65;;;;1891:12127:15;13790:65:0;;;;;;;;;:::i;:::-;;;;13467:43;;;;1891:12127:15;13467:43:0;;;;;;;;;:::i;:::-;;;;13356:46;13385:17;;;1891:12127:15;13385:17:0;1891:12127:15;;13385:17:0;12743:231;10073:26:15;;;1891:12127;12937:26:0;1891:12127:15;;12937:26:0;12760:145;12863:42;;;;;12760:145;;:83;12801:42;;;-1:-1:-1;12760:83:0;;;;13395:3:15;13430:10;;;;;:::i;:::-;1891:12127;;;;;13458:24;1891:12127;;;;;;13458:36;13454:72;;1891:12127;13563:15;;;;;:::i;:::-;1891:12127;;;;13458:24;1891:12127;;;13764:91;13684:23;1891:12127;;;;13684:23;;:::i;:::-;1891:12127;;;;;;;;;;13764:91;;1891:12127;13764:91;;1891:12127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13764:91;;;;;;;;;;1891:12127;13764:91;;;13395:3;1891:12127;13870:37;;;;;;:::i;:::-;1891:12127;;13360:13;;13764:91;;1891:12127;13764:91;;;;;;;;;1891:12127;13764:91;;;:::i;:::-;;;1891:12127;;;;;;;13764:91;;;;;-1:-1:-1;13764:91:15;;13087:83;13128:42;;;;;13087:83;;3016:87:0;3069:23;;;1891:12127:15;3069:23:0;1891:12127:15;;3069:23:0;1891:12127:15;;;;;;-1:-1:-1;;1891:12127:15;;;;;;:::i;:::-;2303:62:234;;:::i;:::-;-1:-1:-1;;;;;1891:12127:15;;;9499:16:0;;9495:55;;1891:12127:15;;;;-1:-1:-1;;;9578:31:0;;9603:4;1891:12127:15;9578:31:0;;1891:12127:15;;;-1:-1:-1;;;;;1891:12127:15;;;9578:31:0;1891:12127:15;;9578:31:0;;;;;;;1891:12127:15;9578:31:0;;;1891:12127:15;9643:7:0;;;;1891:12127:15;9643:7:0;9666:28;9643:7;;:::i;:::-;1891:12127:15;;;;;9666:28:0;1891:12127:15;9578:31:0;;;;1891:12127:15;9578:31:0;;1891:12127:15;9578:31:0;;;;;;1891:12127:15;9578:31:0;;;:::i;:::-;;;1891:12127:15;;;;;;;9578:31:0;9643:7;9578:31;;;;;-1:-1:-1;9578:31:0;;9495:55;9524:26;;;1891:12127:15;9524:26:0;1891:12127:15;;9524:26:0;1891:12127:15;;;;;;-1:-1:-1;;1891:12127:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3361:103:244;;;;;;;;:::i;:::-;2793:3:0;3020:26;;3016:87;;9967:37:15;;;;;:83;;;1891:12127;9963:147;;14687:38:0;;:::i;:::-;1891:12127:15;;;10186:15;10216:42;10212:85;;1891:12127;10328:18;;;;;;1891:12127;;;;;10852:54;1891:12127;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1891:12127:15;;;;;:::i;:::-;10852:54;;;1891:12127;-1:-1:-1;;;;;;;;;;;1891:12127:15;;10348:3;10383:10;;;;;:::i;:::-;1891:12127;10429:15;;;;;;:::i;:::-;1891:12127;;;;10463:24;1891:12127;;;;;;10459:76;;10590:63;10637:15;;;;;;:::i;:::-;10590:63;;;;:::i;:::-;10589:64;10585:130;;1891:12127;;;;10463:24;1891:12127;;10186:15;1891:12127;;;;;10313:13;;10459:76;8835:27;;;1891:12127;10508:27;1891:12127;;10508:27;10212:85;8926:30;;;1891:12127;10267:30;1891:12127;;10267:30;9967:83;10008:42;;;;;9967:83;;1891:12127;;;;;;-1:-1:-1;;1891:12127:15;;;;;;:::i;:::-;2303:62:234;;:::i;:::-;-1:-1:-1;;;;;1891:12127:15;7483:33;;7479:77;;1891:12127;;-1:-1:-1;;;7639:65:15;;1891:12127;;;;7639:65;;;1891:12127;;7639:65;;;1891:12127;-1:-1:-1;7635:282:15;;7781:43;;;;1891:12127;7863:43;1891:12127;;;;7863:43;7635:282;7755:17;7751:73;;7957:16;1891:12127;;-1:-1:-1;;;;;;1891:12127:15;;;;;;;-1:-1:-1;;;;;1891:12127:15;8058:56;-1:-1:-1;;8058:56:15;1891:12127;7751:73;7781:43;;;1891:12127;7781:43;1891:12127;;;;7781:43;7639:65;;;;;1891:12127;7639:65;1891:12127;7639:65;;;;;;;:::i;:::-;;;;;1891:12127;;;;;;-1:-1:-1;;1891:12127:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;;7097:11:0;1891:12127:15;;;;;;;;;;;;;-1:-1:-1;;1891:12127:15;;;;7299:13:0;1891:12127:15;;;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;;;;;;:::i;:::-;3361:103:244;;:::i;:::-;1891:12127:15;;;8790:24;1891:12127;;;;;;8786:76;;1891:12127;;8876:15;:41;8872:84;;9003:65;14687:38:0;;;;:::i;:::-;9003:65:15;;:::i;:::-;9002:66;8998:124;;1891:12127;;;;8790:24;1891:12127;;;;;;;8876:15;1891:12127;;9239:52;;-1:-1:-1;;;;;14687:38:0;;:::i;:::-;1891:12127:15;;;;;;;;;;;9239:52;1949:1:244;-1:-1:-1;;;;;;;;;;;1891:12127:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1891:12127:15;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;-1:-1:-1;;;;;1891:12127:15;;;;;;:::o;:::-;;-1:-1:-1;;1891:12127:15;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;;;;1891:12127:15;;;;;;;;;;;;;;;;;:::o;7956:132:0:-;8044:13;1891:12127:15;;;-1:-1:-1;;;8044:37:0;;;;;1891:12127:15;;;;;;;;8044:37:0;;1891:12127:15;;-1:-1:-1;;;;;1891:12127:15;8044:37:0;;;;;;;-1:-1:-1;8044:37:0;;;8037:44;7956:132;:::o;8044:37::-;;;1891:12127:15;8044:37:0;;1891:12127:15;8044:37:0;;;;;;1891:12127:15;8044:37:0;;;:::i;:::-;;;1891:12127:15;;;;;7956:132:0;:::o;8044:37::-;;;-1:-1:-1;8044:37:0;;1891:12127:15;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;3405:215:234:-;-1:-1:-1;;;;;1891:12127:15;3489:22:234;;3485:91;;-1:-1:-1;;;;;;;;;;;1891:12127:15;;-1:-1:-1;;;;;;1891:12127:15;;;;;;;-1:-1:-1;;;;;1891:12127:15;3975:40:234;-1:-1:-1;;3975:40:234;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;1891:12127:15;;3509:1:234;3534:31;3470:384:244;1991:1;-1:-1:-1;;;;;;;;;;;1891:12127:15;3670:20:244;3666:88;;1991:1;-1:-1:-1;;;;;;;;;;;1891:12127:15;3470:384:244:o;3666:88::-;3713:30;;;-1:-1:-1;3713:30:244;;-1:-1:-1;3713:30:244;10207:461:0;;;;;;1891:12127:15;;10552:39:0;;;;1891:12127:15;;;;;;;;;;;;;;;;;;10552:39:0;;;;;;:::i;:::-;1891:12127:15;10542:50:0;;1891:12127:15;;10552:39:0;10531:62;;1891:12127:15;;;10552:39:0;10531:62;;;1891:12127:15;10531:62:0;;:::i;:::-;1891:12127:15;10521:73:0;;10643:11;1891:12127:15;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;10552:39:0;1891:12127:15;;;;;;;;;;;;;;;;;;;;2559:27:223;;;2601:13;-1:-1:-1;2596:134:223;2634:3;1891:12127:15;;2616:16:223;;;;;2710:8;;;;:::i;:::-;1891:12127:15;;605:5:222;;;;;;-1:-1:-1;889:135:222;10552:39:0;889:135:222;10643:11:0;1891:12127:15;-1:-1:-1;889:135:222;605:59;2634:3:223;1891:12127:15;2601:13:223;;;605:59:222;889:135;-1:-1:-1;889:135:222;10552:39:0;889:135:222;10643:11:0;1891:12127:15;-1:-1:-1;889:135:222;605:59;;2616:16:223;;;;;2016:33;10207:461:0;:::o;1891:12127:15:-;;;;;10552:39:0;1891:12127:15;;;;;;;2658:162:234;-1:-1:-1;;;;;;;;;;;1891:12127:15;-1:-1:-1;;;;;1891:12127:15;;;;14687:38:0;;:::i;:::-;1891:12127:15;2717:23:234;2713:101;;2658:162::o;2713:101::-;14687:38:0;;:::i;:::-;-1:-1:-1;;;;2763:40:234;;;-1:-1:-1;;;;;1891:12127:15;;;;2763:40:234;1891:12127:15;;;2763:40:234;1219:160:205;1891:12127:15;;-1:-1:-1;;;1328:43:205;;;;;;;-1:-1:-1;;;;;1891:12127:15;;;1328:43:205;;;1891:12127:15;;;;;;;;;1328:43:205;;;1219:160;;-1:-1:-1;;1328:43:205;;1891:12127:15;1328:43:205;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:205;;8942:15;;-1:-1:-1;;;;;;1891:12127:15;;8960:26:205;:31;8942:68;8938:146;;1219:160;:::o;8938:146::-;-1:-1:-1;;;;9033:40:205;;;-1:-1:-1;;;;;1891:12127:15;;;;9033:40:205;1891:12127:15;1328:43:205;;9033:40;8942:68;9009:1;8994:16;;8942:68;;2329:429:236;2545:10;1830:17;-1:-1:-1;;;;;1891:12127:15;2054:31:236;;2526:71;;2329:429;2522:230;;;1891:12127:15;;2435:8:236;1891:12127:15;2435:8:236;1891:12127:15;;;;;;;;2613:72:236:o;2522:230::-;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;;7082:141:237;1891:12127:15;-1:-1:-1;;;;;;;;;;;1891:12127:15;;;;7148:18:237;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:237;;-1:-1:-1;7189:17:237",
    "linkReferences": {},
    "immutableReferences": {
      "57669": [
        {
          "start": 2369,
          "length": 32
        },
        {
          "start": 2551,
          "length": 32
        },
        {
          "start": 6058,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_BATCH_SIZE()": "cfdbf254",
    "batchClaim(uint256[],uint256[],bytes32[][])": "4be7adee",
    "batchInitializeVesting(uint256[],uint256[],bytes32[][])": "41162b75",
    "claim(uint256,uint256,bytes32[])": "ae0b51df",
    "claimPeriodEnd()": "3da082a0",
    "claimTracker()": "222abc11",
    "getClaimedAmount(uint256)": "429c6e5b",
    "getInitializationTimestamp(uint256)": "52ae2c20",
    "initialize(address,bytes32,address,address,uint256)": "e30e28f4",
    "initializeVesting(uint256,uint256,bytes32[])": "10639fef",
    "isClaimed(uint256,uint256)": "f364c90c",
    "isTrustedForwarder(address)": "572b6c05",
    "isVestingInitialized(uint256)": "bd3f22b2",
    "merkleRoot()": "2eb4a7ab",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setVestingStrategy(address)": "3ecfea49",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b",
    "trustedForwarder()": "7da0a877",
    "vestingStrategy()": "f567fa9d",
    "withdrawTokens(address)": "49df728c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BatchSizeExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializationDeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimTrackerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitializationDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInputArrayLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vestingStrategy\",\"type\":\"address\"}],\"name\":\"InvalidVestingStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingStrategyAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWithdrawalAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmountToTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroClaimAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"totalAmounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchVestingInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"VestingInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"VestingStrategyUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"totalAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"totalAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchInitializeVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriodEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTracker\",\"outputs\":[{\"internalType\":\"contract IATKClaimTracker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getClaimedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getInitializationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingStrategy_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initializationDeadline_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"initializeVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isVestingInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVestingStrategy_\",\"type\":\"address\"}],\"name\":\"setVestingStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStrategy\",\"outputs\":[{\"internalType\":\"contract IATKVestingStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This contract implements a two-phase vesting airdrop process:      1. `initializeVesting` or `batchInitializeVesting`: User proves their allocation and starts the vesting clock.         No tokens are transferred at this stage.      2. `claim` or `batchClaim`: User claims the vested portion of their tokens at any time after initialization.      The contract uses a pluggable vesting strategy pattern to allow different vesting calculations.      It extends ATKAirdrop for Merkle proof verification and meta-transaction support.      It deploys its own claim tracker for secure claim management.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidVestingStrategy(address)\":[{\"params\":{\"vestingStrategy\":\"The address of the invalid vesting strategy.\"}}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"BatchClaimed(address,uint256,uint256[],uint256[])\":{\"params\":{\"amounts\":\"The amounts claimed for each index.\",\"claimant\":\"The address that claimed the tokens.\",\"indices\":\"The indices of the claims in the Merkle tree.\",\"totalAmount\":\"The total amount of tokens claimed in the batch.\"}},\"BatchVestingInitialized(address,uint256[],uint256[])\":{\"params\":{\"account\":\"The address that initialized the vesting.\",\"indices\":\"The indices of the claims in the Merkle tree.\",\"totalAmounts\":\"The amounts allocated for each index.\"}},\"Claimed(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens claimed.\",\"claimant\":\"The address that claimed the tokens.\",\"index\":\"The index of the claim in the Merkle tree.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TokensWithdrawn(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens withdrawn.\",\"to\":\"The address receiving the withdrawn tokens.\"}},\"VestingInitialized(address,uint256,uint256)\":{\"params\":{\"account\":\"The address that initialized the vesting.\",\"index\":\"The index of the claim in the Merkle tree.\",\"totalAmount\":\"The total amount allocated for this index.\"}},\"VestingStrategyUpdated(address,address)\":{\"params\":{\"newStrategy\":\"The address of the new vesting strategy.\",\"oldStrategy\":\"The address of the previous vesting strategy.\"}}},\"kind\":\"dev\",\"methods\":{\"batchClaim(uint256[],uint256[],bytes32[][])\":{\"details\":\"Overrides the abstract batchClaim function from ATKAirdrop. All indices must have vesting initialized.\",\"params\":{\"indices\":\"The indices of the claims in the Merkle tree.\",\"merkleProofs\":\"The Merkle proof arrays (required by base contract but not used in verification here).\",\"totalAmounts\":\"The total amounts allocated for each index.\"}},\"batchInitializeVesting(uint256[],uint256[],bytes32[][])\":{\"details\":\"Batch version of initializeVesting for gas efficiency when handling multiple indices.\",\"params\":{\"indices\":\"The indices of the claims in the Merkle tree.\",\"merkleProofs\":\"The Merkle proof arrays for verification of each index.\",\"totalAmounts\":\"The total amounts allocated for each index.\"}},\"claim(uint256,uint256,bytes32[])\":{\"details\":\"Overrides the abstract claim function from ATKAirdrop. Requires vesting to be initialized first.      The amount claimed is determined by the vesting strategy based on time elapsed since initialization.\",\"params\":{\"index\":\"The index of the claim in the Merkle tree.\",\"merkleProof\":\"The Merkle proof array (required by base contract but not used in verification here).\",\"totalAmount\":\"The total amount allocated for this index.\"}},\"claimPeriodEnd()\":{\"returns\":{\"_0\":\"The timestamp after which no new vesting can be initialized.\"}},\"claimTracker()\":{\"returns\":{\"_0\":\"The claim tracker contract.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"params\":{\"forwarder_\":\"The address of the forwarder contract.\"}},\"getClaimedAmount(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"claimedAmount The amount already claimed for this index.\"}},\"getInitializationTimestamp(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"timestamp The timestamp when vesting was initialized for this index (0 if not initialized).\"}},\"initialize(address,bytes32,address,address,uint256)\":{\"details\":\"Sets up the base airdrop functionality and vesting-specific parameters.      Deploys its own claim tracker for secure claim management.\",\"params\":{\"initializationDeadline_\":\"The timestamp after which no new vesting can be initialized.\",\"owner_\":\"The initial owner of the contract.\",\"root_\":\"The Merkle root for verifying claims.\",\"token_\":\"The address of the ERC20 token to be distributed.\",\"vestingStrategy_\":\"The address of the vesting strategy contract for vesting calculations.\"}},\"initializeVesting(uint256,uint256,bytes32[])\":{\"details\":\"Users must call this function first to start their vesting schedule before they can claim tokens.      The vesting start time is recorded when this function is called.\",\"params\":{\"index\":\"The index of the claim in the Merkle tree.\",\"merkleProof\":\"The Merkle proof array for verification.\",\"totalAmount\":\"The total amount allocated for this index.\"}},\"isClaimed(uint256,uint256)\":{\"params\":{\"index\":\"The index to check in the Merkle tree.\",\"totalAmount\":\"The total amount allocated for this index.\"},\"returns\":{\"_0\":\"claimed True if the index has been fully claimed, false otherwise.\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"isVestingInitialized(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"initialized True if vesting has been initialized for this index.\"}},\"merkleRoot()\":{\"returns\":{\"_0\":\"The Merkle root for verifying airdrop claims.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setVestingStrategy(address)\":{\"details\":\"Only the owner can update the vesting strategy. The new strategy must support multiple claims.\",\"params\":{\"newVestingStrategy_\":\"The address of the new vesting strategy contract.\"}},\"token()\":{\"returns\":{\"_0\":\"The ERC20 token being distributed.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"vestingStrategy()\":{\"returns\":{\"_0\":\"The vesting strategy contract.\"}},\"withdrawTokens(address)\":{\"params\":{\"to\":\"The address to send the withdrawn tokens to.\"}}},\"stateVariables\":{\"_initializationDeadline\":{\"details\":\"Set once at initialization and immutable thereafter.\"},\"_initializationTimestamp\":{\"details\":\"Maps claim index to the timestamp when vesting was initialized for that index.\"},\"_vestingStrategy\":{\"details\":\"Can be updated by the owner to change vesting logic.\"}},\"title\":\"ATK Vesting Airdrop Implementation\",\"version\":1},\"userdoc\":{\"errors\":{\"BatchSizeExceedsLimit()\":[{\"notice\":\"Error indicating that the batch size exceeds the maximum allowed limit.\"}],\"IndexAlreadyClaimed()\":[{\"notice\":\"Error indicating that a claim is attempted for an index that has already been claimed.\"}],\"InitializationDeadlinePassed()\":[{\"notice\":\"Error indicating that the initialization deadline has passed and no new vesting can be initialized.\"}],\"InvalidClaimAmount()\":[{\"notice\":\"Error indicating that the claim amount exceeds the total allocated amount for the index.\"}],\"InvalidClaimTrackerAddress()\":[{\"notice\":\"Error indicating that an invalid claim tracker address was provided.\"}],\"InvalidInitializationDeadline()\":[{\"notice\":\"Error indicating that an invalid initialization deadline was provided.\"}],\"InvalidInputArrayLengths()\":[{\"notice\":\"Error indicating that input array lengths do not match in batch operations.\"}],\"InvalidMerkleProof()\":[{\"notice\":\"Error indicating that a provided Merkle proof is invalid for the claim parameters.\"}],\"InvalidMerkleRoot()\":[{\"notice\":\"Error indicating that a provided Merkle root is invalid.\"}],\"InvalidTokenAddress()\":[{\"notice\":\"Error indicating that an invalid token address was provided.\"}],\"InvalidVestingStrategy(address)\":[{\"notice\":\"Error indicating that the provided vesting strategy is invalid for this use case.\"}],\"InvalidVestingStrategyAddress()\":[{\"notice\":\"Error indicating that an invalid vesting strategy address was provided.\"}],\"InvalidWithdrawalAddress()\":[{\"notice\":\"Error indicating that an invalid withdrawal address was provided.\"}],\"VestingAlreadyInitialized()\":[{\"notice\":\"Error indicating that vesting has already been initialized for the specified index.\"}],\"VestingNotInitialized()\":[{\"notice\":\"Error indicating that vesting has not been initialized for the specified index.\"}],\"ZeroAmountToTransfer()\":[{\"notice\":\"Error indicating that there are zero tokens available to transfer.\"}],\"ZeroClaimAmount()\":[{\"notice\":\"Error indicating that the claim amount is zero.\"}]},\"events\":{\"BatchClaimed(address,uint256,uint256[],uint256[])\":{\"notice\":\"Emitted when a user claims multiple allocations in a single transaction.\"},\"BatchVestingInitialized(address,uint256[],uint256[])\":{\"notice\":\"Emitted when vesting is initialized for multiple claim indices in a batch.\"},\"Claimed(address,uint256,uint256)\":{\"notice\":\"Emitted when a user successfully claims their airdrop allocation.\"},\"TokensWithdrawn(address,uint256)\":{\"notice\":\"Emitted when the contract owner withdraws unclaimed tokens.\"},\"VestingInitialized(address,uint256,uint256)\":{\"notice\":\"Emitted when vesting is initialized for a specific claim index.\"},\"VestingStrategyUpdated(address,address)\":{\"notice\":\"Emitted when the vesting strategy is updated.\"}},\"kind\":\"user\",\"methods\":{\"MAX_BATCH_SIZE()\":{\"notice\":\"Maximum number of items allowed in batch operations to prevent OOM and gas limit issues.\"},\"batchClaim(uint256[],uint256[],bytes32[][])\":{\"notice\":\"Claims vested tokens for multiple allocations in a single transaction.\"},\"batchInitializeVesting(uint256[],uint256[],bytes32[][])\":{\"notice\":\"Initializes vesting for multiple allocations in a single transaction.\"},\"claim(uint256,uint256,bytes32[])\":{\"notice\":\"Claims vested tokens for a specific allocation after vesting initialization.\"},\"claimPeriodEnd()\":{\"notice\":\"Returns the claim period end timestamp.\"},\"claimTracker()\":{\"notice\":\"Returns the claim tracker contract.\"},\"getClaimedAmount(uint256)\":{\"notice\":\"Gets the amount already claimed for a specific index.\"},\"getInitializationTimestamp(uint256)\":{\"notice\":\"Returns the initialization timestamp for a specific claim index.\"},\"initialize(address,bytes32,address,address,uint256)\":{\"notice\":\"Initializes the vesting airdrop contract with specified parameters.\"},\"initializeVesting(uint256,uint256,bytes32[])\":{\"notice\":\"Initializes vesting for a specific allocation without transferring tokens.\"},\"isClaimed(uint256,uint256)\":{\"notice\":\"Checks if a claim has been fully claimed for a specific index.\"},\"isVestingInitialized(uint256)\":{\"notice\":\"Checks if vesting has been initialized for a specific index.\"},\"merkleRoot()\":{\"notice\":\"Returns the Merkle root for verifying airdrop claims.\"},\"setVestingStrategy(address)\":{\"notice\":\"Updates the vesting strategy contract.\"},\"token()\":{\"notice\":\"Returns the token being distributed in this airdrop.\"},\"vestingStrategy()\":{\"notice\":\"Returns the current vesting strategy contract.\"},\"withdrawTokens(address)\":{\"notice\":\"Allows the owner to withdraw any tokens remaining in the contract.\"}},\"notice\":\"Implementation of a vesting airdrop contract that uses pluggable claim strategies in the ATK Protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropImplementation.sol\":\"ATKVestingAirdropImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/addons/airdrop/ATKAirdrop.sol\":{\"keccak256\":\"0xd0e004c6ebab9fb2ee0a888b59da8e8429a22e9e1bb9f7b522adccdd477c8839\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://99efc79da77add06b1b5700301030859dae8ed5c3ca5044a3ff51906c0d41468\",\"dweb:/ipfs/QmYWCUkifCfVyA53P54siBGeKpMNekxjyZtbaJ4kbkgQBn\"]},\"contracts/addons/airdrop/ATKAirdropErrors.sol\":{\"keccak256\":\"0xa93b24c2e8660cad5b9941dc0d41aac535af781e66f36d5f2fddf1c692998b4a\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://92dff09331337aae31cc944bd0d6394da4f360be163ed55e36396139f3b44b9b\",\"dweb:/ipfs/Qmc6t58jdku5FhJ61b2B6ajjh8BNt2xc46vL7qYW25oPEg\"]},\"contracts/addons/airdrop/IATKAirdrop.sol\":{\"keccak256\":\"0x5693909b573592bc415bc92930d365b8ec1d7ef8eddc0a9e45e3fb3ca07c9eb7\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://fbeaa32c2f1ad5513f01abb8500f05fc86e756180a386f933f502ae8f8457fee\",\"dweb:/ipfs/QmciPuDp6YuJjHuGTJxpi7eBBSL2Ac1aX9p8US7wP7YzA7\"]},\"contracts/addons/airdrop/claim-tracker/ATKAmountClaimTracker.sol\":{\"keccak256\":\"0x4a59b468381db957bfe7f8a694f2bf8ae7c61548766d449d84551682a13c13d9\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://d018ee8c5fef07cbdbdf9feff62b7a738786020b4501601e4d7bf70b330f7209\",\"dweb:/ipfs/QmPZJ56q8gYGX6WRBR3CnaRUmWemVVqmKQaEg9RFpLcT7X\"]},\"contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol\":{\"keccak256\":\"0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f\",\"dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne\"]},\"contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropErrors.sol\":{\"keccak256\":\"0x95513b1e3d6d3a2122920133f743680e8bd42be39a5d7d929bf9aef213b467da\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://b68d9fc63a0d1de7b3a7f31784df8d403f8d403aff46b3f87d83a83e676a514c\",\"dweb:/ipfs/QmSuAPK23Mqjf2SMJZQJ9fRZjCWHckFHmpuhzuhHE4KzkN\"]},\"contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropImplementation.sol\":{\"keccak256\":\"0xa4e3817d19a6348fbbbc7b72828dfa9ab386ee5fae43e5bc9d313168a00d5522\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://6b3303b240f99b3cd8ddfeeb02b511ce353e3c5ca5950a43350f15aee7c2a701\",\"dweb:/ipfs/QmeXprSC3BiqVeFupxKCsy2uqFv47H2MFSecgP6Zu1uJVi\"]},\"contracts/addons/airdrop/vesting-airdrop/IATKVestingAirdrop.sol\":{\"keccak256\":\"0xe4c2debc655501d4e2922df37838d49221cca3b87acba27319c2453886bcf0e7\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ad93b784a93c5ce2b93671695acc0f0712e5280d9c9b07f2245ee0d77ca47cf0\",\"dweb:/ipfs/QmVuN3oKAnkk6BcGnQZag3ec4CkGZ7MN21CkY9FcH69PJ6\"]},\"contracts/addons/airdrop/vesting-airdrop/IATKVestingStrategy.sol\":{\"keccak256\":\"0x4b407d87d884f6e3f8d005f6b5f31760168dd0d7e73b4794b817f64215a33153\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://27e95586b6131529d539130c90d51fa3c625f5d047451780f2c9f551737bdc84\",\"dweb:/ipfs/QmUa7u4dMP99YoWPpepXWQvGUhUNZKzYcNG44XZV8RZm6R\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BatchSizeExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexAlreadyClaimed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializationDeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaimAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaimTrackerAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitializationDeadline"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInputArrayLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMerkleProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMerkleRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTokenAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vestingStrategy",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidVestingStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVestingStrategyAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWithdrawalAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VestingAlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VestingNotInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAmountToTransfer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroClaimAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "totalAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchVestingInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VestingInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldStrategy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newStrategy",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "VestingStrategyUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BATCH_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "totalAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "merkleProofs",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "totalAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "merkleProofs",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchInitializeVesting"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimPeriodEnd",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimTracker",
          "outputs": [
            {
              "internalType": "contract IATKClaimTracker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInitializationTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "root_",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vestingStrategy_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initializationDeadline_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeVesting"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVestingInitialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newVestingStrategy_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVestingStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingStrategy",
          "outputs": [
            {
              "internalType": "contract IATKVestingStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchClaim(uint256[],uint256[],bytes32[][])": {
            "details": "Overrides the abstract batchClaim function from ATKAirdrop. All indices must have vesting initialized.",
            "params": {
              "indices": "The indices of the claims in the Merkle tree.",
              "merkleProofs": "The Merkle proof arrays (required by base contract but not used in verification here).",
              "totalAmounts": "The total amounts allocated for each index."
            }
          },
          "batchInitializeVesting(uint256[],uint256[],bytes32[][])": {
            "details": "Batch version of initializeVesting for gas efficiency when handling multiple indices.",
            "params": {
              "indices": "The indices of the claims in the Merkle tree.",
              "merkleProofs": "The Merkle proof arrays for verification of each index.",
              "totalAmounts": "The total amounts allocated for each index."
            }
          },
          "claim(uint256,uint256,bytes32[])": {
            "details": "Overrides the abstract claim function from ATKAirdrop. Requires vesting to be initialized first.      The amount claimed is determined by the vesting strategy based on time elapsed since initialization.",
            "params": {
              "index": "The index of the claim in the Merkle tree.",
              "merkleProof": "The Merkle proof array (required by base contract but not used in verification here).",
              "totalAmount": "The total amount allocated for this index."
            }
          },
          "claimPeriodEnd()": {
            "returns": {
              "_0": "The timestamp after which no new vesting can be initialized."
            }
          },
          "claimTracker()": {
            "returns": {
              "_0": "The claim tracker contract."
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor",
            "params": {
              "forwarder_": "The address of the forwarder contract."
            }
          },
          "getClaimedAmount(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "claimedAmount The amount already claimed for this index."
            }
          },
          "getInitializationTimestamp(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "timestamp The timestamp when vesting was initialized for this index (0 if not initialized)."
            }
          },
          "initialize(address,bytes32,address,address,uint256)": {
            "details": "Sets up the base airdrop functionality and vesting-specific parameters.      Deploys its own claim tracker for secure claim management.",
            "params": {
              "initializationDeadline_": "The timestamp after which no new vesting can be initialized.",
              "owner_": "The initial owner of the contract.",
              "root_": "The Merkle root for verifying claims.",
              "token_": "The address of the ERC20 token to be distributed.",
              "vestingStrategy_": "The address of the vesting strategy contract for vesting calculations."
            }
          },
          "initializeVesting(uint256,uint256,bytes32[])": {
            "details": "Users must call this function first to start their vesting schedule before they can claim tokens.      The vesting start time is recorded when this function is called.",
            "params": {
              "index": "The index of the claim in the Merkle tree.",
              "merkleProof": "The Merkle proof array for verification.",
              "totalAmount": "The total amount allocated for this index."
            }
          },
          "isClaimed(uint256,uint256)": {
            "params": {
              "index": "The index to check in the Merkle tree.",
              "totalAmount": "The total amount allocated for this index."
            },
            "returns": {
              "_0": "claimed True if the index has been fully claimed, false otherwise."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "isVestingInitialized(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "initialized True if vesting has been initialized for this index."
            }
          },
          "merkleRoot()": {
            "returns": {
              "_0": "The Merkle root for verifying airdrop claims."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setVestingStrategy(address)": {
            "details": "Only the owner can update the vesting strategy. The new strategy must support multiple claims.",
            "params": {
              "newVestingStrategy_": "The address of the new vesting strategy contract."
            }
          },
          "token()": {
            "returns": {
              "_0": "The ERC20 token being distributed."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          },
          "vestingStrategy()": {
            "returns": {
              "_0": "The vesting strategy contract."
            }
          },
          "withdrawTokens(address)": {
            "params": {
              "to": "The address to send the withdrawn tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_BATCH_SIZE()": {
            "notice": "Maximum number of items allowed in batch operations to prevent OOM and gas limit issues."
          },
          "batchClaim(uint256[],uint256[],bytes32[][])": {
            "notice": "Claims vested tokens for multiple allocations in a single transaction."
          },
          "batchInitializeVesting(uint256[],uint256[],bytes32[][])": {
            "notice": "Initializes vesting for multiple allocations in a single transaction."
          },
          "claim(uint256,uint256,bytes32[])": {
            "notice": "Claims vested tokens for a specific allocation after vesting initialization."
          },
          "claimPeriodEnd()": {
            "notice": "Returns the claim period end timestamp."
          },
          "claimTracker()": {
            "notice": "Returns the claim tracker contract."
          },
          "getClaimedAmount(uint256)": {
            "notice": "Gets the amount already claimed for a specific index."
          },
          "getInitializationTimestamp(uint256)": {
            "notice": "Returns the initialization timestamp for a specific claim index."
          },
          "initialize(address,bytes32,address,address,uint256)": {
            "notice": "Initializes the vesting airdrop contract with specified parameters."
          },
          "initializeVesting(uint256,uint256,bytes32[])": {
            "notice": "Initializes vesting for a specific allocation without transferring tokens."
          },
          "isClaimed(uint256,uint256)": {
            "notice": "Checks if a claim has been fully claimed for a specific index."
          },
          "isVestingInitialized(uint256)": {
            "notice": "Checks if vesting has been initialized for a specific index."
          },
          "merkleRoot()": {
            "notice": "Returns the Merkle root for verifying airdrop claims."
          },
          "setVestingStrategy(address)": {
            "notice": "Updates the vesting strategy contract."
          },
          "token()": {
            "notice": "Returns the token being distributed in this airdrop."
          },
          "vestingStrategy()": {
            "notice": "Returns the current vesting strategy contract."
          },
          "withdrawTokens(address)": {
            "notice": "Allows the owner to withdraw any tokens remaining in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropImplementation.sol": "ATKVestingAirdropImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/addons/airdrop/ATKAirdrop.sol": {
        "keccak256": "0xd0e004c6ebab9fb2ee0a888b59da8e8429a22e9e1bb9f7b522adccdd477c8839",
        "urls": [
          "bzz-raw://99efc79da77add06b1b5700301030859dae8ed5c3ca5044a3ff51906c0d41468",
          "dweb:/ipfs/QmYWCUkifCfVyA53P54siBGeKpMNekxjyZtbaJ4kbkgQBn"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/ATKAirdropErrors.sol": {
        "keccak256": "0xa93b24c2e8660cad5b9941dc0d41aac535af781e66f36d5f2fddf1c692998b4a",
        "urls": [
          "bzz-raw://92dff09331337aae31cc944bd0d6394da4f360be163ed55e36396139f3b44b9b",
          "dweb:/ipfs/Qmc6t58jdku5FhJ61b2B6ajjh8BNt2xc46vL7qYW25oPEg"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/IATKAirdrop.sol": {
        "keccak256": "0x5693909b573592bc415bc92930d365b8ec1d7ef8eddc0a9e45e3fb3ca07c9eb7",
        "urls": [
          "bzz-raw://fbeaa32c2f1ad5513f01abb8500f05fc86e756180a386f933f502ae8f8457fee",
          "dweb:/ipfs/QmciPuDp6YuJjHuGTJxpi7eBBSL2Ac1aX9p8US7wP7YzA7"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/ATKAmountClaimTracker.sol": {
        "keccak256": "0x4a59b468381db957bfe7f8a694f2bf8ae7c61548766d449d84551682a13c13d9",
        "urls": [
          "bzz-raw://d018ee8c5fef07cbdbdf9feff62b7a738786020b4501601e4d7bf70b330f7209",
          "dweb:/ipfs/QmPZJ56q8gYGX6WRBR3CnaRUmWemVVqmKQaEg9RFpLcT7X"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol": {
        "keccak256": "0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be",
        "urls": [
          "bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f",
          "dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropErrors.sol": {
        "keccak256": "0x95513b1e3d6d3a2122920133f743680e8bd42be39a5d7d929bf9aef213b467da",
        "urls": [
          "bzz-raw://b68d9fc63a0d1de7b3a7f31784df8d403f8d403aff46b3f87d83a83e676a514c",
          "dweb:/ipfs/QmSuAPK23Mqjf2SMJZQJ9fRZjCWHckFHmpuhzuhHE4KzkN"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropImplementation.sol": {
        "keccak256": "0xa4e3817d19a6348fbbbc7b72828dfa9ab386ee5fae43e5bc9d313168a00d5522",
        "urls": [
          "bzz-raw://6b3303b240f99b3cd8ddfeeb02b511ce353e3c5ca5950a43350f15aee7c2a701",
          "dweb:/ipfs/QmeXprSC3BiqVeFupxKCsy2uqFv47H2MFSecgP6Zu1uJVi"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/vesting-airdrop/IATKVestingAirdrop.sol": {
        "keccak256": "0xe4c2debc655501d4e2922df37838d49221cca3b87acba27319c2453886bcf0e7",
        "urls": [
          "bzz-raw://ad93b784a93c5ce2b93671695acc0f0712e5280d9c9b07f2245ee0d77ca47cf0",
          "dweb:/ipfs/QmVuN3oKAnkk6BcGnQZag3ec4CkGZ7MN21CkY9FcH69PJ6"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/vesting-airdrop/IATKVestingStrategy.sol": {
        "keccak256": "0x4b407d87d884f6e3f8d005f6b5f31760168dd0d7e73b4794b817f64215a33153",
        "urls": [
          "bzz-raw://27e95586b6131529d539130c90d51fa3c625f5d047451780f2c9f551737bdc84",
          "dweb:/ipfs/QmUa7u4dMP99YoWPpepXWQvGUhUNZKzYcNG44XZV8RZm6R"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/Hashes.sol": {
        "keccak256": "0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269",
        "urls": [
          "bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11",
          "dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134",
        "urls": [
          "bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6",
          "dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866",
        "urls": [
          "bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf",
          "dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MAX_BATCH_SIZE()": {
        "notice": "Maximum number of items allowed in batch operations to prevent OOM and gas limit issues."
      },
      "batchClaim(uint256[],uint256[],bytes32[][])": {
        "notice": "Claims vested tokens for multiple allocations in a single transaction."
      },
      "batchInitializeVesting(uint256[],uint256[],bytes32[][])": {
        "notice": "Initializes vesting for multiple allocations in a single transaction."
      },
      "claim(uint256,uint256,bytes32[])": {
        "notice": "Claims vested tokens for a specific allocation after vesting initialization."
      },
      "claimPeriodEnd()": {
        "notice": "Returns the claim period end timestamp."
      },
      "claimTracker()": {
        "notice": "Returns the claim tracker contract."
      },
      "getClaimedAmount(uint256)": {
        "notice": "Gets the amount already claimed for a specific index."
      },
      "getInitializationTimestamp(uint256)": {
        "notice": "Returns the initialization timestamp for a specific claim index."
      },
      "initialize(address,bytes32,address,address,uint256)": {
        "notice": "Initializes the vesting airdrop contract with specified parameters."
      },
      "initializeVesting(uint256,uint256,bytes32[])": {
        "notice": "Initializes vesting for a specific allocation without transferring tokens."
      },
      "isClaimed(uint256,uint256)": {
        "notice": "Checks if a claim has been fully claimed for a specific index."
      },
      "isVestingInitialized(uint256)": {
        "notice": "Checks if vesting has been initialized for a specific index."
      },
      "merkleRoot()": {
        "notice": "Returns the Merkle root for verifying airdrop claims."
      },
      "setVestingStrategy(address)": {
        "notice": "Updates the vesting strategy contract."
      },
      "token()": {
        "notice": "Returns the token being distributed in this airdrop."
      },
      "vestingStrategy()": {
        "notice": "Returns the current vesting strategy contract."
      },
      "withdrawTokens(address)": {
        "notice": "Allows the owner to withdraw any tokens remaining in the contract."
      }
    },
    "events": {
      "BatchClaimed(address,uint256,uint256[],uint256[])": {
        "notice": "Emitted when a user claims multiple allocations in a single transaction."
      },
      "BatchVestingInitialized(address,uint256[],uint256[])": {
        "notice": "Emitted when vesting is initialized for multiple claim indices in a batch."
      },
      "Claimed(address,uint256,uint256)": {
        "notice": "Emitted when a user successfully claims their airdrop allocation."
      },
      "TokensWithdrawn(address,uint256)": {
        "notice": "Emitted when the contract owner withdraws unclaimed tokens."
      },
      "VestingInitialized(address,uint256,uint256)": {
        "notice": "Emitted when vesting is initialized for a specific claim index."
      },
      "VestingStrategyUpdated(address,address)": {
        "notice": "Emitted when the vesting strategy is updated."
      }
    },
    "errors": {
      "BatchSizeExceedsLimit()": [
        {
          "notice": "Error indicating that the batch size exceeds the maximum allowed limit."
        }
      ],
      "IndexAlreadyClaimed()": [
        {
          "notice": "Error indicating that a claim is attempted for an index that has already been claimed."
        }
      ],
      "InitializationDeadlinePassed()": [
        {
          "notice": "Error indicating that the initialization deadline has passed and no new vesting can be initialized."
        }
      ],
      "InvalidClaimAmount()": [
        {
          "notice": "Error indicating that the claim amount exceeds the total allocated amount for the index."
        }
      ],
      "InvalidClaimTrackerAddress()": [
        {
          "notice": "Error indicating that an invalid claim tracker address was provided."
        }
      ],
      "InvalidInitializationDeadline()": [
        {
          "notice": "Error indicating that an invalid initialization deadline was provided."
        }
      ],
      "InvalidInputArrayLengths()": [
        {
          "notice": "Error indicating that input array lengths do not match in batch operations."
        }
      ],
      "InvalidMerkleProof()": [
        {
          "notice": "Error indicating that a provided Merkle proof is invalid for the claim parameters."
        }
      ],
      "InvalidMerkleRoot()": [
        {
          "notice": "Error indicating that a provided Merkle root is invalid."
        }
      ],
      "InvalidTokenAddress()": [
        {
          "notice": "Error indicating that an invalid token address was provided."
        }
      ],
      "InvalidVestingStrategy(address)": [
        {
          "notice": "Error indicating that the provided vesting strategy is invalid for this use case."
        }
      ],
      "InvalidVestingStrategyAddress()": [
        {
          "notice": "Error indicating that an invalid vesting strategy address was provided."
        }
      ],
      "InvalidWithdrawalAddress()": [
        {
          "notice": "Error indicating that an invalid withdrawal address was provided."
        }
      ],
      "VestingAlreadyInitialized()": [
        {
          "notice": "Error indicating that vesting has already been initialized for the specified index."
        }
      ],
      "VestingNotInitialized()": [
        {
          "notice": "Error indicating that vesting has not been initialized for the specified index."
        }
      ],
      "ZeroAmountToTransfer()": [
        {
          "notice": "Error indicating that there are zero tokens available to transfer."
        }
      ],
      "ZeroClaimAmount()": [
        {
          "notice": "Error indicating that the claim amount is zero."
        }
      ]
    },
    "notice": "Implementation of a vesting airdrop contract that uses pluggable claim strategies in the ATK Protocol."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This contract implements a two-phase vesting airdrop process:      1. `initializeVesting` or `batchInitializeVesting`: User proves their allocation and starts the vesting clock.         No tokens are transferred at this stage.      2. `claim` or `batchClaim`: User claims the vested portion of their tokens at any time after initialization.      The contract uses a pluggable vesting strategy pattern to allow different vesting calculations.      It extends ATKAirdrop for Merkle proof verification and meta-transaction support.      It deploys its own claim tracker for secure claim management.",
    "methods": {
      "batchClaim(uint256[],uint256[],bytes32[][])": {
        "details": "Overrides the abstract batchClaim function from ATKAirdrop. All indices must have vesting initialized.",
        "params": {
          "indices": "The indices of the claims in the Merkle tree.",
          "merkleProofs": "The Merkle proof arrays (required by base contract but not used in verification here).",
          "totalAmounts": "The total amounts allocated for each index."
        }
      },
      "batchInitializeVesting(uint256[],uint256[],bytes32[][])": {
        "details": "Batch version of initializeVesting for gas efficiency when handling multiple indices.",
        "params": {
          "indices": "The indices of the claims in the Merkle tree.",
          "merkleProofs": "The Merkle proof arrays for verification of each index.",
          "totalAmounts": "The total amounts allocated for each index."
        }
      },
      "claim(uint256,uint256,bytes32[])": {
        "details": "Overrides the abstract claim function from ATKAirdrop. Requires vesting to be initialized first.      The amount claimed is determined by the vesting strategy based on time elapsed since initialization.",
        "params": {
          "index": "The index of the claim in the Merkle tree.",
          "merkleProof": "The Merkle proof array (required by base contract but not used in verification here).",
          "totalAmount": "The total amount allocated for this index."
        }
      },
      "claimPeriodEnd()": {
        "returns": {
          "_0": "The timestamp after which no new vesting can be initialized."
        }
      },
      "claimTracker()": {
        "returns": {
          "_0": "The claim tracker contract."
        }
      },
      "constructor": {
        "params": {
          "forwarder_": "The address of the forwarder contract."
        }
      },
      "getClaimedAmount(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "claimedAmount The amount already claimed for this index."
        }
      },
      "getInitializationTimestamp(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "timestamp The timestamp when vesting was initialized for this index (0 if not initialized)."
        }
      },
      "initialize(address,bytes32,address,address,uint256)": {
        "details": "Sets up the base airdrop functionality and vesting-specific parameters.      Deploys its own claim tracker for secure claim management.",
        "params": {
          "initializationDeadline_": "The timestamp after which no new vesting can be initialized.",
          "owner_": "The initial owner of the contract.",
          "root_": "The Merkle root for verifying claims.",
          "token_": "The address of the ERC20 token to be distributed.",
          "vestingStrategy_": "The address of the vesting strategy contract for vesting calculations."
        }
      },
      "initializeVesting(uint256,uint256,bytes32[])": {
        "details": "Users must call this function first to start their vesting schedule before they can claim tokens.      The vesting start time is recorded when this function is called.",
        "params": {
          "index": "The index of the claim in the Merkle tree.",
          "merkleProof": "The Merkle proof array for verification.",
          "totalAmount": "The total amount allocated for this index."
        }
      },
      "isClaimed(uint256,uint256)": {
        "params": {
          "index": "The index to check in the Merkle tree.",
          "totalAmount": "The total amount allocated for this index."
        },
        "returns": {
          "_0": "claimed True if the index has been fully claimed, false otherwise."
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "isVestingInitialized(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "initialized True if vesting has been initialized for this index."
        }
      },
      "merkleRoot()": {
        "returns": {
          "_0": "The Merkle root for verifying airdrop claims."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setVestingStrategy(address)": {
        "details": "Only the owner can update the vesting strategy. The new strategy must support multiple claims.",
        "params": {
          "newVestingStrategy_": "The address of the new vesting strategy contract."
        }
      },
      "token()": {
        "returns": {
          "_0": "The ERC20 token being distributed."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      },
      "vestingStrategy()": {
        "returns": {
          "_0": "The vesting strategy contract."
        }
      },
      "withdrawTokens(address)": {
        "params": {
          "to": "The address to send the withdrawn tokens to."
        }
      }
    },
    "events": {
      "BatchClaimed(address,uint256,uint256[],uint256[])": {
        "params": {
          "amounts": "The amounts claimed for each index.",
          "claimant": "The address that claimed the tokens.",
          "indices": "The indices of the claims in the Merkle tree.",
          "totalAmount": "The total amount of tokens claimed in the batch."
        }
      },
      "BatchVestingInitialized(address,uint256[],uint256[])": {
        "params": {
          "account": "The address that initialized the vesting.",
          "indices": "The indices of the claims in the Merkle tree.",
          "totalAmounts": "The amounts allocated for each index."
        }
      },
      "Claimed(address,uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens claimed.",
          "claimant": "The address that claimed the tokens.",
          "index": "The index of the claim in the Merkle tree."
        }
      },
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "TokensWithdrawn(address,uint256)": {
        "params": {
          "amount": "The amount of tokens withdrawn.",
          "to": "The address receiving the withdrawn tokens."
        }
      },
      "VestingInitialized(address,uint256,uint256)": {
        "params": {
          "account": "The address that initialized the vesting.",
          "index": "The index of the claim in the Merkle tree.",
          "totalAmount": "The total amount allocated for this index."
        }
      },
      "VestingStrategyUpdated(address,address)": {
        "params": {
          "newStrategy": "The address of the new vesting strategy.",
          "oldStrategy": "The address of the previous vesting strategy."
        }
      }
    },
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "InvalidVestingStrategy(address)": [
        {
          "params": {
            "vestingStrategy": "The address of the invalid vesting strategy."
          }
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ]
    },
    "title": "ATK Vesting Airdrop Implementation"
  },
  "id": 15
}