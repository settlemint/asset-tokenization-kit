{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "forwarder_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_BATCH_SIZE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchClaim",
      "inputs": [
        {
          "name": "indices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "totalAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "merkleProofs",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchInitializeVesting",
      "inputs": [
        {
          "name": "indices",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "totalAmounts",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "merkleProofs",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimPeriodEnd",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimTracker",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IATKClaimTracker"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimedAmount",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getInitializationTimestamp",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "name_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "token_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "root_",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "owner_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "vestingStrategy_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initializationDeadline_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initializeVesting",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isClaimed",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isVestingInitialized",
      "inputs": [
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "merkleRoot",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setVestingStrategy",
      "inputs": [
        {
          "name": "newVestingStrategy_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "token",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "vestingStrategy",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IATKVestingStrategy"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdrawTokens",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "BatchClaimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "indices",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchVestingInitialized",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "indices",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "totalAmounts",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Claimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensWithdrawn",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VestingInitialized",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VestingStrategyUpdated",
      "inputs": [
        {
          "name": "oldStrategy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newStrategy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "BatchSizeExceedsLimit",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IndexAlreadyClaimed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InitializationDeadlinePassed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAirdropName",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidClaimAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidClaimTrackerAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInitializationDeadline",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidInputArrayLengths",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMerkleProof",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidMerkleRoot",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidTokenAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidVestingStrategy",
      "inputs": [
        {
          "name": "vestingStrategy",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidVestingStrategyAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWithdrawalAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "VestingAlreadyInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "VestingNotInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroAmountToTransfer",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroClaimAmount",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1891:12226:15:-:0;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;1623:37:236;;5105:109:0;;:::i;:::-;3922:94:15;;:::i;:::-;1891:12226;;;;;;;;1623:37:236;1891:12226:15;;;;;;;;;;;;;;;;;-1:-1:-1;1891:12226:15;;;;;;-1:-1:-1;1891:12226:15;;;;;-1:-1:-1;1891:12226:15;7709:422:237;-1:-1:-1;;;;;;;;;;;1891:12226:15;;;;;;7894:76:237;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;7983:34:237;7979:146;;7709:422;:::o;7979:146::-;-1:-1:-1;;;;;;1891:12226:15;-1:-1:-1;;;;;1891:12226:15;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;;;;;8085:29:237;;1891:12226:15;;8085:29:237;7709:422::o;7894:76::-;7936:23;;;-1:-1:-1;7936:23:237;;-1:-1:-1;7936:23:237",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146114835750806310639fef146113d7578063222abc11146113af5780632eb4a7ab146113925780633da082a0146113755780633ecfea491461129457806341162b7514611153578063429c6e5b1461112d57806349df728c146110435780634be7adee14610c2457806352ae2c2014610bfa578063572b6c0514610ba6578063715018a614610b3f5780637da0a87714610afb5780638da5cb5b14610ac7578063ae0b51df1461080a578063bd3f22b2146107de578063cfdbf254146107c3578063db190a9f14610232578063f2fde38b14610207578063f364c90c1461016d578063f567fa9d146101455763fc0c546a14610119575f80fd5b34610141575f366003190112610141576001546040516001600160a01b039091168152602090f35b5f80fd5b34610141575f366003190112610141576004546040516001600160a01b039091168152602090f35b3461014157604036600319011261014157600354604051633cd9324360e21b81526004803590820152602480359082015290602090829060449082906001600160a01b03165afa80156101fc576020915f916101cf575b506040519015158152f35b6101ef9150823d84116101f5575b6101e78183611646565b81019061169f565b826101c4565b503d6101dd565b6040513d5f823e3d90fd5b34610141576020366003190112610141576102306102236115c2565b61022b6119a0565b61180d565b005b346101415760c0366003190112610141576004356001600160401b03811161014157366023820112156101415780600401356001600160401b03811161067f576040519161028a601f8301601f191660200184611646565b818352366024838301011161014157815f9260246020930183860137830101526024356001600160a01b038116919082900361014157604435916064356001600160a01b0381168103610141576084356001600160a01b03811694908590036101415760a435925f516020611efe5f395f51905f52549460ff8660401c1615956001600160401b038116801590816107bb575b60011490816107b1575b1590816107a8575b506107995767ffffffffffffffff1981166001175f516020611efe5f395f51905f52558661076d575b50861561075e574285111561074f57604051637c13428d60e11b81526020816004818b5afa5f918161072e575b5061039d5787632a4aa22360e11b5f5260045260245ffd5b969495961561071b57604051610398808201908282106001600160401b0383111761067f576020918391611b0683393081520301905ff080156101fc576001600160a01b0316936103ec611ada565b81511561070c5782156106fd5783156106ee5784156106df576040516318160ddd60e01b8152602081600481875afa90816106b0575b5061043657630f58058360e11b5f5260045ffd5b604051633cd9324360e21b81525f600482018190526024820152602081604481895afa9081610693575b5061047457632b58d96960e01b5f5260045ffd5b61048890610480611ada565b61022b611ada565b8051906001600160401b03821161067f5781906104a55f54611667565b601f811161060e575b50602090601f83116001146105a0575f92610595575b50508160011b915f199060031b1c1916175f555b6001600160601b0360a01b60015416176001556002556001600160601b0360a01b6003541617600355610509611ada565b610511611ada565b60015f516020611ede5f395f51905f52556001600160601b0360a01b600454161760045560055561053e57005b68ff0000000000000000195f516020611efe5f395f51905f5254165f516020611efe5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b0151905088806104c4565b5f8080525f516020611ebe5f395f51905f529350601f198516905b8181106105f657509084600195949392106105de575b505050811b015f556104d8565b01515f1960f88460031b161c191690558880806105d1565b929360206001819287860151815501950193016105bb565b9091505f8052601f830160051c5f516020611ebe5f395f51905f5201906020841061066a575b90601f8493920160051c5f516020611ebe5f395f51905f5201905b81811061065c57506104ae565b5f815584935060010161064f565b5f516020611ebe5f395f51905f529150610634565b634e487b7160e01b5f52604160045260245ffd5b6106ab9060203d6020116101f5576101e78183611646565b610460565b6020813d6020116106d7575b816106c960209383611646565b810103126101415751610422565b3d91506106bc565b632b58d96960e01b5f5260045ffd5b639dd854d360e01b5f5260045ffd5b630f58058360e11b5f5260045ffd5b632e43296560e01b5f5260045ffd5b84632a4aa22360e11b5f5260045260245ffd5b61074891925060203d6020116101f5576101e78183611646565b9089610385565b6310b2668560e11b5f5260045ffd5b6385d923df60e01b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f516020611efe5f395f51905f525587610358565b63f92ee8a960e01b5f5260045ffd5b9050158961032f565b303b159150610327565b88915061031d565b34610141575f36600319011261014157602060405160648152f35b34610141576020366003190112610141576004355f526006602052602060405f20541515604051908152f35b34610141576108183661158c565b929061082261187e565b815f52600660205260405f205415610ab8576108a693825f52600660205260405f205491602061085185611743565b610859611a81565b600480546040516307a297ab60e01b81526001600160a01b0380851693820193909352602481018b9052604481019890985260648801939093529598909589921690829081906084820190565b03915afa9586156101fc575f96610a84575b508515610a755760018060a01b036003541691604051633cd9324360e21b8152856004820152866024820152602081604481875afa9081156101fc575f91610a56575b50610a475761090c918685876118b6565b15610a3857604051635ea05ef360e11b8152600481018490526024810186905260448101859052602081606481855afa9081156101fc575f91610a19575b5015610a0a57803b156101415760405163762ba3ff60e11b8152600481018490526024810186905260448101949094525f908490606490829084905af19182156101fc577f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a936040936109fa575b506001546109d290869084906001600160a01b03166119f3565b825194855260208501526001600160a01b031692a260015f516020611ede5f395f51905f5255005b5f610a0491611646565b856109b8565b63843ce46b60e01b5f5260045ffd5b610a32915060203d6020116101f5576101e78183611646565b8661094a565b63582f497d60e11b5f5260045ffd5b63b708ca1560e01b5f5260045ffd5b610a6f915060203d6020116101f5576101e78183611646565b886108fb565b63723a162160e11b5f5260045ffd5b9095506020813d602011610ab0575b81610aa060209383611646565b81010312610141575194866108b8565b3d9150610a93565b63d2e8cc1760e01b5f5260045ffd5b34610141575f366003190112610141575f516020611e9e5f395f51905f52546040516001600160a01b039091168152602090f35b34610141575f366003190112610141576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610141575f36600319011261014157610b576119a0565b5f516020611e9e5f395f51905f5280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610141576020366003190112610141576020610bc16115c2565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610141576020366003190112610141576004355f526006602052602060405f2054604051908152f35b3461014157610c32366115d8565b9391610c3f95919561187e565b606483116110345780831480159061102a575b610f2d57610c5e611a81565b93610c68846117c7565b6004546001600160a01b03165f5b868110610f5157505080518381871491821592610f46575b50508015610f3c575b610f2d579591905f96610ca9866117c7565b985f945b878610610d765750505050505083610cd3575b60015f516020611ede5f395f51905f5255005b610d0391610cec858560018060a01b03600154166119f3565b60405194855260606020860152606085019161171f565b8281036040840152602080855192838152019401905f5b818110610d60575050506001600160a01b0316917fb9df54cb8716695fe6cd84e5e4b88eca0d9c862970bcd45797aabb77d71b48ee919081900390a28080808080610cc0565b8251865260209586019590920191600101610d1a565b90919293949998610d888b89896116b7565b359a610d9481866117f9565b51809c610da2838a8a6116b7565b35610dae8487896116db565b9315610f1e5760018060a01b036003541693604051633cd9324360e21b8152846004820152836024820152602081604481895afa9081156101fc575f91610f00575b50610a4757610e02918f8490866118b6565b15610a3857610e3c8f826020916040519384928392635ea05ef360e11b845288600485016040919493926060820195825260208201520152565b0381875afa9081156101fc575f91610ee2575b5015610a0a57823b156101415760405163762ba3ff60e11b81526004810192909252602482018f90526044820152905f908290606490829084905af180156101fc57610ed2575b508b8201809211610ebe576001919b610eaf828d6117f9565b52019493929190999899610cad565b634e487b7160e01b5f52601160045260245ffd5b5f610edc91611646565b8c610e96565b610efa915060203d81116101f5576101e78183611646565b5f610e4f565b610f18915060203d81116101f5576101e78183611646565b5f610df0565b6360640efd60e11b5f5260045ffd5b632c635df560e11b5f5260045ffd5b5086831415610c97565b14159050838a610c8e565b610f5c8188886116b7565b3590815f52600660205260405f205415610ab8576020610f7d8288886116b7565b35835f52600682528a610fd1610f9760405f205496611743565b60405196879485946307a297ab60e01b86526004860190949392606092608083019660018060a01b03168352602083015260408201520152565b0381865afa80156101fc575f90610ff8575b60019250610ff182866117f9565b5201610c76565b506020823d8211611022575b8161101160209383611646565b810103126101415760019151610fe3565b3d9150611004565b5084811415610c52565b632a8677b560e21b5f5260045ffd5b346101415760203660031901126101415761105c6115c2565b6110646119a0565b6001600160a01b03811690811561111e576001546040516370a0823160e01b815230600482015291906001600160a01b0316602083602481845afa9283156101fc575f936110e6575b50916110dd816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b956119f3565b604051908152a2005b9250906020833d602011611116575b8161110260209383611646565b8101031261014157915191906110dd6110ad565b3d91506110f5565b634261081360e11b5f5260045ffd5b3461014157602036600319011261014157602061114b600435611743565b604051908152f35b3461014157611161366115d8565b61116f95939594929461187e565b606483116110345784831480159061128a575b610f2d5761118e611a81565b91600554421161127b575f5b848110611210575050506111fa907f8f59e3de0f866848efefecafdbbf1c97262b4187d7355cb68c9c6e50b6ead9a9946111e160405195869560408752604087019161171f565b84810360208601526001600160a01b039092169661171f565b0390a260015f516020611ede5f395f51905f5255005b61121b8186886116b7565b359061122881898b6116b7565b35825f52600660205260405f205461126c57611251906112498387876116db565b9188866118b6565b15610a38576001915f5260066020524260405f20550161119a565b638ef519d560e01b5f5260045ffd5b63df370ae560e01b5f5260045ffd5b5080851415611182565b34610141576020366003190112610141576112ad6115c2565b6112b56119a0565b6001600160a01b0316801561075e57604051637c13428d60e11b8152602081600481855afa5f9181611354575b506112fa5750632a4aa22360e11b5f5260045260245ffd5b1561134257600480546001600160a01b0319811683179091556001600160a01b03167fc831910db935648f19a9acfe07a53355b2d00e33523edf8b0b80aa48f6f5dca85f80a3005b632a4aa22360e11b5f5260045260245ffd5b61136e91925060203d6020116101f5576101e78183611646565b90836112e2565b34610141575f366003190112610141576020600554604051908152f35b34610141575f366003190112610141576020600254604051908152f35b34610141575f366003190112610141576003546040516001600160a01b039091168152602090f35b34610141576113e53661158c565b6113ed61187e565b835f52600660205260405f205461126c57600554421161127b5761141a9183611414611a81565b866118b6565b15610a38575f82815260066020526040908190204290557ffaf76b5ef3ee6a1b42c79e4744b2596312a788e7cbbaee17f2db55bfc304f7de916001600160a01b03611463611a81565b169382519182526020820152a260015f516020611ede5f395f51905f5255005b34610141575f366003190112610141575f905f54916114a183611667565b80835260208301936001811690811561154157506001146114f8575b50906114cd816040930382611646565b8151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b5f8080525f516020611ebe5f395f51905f52939250905b808210611527575090915081016020016114cd6114bd565b91926001816020925483858801015201910190929161150f565b60ff1916855250151560051b820160200190506114cd6114bd565b9181601f84011215610141578235916001600160401b038311610141576020808501948460051b01011161014157565b6060600319820112610141576004359160243591604435906001600160401b038211610141576115be9160040161155c565b9091565b600435906001600160a01b038216820361014157565b6060600319820112610141576004356001600160401b03811161014157816116029160040161155c565b929092916024356001600160401b03811161014157816116249160040161155c565b92909291604435906001600160401b038211610141576115be9160040161155c565b90601f801991011681019081106001600160401b0382111761067f57604052565b90600182811c92168015611695575b602083101461168157565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611676565b90816020910312610141575180151581036101415790565b91908110156116c75760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91908110156116c75760051b81013590601e19813603018212156101415701908135916001600160401b038311610141576020018260051b36038113610141579190565b81835290916001600160fb1b0383116101415760209260051b809284830137010190565b60035460405163429c6e5b60e01b81526004810192909252602090829060249082906001600160a01b03165afa9081156101fc575f91611781575090565b90506020813d6020116117a8575b8161179c60209383611646565b81010312610141575190565b3d915061178f565b6001600160401b03811161067f5760051b60200190565b906117d1826117b0565b6117de6040519182611646565b82815280926117ef601f19916117b0565b0190602036910137565b80518210156116c75760209160051b010190565b6001600160a01b0316801561186b575f516020611e9e5f395f51905f5280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b631e4fbdf760e01b5f525f60045260245ffd5b60025f516020611ede5f395f51905f5254146118a75760025f516020611ede5f395f51905f5255565b633ee5aeb560e01b5f5260045ffd5b9194929394604051916020830193845260018060a01b031660408301526060820152606081526118e7608082611646565b5190206040516020810191825260208152611903604082611646565b51902060025492611913856117b0565b946119216040519687611646565b808652602086019060051b82019136831161014157905b82821061199057505050905f915b84518310156119885761195983866117f9565b519081811015611977575f52602052600160405f205b920191611946565b905f52602052600160405f2061196f565b915092501490565b8135815260209182019101611938565b5f516020611e9e5f395f51905f52546001600160a01b03908116906119c3611a81565b16036119cb57565b6119d3611a81565b63118cdaa760e01b5f9081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f91611a31606482611646565b519082855af1156101fc575f513d611a7857506001600160a01b0381163b155b611a585750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415611a51565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611acf575b15611acb576013193601368111610ebe573560601c90565b3390565b506014361015611ab3565b60ff5f516020611efe5f395f51905f525460401c1615611af657565b631afcd79f60e31b5f5260045ffdfe60803460b857601f61039838819003918201601f19168301916001600160401b0383118484101760bc5780849260209460405283398101031260b857516001600160a01b0381169081900360b857801560a5575f80546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36102c790816100d18239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c908163429c6e5b1461023357508063715018a6146101dc5780638da5cb5b146101b5578063bd40bde614610186578063ec5747fe14610125578063f2fde38b1461009c5763f364c90c14610069575f80fd5b34610098576040366003190112610098576004355f526001602052602060243560405f20541015604051908152f35b5f80fd5b34610098576020366003190112610098576004356001600160a01b03811690819003610098576100ca610294565b8015610112575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100985760407f08401774913e94f43659333293c99fdfdea868c488d679967e054abc8b5ae83461015636610259565b610161949294610294565b845f526001602052825f20610177838254610273565b905582519182526020820152a2005b346100985760206101ab61019936610259565b92915f526001845260405f2054610273565b1115604051908152f35b34610098575f366003190112610098575f546040516001600160a01b039091168152602090f35b34610098575f366003190112610098576101f4610294565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610098576020366003190112610098576020906004355f526001825260405f20548152f35b606090600319011261009857600435906024359060443590565b9190820180921161028057565b634e487b7160e01b5f52601160045260245ffd5b5f546001600160a01b031633036102a757565b63118cdaa760e01b5f523360045260245ffdfea164736f6c634300081c000a9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081c000a",
    "sourceMap": "1891:12226:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;8274:13:0;1891:12226:15;;;-1:-1:-1;;;8274:43:0;;1891:12226:15;;;8274:43:0;;;1891:12226:15;;;;;;;;;;;;;8274:43:0;;1891:12226:15;;-1:-1:-1;;;;;1891:12226:15;8274:43:0;;;;;;1891:12226:15;8274:43:0;1891:12226:15;8274:43:0;;;1891:12226:15;;;;;;;;;;8274:43:0;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1891:12226:15;;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;2357:1:234;1891:12226:15;;:::i;:::-;2303:62:234;;:::i;:::-;2357:1;:::i;:::-;1891:12226:15;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;;;;;;4301:16:237;1891:12226:15;-1:-1:-1;;;;;1891:12226:15;;4724:16:237;;:34;;;;1891:12226:15;;4788:16:237;:50;;;;1891:12226:15;4853:13:237;:30;;;;1891:12226:15;4849:91:237;;;-1:-1:-1;;1891:12226:15;;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;4977:67:237;;1891:12226:15;5000:30;;;4996:74;;5111:15;5084:42;;;5080:86;;1891:12226;;-1:-1:-1;;;5268:62:15;;1891:12226;;;;5268:62;;;1891:12226;;5268:62;;;1891:12226;-1:-1:-1;5264:273:15;;7880:43;;;;1891:12226;5486:40;1891:12226;;;;5486:40;5264:273;5381:17;;;;;5377:70;;1891:12226;;5629:40;;;;;;;;-1:-1:-1;;;;;5629:40:15;;;;;1891:12226;5629:40;;;;;;5663:4;1891:12226;;5629:40;;;1891:12226;5629:40;;;;;-1:-1:-1;;;;;1891:12226:15;;6891:76:237;;:::i;:::-;1891:12226:15;;5937:24:0;5933:57;;6004:20;;6000:54;;6068:19;;6064:51;;6129:27;;6125:68;;1891:12226:15;;-1:-1:-1;;;6312:28:0;;1891:12226:15;;;;6312:28:0;;;;;;;5264:273:15;-1:-1:-1;6308:175:0;;6033:21;;;1891:12226:15;6451:21:0;1891:12226:15;;6451:21:0;6308:175;1891:12226:15;;-1:-1:-1;;;6630:47:0;;1891:12226:15;;6630:47:0;;1891:12226:15;;;;;;;;;;;6630:47:0;;;;;;;6308:175;-1:-1:-1;6626:208:0;;6165:28;;;1891:12226:15;6795:28:0;1891:12226:15;;6795:28:0;6626:208;6959:1:237;6626:208:0;6891:76:237;;:::i;:::-;;;:::i;6959:1::-;1891:12226:15;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;:::i;:::-;;;;;;6626:208:0;1891:12226:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;6933:19:0;1891:12226:15;-1:-1:-1;;;;;1891:12226:15;;6962:47:0;1891:12226:15;;;6962:47:0;1891:12226:15;6891:76:237;;:::i;:::-;;;:::i;:::-;1891:12226:15;-1:-1:-1;;;;;;;;;;;1891:12226:15;-1:-1:-1;;;;;1891:12226:15;;;;;;;;5936:49;1891:12226;5064:101:237;;1891:12226:15;5064:101:237;1891:12226:15;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;-1:-1:-1;;;;;;;;;;;1891:12226:15;5140:14:237;1891:12226:15;;;;;;5140:14:237;1891:12226:15;;;;;-1:-1:-1;1891:12226:15;;;;;;;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;-1:-1:-1;;;1891:12226:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;;;;;;;;;;;;;;;;-1:-1:-1;1891:12226:15;;;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;-1:-1:-1;1891:12226:15;;;;;;;;;;;;;;6630:47:0;;;1891:12226:15;6630:47:0;1891:12226:15;6630:47:0;;;;;;;:::i;:::-;;;6312:28;1891:12226:15;6312:28:0;;1891:12226:15;6312:28:0;;;;;;1891:12226:15;6312:28:0;;;:::i;:::-;;;1891:12226:15;;;;;6312:28:0;;;;;-1:-1:-1;6312:28:0;;6125:68;6165:28;;;1891:12226:15;6165:28:0;1891:12226:15;;6165:28:0;6064:51;6096:19;;;1891:12226:15;6096:19:0;1891:12226:15;;6096:19:0;6000:54;6033:21;;;1891:12226:15;6033:21:0;1891:12226:15;;6033:21:0;5933:57;5970:20;;;1891:12226:15;5970:20:0;1891:12226:15;;5970:20:0;5377:70:15;7880:43;;;;1891:12226;5407:40;1891:12226;;;;5407:40;5268:62;;;;;1891:12226;5268:62;1891:12226;5268:62;;;;;;;:::i;:::-;;;;;5080:86;5135:31;;;1891:12226;5135:31;1891:12226;;5135:31;4996:74;7624:31;;;1891:12226;5039:31;1891:12226;;5039:31;4977:67:237;-1:-1:-1;;1891:12226:15;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;4977:67:237;;;4849:91;4906:23;;;1891:12226:15;4906:23:237;1891:12226:15;;4906:23:237;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:237;;4724:34;;;-1:-1:-1;4724:34:237;;1891:12226:15;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;2817:3:0;1891:12226:15;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;;7161:24;1891:12226;;;;;;;7161:36;;1891:12226;;;;;;;;;;;;;:::i;:::-;3361:103:244;;;;:::i;:::-;1891:12226:15;;;11793:24;1891:12226;;;;;;11793:36;11789:72;;12136:91;1891:12226;;;;11793:24;1891:12226;;;;;;11960:23;1891:12226;11960:23;;;:::i;:::-;15245:38:0;;:::i;:::-;1891:12226:15;;;;;-1:-1:-1;;;12136:91:15;;-1:-1:-1;;;;;1891:12226:15;;;12136:91;;;1891:12226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12136:91;;;;;;;;;;1891:12226;12136:91;;;1891:12226;12242:20;;;12238:55;;1891:12226;;;;;11876:13:0;1891:12226:15;;;;;;;;11876:43:0;;;1891:12226:15;11876:43:0;;1891:12226:15;;;;;;;11876:43:0;;;;;;;;;;;1891:12226:15;11876:43:0;;;1891:12226:15;11872:77:0;;;11996:60;;;;;;:::i;:::-;11995:61;11991:119;;1891:12226:15;;-1:-1:-1;;;12175:65:0;;1891:12226:15;12175:65:0;;1891:12226:15;;;;;;;;;;;;;;;;;;;12175:65:0;;;;;;;;1891:12226:15;12175:65:0;;;1891:12226:15;12174:66:0;;12170:124;;12332:58;;;;;1891:12226:15;;-1:-1:-1;;;12332:58:0;;1891:12226:15;12332:58:0;;1891:12226:15;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;-1:-1:-1;;12332:58:0;;;;;;;12484:36;12332:58;1891:12226:15;12332:58:0;;;1891:12226:15;-1:-1:-1;1891:12226:15;;12457:11:0;;1891:12226:15;;;;-1:-1:-1;;;;;1891:12226:15;12457:11:0;:::i;:::-;1891:12226:15;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;12484:36:0;12428:6;-1:-1:-1;;;;;;;;;;;1891:12226:15;;12332:58:0;1891:12226:15;12332:58:0;;;:::i;:::-;;;;12170:124;14440:20;;;1891:12226:15;12263:20:0;1891:12226:15;;12263:20:0;12175:65;;;;1891:12226:15;12175:65:0;1891:12226:15;12175:65:0;;;;;;;:::i;:::-;;;;11991:119;9190:20:15;;;1891:12226;12079:20:0;1891:12226:15;;12079:20:0;11872:77;14077:21;;;1891:12226:15;11928:21:0;1891:12226:15;;11928:21:0;11876:43;;;;1891:12226:15;11876:43:0;1891:12226:15;11876:43:0;;;;;;;:::i;:::-;;;;12238:55:15;12271:22;;;1891:12226;12271:22;1891:12226;;12271:22;12136:91;;;;1891:12226;12136:91;;1891:12226;12136:91;;;;;;1891:12226;12136:91;;;:::i;:::-;;;1891:12226;;;;;12136:91;;;;;;;-1:-1:-1;12136:91:15;;11789:72;13602:23;;;1891:12226;11838:23;1891:12226;;11838:23;1891:12226;;;;;;-1:-1:-1;;1891:12226:15;;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;1830:17:236;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;2303:62:234;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1891:12226:15;;-1:-1:-1;;;;;;1891:12226:15;;;;;;;-1:-1:-1;;;;;1891:12226:15;3975:40:234;1891:12226:15;;3975:40:234;1891:12226:15;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;:::i;:::-;;;1830:17:236;-1:-1:-1;;;;;1891:12226:15;;;;;2054:31:236;;;;1891:12226:15;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;;6829:24;1891:12226;;;;;;;;;;;;;;;;;;;;:::i;:::-;3361:103:244;;;;;;;:::i;:::-;2817:3:0;3044:26;;3040:87;;13186:37:15;;;;;:83;;;1891:12226;13182:147;;15245:38:0;;:::i;:::-;13414:29:15;;;;:::i;:::-;1891:12226;;-1:-1:-1;;;;;1891:12226:15;;13474:18;;;;;;3040:87:0;;1891:12226:15;;13318:37:0;;;;;;;:83;;;13454:563:15;13318:145:0;;;;;;13454:563:15;13301:231:0;;13542:20;;;1891:12226:15;13610:29:0;;;;:::i;:::-;13655:13;1891:12226:15;13650:1035:0;13670:18;;;;;;14699:20;;;;;;;14695:184;;13650:1035;1891:12226:15;-1:-1:-1;;;;;;;;;;;1891:12226:15;;14695:184:0;1891:12226:15;;14764:16:0;1891:12226:15;;;;;;;;;;14764:16:0;:::i;:::-;1891:12226:15;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1891:12226:15;;14800:68:0;;;;;;;;14695:184;;;;;;;1891:12226:15;;;;;;;;;;;;;;;;;;13690:3:0;13725:10;;;;;;;;;;;;:::i;:::-;1891:12226:15;13771:15:0;;;;;:::i;:::-;1891:12226:15;13822:15:0;;;;;;;:::i;:::-;1891:12226:15;13884:15:0;;;;;:::i;:::-;13918:16;;13914:46;;1891:12226:15;;;;;14025:13:0;1891:12226:15;;;;;;;;14025:43:0;;;1891:12226:15;14025:43:0;;1891:12226:15;;;;;;;14025:43:0;;;;;;;;;;;1891:12226:15;14025:43:0;;;13690:3;14021:77;;;14153:60;;;;;;;:::i;:::-;14152:61;14148:127;;14348:65;1891:12226:15;;;;;;;;;;;;;;14348:65:0;;;1891:12226:15;14348:65:0;;1891:12226:15;;;;;;;;;;;;;;;;;;14348:65:0;;;;;;;;;;;1891:12226:15;14348:65:0;;;13690:3;14347:66;;14343:132;;14521:58;;;;;1891:12226:15;;-1:-1:-1;;;14521:58:0;;1891:12226:15;14521:58:0;;1891:12226:15;;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;-1:-1:-1;;14521:58:0;;;;;;;;13690:3;1891:12226:15;;;;;;;;;;14594:31:0;14639:35;;;;;:::i;:::-;1891:12226:15;;13655:13:0;;;;;;;;;;1891:12226:15;;;;;;;;;;;;14521:58:0;1891:12226:15;14521:58:0;;;:::i;:::-;;;;14348:65;;;;1891:12226:15;14348:65:0;;;;;;;;;:::i;:::-;;;;14025:43;;;;1891:12226:15;14025:43:0;;;;;;;;;:::i;:::-;;;;13914:46;13943:17;;;1891:12226:15;13943:17:0;1891:12226:15;;13943:17:0;13301:231;10172:26:15;;;1891:12226;13495:26:0;1891:12226:15;;13495:26:0;13318:145;13421:42;;;;;13318:145;;:83;13359:42;;;-1:-1:-1;13318:83:0;;;;13494:3:15;13529:10;;;;;:::i;:::-;1891:12226;;;;;13557:24;1891:12226;;;;;;13557:36;13553:72;;1891:12226;13662:15;;;;;:::i;:::-;1891:12226;;;;13557:24;1891:12226;;;13863:91;13783:23;1891:12226;;;;13783:23;;:::i;:::-;1891:12226;;;;;;;;;;13863:91;;1891:12226;13863:91;;1891:12226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13863:91;;;;;;;;;;1891:12226;13863:91;;;13494:3;1891:12226;13969:37;;;;;;:::i;:::-;1891:12226;;13459:13;;13863:91;;1891:12226;13863:91;;;;;;;;;1891:12226;13863:91;;;:::i;:::-;;;1891:12226;;;;;;;13863:91;;;;;-1:-1:-1;13863:91:15;;13186:83;13227:42;;;;;13186:83;;3040:87:0;3093:23;;;1891:12226:15;3093:23:0;1891:12226:15;;3093:23:0;1891:12226:15;;;;;;-1:-1:-1;;1891:12226:15;;;;;;:::i;:::-;2303:62:234;;:::i;:::-;-1:-1:-1;;;;;1891:12226:15;;;10057:16:0;;10053:55;;1891:12226:15;;;;-1:-1:-1;;;10136:31:0;;10161:4;1891:12226:15;10136:31:0;;1891:12226:15;;;-1:-1:-1;;;;;1891:12226:15;;;10136:31:0;1891:12226:15;;10136:31:0;;;;;;;1891:12226:15;10136:31:0;;;1891:12226:15;10201:7:0;;;;1891:12226:15;10201:7:0;10224:28;10201:7;;:::i;:::-;1891:12226:15;;;;;10224:28:0;1891:12226:15;10136:31:0;;;;1891:12226:15;10136:31:0;;1891:12226:15;10136:31:0;;;;;;1891:12226:15;10136:31:0;;;:::i;:::-;;;1891:12226:15;;;;;;;10136:31:0;10201:7;10136:31;;;;;-1:-1:-1;10136:31:0;;10053:55;10082:26;;;1891:12226:15;10082:26:0;1891:12226:15;;10082:26:0;1891:12226:15;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3361:103:244;;;;;;;;:::i;:::-;2817:3:0;3044:26;;3040:87;;10066:37:15;;;;;:83;;;1891:12226;10062:147;;15245:38:0;;:::i;:::-;1891:12226:15;10334:23;1891:12226;10285:15;10315:42;10311:85;;1891:12226;10427:18;;;;;;1891:12226;;;;;10951:54;1891:12226;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;:::i;:::-;10951:54;;;1891:12226;-1:-1:-1;;;;;;;;;;;1891:12226:15;;10447:3;10482:10;;;;;:::i;:::-;1891:12226;10528:15;;;;;;:::i;:::-;1891:12226;;;;10562:24;1891:12226;;;;;;10558:76;;10689:63;10736:15;;;;;;:::i;:::-;10689:63;;;;:::i;:::-;10688:64;10684:130;;1891:12226;;;;10562:24;1891:12226;;10285:15;1891:12226;;;;;10412:13;;10558:76;8934:27;;;1891:12226;10607:27;1891:12226;;10607:27;10311:85;9025:30;;;1891:12226;10366:30;1891:12226;;10366:30;10066:83;10107:42;;;;;10066:83;;1891:12226;;;;;;-1:-1:-1;;1891:12226:15;;;;;;:::i;:::-;2303:62:234;;:::i;:::-;-1:-1:-1;;;;;1891:12226:15;7582:33;;7578:77;;1891:12226;;-1:-1:-1;;;7738:65:15;;1891:12226;;;;7738:65;;;1891:12226;;7738:65;;;1891:12226;-1:-1:-1;7734:282:15;;7880:43;;;;1891:12226;7962:43;1891:12226;;;;7962:43;7734:282;7854:17;7850:73;;1891:12226;;;-1:-1:-1;;;;;;1891:12226:15;;;;;;;-1:-1:-1;;;;;1891:12226:15;8157:56;-1:-1:-1;;8157:56:15;1891:12226;7850:73;7880:43;;;1891:12226;7880:43;1891:12226;;;;7880:43;7738:65;;;;;1891:12226;7738:65;1891:12226;7738:65;;;;;;;:::i;:::-;;;;;1891:12226;;;;;;-1:-1:-1;;1891:12226:15;;;;;6463:23;1891:12226;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;7655:11:0;1891:12226:15;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;7857:13:0;1891:12226:15;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;;:::i;:::-;3361:103:244;;:::i;:::-;1891:12226:15;;;8889:24;1891:12226;;;;;;8885:76;;8993:23;1891:12226;8975:15;:41;8971:84;;9102:65;15245:38:0;;;;:::i;:::-;9102:65:15;;:::i;:::-;9101:66;9097:124;;1891:12226;;;;8889:24;1891:12226;;;;;;;8975:15;1891:12226;;9338:52;;-1:-1:-1;;;;;15245:38:0;;:::i;:::-;1891:12226:15;;;;;;;;;;;9338:52;1949:1:244;-1:-1:-1;;;;;;;;;;;1891:12226:15;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;-1:-1:-1;1891:12226:15;;;;;;;-1:-1:-1;1891:12226:15;;-1:-1:-1;1891:12226:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1891:12226:15;;;-1:-1:-1;1891:12226:15;;;;;;;;;-1:-1:-1;1891:12226:15;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1891:12226:15;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;:::o;:::-;;-1:-1:-1;;1891:12226:15;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;;;;;;;;;:::o;8514:132:0:-;8602:13;1891:12226:15;;;-1:-1:-1;;;8602:37:0;;;;;1891:12226:15;;;;;;;;8602:37:0;;1891:12226:15;;-1:-1:-1;;;;;1891:12226:15;8602:37:0;;;;;;;-1:-1:-1;8602:37:0;;;8595:44;8514:132;:::o;8602:37::-;;;1891:12226:15;8602:37:0;;1891:12226:15;8602:37:0;;;;;;1891:12226:15;8602:37:0;;;:::i;:::-;;;1891:12226:15;;;;;8514:132:0;:::o;8602:37::-;;;-1:-1:-1;8602:37:0;;1891:12226:15;-1:-1:-1;;;;;1891:12226:15;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;3405:215:234:-;-1:-1:-1;;;;;1891:12226:15;3489:22:234;;3485:91;;-1:-1:-1;;;;;;;;;;;1891:12226:15;;-1:-1:-1;;;;;;1891:12226:15;;;;;;;-1:-1:-1;;;;;1891:12226:15;3975:40:234;-1:-1:-1;;3975:40:234;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;1891:12226:15;;3509:1:234;3534:31;3470:384:244;1991:1;-1:-1:-1;;;;;;;;;;;1891:12226:15;3670:20:244;3666:88;;1991:1;-1:-1:-1;;;;;;;;;;;1891:12226:15;3470:384:244:o;3666:88::-;3713:30;;;-1:-1:-1;3713:30:244;;-1:-1:-1;3713:30:244;10765:461:0;;;;;;1891:12226:15;;11110:39:0;;;;1891:12226:15;;;;;;;;;;;;;;;;;;11110:39:0;;;;;;:::i;:::-;1891:12226:15;11100:50:0;;1891:12226:15;;11110:39:0;11089:62;;1891:12226:15;;;11110:39:0;11089:62;;;1891:12226:15;11089:62:0;;:::i;:::-;1891:12226:15;11079:73:0;;11201:11;1891:12226:15;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;11110:39:0;1891:12226:15;;;;;;;;;;;;;;;;;;;;2559:27:223;;;2601:13;-1:-1:-1;2596:134:223;2634:3;1891:12226:15;;2616:16:223;;;;;2710:8;;;;:::i;:::-;1891:12226:15;;605:5:222;;;;;;-1:-1:-1;889:135:222;11110:39:0;889:135:222;1891:12226:15;;-1:-1:-1;889:135:222;605:59;2634:3:223;1891:12226:15;2601:13:223;;;605:59:222;889:135;-1:-1:-1;889:135:222;11110:39:0;889:135:222;1891:12226:15;;-1:-1:-1;889:135:222;605:59;;2616:16:223;;;;;2016:33;10765:461:0;:::o;1891:12226:15:-;;;;;11110:39:0;1891:12226:15;;;;;;;2658:162:234;-1:-1:-1;;;;;;;;;;;1891:12226:15;-1:-1:-1;;;;;1891:12226:15;;;;15245:38:0;;:::i;:::-;1891:12226:15;2717:23:234;2713:101;;2658:162::o;2713:101::-;15245:38:0;;:::i;:::-;-1:-1:-1;;;;2763:40:234;;;-1:-1:-1;;;;;1891:12226:15;;;;2763:40:234;1891:12226:15;;;2763:40:234;1219:160:205;1891:12226:15;;-1:-1:-1;;;1328:43:205;;;;;;;-1:-1:-1;;;;;1891:12226:15;;;1328:43:205;;;1891:12226:15;;;;;;;;;1328:43:205;;;1219:160;;-1:-1:-1;;1328:43:205;;1891:12226:15;1328:43:205;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:205;;8942:15;;-1:-1:-1;;;;;;1891:12226:15;;8960:26:205;:31;8942:68;8938:146;;1219:160;:::o;8938:146::-;-1:-1:-1;;;;9033:40:205;;;-1:-1:-1;;;;;1891:12226:15;;;;9033:40:205;1891:12226:15;1328:43:205;;9033:40;8942:68;9009:1;8994:16;;8942:68;;2329:429:236;2545:10;1830:17;-1:-1:-1;;;;;1891:12226:15;2054:31:236;;2526:71;;2329:429;2522:230;;;1891:12226:15;;2435:8:236;1891:12226:15;2435:8:236;1891:12226:15;;;;;;;;2613:72:236:o;2522:230::-;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;;7082:141:237;1891:12226:15;-1:-1:-1;;;;;;;;;;;1891:12226:15;;;;7148:18:237;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:237;;-1:-1:-1;7189:17:237",
    "linkReferences": {},
    "immutableReferences": {
      "57796": [
        {
          "start": 2832,
          "length": 32
        },
        {
          "start": 3014,
          "length": 32
        },
        {
          "start": 6788,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_BATCH_SIZE()": "cfdbf254",
    "batchClaim(uint256[],uint256[],bytes32[][])": "4be7adee",
    "batchInitializeVesting(uint256[],uint256[],bytes32[][])": "41162b75",
    "claim(uint256,uint256,bytes32[])": "ae0b51df",
    "claimPeriodEnd()": "3da082a0",
    "claimTracker()": "222abc11",
    "getClaimedAmount(uint256)": "429c6e5b",
    "getInitializationTimestamp(uint256)": "52ae2c20",
    "initialize(string,address,bytes32,address,address,uint256)": "db190a9f",
    "initializeVesting(uint256,uint256,bytes32[])": "10639fef",
    "isClaimed(uint256,uint256)": "f364c90c",
    "isTrustedForwarder(address)": "572b6c05",
    "isVestingInitialized(uint256)": "bd3f22b2",
    "merkleRoot()": "2eb4a7ab",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setVestingStrategy(address)": "3ecfea49",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b",
    "trustedForwarder()": "7da0a877",
    "vestingStrategy()": "f567fa9d",
    "withdrawTokens(address)": "49df728c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BatchSizeExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializationDeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAirdropName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaimTrackerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitializationDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInputArrayLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vestingStrategy\",\"type\":\"address\"}],\"name\":\"InvalidVestingStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingStrategyAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWithdrawalAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmountToTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroClaimAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"totalAmounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchVestingInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"VestingInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"VestingStrategyUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"totalAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"totalAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchInitializeVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPeriodEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTracker\",\"outputs\":[{\"internalType\":\"contract IATKClaimTracker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getClaimedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getInitializationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingStrategy_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initializationDeadline_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"initializeVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isVestingInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVestingStrategy_\",\"type\":\"address\"}],\"name\":\"setVestingStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStrategy\",\"outputs\":[{\"internalType\":\"contract IATKVestingStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This contract implements a two-phase vesting airdrop process:      1. `initializeVesting` or `batchInitializeVesting`: User proves their allocation and starts the vesting clock.         No tokens are transferred at this stage.      2. `claim` or `batchClaim`: User claims the vested portion of their tokens at any time after initialization.      The contract uses a pluggable vesting strategy pattern to allow different vesting calculations.      It extends ATKAirdrop for Merkle proof verification and meta-transaction support.      It deploys its own claim tracker for secure claim management.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidVestingStrategy(address)\":[{\"params\":{\"vestingStrategy\":\"The address of the invalid vesting strategy.\"}}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"BatchClaimed(address,uint256,uint256[],uint256[])\":{\"params\":{\"amounts\":\"The amounts claimed for each index.\",\"claimant\":\"The address that claimed the tokens.\",\"indices\":\"The indices of the claims in the Merkle tree.\",\"totalAmount\":\"The total amount of tokens claimed in the batch.\"}},\"BatchVestingInitialized(address,uint256[],uint256[])\":{\"params\":{\"account\":\"The address that initialized the vesting.\",\"indices\":\"The indices of the claims in the Merkle tree.\",\"totalAmounts\":\"The amounts allocated for each index.\"}},\"Claimed(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens claimed.\",\"claimant\":\"The address that claimed the tokens.\",\"index\":\"The index of the claim in the Merkle tree.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TokensWithdrawn(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens withdrawn.\",\"to\":\"The address receiving the withdrawn tokens.\"}},\"VestingInitialized(address,uint256,uint256)\":{\"params\":{\"account\":\"The address that initialized the vesting.\",\"index\":\"The index of the claim in the Merkle tree.\",\"totalAmount\":\"The total amount allocated for this index.\"}},\"VestingStrategyUpdated(address,address)\":{\"params\":{\"newStrategy\":\"The address of the new vesting strategy.\",\"oldStrategy\":\"The address of the previous vesting strategy.\"}}},\"kind\":\"dev\",\"methods\":{\"batchClaim(uint256[],uint256[],bytes32[][])\":{\"details\":\"Overrides the abstract batchClaim function from ATKAirdrop. All indices must have vesting initialized.\",\"params\":{\"indices\":\"The indices of the claims in the Merkle tree.\",\"merkleProofs\":\"The Merkle proof arrays (required by base contract but not used in verification here).\",\"totalAmounts\":\"The total amounts allocated for each index.\"}},\"batchInitializeVesting(uint256[],uint256[],bytes32[][])\":{\"details\":\"Batch version of initializeVesting for gas efficiency when handling multiple indices.\",\"params\":{\"indices\":\"The indices of the claims in the Merkle tree.\",\"merkleProofs\":\"The Merkle proof arrays for verification of each index.\",\"totalAmounts\":\"The total amounts allocated for each index.\"}},\"claim(uint256,uint256,bytes32[])\":{\"details\":\"Overrides the abstract claim function from ATKAirdrop. Requires vesting to be initialized first.      The amount claimed is determined by the vesting strategy based on time elapsed since initialization.\",\"params\":{\"index\":\"The index of the claim in the Merkle tree.\",\"merkleProof\":\"The Merkle proof array (required by base contract but not used in verification here).\",\"totalAmount\":\"The total amount allocated for this index.\"}},\"claimPeriodEnd()\":{\"returns\":{\"_0\":\"The timestamp after which no new vesting can be initialized.\"}},\"claimTracker()\":{\"returns\":{\"_0\":\"The claim tracker contract.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"params\":{\"forwarder_\":\"The address of the forwarder contract.\"}},\"getClaimedAmount(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"claimedAmount The amount already claimed for this index.\"}},\"getInitializationTimestamp(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"timestamp The timestamp when vesting was initialized for this index (0 if not initialized).\"}},\"initialize(string,address,bytes32,address,address,uint256)\":{\"details\":\"Sets up the base airdrop functionality and vesting-specific parameters.      Deploys its own claim tracker for secure claim management.\",\"params\":{\"initializationDeadline_\":\"The timestamp after which no new vesting can be initialized.\",\"name_\":\"The human-readable name for this airdrop.\",\"owner_\":\"The initial owner of the contract.\",\"root_\":\"The Merkle root for verifying claims.\",\"token_\":\"The address of the ERC20 token to be distributed.\",\"vestingStrategy_\":\"The address of the vesting strategy contract for vesting calculations.\"}},\"initializeVesting(uint256,uint256,bytes32[])\":{\"details\":\"Users must call this function first to start their vesting schedule before they can claim tokens.      The vesting start time is recorded when this function is called.\",\"params\":{\"index\":\"The index of the claim in the Merkle tree.\",\"merkleProof\":\"The Merkle proof array for verification.\",\"totalAmount\":\"The total amount allocated for this index.\"}},\"isClaimed(uint256,uint256)\":{\"params\":{\"index\":\"The index to check in the Merkle tree.\",\"totalAmount\":\"The total amount allocated for this index.\"},\"returns\":{\"_0\":\"claimed True if the index has been fully claimed, false otherwise.\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"isVestingInitialized(uint256)\":{\"params\":{\"index\":\"The index to check.\"},\"returns\":{\"_0\":\"initialized True if vesting has been initialized for this index.\"}},\"merkleRoot()\":{\"returns\":{\"_0\":\"The Merkle root for verifying airdrop claims.\"}},\"name()\":{\"returns\":{\"_0\":\"The human-readable name of the airdrop.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setVestingStrategy(address)\":{\"details\":\"Only the owner can update the vesting strategy. The new strategy must support multiple claims.\",\"params\":{\"newVestingStrategy_\":\"The address of the new vesting strategy contract.\"}},\"token()\":{\"returns\":{\"_0\":\"The ERC20 token being distributed.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"vestingStrategy()\":{\"returns\":{\"_0\":\"The vesting strategy contract.\"}},\"withdrawTokens(address)\":{\"params\":{\"to\":\"The address to send the withdrawn tokens to.\"}}},\"stateVariables\":{\"_initializationDeadline\":{\"details\":\"Set once at initialization and immutable thereafter.\"},\"_initializationTimestamp\":{\"details\":\"Maps claim index to the timestamp when vesting was initialized for that index.\"},\"_vestingStrategy\":{\"details\":\"Can be updated by the owner to change vesting logic.\"}},\"title\":\"ATK Vesting Airdrop Implementation\",\"version\":1},\"userdoc\":{\"errors\":{\"BatchSizeExceedsLimit()\":[{\"notice\":\"Error indicating that the batch size exceeds the maximum allowed limit.\"}],\"IndexAlreadyClaimed()\":[{\"notice\":\"Error indicating that a claim is attempted for an index that has already been claimed.\"}],\"InitializationDeadlinePassed()\":[{\"notice\":\"Error indicating that the initialization deadline has passed and no new vesting can be initialized.\"}],\"InvalidAirdropName()\":[{\"notice\":\"Thrown when the airdrop name is empty or invalid.\"}],\"InvalidClaimAmount()\":[{\"notice\":\"Error indicating that the claim amount exceeds the total allocated amount for the index.\"}],\"InvalidClaimTrackerAddress()\":[{\"notice\":\"Error indicating that an invalid claim tracker address was provided.\"}],\"InvalidInitializationDeadline()\":[{\"notice\":\"Error indicating that an invalid initialization deadline was provided.\"}],\"InvalidInputArrayLengths()\":[{\"notice\":\"Error indicating that input array lengths do not match in batch operations.\"}],\"InvalidMerkleProof()\":[{\"notice\":\"Error indicating that a provided Merkle proof is invalid for the claim parameters.\"}],\"InvalidMerkleRoot()\":[{\"notice\":\"Error indicating that a provided Merkle root is invalid.\"}],\"InvalidTokenAddress()\":[{\"notice\":\"Error indicating that an invalid token address was provided.\"}],\"InvalidVestingStrategy(address)\":[{\"notice\":\"Error indicating that the provided vesting strategy is invalid for this use case.\"}],\"InvalidVestingStrategyAddress()\":[{\"notice\":\"Error indicating that an invalid vesting strategy address was provided.\"}],\"InvalidWithdrawalAddress()\":[{\"notice\":\"Error indicating that an invalid withdrawal address was provided.\"}],\"VestingAlreadyInitialized()\":[{\"notice\":\"Error indicating that vesting has already been initialized for the specified index.\"}],\"VestingNotInitialized()\":[{\"notice\":\"Error indicating that vesting has not been initialized for the specified index.\"}],\"ZeroAmountToTransfer()\":[{\"notice\":\"Error indicating that there are zero tokens available to transfer.\"}],\"ZeroClaimAmount()\":[{\"notice\":\"Error indicating that the claim amount is zero.\"}]},\"events\":{\"BatchClaimed(address,uint256,uint256[],uint256[])\":{\"notice\":\"Emitted when a user claims multiple allocations in a single transaction.\"},\"BatchVestingInitialized(address,uint256[],uint256[])\":{\"notice\":\"Emitted when vesting is initialized for multiple claim indices in a batch.\"},\"Claimed(address,uint256,uint256)\":{\"notice\":\"Emitted when a user successfully claims their airdrop allocation.\"},\"TokensWithdrawn(address,uint256)\":{\"notice\":\"Emitted when the contract owner withdraws unclaimed tokens.\"},\"VestingInitialized(address,uint256,uint256)\":{\"notice\":\"Emitted when vesting is initialized for a specific claim index.\"},\"VestingStrategyUpdated(address,address)\":{\"notice\":\"Emitted when the vesting strategy is updated.\"}},\"kind\":\"user\",\"methods\":{\"MAX_BATCH_SIZE()\":{\"notice\":\"Maximum number of items allowed in batch operations to prevent OOM and gas limit issues.\"},\"batchClaim(uint256[],uint256[],bytes32[][])\":{\"notice\":\"Claims vested tokens for multiple allocations in a single transaction.\"},\"batchInitializeVesting(uint256[],uint256[],bytes32[][])\":{\"notice\":\"Initializes vesting for multiple allocations in a single transaction.\"},\"claim(uint256,uint256,bytes32[])\":{\"notice\":\"Claims vested tokens for a specific allocation after vesting initialization.\"},\"claimPeriodEnd()\":{\"notice\":\"Returns the claim period end timestamp.\"},\"claimTracker()\":{\"notice\":\"Returns the claim tracker contract.\"},\"getClaimedAmount(uint256)\":{\"notice\":\"Gets the amount already claimed for a specific index.\"},\"getInitializationTimestamp(uint256)\":{\"notice\":\"Returns the initialization timestamp for a specific claim index.\"},\"initialize(string,address,bytes32,address,address,uint256)\":{\"notice\":\"Initializes the vesting airdrop contract with specified parameters.\"},\"initializeVesting(uint256,uint256,bytes32[])\":{\"notice\":\"Initializes vesting for a specific allocation without transferring tokens.\"},\"isClaimed(uint256,uint256)\":{\"notice\":\"Checks if a claim has been fully claimed for a specific index.\"},\"isVestingInitialized(uint256)\":{\"notice\":\"Checks if vesting has been initialized for a specific index.\"},\"merkleRoot()\":{\"notice\":\"Returns the Merkle root for verifying airdrop claims.\"},\"name()\":{\"notice\":\"Returns the name of this airdrop.\"},\"setVestingStrategy(address)\":{\"notice\":\"Updates the vesting strategy contract.\"},\"token()\":{\"notice\":\"Returns the token being distributed in this airdrop.\"},\"vestingStrategy()\":{\"notice\":\"Returns the current vesting strategy contract.\"},\"withdrawTokens(address)\":{\"notice\":\"Allows the owner to withdraw any tokens remaining in the contract.\"}},\"notice\":\"Implementation of a vesting airdrop contract that uses pluggable claim strategies in the ATK Protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropImplementation.sol\":\"ATKVestingAirdropImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/addons/airdrop/ATKAirdrop.sol\":{\"keccak256\":\"0xe38f2fbfe2c20bb38691181c91b1d61ae5049df58be7d118d45ee19e419406b8\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://23c96dcd63f23429890d5d7ca9243a5e7a0f479c16a764f37ece22b149d70c7f\",\"dweb:/ipfs/QmPDpZ65CHjuJUM2TEW4AcLWbK24M17kYqz1roD67Tqv1e\"]},\"contracts/addons/airdrop/ATKAirdropErrors.sol\":{\"keccak256\":\"0xce9f93552d1244b7a52bd97e887ff15fac1063bc9785f3697c6b47d368462fad\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://bae1c61355103bc43c257cd9ac37407b0c3f6f3badbca7cdb928f0c6c4c2c478\",\"dweb:/ipfs/QmaSiPbSpNvX4uDG1pJsQmhXwbEDZLBzkcSA8ZzqSRqRby\"]},\"contracts/addons/airdrop/IATKAirdrop.sol\":{\"keccak256\":\"0x5556406001ca17a94dfeb60a9db57417b262020690af11bf58dc5893085b7297\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f426858498d7594fdc8ec019332bb69689c5d6db8f6b5ee4c51b81d5fd3c2d13\",\"dweb:/ipfs/QmbA7Bc5JRPXn47hAHq9nWQo9LR5EDk18savmyxr5nqiSh\"]},\"contracts/addons/airdrop/claim-tracker/ATKAmountClaimTracker.sol\":{\"keccak256\":\"0x4a59b468381db957bfe7f8a694f2bf8ae7c61548766d449d84551682a13c13d9\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://d018ee8c5fef07cbdbdf9feff62b7a738786020b4501601e4d7bf70b330f7209\",\"dweb:/ipfs/QmPZJ56q8gYGX6WRBR3CnaRUmWemVVqmKQaEg9RFpLcT7X\"]},\"contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol\":{\"keccak256\":\"0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f\",\"dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne\"]},\"contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropErrors.sol\":{\"keccak256\":\"0x95513b1e3d6d3a2122920133f743680e8bd42be39a5d7d929bf9aef213b467da\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://b68d9fc63a0d1de7b3a7f31784df8d403f8d403aff46b3f87d83a83e676a514c\",\"dweb:/ipfs/QmSuAPK23Mqjf2SMJZQJ9fRZjCWHckFHmpuhzuhHE4KzkN\"]},\"contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropImplementation.sol\":{\"keccak256\":\"0xaf0594de70f5341f038eee3a9d9f1fafe9072ec21eacb501e5647d45fc9eb0b1\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://e369197e105fdbec4f5fca9141d809d015d413086335f03b1521bd064dbb8033\",\"dweb:/ipfs/Qmesgqa4J7qUxoKVQa4rmeZpShL4s3oMKswphPY8WznyQX\"]},\"contracts/addons/airdrop/vesting-airdrop/IATKVestingAirdrop.sol\":{\"keccak256\":\"0x8a5c332afc8acbd454268973a49d41cfb97d0ffbf0f45ae524ce071c6a5d3a62\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://c314c85d5114a9beb6be2cdb4a853fba746c2adcbd89d06a7137f9cb48c4d96b\",\"dweb:/ipfs/QmTeFYiGGGNi6usdeR1ryKBaUeiwwZJPFGLemUbW3xEWSc\"]},\"contracts/addons/airdrop/vesting-airdrop/IATKVestingStrategy.sol\":{\"keccak256\":\"0x4b407d87d884f6e3f8d005f6b5f31760168dd0d7e73b4794b817f64215a33153\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://27e95586b6131529d539130c90d51fa3c625f5d047451780f2c9f551737bdc84\",\"dweb:/ipfs/QmUa7u4dMP99YoWPpepXWQvGUhUNZKzYcNG44XZV8RZm6R\"]},\"dependencies/@openzeppelin-contracts-5.3.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BatchSizeExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IndexAlreadyClaimed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializationDeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAirdropName"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaimAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaimTrackerAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitializationDeadline"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInputArrayLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMerkleProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMerkleRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTokenAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vestingStrategy",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidVestingStrategy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidVestingStrategyAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWithdrawalAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VestingAlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VestingNotInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAmountToTransfer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroClaimAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "totalAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchVestingInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VestingInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldStrategy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newStrategy",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "VestingStrategyUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BATCH_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "totalAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "merkleProofs",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "indices",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "totalAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "merkleProofs",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchInitializeVesting"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimPeriodEnd",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimTracker",
          "outputs": [
            {
              "internalType": "contract IATKClaimTracker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInitializationTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "token_",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "root_",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vestingStrategy_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initializationDeadline_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeVesting"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVestingInitialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newVestingStrategy_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVestingStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingStrategy",
          "outputs": [
            {
              "internalType": "contract IATKVestingStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchClaim(uint256[],uint256[],bytes32[][])": {
            "details": "Overrides the abstract batchClaim function from ATKAirdrop. All indices must have vesting initialized.",
            "params": {
              "indices": "The indices of the claims in the Merkle tree.",
              "merkleProofs": "The Merkle proof arrays (required by base contract but not used in verification here).",
              "totalAmounts": "The total amounts allocated for each index."
            }
          },
          "batchInitializeVesting(uint256[],uint256[],bytes32[][])": {
            "details": "Batch version of initializeVesting for gas efficiency when handling multiple indices.",
            "params": {
              "indices": "The indices of the claims in the Merkle tree.",
              "merkleProofs": "The Merkle proof arrays for verification of each index.",
              "totalAmounts": "The total amounts allocated for each index."
            }
          },
          "claim(uint256,uint256,bytes32[])": {
            "details": "Overrides the abstract claim function from ATKAirdrop. Requires vesting to be initialized first.      The amount claimed is determined by the vesting strategy based on time elapsed since initialization.",
            "params": {
              "index": "The index of the claim in the Merkle tree.",
              "merkleProof": "The Merkle proof array (required by base contract but not used in verification here).",
              "totalAmount": "The total amount allocated for this index."
            }
          },
          "claimPeriodEnd()": {
            "returns": {
              "_0": "The timestamp after which no new vesting can be initialized."
            }
          },
          "claimTracker()": {
            "returns": {
              "_0": "The claim tracker contract."
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor",
            "params": {
              "forwarder_": "The address of the forwarder contract."
            }
          },
          "getClaimedAmount(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "claimedAmount The amount already claimed for this index."
            }
          },
          "getInitializationTimestamp(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "timestamp The timestamp when vesting was initialized for this index (0 if not initialized)."
            }
          },
          "initialize(string,address,bytes32,address,address,uint256)": {
            "details": "Sets up the base airdrop functionality and vesting-specific parameters.      Deploys its own claim tracker for secure claim management.",
            "params": {
              "initializationDeadline_": "The timestamp after which no new vesting can be initialized.",
              "name_": "The human-readable name for this airdrop.",
              "owner_": "The initial owner of the contract.",
              "root_": "The Merkle root for verifying claims.",
              "token_": "The address of the ERC20 token to be distributed.",
              "vestingStrategy_": "The address of the vesting strategy contract for vesting calculations."
            }
          },
          "initializeVesting(uint256,uint256,bytes32[])": {
            "details": "Users must call this function first to start their vesting schedule before they can claim tokens.      The vesting start time is recorded when this function is called.",
            "params": {
              "index": "The index of the claim in the Merkle tree.",
              "merkleProof": "The Merkle proof array for verification.",
              "totalAmount": "The total amount allocated for this index."
            }
          },
          "isClaimed(uint256,uint256)": {
            "params": {
              "index": "The index to check in the Merkle tree.",
              "totalAmount": "The total amount allocated for this index."
            },
            "returns": {
              "_0": "claimed True if the index has been fully claimed, false otherwise."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "isVestingInitialized(uint256)": {
            "params": {
              "index": "The index to check."
            },
            "returns": {
              "_0": "initialized True if vesting has been initialized for this index."
            }
          },
          "merkleRoot()": {
            "returns": {
              "_0": "The Merkle root for verifying airdrop claims."
            }
          },
          "name()": {
            "returns": {
              "_0": "The human-readable name of the airdrop."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setVestingStrategy(address)": {
            "details": "Only the owner can update the vesting strategy. The new strategy must support multiple claims.",
            "params": {
              "newVestingStrategy_": "The address of the new vesting strategy contract."
            }
          },
          "token()": {
            "returns": {
              "_0": "The ERC20 token being distributed."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          },
          "vestingStrategy()": {
            "returns": {
              "_0": "The vesting strategy contract."
            }
          },
          "withdrawTokens(address)": {
            "params": {
              "to": "The address to send the withdrawn tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_BATCH_SIZE()": {
            "notice": "Maximum number of items allowed in batch operations to prevent OOM and gas limit issues."
          },
          "batchClaim(uint256[],uint256[],bytes32[][])": {
            "notice": "Claims vested tokens for multiple allocations in a single transaction."
          },
          "batchInitializeVesting(uint256[],uint256[],bytes32[][])": {
            "notice": "Initializes vesting for multiple allocations in a single transaction."
          },
          "claim(uint256,uint256,bytes32[])": {
            "notice": "Claims vested tokens for a specific allocation after vesting initialization."
          },
          "claimPeriodEnd()": {
            "notice": "Returns the claim period end timestamp."
          },
          "claimTracker()": {
            "notice": "Returns the claim tracker contract."
          },
          "getClaimedAmount(uint256)": {
            "notice": "Gets the amount already claimed for a specific index."
          },
          "getInitializationTimestamp(uint256)": {
            "notice": "Returns the initialization timestamp for a specific claim index."
          },
          "initialize(string,address,bytes32,address,address,uint256)": {
            "notice": "Initializes the vesting airdrop contract with specified parameters."
          },
          "initializeVesting(uint256,uint256,bytes32[])": {
            "notice": "Initializes vesting for a specific allocation without transferring tokens."
          },
          "isClaimed(uint256,uint256)": {
            "notice": "Checks if a claim has been fully claimed for a specific index."
          },
          "isVestingInitialized(uint256)": {
            "notice": "Checks if vesting has been initialized for a specific index."
          },
          "merkleRoot()": {
            "notice": "Returns the Merkle root for verifying airdrop claims."
          },
          "name()": {
            "notice": "Returns the name of this airdrop."
          },
          "setVestingStrategy(address)": {
            "notice": "Updates the vesting strategy contract."
          },
          "token()": {
            "notice": "Returns the token being distributed in this airdrop."
          },
          "vestingStrategy()": {
            "notice": "Returns the current vesting strategy contract."
          },
          "withdrawTokens(address)": {
            "notice": "Allows the owner to withdraw any tokens remaining in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropImplementation.sol": "ATKVestingAirdropImplementation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/addons/airdrop/ATKAirdrop.sol": {
        "keccak256": "0xe38f2fbfe2c20bb38691181c91b1d61ae5049df58be7d118d45ee19e419406b8",
        "urls": [
          "bzz-raw://23c96dcd63f23429890d5d7ca9243a5e7a0f479c16a764f37ece22b149d70c7f",
          "dweb:/ipfs/QmPDpZ65CHjuJUM2TEW4AcLWbK24M17kYqz1roD67Tqv1e"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/ATKAirdropErrors.sol": {
        "keccak256": "0xce9f93552d1244b7a52bd97e887ff15fac1063bc9785f3697c6b47d368462fad",
        "urls": [
          "bzz-raw://bae1c61355103bc43c257cd9ac37407b0c3f6f3badbca7cdb928f0c6c4c2c478",
          "dweb:/ipfs/QmaSiPbSpNvX4uDG1pJsQmhXwbEDZLBzkcSA8ZzqSRqRby"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/IATKAirdrop.sol": {
        "keccak256": "0x5556406001ca17a94dfeb60a9db57417b262020690af11bf58dc5893085b7297",
        "urls": [
          "bzz-raw://f426858498d7594fdc8ec019332bb69689c5d6db8f6b5ee4c51b81d5fd3c2d13",
          "dweb:/ipfs/QmbA7Bc5JRPXn47hAHq9nWQo9LR5EDk18savmyxr5nqiSh"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/ATKAmountClaimTracker.sol": {
        "keccak256": "0x4a59b468381db957bfe7f8a694f2bf8ae7c61548766d449d84551682a13c13d9",
        "urls": [
          "bzz-raw://d018ee8c5fef07cbdbdf9feff62b7a738786020b4501601e4d7bf70b330f7209",
          "dweb:/ipfs/QmPZJ56q8gYGX6WRBR3CnaRUmWemVVqmKQaEg9RFpLcT7X"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/claim-tracker/IATKClaimTracker.sol": {
        "keccak256": "0x9e3a319030370650afc13f8c1fc8c3fb3570072849200787b68c19546b6c68be",
        "urls": [
          "bzz-raw://85ba8ece757f0f2bce8a517ac93e7a967cd5fc60eb5b4af65004396453fe792f",
          "dweb:/ipfs/QmQ9Wvi78aWmEvT3LmisnM1QGKRPBLJUhKeRKM6g8yUzne"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropErrors.sol": {
        "keccak256": "0x95513b1e3d6d3a2122920133f743680e8bd42be39a5d7d929bf9aef213b467da",
        "urls": [
          "bzz-raw://b68d9fc63a0d1de7b3a7f31784df8d403f8d403aff46b3f87d83a83e676a514c",
          "dweb:/ipfs/QmSuAPK23Mqjf2SMJZQJ9fRZjCWHckFHmpuhzuhHE4KzkN"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropImplementation.sol": {
        "keccak256": "0xaf0594de70f5341f038eee3a9d9f1fafe9072ec21eacb501e5647d45fc9eb0b1",
        "urls": [
          "bzz-raw://e369197e105fdbec4f5fca9141d809d015d413086335f03b1521bd064dbb8033",
          "dweb:/ipfs/Qmesgqa4J7qUxoKVQa4rmeZpShL4s3oMKswphPY8WznyQX"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/vesting-airdrop/IATKVestingAirdrop.sol": {
        "keccak256": "0x8a5c332afc8acbd454268973a49d41cfb97d0ffbf0f45ae524ce071c6a5d3a62",
        "urls": [
          "bzz-raw://c314c85d5114a9beb6be2cdb4a853fba746c2adcbd89d06a7137f9cb48c4d96b",
          "dweb:/ipfs/QmTeFYiGGGNi6usdeR1ryKBaUeiwwZJPFGLemUbW3xEWSc"
        ],
        "license": "FSL-1.1-MIT"
      },
      "contracts/addons/airdrop/vesting-airdrop/IATKVestingStrategy.sol": {
        "keccak256": "0x4b407d87d884f6e3f8d005f6b5f31760168dd0d7e73b4794b817f64215a33153",
        "urls": [
          "bzz-raw://27e95586b6131529d539130c90d51fa3c625f5d047451780f2c9f551737bdc84",
          "dweb:/ipfs/QmUa7u4dMP99YoWPpepXWQvGUhUNZKzYcNG44XZV8RZm6R"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/Hashes.sol": {
        "keccak256": "0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269",
        "urls": [
          "bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11",
          "dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134",
        "urls": [
          "bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6",
          "dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb",
        "urls": [
          "bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758",
          "dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-upgradeable-5.3.0/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866",
        "urls": [
          "bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf",
          "dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MAX_BATCH_SIZE()": {
        "notice": "Maximum number of items allowed in batch operations to prevent OOM and gas limit issues."
      },
      "batchClaim(uint256[],uint256[],bytes32[][])": {
        "notice": "Claims vested tokens for multiple allocations in a single transaction."
      },
      "batchInitializeVesting(uint256[],uint256[],bytes32[][])": {
        "notice": "Initializes vesting for multiple allocations in a single transaction."
      },
      "claim(uint256,uint256,bytes32[])": {
        "notice": "Claims vested tokens for a specific allocation after vesting initialization."
      },
      "claimPeriodEnd()": {
        "notice": "Returns the claim period end timestamp."
      },
      "claimTracker()": {
        "notice": "Returns the claim tracker contract."
      },
      "getClaimedAmount(uint256)": {
        "notice": "Gets the amount already claimed for a specific index."
      },
      "getInitializationTimestamp(uint256)": {
        "notice": "Returns the initialization timestamp for a specific claim index."
      },
      "initialize(string,address,bytes32,address,address,uint256)": {
        "notice": "Initializes the vesting airdrop contract with specified parameters."
      },
      "initializeVesting(uint256,uint256,bytes32[])": {
        "notice": "Initializes vesting for a specific allocation without transferring tokens."
      },
      "isClaimed(uint256,uint256)": {
        "notice": "Checks if a claim has been fully claimed for a specific index."
      },
      "isVestingInitialized(uint256)": {
        "notice": "Checks if vesting has been initialized for a specific index."
      },
      "merkleRoot()": {
        "notice": "Returns the Merkle root for verifying airdrop claims."
      },
      "name()": {
        "notice": "Returns the name of this airdrop."
      },
      "setVestingStrategy(address)": {
        "notice": "Updates the vesting strategy contract."
      },
      "token()": {
        "notice": "Returns the token being distributed in this airdrop."
      },
      "vestingStrategy()": {
        "notice": "Returns the current vesting strategy contract."
      },
      "withdrawTokens(address)": {
        "notice": "Allows the owner to withdraw any tokens remaining in the contract."
      }
    },
    "events": {
      "BatchClaimed(address,uint256,uint256[],uint256[])": {
        "notice": "Emitted when a user claims multiple allocations in a single transaction."
      },
      "BatchVestingInitialized(address,uint256[],uint256[])": {
        "notice": "Emitted when vesting is initialized for multiple claim indices in a batch."
      },
      "Claimed(address,uint256,uint256)": {
        "notice": "Emitted when a user successfully claims their airdrop allocation."
      },
      "TokensWithdrawn(address,uint256)": {
        "notice": "Emitted when the contract owner withdraws unclaimed tokens."
      },
      "VestingInitialized(address,uint256,uint256)": {
        "notice": "Emitted when vesting is initialized for a specific claim index."
      },
      "VestingStrategyUpdated(address,address)": {
        "notice": "Emitted when the vesting strategy is updated."
      }
    },
    "errors": {
      "BatchSizeExceedsLimit()": [
        {
          "notice": "Error indicating that the batch size exceeds the maximum allowed limit."
        }
      ],
      "IndexAlreadyClaimed()": [
        {
          "notice": "Error indicating that a claim is attempted for an index that has already been claimed."
        }
      ],
      "InitializationDeadlinePassed()": [
        {
          "notice": "Error indicating that the initialization deadline has passed and no new vesting can be initialized."
        }
      ],
      "InvalidAirdropName()": [
        {
          "notice": "Thrown when the airdrop name is empty or invalid."
        }
      ],
      "InvalidClaimAmount()": [
        {
          "notice": "Error indicating that the claim amount exceeds the total allocated amount for the index."
        }
      ],
      "InvalidClaimTrackerAddress()": [
        {
          "notice": "Error indicating that an invalid claim tracker address was provided."
        }
      ],
      "InvalidInitializationDeadline()": [
        {
          "notice": "Error indicating that an invalid initialization deadline was provided."
        }
      ],
      "InvalidInputArrayLengths()": [
        {
          "notice": "Error indicating that input array lengths do not match in batch operations."
        }
      ],
      "InvalidMerkleProof()": [
        {
          "notice": "Error indicating that a provided Merkle proof is invalid for the claim parameters."
        }
      ],
      "InvalidMerkleRoot()": [
        {
          "notice": "Error indicating that a provided Merkle root is invalid."
        }
      ],
      "InvalidTokenAddress()": [
        {
          "notice": "Error indicating that an invalid token address was provided."
        }
      ],
      "InvalidVestingStrategy(address)": [
        {
          "notice": "Error indicating that the provided vesting strategy is invalid for this use case."
        }
      ],
      "InvalidVestingStrategyAddress()": [
        {
          "notice": "Error indicating that an invalid vesting strategy address was provided."
        }
      ],
      "InvalidWithdrawalAddress()": [
        {
          "notice": "Error indicating that an invalid withdrawal address was provided."
        }
      ],
      "VestingAlreadyInitialized()": [
        {
          "notice": "Error indicating that vesting has already been initialized for the specified index."
        }
      ],
      "VestingNotInitialized()": [
        {
          "notice": "Error indicating that vesting has not been initialized for the specified index."
        }
      ],
      "ZeroAmountToTransfer()": [
        {
          "notice": "Error indicating that there are zero tokens available to transfer."
        }
      ],
      "ZeroClaimAmount()": [
        {
          "notice": "Error indicating that the claim amount is zero."
        }
      ]
    },
    "notice": "Implementation of a vesting airdrop contract that uses pluggable claim strategies in the ATK Protocol."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint Tokenization Services",
    "details": "This contract implements a two-phase vesting airdrop process:      1. `initializeVesting` or `batchInitializeVesting`: User proves their allocation and starts the vesting clock.         No tokens are transferred at this stage.      2. `claim` or `batchClaim`: User claims the vested portion of their tokens at any time after initialization.      The contract uses a pluggable vesting strategy pattern to allow different vesting calculations.      It extends ATKAirdrop for Merkle proof verification and meta-transaction support.      It deploys its own claim tracker for secure claim management.",
    "methods": {
      "batchClaim(uint256[],uint256[],bytes32[][])": {
        "details": "Overrides the abstract batchClaim function from ATKAirdrop. All indices must have vesting initialized.",
        "params": {
          "indices": "The indices of the claims in the Merkle tree.",
          "merkleProofs": "The Merkle proof arrays (required by base contract but not used in verification here).",
          "totalAmounts": "The total amounts allocated for each index."
        }
      },
      "batchInitializeVesting(uint256[],uint256[],bytes32[][])": {
        "details": "Batch version of initializeVesting for gas efficiency when handling multiple indices.",
        "params": {
          "indices": "The indices of the claims in the Merkle tree.",
          "merkleProofs": "The Merkle proof arrays for verification of each index.",
          "totalAmounts": "The total amounts allocated for each index."
        }
      },
      "claim(uint256,uint256,bytes32[])": {
        "details": "Overrides the abstract claim function from ATKAirdrop. Requires vesting to be initialized first.      The amount claimed is determined by the vesting strategy based on time elapsed since initialization.",
        "params": {
          "index": "The index of the claim in the Merkle tree.",
          "merkleProof": "The Merkle proof array (required by base contract but not used in verification here).",
          "totalAmount": "The total amount allocated for this index."
        }
      },
      "claimPeriodEnd()": {
        "returns": {
          "_0": "The timestamp after which no new vesting can be initialized."
        }
      },
      "claimTracker()": {
        "returns": {
          "_0": "The claim tracker contract."
        }
      },
      "constructor": {
        "params": {
          "forwarder_": "The address of the forwarder contract."
        }
      },
      "getClaimedAmount(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "claimedAmount The amount already claimed for this index."
        }
      },
      "getInitializationTimestamp(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "timestamp The timestamp when vesting was initialized for this index (0 if not initialized)."
        }
      },
      "initialize(string,address,bytes32,address,address,uint256)": {
        "details": "Sets up the base airdrop functionality and vesting-specific parameters.      Deploys its own claim tracker for secure claim management.",
        "params": {
          "initializationDeadline_": "The timestamp after which no new vesting can be initialized.",
          "name_": "The human-readable name for this airdrop.",
          "owner_": "The initial owner of the contract.",
          "root_": "The Merkle root for verifying claims.",
          "token_": "The address of the ERC20 token to be distributed.",
          "vestingStrategy_": "The address of the vesting strategy contract for vesting calculations."
        }
      },
      "initializeVesting(uint256,uint256,bytes32[])": {
        "details": "Users must call this function first to start their vesting schedule before they can claim tokens.      The vesting start time is recorded when this function is called.",
        "params": {
          "index": "The index of the claim in the Merkle tree.",
          "merkleProof": "The Merkle proof array for verification.",
          "totalAmount": "The total amount allocated for this index."
        }
      },
      "isClaimed(uint256,uint256)": {
        "params": {
          "index": "The index to check in the Merkle tree.",
          "totalAmount": "The total amount allocated for this index."
        },
        "returns": {
          "_0": "claimed True if the index has been fully claimed, false otherwise."
        }
      },
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "isVestingInitialized(uint256)": {
        "params": {
          "index": "The index to check."
        },
        "returns": {
          "_0": "initialized True if vesting has been initialized for this index."
        }
      },
      "merkleRoot()": {
        "returns": {
          "_0": "The Merkle root for verifying airdrop claims."
        }
      },
      "name()": {
        "returns": {
          "_0": "The human-readable name of the airdrop."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setVestingStrategy(address)": {
        "details": "Only the owner can update the vesting strategy. The new strategy must support multiple claims.",
        "params": {
          "newVestingStrategy_": "The address of the new vesting strategy contract."
        }
      },
      "token()": {
        "returns": {
          "_0": "The ERC20 token being distributed."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      },
      "vestingStrategy()": {
        "returns": {
          "_0": "The vesting strategy contract."
        }
      },
      "withdrawTokens(address)": {
        "params": {
          "to": "The address to send the withdrawn tokens to."
        }
      }
    },
    "events": {
      "BatchClaimed(address,uint256,uint256[],uint256[])": {
        "params": {
          "amounts": "The amounts claimed for each index.",
          "claimant": "The address that claimed the tokens.",
          "indices": "The indices of the claims in the Merkle tree.",
          "totalAmount": "The total amount of tokens claimed in the batch."
        }
      },
      "BatchVestingInitialized(address,uint256[],uint256[])": {
        "params": {
          "account": "The address that initialized the vesting.",
          "indices": "The indices of the claims in the Merkle tree.",
          "totalAmounts": "The amounts allocated for each index."
        }
      },
      "Claimed(address,uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens claimed.",
          "claimant": "The address that claimed the tokens.",
          "index": "The index of the claim in the Merkle tree."
        }
      },
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "TokensWithdrawn(address,uint256)": {
        "params": {
          "amount": "The amount of tokens withdrawn.",
          "to": "The address receiving the withdrawn tokens."
        }
      },
      "VestingInitialized(address,uint256,uint256)": {
        "params": {
          "account": "The address that initialized the vesting.",
          "index": "The index of the claim in the Merkle tree.",
          "totalAmount": "The total amount allocated for this index."
        }
      },
      "VestingStrategyUpdated(address,address)": {
        "params": {
          "newStrategy": "The address of the new vesting strategy.",
          "oldStrategy": "The address of the previous vesting strategy."
        }
      }
    },
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "InvalidVestingStrategy(address)": [
        {
          "params": {
            "vestingStrategy": "The address of the invalid vesting strategy."
          }
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ]
    },
    "title": "ATK Vesting Airdrop Implementation"
  },
  "id": 15
}