{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        {
          "name": "fields",
          "type": "bytes1",
          "internalType": "bytes1"
        },
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "version",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "chainId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "verifyingContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "extensions",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "executeBatch",
      "inputs": [
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "refundReceiver",
          "type": "address",
          "internalType": "address payable"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "nonces",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verify",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            {
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "EIP712DomainChanged",
      "inputs": [],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutedForwardRequest",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "success",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderExpiredRequest",
      "inputs": [
        {
          "name": "deadline",
          "type": "uint48",
          "internalType": "uint48"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderInvalidSigner",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderMismatchedValue",
      "inputs": [
        {
          "name": "requestedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "msgValue",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771UntrustfulTarget",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "forwarder",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "FailedCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientBalance",
      "inputs": [
        {
          "name": "balance",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "needed",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidAccountNonce",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "currentNonce",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x6101606040523461012c57604051610018604082610130565b600c815260208101906b20aa25a337b93bb0b93232b960a11b825260405191610042604084610130565b600183526020830191603160f81b835261005b81610167565b61012052610068846102fd565b61014052519020918260e05251902080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526100d160c082610130565b5190206080523060c052604051610ddd9081610436823960805181610c60015260a05181610d1d015260c05181610c2a015260e05181610caf01526101005181610cd5015261012051816105010152610140518161052a0152f35b5f80fd5b601f909101601f19168101906001600160401b0382119082101761015357604052565b634e487b7160e01b5f52604160045260245ffd5b908151602081105f146101e1575090601f8151116101a1576020815191015160208210610192571790565b5f198260200360031b1b161790565b604460209160405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b038111610153575f54600181811c911680156102f3575b60208210146102df57601f81116102ad575b50602092601f821160011461024e57928192935f92610243575b50508160011b915f199060031b1c1916175f5560ff90565b015190505f8061022b565b601f198216935f8052805f20915f5b868110610295575083600195961061027d575b505050811b015f5560ff90565b01515f1960f88460031b161c191690555f8080610270565b9192602060018192868501518155019401920161025d565b5f8052601f60205f20910160051c810190601f830160051c015b8181106102d45750610211565b5f81556001016102c7565b634e487b7160e01b5f52602260045260245ffd5b90607f16906101ff565b908151602081105f14610328575090601f8151116101a1576020815191015160208210610192571790565b6001600160401b03811161015357600154600181811c9116801561042b575b60208210146102df57601f81116103f8575b50602092601f821160011461039757928192935f9261038c575b50508160011b915f199060031b1c19161760015560ff90565b015190505f80610373565b601f1982169360015f52805f20915f5b8681106103e057508360019596106103c8575b505050811b0160015560ff90565b01515f1960f88460031b161c191690555f80806103ba565b919260206001819286850151815501940192016103a7565b60015f52601f60205f20910160051c810190601f830160051c015b8181106104205750610359565b5f8155600101610413565b90607f169061034756fe60806040526004361015610011575f80fd5b5f3560e01c806319d8d38c146106275780637ecebe00146105e157806384b0196e146104e9578063ccf96b4a146102375763df905caf14610050575f80fd5b61005936610669565b604081013590813403610220575f9161007182610775565b92919082156101f05781156101ca57801561019c5782610194575b508161018c575b506100b2575b505050156100a357005b63d6bda27560e01b5f5260045ffd5b9091925060018060a01b031690815f5260026020525f8060408120928354936001850190556060860135956100e96020820161074e565b916101096101416014602061010160a0870187610972565b94909661074e565b9360405194818692848401998a378201906bffffffffffffffffffffffff199060601b16838201520301600b198101845201826106c1565b519288f192603f5a91041161018a5760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a25f8080610099565bfe5b90505f610093565b91505f61008c565b836101a68761074e565b636422d02b60e11b5f9081526001600160a01b039283166004529116602452604490fd5b65ffffffffffff6101dd60808801610762565b634a777ac560e11b5f521660045260245ffd5b6101fc6020870161074e565b63d2650cd160e01b5f9081526001600160a01b039190911660045230602452604490fd5b506370647f7960e01b5f526004523460245260445ffd5b60403660031901126104e55760043567ffffffffffffffff81116104e557366023820112156104e55780600401359067ffffffffffffffff82116104e5576024810190602436918460051b0101116104e5576024356001600160a01b03811691908290036104e5578115925f915f945f925b80841061034657505050503481036103305750816102c357005b814710610319575f80809381935af13d15610311573d906102e3826109a5565b916102f160405193846106c1565b82523d5f602084013e5b1561030257005b8051156100a357805190602001fd5b6060906102fb565b504763cf47918160e01b5f5260045260245260445ffd5b6370647f7960e01b5f526004523460245260445ffd5b9091929361036390604061035b8785886106f7565b01359061072d565b9361036f8183866106f7565b5f908461037b82610775565b936104ab575b826104a3575b508161049b575b506103c3575b5050156103a7575b6001019291906102a9565b956103bb600191604061035b8a86896106f7565b96905061039c565b90915060018060a01b0316805f52600260205260405f208054906001820190555f8060608501359460406103f96020830161074e565b61040660a0840184610972565b610450601460206104198897959761074e565b938551948186928484019a8b378201906bffffffffffffffffffffffff199060601b16838201520301600b198101845201826106c1565b519301359088f192603f5a91041161018a5760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a28880610394565b90508b61038e565b91508c610387565b82156104d95781156104c6578061038157836101a68661074e565b65ffffffffffff6101dd60808701610762565b6101fc6020860161074e565b5f80fd5b346104e5575f3660031901126104e5576105856105257f00000000000000000000000000000000000000000000000000000000000000006109f7565b61054e7f0000000000000000000000000000000000000000000000000000000000000000610b1d565b60206105936040519261056183856106c1565b5f84525f368137604051958695600f60f81b875260e08588015260e087019061069d565b90858203604087015261069d565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b8281106105ca57505050500390f35b8351855286955093810193928101926001016105bb565b346104e55760203660031901126104e5576004356001600160a01b03811681036104e5576001600160a01b03165f90815260026020908152604090912054604051908152f35b346104e557602061063f61063a36610669565b610775565b509082610661575b5081610659575b506040519015158152f35b90508261064e565b915083610647565b60206003198201126104e5576004359067ffffffffffffffff82116104e55760e09082900360031901126104e55760040190565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90601f8019910116810190811067ffffffffffffffff8211176106e357604052565b634e487b7160e01b5f52604160045260245ffd5b91908110156107195760051b8101359060de19813603018212156104e5570190565b634e487b7160e01b5f52603260045260245ffd5b9190820180921161073a57565b634e487b7160e01b5f52601160045260245ffd5b356001600160a01b03811681036104e55790565b3565ffffffffffff811681036104e55790565b9061077f8261074e565b60208301916108a360426107928561074e565b936107b961079f8861074e565b6001600160a01b03165f9081526002602052604090205490565b94608088019565ffffffffffff6107cf88610762565b6107e66107df60a08d018d610972565b36916109c1565b60208151910120926040519460208601967f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac885260018060a01b0316604087015260018060a01b0316606086015260408c0135608086015260608c013560a086015260c08501521660e0830152610100820152610100815261086a610120826106c1565b519020610875610c27565b906040519161190160f01b8352600283015260228201522061089d6107df60c0880188610972565b90610bed565b50600481949294101561095e575f6108be602092159661074e565b6040518381019063572b6c0560e01b8252306024820152602481526108e46044826106c1565b51915afa903d5f519083610952575b5082610946575b5061090490610762565b948461091e575b509365ffffffffffff4291161015929190565b9093506001600160a01b03906109339061074e565b166001600160a01b03831614925f61090b565b151591506109046108fa565b6020111592505f6108f3565b634e487b7160e01b5f52602160045260245ffd5b903590601e19813603018212156104e5570180359067ffffffffffffffff82116104e5576020019181360383136104e557565b67ffffffffffffffff81116106e357601f01601f191660200190565b9291926109cd826109a5565b916109db60405193846106c1565b8294818452818301116104e5578281602093845f960137010152565b60ff8114610a3d5760ff811690601f8211610a2e5760405191610a1b6040846106c1565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b506040515f5f548060011c9160018216918215610b13575b602084108314610aff578385528492908115610ae05750600114610a83575b610a80925003826106c1565b90565b505f80805290917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b818310610ac4575050906020610a8092820101610a74565b6020919350806001915483858801015201910190918392610aac565b60209250610a8094915060ff191682840152151560051b820101610a74565b634e487b7160e01b5f52602260045260245ffd5b92607f1692610a55565b60ff8114610b415760ff811690601f8211610a2e5760405191610a1b6040846106c1565b506040515f6001548060011c9160018216918215610be3575b602084108314610aff578385528492908115610ae05750600114610b8457610a80925003826106c1565b5060015f90815290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b818310610bc7575050906020610a8092820101610a74565b6020919350806001915483858801015201910190918392610baf565b92607f1692610b5a565b8151919060418303610c1d57610c169250602082015190606060408401519301515f1a90610d43565b9192909190565b50505f9160029190565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610d1a575b15610c82577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610d1460c0826106c1565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610c59565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610dc5579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610dba575f516001600160a01b03811615610db057905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f916003919056fea164736f6c634300081c000a",
    "sourceMap": "815:394:174:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;815:394:174;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;815:394:174;;3501:45:221;;;:::i;:::-;3493:53;;3567:51;;;:::i;:::-;3556:62;;815:394:174;3642:22:221;;3628:36;;;;815:394:174;3691:25:221;;3674:42;;;3744:13;3727:30;;815:394:174;;4304:80:221;815:394:174;4304:80:221;;2079:95;;;;815:394:174;2079:95:221;;;;;;;3744:13;2079:95;;;;4378:4;3727:30;2079:95;;;3727:30;4304:80;;;;;;:::i;:::-;815:394:174;4294:91:221;;2079:95;3767:48;4378:4;4304:80;3825:27;815:394:174;;;;;;;;2079:95:221;815:394:174;;;;;3727:30:221;815:394:174;;;;;4304:80:221;815:394:174;;;;;3628:36:221;815:394:174;;;;;3674:42:221;815:394:174;;;;;3493:53:221;815:394:174;;;;;3556:62:221;815:394:174;;;;;;;;;;;;;;;-1:-1:-1;;815:394:174;;;;-1:-1:-1;;;;;815:394:174;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;815:394:174;;;;;-1:-1:-1;815:394:174;2887:340:216;;815:394:174;;3032:2:216;3010:24;;3006:215;3032:2;;;815:394:174;;1854:2:216;815:394:174;;1840:16:216;1836:72;;3032:2;815:394:174;;;;2079:95:221;3032:2:216;815:394:174;;;;1949:36:216;3050:27;:::o;815:394:174:-;;;;3032:2:216;815:394:174;;;;;1949:36:216;3050:27;:::o;1836:72::-;815:394:174;3032:2:216;815:394:174;;;1879:18:216;;;;;;;;;;;;815:394:174;;;;;;;;;;;;;;;;3532:13:221;815:394:174;;;;;;1854:2:216;815:394:174;-1:-1:-1;;815:394:174;;;1879:18:216;;;;3006:215;-1:-1:-1;;;;;815:394:174;;;;3532:13:221;815:394:174;;;;;;;;;;;3006:215:216;3032:2;815:394:174;;;;;;;;;;3006:215:216;815:394:174;3032:2:216;815:394:174;;;;;;;;;;;;3532:13:221;815:394:174;;;;;;;;;;;;;;;;;;;3532:13:221;815:394:174;1390:66:216;3168:42;:::o;815:394:174:-;;;;-1:-1:-1;815:394:174;;;;;;;;;;3532:13:221;815:394:174;;;3532:13:221;815:394:174;;3532:13:221;815:394:174;;;;;;;;;;;;;;;;;;;;;3532:13:221;815:394:174;1390:66:216;3168:42;:::o;815:394:174:-;;;;;;;;;;;;;;;;;;;;;;;3032:2:216;815:394:174;;;;;;;;;;;;;;;;;3532:13:221;815:394:174;;;3032:2:216;3532:13:221;815:394:174;;;;;;;;;;;;;;;;;;;;;;;;3532:13:221;815:394:174;;;;;;;;;;3532:13:221;815:394:174;;;;;3532:13:221;815:394:174;;;;;;;;2887:340:216;;815:394:174;;3032:2:216;3010:24;;3006:215;3032:2;;;815:394:174;;1854:2:216;815:394:174;;1840:16:216;1836:72;;3032:2;815:394:174;;;;2079:95:221;3032:2:216;815:394:174;;;;1949:36:216;3050:27;:::o;3006:215::-;-1:-1:-1;;;;;815:394:174;;;;;;;;;;;;;;;;3006:215:216;3032:2;815:394:174;;;;;;;;;;3006:215:216;815:394:174;3032:2:216;815:394:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:216;3168:42;:::o;815:394:174:-;;;;-1:-1:-1;815:394:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:216;3168:42;:::o;815:394:174:-;;;;;;;;;;;;;;;;;;;;;;;3032:2:216;815:394:174;;;;;;;;;;;;;;;;;;;;;3032:2:216;815:394:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c806319d8d38c146106275780637ecebe00146105e157806384b0196e146104e9578063ccf96b4a146102375763df905caf14610050575f80fd5b61005936610669565b604081013590813403610220575f9161007182610775565b92919082156101f05781156101ca57801561019c5782610194575b508161018c575b506100b2575b505050156100a357005b63d6bda27560e01b5f5260045ffd5b9091925060018060a01b031690815f5260026020525f8060408120928354936001850190556060860135956100e96020820161074e565b916101096101416014602061010160a0870187610972565b94909661074e565b9360405194818692848401998a378201906bffffffffffffffffffffffff199060601b16838201520301600b198101845201826106c1565b519288f192603f5a91041161018a5760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a25f8080610099565bfe5b90505f610093565b91505f61008c565b836101a68761074e565b636422d02b60e11b5f9081526001600160a01b039283166004529116602452604490fd5b65ffffffffffff6101dd60808801610762565b634a777ac560e11b5f521660045260245ffd5b6101fc6020870161074e565b63d2650cd160e01b5f9081526001600160a01b039190911660045230602452604490fd5b506370647f7960e01b5f526004523460245260445ffd5b60403660031901126104e55760043567ffffffffffffffff81116104e557366023820112156104e55780600401359067ffffffffffffffff82116104e5576024810190602436918460051b0101116104e5576024356001600160a01b03811691908290036104e5578115925f915f945f925b80841061034657505050503481036103305750816102c357005b814710610319575f80809381935af13d15610311573d906102e3826109a5565b916102f160405193846106c1565b82523d5f602084013e5b1561030257005b8051156100a357805190602001fd5b6060906102fb565b504763cf47918160e01b5f5260045260245260445ffd5b6370647f7960e01b5f526004523460245260445ffd5b9091929361036390604061035b8785886106f7565b01359061072d565b9361036f8183866106f7565b5f908461037b82610775565b936104ab575b826104a3575b508161049b575b506103c3575b5050156103a7575b6001019291906102a9565b956103bb600191604061035b8a86896106f7565b96905061039c565b90915060018060a01b0316805f52600260205260405f208054906001820190555f8060608501359460406103f96020830161074e565b61040660a0840184610972565b610450601460206104198897959761074e565b938551948186928484019a8b378201906bffffffffffffffffffffffff199060601b16838201520301600b198101845201826106c1565b519301359088f192603f5a91041161018a5760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a28880610394565b90508b61038e565b91508c610387565b82156104d95781156104c6578061038157836101a68661074e565b65ffffffffffff6101dd60808701610762565b6101fc6020860161074e565b5f80fd5b346104e5575f3660031901126104e5576105856105257f00000000000000000000000000000000000000000000000000000000000000006109f7565b61054e7f0000000000000000000000000000000000000000000000000000000000000000610b1d565b60206105936040519261056183856106c1565b5f84525f368137604051958695600f60f81b875260e08588015260e087019061069d565b90858203604087015261069d565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b8281106105ca57505050500390f35b8351855286955093810193928101926001016105bb565b346104e55760203660031901126104e5576004356001600160a01b03811681036104e5576001600160a01b03165f90815260026020908152604090912054604051908152f35b346104e557602061063f61063a36610669565b610775565b509082610661575b5081610659575b506040519015158152f35b90508261064e565b915083610647565b60206003198201126104e5576004359067ffffffffffffffff82116104e55760e09082900360031901126104e55760040190565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90601f8019910116810190811067ffffffffffffffff8211176106e357604052565b634e487b7160e01b5f52604160045260245ffd5b91908110156107195760051b8101359060de19813603018212156104e5570190565b634e487b7160e01b5f52603260045260245ffd5b9190820180921161073a57565b634e487b7160e01b5f52601160045260245ffd5b356001600160a01b03811681036104e55790565b3565ffffffffffff811681036104e55790565b9061077f8261074e565b60208301916108a360426107928561074e565b936107b961079f8861074e565b6001600160a01b03165f9081526002602052604090205490565b94608088019565ffffffffffff6107cf88610762565b6107e66107df60a08d018d610972565b36916109c1565b60208151910120926040519460208601967f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac885260018060a01b0316604087015260018060a01b0316606086015260408c0135608086015260608c013560a086015260c08501521660e0830152610100820152610100815261086a610120826106c1565b519020610875610c27565b906040519161190160f01b8352600283015260228201522061089d6107df60c0880188610972565b90610bed565b50600481949294101561095e575f6108be602092159661074e565b6040518381019063572b6c0560e01b8252306024820152602481526108e46044826106c1565b51915afa903d5f519083610952575b5082610946575b5061090490610762565b948461091e575b509365ffffffffffff4291161015929190565b9093506001600160a01b03906109339061074e565b166001600160a01b03831614925f61090b565b151591506109046108fa565b6020111592505f6108f3565b634e487b7160e01b5f52602160045260245ffd5b903590601e19813603018212156104e5570180359067ffffffffffffffff82116104e5576020019181360383136104e557565b67ffffffffffffffff81116106e357601f01601f191660200190565b9291926109cd826109a5565b916109db60405193846106c1565b8294818452818301116104e5578281602093845f960137010152565b60ff8114610a3d5760ff811690601f8211610a2e5760405191610a1b6040846106c1565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b506040515f5f548060011c9160018216918215610b13575b602084108314610aff578385528492908115610ae05750600114610a83575b610a80925003826106c1565b90565b505f80805290917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b818310610ac4575050906020610a8092820101610a74565b6020919350806001915483858801015201910190918392610aac565b60209250610a8094915060ff191682840152151560051b820101610a74565b634e487b7160e01b5f52602260045260245ffd5b92607f1692610a55565b60ff8114610b415760ff811690601f8211610a2e5760405191610a1b6040846106c1565b506040515f6001548060011c9160018216918215610be3575b602084108314610aff578385528492908115610ae05750600114610b8457610a80925003826106c1565b5060015f90815290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b818310610bc7575050906020610a8092820101610a74565b6020919350806001915483858801015201910190918392610baf565b92607f1692610b5a565b8151919060418303610c1d57610c169250602082015190606060408401519301515f1a90610d43565b9192909190565b50505f9160029190565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610d1a575b15610c82577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610d1460c0826106c1565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610c59565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610dc5579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610dba575f516001600160a01b03811615610db057905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f916003919056fea164736f6c634300081c000a",
    "sourceMap": "815:394:174:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5956:13:197;;815:394:174;5943:9:197;;;:26;5939:121;;815:394:174;11291:18:197;;;;:::i;:::-;11546:19;;;;;11542:115;;11675:7;;11671:101;;11790:12;;11786:109;;11992:33;;;815:394:174;11992:43:197;;;;815:394:174;11988:728:197;;;815:394:174;6074:24:197;;;;6070:81;;815:394:174;6070:81:197;6010:19:206;;;815:394:174;6121:19:197;815:394:174;;6121:19:197;11988:728;815:394:174;;;;;;;;;;;;;;1121:7:212;815:394:174;;;;;;;;;;;6093:4:197;815:394:174;;;;12208:11:197;;;815:394:174;12246:10:197;;815:394:174;12246:10:197;;;:::i;:::-;12350:12;12364;12333:44;815:394:174;;12350:12:197;;;;;;:::i;:::-;12364;;;;:::i;:::-;815:394:174;;;12333:44:197;;;;;;;815:394:174;;;;;;;;;12208:11:197;815:394:174;;;;;;12333:44:197;;;;;;;;;;;:::i;:::-;12422:160;;;;;16598:2;12422:160;815:394:174;;-1:-1:-1;16570:423:197;;815:394:174;12652:53:197;815:394:174;;;;;;;;;;;;;12652:53:197;11988:728;;;;;16570:423;16917:66;11992:43;;;;;;:33;;-1:-1:-1;11992:33:197;;;11786:109;11867:12;;;;:::i;:::-;-1:-1:-1;;;815:394:174;11829:51:197;;;-1:-1:-1;;;;;815:394:174;;;;;;;;;;;11829:51:197;11671:101;815:394:174;11740:16:197;;;;;:::i;:::-;11709:48;;;815:394:174;11709:48:197;815:394:174;;;;;11709:48:197;11542:115;11616:10;;;;;:::i;:::-;-1:-1:-1;;;815:394:174;11592:50:197;;;-1:-1:-1;;;;;815:394:174;;;;;;11636:4:197;815:394:174;;;;11592:50:197;5939:121;8257:57;;;;815:394:174;5992:57:197;815:394:174;;5943:9:197;815:394:174;;;;5992:57:197;815:394:174;;;-1:-1:-1;;815:394:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;815:394:174;;;;;;;;;7721:28:197;;7760:21;815:394:174;7791:19:197;815:394:174;7826:9:197;815:394:174;7821:251:197;7837:19;;;;;;8225:9;;;;;8208:26;;8204:121;;8492:16;;8488:328;;815:394:174;8488:328:197;1375:21:206;;:30;1371:125;;815:394:174;1548:33:206;;;;;;;815:394:174;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;1595:8:206;1591:58;;815:394:174;1591:58:206;815:394:174;;5690:21:206;:17;;5815:158;;;815:394:174;5815:158:206;;815:394:174;;;;;1371:125:206;1455:21;;1428:57;;;815:394:174;1428:57:206;815:394:174;;;;;;1428:57:206;8204:121:197;8257:57;;;815:394:174;8257:57:197;815:394:174;;8225:9:197;815:394:174;;;;8257:57:197;7858:3;7894:11;;;;7877:34;7894:11;815:394:174;7894:11:197;;;;;:::i;:::-;:17;815:394:174;7877:34:197;;:::i;:::-;7949:11;;;;;;:::i;:::-;815:394:174;11291:18:197;;;;;:::i;:::-;11503:402;;;7858:3;11992:33;;;7858:3;11992:43;;;;7858:3;11988:728;;;7858:3;7987:8;;;7983:79;;7858:3;815:394:174;;7826:9:197;;;;;7983:79;8030:11;8015:32;815:394:174;8030:11:197;815:394:174;8030:11:197;;;;;:::i;8015:32::-;7983:79;;;;;11988:728;815:394:174;;;;;;;;;;;;1121:7:212;815:394:174;;;;;;;;;;;;;;12208:11:197;;;;815:394:174;12246:10:197;815:394:174;12246:10:197;815:394:174;12246:10:197;;;:::i;:::-;12350:12;;;;;;:::i;:::-;12333:44;815:394:174;;12364:12:197;;;;;;:::i;:::-;815:394:174;;;12333:44:197;;;;;;;815:394:174;;;;;;;;;12208:11:197;815:394:174;;;;;;12333:44:197;;;;;;;;;;;:::i;:::-;12422:160;12286:13;;815:394:174;12422:160:197;;;;16598:2;12422:160;815:394:174;;-1:-1:-1;16570:423:197;;815:394:174;12652:53:197;815:394:174;;;;;;;;;;;;;12652:53:197;11988:728;;;;11992:43;;;;;;:33;;-1:-1:-1;11992:33:197;;;11503:402;11546:19;;11542:115;;11675:7;;11671:101;;11790:12;11503:402;11786:109;11867:12;;;;:::i;11671:101::-;815:394:174;11740:16:197;;;;;:::i;11542:115::-;11616:10;815:394:174;11616:10:197;;;:::i;815:394:174:-;;;;;;;;;;-1:-1:-1;;815:394:174;;;;;6198:41:221;:5;:41;:::i;:::-;6653:47;:8;:47;:::i;:::-;815:394:174;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5689:13:221;815:394:174;;;;5724:4:221;815:394:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;815:394:174;;;;;;;;6683:16:221;815:394:174;;;;;;;;;-1:-1:-1;;815:394:174;;;;;;-1:-1:-1;;;;;815:394:174;;;;;;-1:-1:-1;;;;;815:394:174;-1:-1:-1;815:394:174;;;624:7:212;815:394:174;;;;;;;;;;;;;;;;;;;;5049:18:197;815:394:174;;;:::i;:::-;5049:18:197;:::i;:::-;5084:28;;;;;815:394:174;5084:43:197;;;;815:394:174;;;;;;;;;;5084:43:197;;;;;;:28;;-1:-1:-1;5084:28:197;;;815:394:174;;-1:-1:-1;;815:394:174;;;;;;;;;;;;;;;;;;-1:-1:-1;;815:394:174;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;815:394:174;;;;;;;;-1:-1:-1;;815:394:174;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;815:394:174;;;;;-1:-1:-1;815:394:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;815:394:174;;;;;;;:::o;:::-;;;;;;;;;;:::o;9006:457:197:-;;10099:12;;;:::i;:::-;10133:10;;;;9963:445;3993:249:224;10133:10:197;;;:::i;:::-;10240:12;10233:20;10240:12;;;:::i;:::-;-1:-1:-1;;;;;815:394:174;-1:-1:-1;815:394:174;;;624:7:212;815:394:174;;;;;;;538:107:212;10233:20:197;10275:16;;;;;815:394:174;10275:16:197;;;:::i;:::-;3115:141;10323:12;;;;;;:::i;:::-;3115:141;;;:::i;:::-;10133:10;815:394:174;;;;10313:23:197;815:394:174;10165:13:197;815:394:174;10020:334:197;10133:10;10020:334;;815:394:174;3115:141:197;815:394:174;;;;;;;;10165:13:197;3115:141;;815:394:174;;;;;;;10200:11:197;3115:141;;815:394:174;10165:13:197;;;815:394:174;10275:16:197;3115:141;;815:394:174;10200:11:197;;;815:394:174;10323:12:197;3115:141;;815:394:174;3115:141:197;;;815:394:174;;3115:141:197;;;815:394:174;3115:141:197;;;815:394:174;3115:141:197;10020:334;;;;;;:::i;:::-;815:394:174;9993:375:197;;5153:20:221;;:::i;:::-;3993:249:224;10165:13:197;3993:249:224;;-1:-1:-1;;;3993:249:224;;;;;;;;;;;3115:141:197;10390:17;3115:141;10390:17;;;;:::i;3115:141::-;9963:445;;:::i;:::-;3115:141;;;;;;;;;;-1:-1:-1;9313:10:197;10133;10427:33;;9313:10;;:::i;:::-;10165:13;815:394:174;13253:66:197;;;;;;;;;13312:4;13253:66;;;815:394:174;13253:66:197;;;;;;;:::i;:::-;13409:739;;;;;;-1:-1:-1;13409:739:197;14165:29;;;;9006:457;14165:48;;;;9006:457;9338:16;;;;:::i;:::-;9387:36;;;;9006:457;9273:183;9358:15;815:394:174;9358:15:197;815:394:174;;9338:35:197;;9273:183;;9006:457;:::o;9387:36::-;815:394:174;;-1:-1:-1;;;;;;815:394:174;9411:12:197;;;:::i;:::-;815:394:174;-1:-1:-1;;;;;815:394:174;;9398:25:197;;9387:36;;;14165:48;14198:15;;;-1:-1:-1;9338:16:197;14165:48;;:29;10133:10;-1:-1:-1;14176:18:197;;-1:-1:-1;14165:29:197;;;3115:141;815:394:174;;;-1:-1:-1;3115:141:197;;;;;-1:-1:-1;3115:141:197;815:394:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;815:394:174;;;;:::o;3115:141:197:-;;;;;;;:::i;:::-;815:394:174;;;;;;;:::i;:::-;3115:141:197;;;;;;;;;;;;;;;;-1:-1:-1;3115:141:197;;815:394:174;;;;3115:141:197:o;3368:267:216:-;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;815:394:174;;;;;;;:::i;:::-;2311:2:216;815:394:174;;;;;;;;;;;2324:106:216;;;3553:22;:::o;2675:69::-;2713:20;;;815:394:174;2713:20:216;;815:394:174;2713:20:216;3487:142;815:394:174;;;;;1390:66:216;;;;;;;;;;;;;3487:142;1390:66;;;;;;;815:394:174;;;;;;1390:66:216;;;;;;;;;;;;;;;;:::i;:::-;3606:12;:::o;1390:66::-;-1:-1:-1;815:394:174;1390:66:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;815:394:174;;;1390:66:216;;;;;;;;;;;815:394:174;;;;1390:66:216;;;;;815:394:174;1390:66:216;;;;;;;;3368:267;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;815:394:174;;;;;;;:::i;3487:142:216:-;815:394:174;;;-1:-1:-1;6683:16:221;1390:66:216;;6683:16:221;1390:66:216;;6683:16:221;1390:66:216;;;;;;;3487:142;1390:66;;;;;;;815:394:174;;;;;;1390:66:216;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6683:16:221;-1:-1:-1;1390:66:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6683:16:221;1390:66:216;;;;;;;;;;;;;;;;;;;;;;;;2129:778:220;815:394:174;;;2129:778:220;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:220;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;3945:262:221:-;4029:4;4038:11;-1:-1:-1;;;;;815:394:174;4021:28:221;;:63;;3945:262;4017:184;;;4107:22;4100:29;:::o;4017:184::-;815:394:174;;4304:80:221;;;815:394:174;2079:95:221;815:394:174;;4326:11:221;815:394:174;2079:95:221;;815:394:174;4339:14:221;2079:95;;;815:394:174;4355:13:221;2079:95;;;815:394:174;4029:4:221;2079:95;;;815:394:174;2079:95:221;4304:80;;;;;;:::i;:::-;815:394:174;4294:91:221;;4160:30;:::o;4021:63::-;4070:14;;4053:13;:31;4021:63;;5203:1551:220;;;6283:66;6270:79;;6266:164;;815:394:174;;;;;;-1:-1:-1;815:394:174;;;;;;;;;;;;;;;;;;;6541:24:220;;;;;;;;;-1:-1:-1;6541:24:220;-1:-1:-1;;;;;815:394:174;;6579:20:220;6575:113;;6698:49;-1:-1:-1;6698:49:220;-1:-1:-1;5203:1551:220;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:220;6541:24;6615:62;-1:-1:-1;6615:62:220;:::o;6541:24::-;815:394:174;;;-1:-1:-1;815:394:174;;;;;6266:164:220;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "49056": [
        {
          "start": 3168,
          "length": 32
        }
      ],
      "49058": [
        {
          "start": 3357,
          "length": 32
        }
      ],
      "49060": [
        {
          "start": 3114,
          "length": 32
        }
      ],
      "49062": [
        {
          "start": 3247,
          "length": 32
        }
      ],
      "49064": [
        {
          "start": 3285,
          "length": 32
        }
      ],
      "49067": [
        {
          "start": 1281,
          "length": 32
        }
      ],
      "49070": [
        {
          "start": 1322,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "eip712Domain()": "84b0196e",
    "execute((address,address,uint256,uint256,uint48,bytes,bytes))": "df905caf",
    "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": "ccf96b4a",
    "nonces(address)": "7ecebe00",
    "verify((address,address,uint256,uint256,uint48,bytes,bytes))": "19d8d38c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint\",\"details\":\"It allows users to interact with other contracts without needing to pay for gas themselves. Instead, a third-party (the forwarder or relayer) can submit the transaction on their behalf, and the target contract can retrieve the original sender's address using `_msgSender()`. This contract inherits from OpenZeppelin's `ERC2771Forwarder`, providing a standard and secure implementation. The name \\\"ATKForwarder\\\" is used to identify this specific forwarder within the ATK token ecosystem.\",\"errors\":{\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the ERC2771Forwarder with a specific name for this forwarder instance. The name \\\"ATKForwarder\\\" helps in identifying this forwarder, especially when multiple forwarders might exist in a network.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"}},\"title\":\"ATKForwarder\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the ATKForwarder contract.\"}},\"notice\":\"This contract implements a meta-transaction forwarder based on the ERC-2771 standard.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vendor/ATKForwarder.sol\":\"ATKForwarder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/\",\":@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/\",\":@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/\",\":@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/\",\":forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/\",\":forge-std/=dependencies/forge-std-1.9.7/src/\"],\"viaIR\":true},\"sources\":{\"contracts/vendor/ATKForwarder.sol\":{\"keccak256\":\"0x40f15bba3a548ca871824f87e2436657fa39c8875d32d6df5113790da71d0148\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://40bba336241b84adb72d9bfd1499b4c88ec2d9957ebb903e6acc414ec166e366\",\"dweb:/ipfs/QmTM3nHvca4MKJUmtv5czvetB7hVpY1u4sUndvmZL4PFXK\"]},\"dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"dependencies/@openzeppelin-contracts-5.3.0/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"dependencies/@openzeppelin-contracts-5.3.0/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0x2727ef32bb32f440c5ab7225ae4bdd6bd8706d61d76ba573b85b824cbfd9c03a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8afdc43560109a2fe87e17a05d7871530aaa506a8c5c4f5c0b6d00a9304ca61\",\"dweb:/ipfs/QmdWXRUPHhgmuLHkhiqAab53Y3Ark7Zezu3jJmfqx9S8dK\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"dependencies/@openzeppelin-contracts-5.3.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "deadline",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderExpiredRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderInvalidSigner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestedValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC2771ForwarderMismatchedValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2771UntrustfulTarget"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "currentNonce",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidAccountNonce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutedForwardRequest",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Initializes the ERC2771Forwarder with a specific name for this forwarder instance. The name \"ATKForwarder\" helps in identifying this forwarder, especially when multiple forwarders might exist in a network."
          },
          "eip712Domain()": {
            "details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
          },
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}."
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "details": "Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting."
          },
          "nonces(address)": {
            "details": "Returns the next unused nonce for an address."
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor for the ATKForwarder contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@onchainid-v2.2.1/=dependencies/@onchainid-v2.2.1/contracts/",
        "@onchainid/contracts/=dependencies/@onchainid-v2.2.1/contracts/",
        "@openzeppelin-contracts-5.3.0/=dependencies/@openzeppelin-contracts-5.3.0/",
        "@openzeppelin-contracts-upgradeable-5.3.0/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.3.0/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.3.0/",
        "forge-std-1.9.7/=dependencies/forge-std-1.9.7/src/",
        "forge-std/=dependencies/forge-std-1.9.7/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/vendor/ATKForwarder.sol": "ATKForwarder"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/vendor/ATKForwarder.sol": {
        "keccak256": "0x40f15bba3a548ca871824f87e2436657fa39c8875d32d6df5113790da71d0148",
        "urls": [
          "bzz-raw://40bba336241b84adb72d9bfd1499b4c88ec2d9957ebb903e6acc414ec166e366",
          "dweb:/ipfs/QmTM3nHvca4MKJUmtv5czvetB7hVpY1u4sUndvmZL4PFXK"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/interfaces/IERC5267.sol": {
        "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
        "urls": [
          "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
          "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/metatx/ERC2771Context.sol": {
        "keccak256": "0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99",
        "urls": [
          "bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8",
          "dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/metatx/ERC2771Forwarder.sol": {
        "keccak256": "0x2727ef32bb32f440c5ab7225ae4bdd6bd8706d61d76ba573b85b824cbfd9c03a",
        "urls": [
          "bzz-raw://b8afdc43560109a2fe87e17a05d7871530aaa506a8c5c4f5c0b6d00a9304ca61",
          "dweb:/ipfs/QmdWXRUPHhgmuLHkhiqAab53Y3Ark7Zezu3jJmfqx9S8dK"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Address.sol": {
        "keccak256": "0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c",
        "urls": [
          "bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e",
          "dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Nonces.sol": {
        "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
        "urls": [
          "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
          "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/ShortStrings.sol": {
        "keccak256": "0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402",
        "urls": [
          "bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35",
          "dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/Strings.sol": {
        "keccak256": "0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae",
        "urls": [
          "bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6",
          "dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/EIP712.sol": {
        "keccak256": "0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572",
        "urls": [
          "bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe",
          "dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/cryptography/MessageHashUtils.sol": {
        "keccak256": "0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631",
        "urls": [
          "bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59",
          "dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.3.0/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor for the ATKForwarder contract."
      }
    },
    "notice": "This contract implements a meta-transaction forwarder based on the ERC-2771 standard."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "SettleMint",
    "details": "It allows users to interact with other contracts without needing to pay for gas themselves. Instead, a third-party (the forwarder or relayer) can submit the transaction on their behalf, and the target contract can retrieve the original sender's address using `_msgSender()`. This contract inherits from OpenZeppelin's `ERC2771Forwarder`, providing a standard and secure implementation. The name \"ATKForwarder\" is used to identify this specific forwarder within the ATK token ecosystem.",
    "methods": {
      "constructor": {
        "details": "Initializes the ERC2771Forwarder with a specific name for this forwarder instance. The name \"ATKForwarder\" helps in identifying this forwarder, especially when multiple forwarders might exist in a network."
      },
      "eip712Domain()": {
        "details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
      },
      "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
        "details": "Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}."
      },
      "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
        "details": "Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting."
      },
      "nonces(address)": {
        "details": "Returns the next unused nonce for an address."
      },
      "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
        "details": "Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided."
      }
    },
    "events": {
      "EIP712DomainChanged()": {
        "details": "MAY be emitted to signal that the domain could have changed."
      },
      "ExecutedForwardRequest(address,uint256,bool)": {
        "details": "Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas."
      }
    },
    "errors": {
      "ERC2771ForwarderExpiredRequest(uint48)": [
        {
          "details": "The request `deadline` has expired."
        }
      ],
      "ERC2771ForwarderInvalidSigner(address,address)": [
        {
          "details": "The request `from` doesn't match with the recovered `signer`."
        }
      ],
      "ERC2771ForwarderMismatchedValue(uint256,uint256)": [
        {
          "details": "The `requestedValue` doesn't match with the available `msgValue`."
        }
      ],
      "ERC2771UntrustfulTarget(address,address)": [
        {
          "details": "The request target doesn't trust the `forwarder`."
        }
      ],
      "FailedCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ],
      "InsufficientBalance(uint256,uint256)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ],
      "InvalidAccountNonce(address,uint256)": [
        {
          "details": "The nonce used for an `account` is not the expected current nonce."
        }
      ]
    },
    "title": "ATKForwarder"
  },
  "id": 174
}