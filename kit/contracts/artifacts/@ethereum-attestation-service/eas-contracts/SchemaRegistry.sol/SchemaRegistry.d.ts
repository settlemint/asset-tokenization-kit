// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface SchemaRegistry$Type {
  _format: "hh-sol-artifact-1";
  contractName: "SchemaRegistry";
  sourceName: "@ethereum-attestation-service/eas-contracts/SchemaRegistry.sol";
  abi: [
    {
      inputs: [];
      stateMutability: "nonpayable";
      type: "constructor";
    },
    {
      inputs: [];
      name: "AlreadyExists";
      type: "error";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "bytes32";
          name: "uid";
          type: "bytes32";
        },
        {
          indexed: true;
          internalType: "address";
          name: "registerer";
          type: "address";
        },
        {
          components: [
            {
              internalType: "bytes32";
              name: "uid";
              type: "bytes32";
            },
            {
              internalType: "contract ISchemaResolver";
              name: "resolver";
              type: "address";
            },
            {
              internalType: "bool";
              name: "revocable";
              type: "bool";
            },
            {
              internalType: "string";
              name: "schema";
              type: "string";
            },
          ];
          indexed: false;
          internalType: "struct SchemaRecord";
          name: "schema";
          type: "tuple";
        },
      ];
      name: "Registered";
      type: "event";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "uid";
          type: "bytes32";
        },
      ];
      name: "getSchema";
      outputs: [
        {
          components: [
            {
              internalType: "bytes32";
              name: "uid";
              type: "bytes32";
            },
            {
              internalType: "contract ISchemaResolver";
              name: "resolver";
              type: "address";
            },
            {
              internalType: "bool";
              name: "revocable";
              type: "bool";
            },
            {
              internalType: "string";
              name: "schema";
              type: "string";
            },
          ];
          internalType: "struct SchemaRecord";
          name: "";
          type: "tuple";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "string";
          name: "schema";
          type: "string";
        },
        {
          internalType: "contract ISchemaResolver";
          name: "resolver";
          type: "address";
        },
        {
          internalType: "bool";
          name: "revocable";
          type: "bool";
        },
      ];
      name: "register";
      outputs: [
        {
          internalType: "bytes32";
          name: "";
          type: "bytes32";
        },
      ];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [];
      name: "version";
      outputs: [
        {
          internalType: "string";
          name: "";
          type: "string";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
  ];
  bytecode: "0x60e08060405234603f576001608052600460a052600060c0526108439081610045823960805181610471015260a0518161049f015260c051816104ca0152f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806354fd4d501461045857806360d7a278146101705763a2ea7c6e1461003d57600080fd5b3461016b57602036600319011261016b5760608060405161005d816105f4565b600081526000602082015260006040820152015260043560005260006020526040600020600260405191610090836105f4565b8054835260ff600182015460018060a01b038116602086015260a01c161515604084015201906040516000928054906100c882610664565b80845291600181169081156101435750600114610106575b50506100f181610102940382610626565b6060820152604051918291826105b2565b0390f35b90935060005260206000206000905b84821061012d5750810160200192506100f1816100e0565b6001816020925483858701015201910190610115565b610102965084925060209150926100f19360ff191682840152151560051b82010194506100e0565b600080fd5b3461016b57606036600319011261016b5760043567ffffffffffffffff811161016b573660238201121561016b57806004013567ffffffffffffffff811161016b57366024828401011161016b576024356001600160a01b038116919082900361016b576044359283151580940361016b57602493604051926101f2846105f4565b60008452602084019485526040840191825261020d81610648565b9261021b6040519485610626565b818452602080850192806000998a94018537850101526060840192808452610292601560208851938651151594604051958692610260858501998a925192839161056a565b8301916bffffffffffffffffffffffff199060601b168483015260f81b60348201520301600a19810184520182610626565b51902093848652856020526040862054610449579060029185855285875286602052604087209185518355600183019160018060a01b0390511682549160ff60a01b9051151560a01b16916affffffffffffffffffffff60a81b161717905501905180519067ffffffffffffffff8211610435576103108354610664565b601f81116103f0575b50602095829187916001601f85111461038e5792610383575b50508160011b916000199060031b1c19161790555b817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e604051806103783395826105b2565b0390a3604051908152f35b015190508680610332565b8581528281209350601f198516905b8181106103d957509084600195949392106103c0575b505050811b019055610347565b015160001960f88460031b161c191690558680806103b3565b92938960018192878601518155019501930161039d565b83875260208720601f840160051c8101916020851061042b575b601f0160051c01905b8181106104205750610319565b878155600101610413565b909150819061040a565b634e487b7160e01b86526041600452602486fd5b63119b4fd360e11b8652600486fd5b3461016b57600036600319011261016b576101026104957f000000000000000000000000000000000000000000000000000000000000000061069e565b61055660016104c37f000000000000000000000000000000000000000000000000000000000000000061069e565b92816104ee7f000000000000000000000000000000000000000000000000000000000000000061069e565b60206040519684610508899651809285808a01910161056a565b8501601760f91b83820152610526825180938560218501910161056a565b0101601760f91b8382015261054582518093602060028501910161056a565b01010301601f198101835282610626565b60405191829160208352602083019061058d565b60005b83811061057d5750506000910152565b818101518382015260200161056d565b906020916105a68151809281855285808601910161056a565b601f01601f1916010190565b60a060606105f1936020845280516020850152600180841b0360208201511660408501526040810151151582850152015191608080820152019061058d565b90565b6080810190811067ffffffffffffffff82111761061057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761061057604052565b67ffffffffffffffff811161061057601f01601f191660200190565b90600182811c92168015610694575b602083101461067e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610673565b8060009172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8210156107ea575b806d04ee2d6d415b85acef8100000000600a9210156107cf575b662386f26fc100008110156107bb575b6305f5e1008110156107aa575b61271081101561079b575b606481101561078d575b1015610782575b600a6021600184019361072685610648565b946107346040519687610626565b808652610743601f1991610648565b013660208701378401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561077d57600a909161074e565b505090565b600190910190610714565b60646002910493019261070d565b61271060049104930192610703565b6305f5e100600891049301926106f8565b662386f26fc10000601091049301926106eb565b6d04ee2d6d415b85acef8100000000602091049301926106db565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b81046106c156fea2646970667358221220a883165f569696e643c968d02766bf83172866ea399a4c1950e063946d2efdba64736f6c634300081c0033";
  deployedBytecode: "0x6080604052600436101561001257600080fd5b60003560e01c806354fd4d501461045857806360d7a278146101705763a2ea7c6e1461003d57600080fd5b3461016b57602036600319011261016b5760608060405161005d816105f4565b600081526000602082015260006040820152015260043560005260006020526040600020600260405191610090836105f4565b8054835260ff600182015460018060a01b038116602086015260a01c161515604084015201906040516000928054906100c882610664565b80845291600181169081156101435750600114610106575b50506100f181610102940382610626565b6060820152604051918291826105b2565b0390f35b90935060005260206000206000905b84821061012d5750810160200192506100f1816100e0565b6001816020925483858701015201910190610115565b610102965084925060209150926100f19360ff191682840152151560051b82010194506100e0565b600080fd5b3461016b57606036600319011261016b5760043567ffffffffffffffff811161016b573660238201121561016b57806004013567ffffffffffffffff811161016b57366024828401011161016b576024356001600160a01b038116919082900361016b576044359283151580940361016b57602493604051926101f2846105f4565b60008452602084019485526040840191825261020d81610648565b9261021b6040519485610626565b818452602080850192806000998a94018537850101526060840192808452610292601560208851938651151594604051958692610260858501998a925192839161056a565b8301916bffffffffffffffffffffffff199060601b168483015260f81b60348201520301600a19810184520182610626565b51902093848652856020526040862054610449579060029185855285875286602052604087209185518355600183019160018060a01b0390511682549160ff60a01b9051151560a01b16916affffffffffffffffffffff60a81b161717905501905180519067ffffffffffffffff8211610435576103108354610664565b601f81116103f0575b50602095829187916001601f85111461038e5792610383575b50508160011b916000199060031b1c19161790555b817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e604051806103783395826105b2565b0390a3604051908152f35b015190508680610332565b8581528281209350601f198516905b8181106103d957509084600195949392106103c0575b505050811b019055610347565b015160001960f88460031b161c191690558680806103b3565b92938960018192878601518155019501930161039d565b83875260208720601f840160051c8101916020851061042b575b601f0160051c01905b8181106104205750610319565b878155600101610413565b909150819061040a565b634e487b7160e01b86526041600452602486fd5b63119b4fd360e11b8652600486fd5b3461016b57600036600319011261016b576101026104957f000000000000000000000000000000000000000000000000000000000000000061069e565b61055660016104c37f000000000000000000000000000000000000000000000000000000000000000061069e565b92816104ee7f000000000000000000000000000000000000000000000000000000000000000061069e565b60206040519684610508899651809285808a01910161056a565b8501601760f91b83820152610526825180938560218501910161056a565b0101601760f91b8382015261054582518093602060028501910161056a565b01010301601f198101835282610626565b60405191829160208352602083019061058d565b60005b83811061057d5750506000910152565b818101518382015260200161056d565b906020916105a68151809281855285808601910161056a565b601f01601f1916010190565b60a060606105f1936020845280516020850152600180841b0360208201511660408501526040810151151582850152015191608080820152019061058d565b90565b6080810190811067ffffffffffffffff82111761061057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761061057604052565b67ffffffffffffffff811161061057601f01601f191660200190565b90600182811c92168015610694575b602083101461067e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610673565b8060009172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8210156107ea575b806d04ee2d6d415b85acef8100000000600a9210156107cf575b662386f26fc100008110156107bb575b6305f5e1008110156107aa575b61271081101561079b575b606481101561078d575b1015610782575b600a6021600184019361072685610648565b946107346040519687610626565b808652610743601f1991610648565b013660208701378401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561077d57600a909161074e565b505090565b600190910190610714565b60646002910493019261070d565b61271060049104930192610703565b6305f5e100600891049301926106f8565b662386f26fc10000601091049301926106eb565b6d04ee2d6d415b85acef8100000000602091049301926106db565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b81046106c156fea2646970667358221220a883165f569696e643c968d02766bf83172866ea399a4c1950e063946d2efdba64736f6c634300081c0033";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "SchemaRegistry",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<SchemaRegistry$Type["abi"]>>;
  export function deployContract(
    contractName: "@ethereum-attestation-service/eas-contracts/SchemaRegistry.sol:SchemaRegistry",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<SchemaRegistry$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "SchemaRegistry",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<SchemaRegistry$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "@ethereum-attestation-service/eas-contracts/SchemaRegistry.sol:SchemaRegistry",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<SchemaRegistry$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "SchemaRegistry",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<SchemaRegistry$Type["abi"]>>;
  export function getContractAt(
    contractName: "@ethereum-attestation-service/eas-contracts/SchemaRegistry.sol:SchemaRegistry",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<SchemaRegistry$Type["abi"]>>;
}
