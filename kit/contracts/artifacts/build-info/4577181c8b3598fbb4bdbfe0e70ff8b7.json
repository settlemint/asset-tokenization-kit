{"id":"4577181c8b3598fbb4bdbfe0e70ff8b7","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Context variant with ERC-2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771ContextUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return msg.data[:calldataLength - contextSuffixLength];\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"./IAccessControlEnumerable.sol\";\nimport {AccessControl} from \"../AccessControl.sol\";\nimport {EnumerableSet} from \"../../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 role => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Return all accounts that have `role`\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function getRoleMembers(bytes32 role) public view virtual returns (address[] memory) {\n        return _roleMembers[role].values();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            _roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            _roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC-165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Context variant with ERC-2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771Context is Context {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return msg.data[:calldataLength - contextSuffixLength];\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\nimport {Arrays} from \"../Arrays.sol\";\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n * - Set can be cleared (all elements removed) in O(n).\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function _clear(Set storage set) private {\n        uint256 len = _length(set);\n        for (uint256 i = 0; i < len; ++i) {\n            delete set._positions[set._values[i]];\n        }\n        Arrays.unsafeSetLength(set._values, 0);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(Bytes32Set storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(AddressSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(UintSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/addons/vault/ATKVault.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity ^0.8.28;\n\nimport { AccessControlEnumerable } from \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\nimport { ERC2771Context } from \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\nimport { Pausable } from \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport { ReentrancyGuard } from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { Context } from \"@openzeppelin/contracts/utils/Context.sol\";\nimport { EnumerableSet } from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n/// @title ATKVault - A multi-signature wallet with role-based access control\n/// @notice This contract allows multiple signers to propose, confirm, and execute transactions\n/// @dev Implements OpenZeppelin's AccessControl, ERC2771Context, Pausable, and ReentrancyGuard\n/// @custom:security-contact support@settlemint.com\ncontract ATKVault is ERC2771Context, AccessControlEnumerable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /// @notice Role identifier for signers who can submit and confirm transactions\n    bytes32 public constant SIGNER_ROLE = keccak256(\"SIGNER_ROLE\");\n\n    /// @notice Emitted when ETH is deposited to the vault\n    /// @param sender Address that sent the ETH\n    /// @param value Amount of ETH deposited\n    /// @param balance New total balance of the vault\n    event Deposit(address indexed sender, uint256 value, uint256 balance);\n\n    /// @notice Emitted when a general transaction is submitted\n    /// @param signer Address of the signer who submitted the transaction\n    /// @param txIndex Index of the transaction in the transactions array\n    /// @param to Destination address for the transaction\n    /// @param value Amount of ETH to send with the transaction\n    /// @param data Function call data\n    /// @param comment Description of the transaction\n    event SubmitTransaction(\n        address indexed signer, uint256 indexed txIndex, address indexed to, uint256 value, bytes data, string comment\n    );\n\n    /// @notice Emitted when an ERC20 transfer transaction is submitted\n    /// @param signer Address of the signer who submitted the transaction\n    /// @param txIndex Index of the transaction in the transactions array\n    /// @param token Address of the ERC20 token to transfer\n    /// @param to Recipient address for the token transfer\n    /// @param amount Amount of tokens to transfer\n    /// @param comment Description of the transaction\n    event SubmitERC20TransferTransaction(\n        address indexed signer,\n        uint256 indexed txIndex,\n        address indexed token,\n        address to,\n        uint256 amount,\n        string comment\n    );\n\n    /// @notice Emitted when a contract call transaction is submitted\n    /// @param signer Address of the signer who submitted the transaction\n    /// @param txIndex Index of the transaction in the transactions array\n    /// @param target Contract address to call\n    /// @param value Amount of ETH to send with the call\n    /// @param selector Function selector (first 4 bytes of the function signature)\n    /// @param abiEncodedArguments ABI-encoded arguments for the function call\n    /// @param comment Description of the transaction\n    event SubmitContractCallTransaction(\n        address indexed signer,\n        uint256 indexed txIndex,\n        address indexed target,\n        uint256 value,\n        bytes4 selector,\n        bytes abiEncodedArguments,\n        string comment\n    );\n\n    /// @notice Emitted when a transaction is confirmed by a signer\n    /// @param signer Address of the signer who confirmed the transaction\n    /// @param txIndex Index of the confirmed transaction\n    event ConfirmTransaction(address indexed signer, uint256 indexed txIndex);\n\n    /// @notice Emitted when a signer revokes their confirmation\n    /// @param signer Address of the signer who revoked confirmation\n    /// @param txIndex Index of the transaction\n    event RevokeConfirmation(address indexed signer, uint256 indexed txIndex);\n\n    /// @notice Emitted when a transaction is executed\n    /// @param signer Address of the signer who triggered execution\n    /// @param txIndex Index of the executed transaction\n    event ExecuteTransaction(address indexed signer, uint256 indexed txIndex);\n\n    /// @notice Emitted when the confirmation requirement changes\n    /// @param account Address of the account that changed the requirement\n    /// @param required New number of required confirmations\n    event RequirementChanged(address indexed account, uint256 required);\n\n    /// @notice Emitted when transaction execution fails after reaching the required confirmations\n    /// @param txIndex Index of the failed transaction\n    /// @param to Destination address of the failed call\n    /// @param data Call data of the failed call\n    event TransactionExecutionFailed(uint256 indexed txIndex, address to, bytes data);\n\n    /// @notice Structure to store transaction details\n    /// @dev Each transaction is stored in the transactions array\n    struct Transaction {\n        address to; // Destination address\n        uint256 value; // ETH value to send\n        bytes data; // Call data for the transaction\n        bool executed; // Whether the transaction has been executed\n        uint256 numConfirmations; // Number of confirmations received\n        string comment; // Description of the transaction\n    }\n\n    // Store confirmers separately to avoid issues with struct containing mapping\n    mapping(uint256 => EnumerableSet.AddressSet) private _txConfirmers;\n\n    /// @notice Quick lookup to check if a signer has confirmed a transaction\n    /// @dev txIndex => signer address => has confirmed\n    mapping(uint256 => mapping(address => bool)) public confirmations;\n\n    /// @notice Array of all transactions (pending and executed)\n    Transaction[] public transactions;\n\n    /// @notice Number of confirmations required to execute a transaction\n    uint256 public required;\n\n    /// @notice Error thrown when an invalid requirement is set\n    /// @param requested The requested number of confirmations\n    /// @param signerCount The total number of signers\n    error InvalidRequirement(uint256 requested, uint256 signerCount);\n\n    /// @notice Error thrown when accessing a non-existent transaction\n    /// @param txIndex The requested transaction index\n    /// @param maxIndex The maximum valid index\n    error TxDoesNotExist(uint256 txIndex, uint256 maxIndex);\n\n    /// @notice Error thrown when trying to confirm an already executed transaction\n    /// @param txIndex The transaction index\n    error TxExecuted(uint256 txIndex);\n\n    /// @notice Error thrown when a signer tries to confirm a transaction they already confirmed\n    /// @param txIndex The transaction index\n    /// @param signer The signer's address\n    error AlreadyConfirmed(uint256 txIndex, address signer);\n\n    /// @notice Error thrown when a signer tries to revoke a confirmation they didn't make\n    /// @param txIndex The transaction index\n    /// @param signer The signer's address\n    error NotConfirmed(uint256 txIndex, address signer);\n\n    /// @notice Error thrown when transaction execution fails\n    /// @param txIndex The transaction index\n    /// @param to The destination address\n    /// @param data The call data\n    error ExecutionFailed(uint256 txIndex, address to, bytes data);\n\n    /// @notice Error thrown when an empty array is provided for batch operations\n    error EmptyBatchArray();\n\n    /// @notice Error thrown when array lengths don't match in batch operations\n    error ArrayLengthMismatch();\n\n    /// @notice Initializes the Vault with a set of signers and confirmation threshold\n    /// @param _signers Array of initial signer addresses\n    /// @param _required Number of confirmations required to execute a transaction\n    /// @param initialOwner Address that will have admin role\n    /// @param forwarder Address of the ERC2771 forwarder for meta-transactions\n    constructor(\n        address[] memory _signers,\n        uint256 _required,\n        address initialOwner,\n        address forwarder\n    )\n        ERC2771Context(forwarder)\n        AccessControlEnumerable()\n    {\n        uint256 len = _signers.length;\n        // Validate that the required confirmations is a sensible number\n        if (len == 0 || _required == 0 || _required > len) revert InvalidRequirement(_required, len);\n\n        // Grant admin role to the initial owner\n        _grantRole(DEFAULT_ADMIN_ROLE, initialOwner);\n\n        // Grant signer role to all initial signers\n        for (uint256 i = 0; i < len; ++i) {\n            _grantRole(SIGNER_ROLE, _signers[i]);\n        }\n        required = _required;\n        emit RequirementChanged(_msgSender(), _required);\n    }\n\n    /// @notice Allows the contract to receive ETH\n    /// @dev Only works when the contract is not paused\n    receive() external payable whenNotPaused {\n        emit Deposit(_msgSender(), msg.value, address(this).balance);\n    }\n\n    /// @notice Pauses the contract, preventing most operations\n    /// @dev Can only be called by admin\n    function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _pause();\n    }\n\n    /// @notice Unpauses the contract, allowing operations to resume\n    /// @dev Can only be called by admin\n    function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _unpause();\n    }\n\n    /// @notice Gets the number of confirmations required to execute a transaction\n    /// @return The number of required confirmations\n    function requirement() external view returns (uint256) {\n        return required;\n    }\n\n    /// @notice Changes the number of confirmations required\n    /// @param _required New number of required confirmations\n    /// @dev Can only be called by admin\n    function setRequirement(uint256 _required) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        uint256 ownerCount = getRoleMemberCount(SIGNER_ROLE);\n        // Ensure the requirement is valid (between 1 and number of signers)\n        if (_required == 0 || _required > ownerCount) revert InvalidRequirement(_required, ownerCount);\n        required = _required;\n        emit RequirementChanged(_msgSender(), _required);\n    }\n\n    /// @notice Submits a new transaction to the vault\n    /// @param to Destination address\n    /// @param value Amount of ETH to send\n    /// @param data Call data for the transaction\n    /// @param comment Description of the transaction\n    /// @return txIndex Index of the created transaction\n    function submitTransaction(\n        address to,\n        uint256 value,\n        bytes calldata data,\n        string calldata comment\n    )\n        external\n        onlyRole(SIGNER_ROLE)\n        whenNotPaused\n        nonReentrant // Prevents reentrancy during confirmation and execution\n        returns (uint256 txIndex)\n    {\n        address sender = _msgSender();\n        // Store the transaction details\n        txIndex = _storeTransaction(to, value, data, comment);\n        emit SubmitTransaction(sender, txIndex, to, value, data, comment);\n\n        // Automatically confirm the transaction for the submitter\n        _confirm(txIndex, sender);\n    }\n\n    /// @notice Submits multiple transactions in a single call\n    /// @param to Array of destination addresses\n    /// @param value Array of ETH amounts\n    /// @param data Array of call data\n    /// @param comments Array of transaction descriptions\n    /// @return txIndices Array of created transaction indices\n    function batchSubmitTransactions(\n        address[] calldata to,\n        uint256[] calldata value,\n        bytes[] calldata data,\n        string[] calldata comments\n    )\n        external\n        onlyRole(SIGNER_ROLE)\n        whenNotPaused\n        nonReentrant\n        returns (uint256[] memory txIndices)\n    {\n        uint256 batchSize = to.length;\n        if (batchSize == 0) revert EmptyBatchArray();\n        // Ensure all arrays have the same length\n        if (batchSize != value.length || batchSize != data.length || batchSize != comments.length) {\n            revert ArrayLengthMismatch();\n        }\n\n        address sender = _msgSender();\n        txIndices = new uint256[](batchSize);\n\n        // Process each transaction in the batch\n        for (uint256 i = 0; i < batchSize; i++) {\n            txIndices[i] = _storeTransaction(to[i], value[i], data[i], comments[i]);\n            emit SubmitTransaction(sender, txIndices[i], to[i], value[i], data[i], comments[i]);\n\n            // Automatically confirm each transaction\n            _confirm(txIndices[i], sender);\n        }\n    }\n\n    /// @notice Submits a new ERC20 token transfer transaction\n    /// @param token Address of the ERC20 token\n    /// @param to Recipient address\n    /// @param amount Amount of tokens to transfer\n    /// @param comment Description of the transaction\n    /// @return txIndex Index of the created transaction\n    function submitERC20Transfer(\n        address token,\n        address to,\n        uint256 amount,\n        string calldata comment\n    )\n        external\n        onlyRole(SIGNER_ROLE)\n        whenNotPaused\n        nonReentrant\n        returns (uint256 txIndex)\n    {\n        address sender = _msgSender();\n        // Encode the transfer function call\n        bytes memory data = abi.encodeWithSelector(IERC20.transfer.selector, to, amount);\n        txIndex = _storeTransaction(token, 0, data, comment); // Token address as 'to'\n        emit SubmitERC20TransferTransaction(sender, txIndex, token, to, amount, comment);\n\n        // Automatically confirm the transaction\n        _confirm(txIndex, sender);\n    }\n\n    /// @notice Submits multiple ERC20 token transfer transactions in a single call\n    /// @param tokens Array of ERC20 token addresses\n    /// @param to Array of recipient addresses\n    /// @param amounts Array of token amounts\n    /// @param comments Array of transaction descriptions\n    /// @return txIndices Array of created transaction indices\n    function batchSubmitERC20Transfers(\n        address[] calldata tokens,\n        address[] calldata to,\n        uint256[] calldata amounts,\n        string[] calldata comments\n    )\n        external\n        onlyRole(SIGNER_ROLE)\n        whenNotPaused\n        nonReentrant\n        returns (uint256[] memory txIndices)\n    {\n        uint256 batchSize = tokens.length;\n        if (batchSize == 0) revert EmptyBatchArray();\n        // Ensure all arrays have the same length\n        if (batchSize != to.length || batchSize != amounts.length || batchSize != comments.length) {\n            revert ArrayLengthMismatch();\n        }\n\n        address sender = _msgSender();\n        txIndices = new uint256[](batchSize);\n\n        // Process each token transfer in the batch\n        for (uint256 i = 0; i < batchSize; i++) {\n            bytes memory data = abi.encodeWithSelector(IERC20.transfer.selector, to[i], amounts[i]);\n            txIndices[i] = _storeTransaction(tokens[i], 0, data, comments[i]);\n            emit SubmitERC20TransferTransaction(sender, txIndices[i], tokens[i], to[i], amounts[i], comments[i]);\n\n            // Automatically confirm each transaction\n            _confirm(txIndices[i], sender);\n        }\n    }\n\n    /// @notice Submits a contract call transaction\n    /// @param target Address of the contract to call\n    /// @param value Amount of ETH to send with the call\n    /// @param selector Function selector (first 4 bytes of the function signature)\n    /// @param abiEncodedArguments ABI-encoded arguments for the function call\n    /// @param comment Description of the transaction\n    /// @return txIndex Index of the created transaction\n    function submitContractCall(\n        address target,\n        uint256 value,\n        bytes4 selector,\n        bytes calldata abiEncodedArguments,\n        string calldata comment\n    )\n        external\n        onlyRole(SIGNER_ROLE)\n        whenNotPaused\n        nonReentrant\n        returns (uint256 txIndex)\n    {\n        address sender = _msgSender();\n        // Combine the selector and arguments into complete call data\n        bytes memory data = bytes.concat(selector, abiEncodedArguments);\n        txIndex = _storeTransaction(target, value, data, comment);\n\n        emit SubmitContractCallTransaction(sender, txIndex, target, value, selector, abiEncodedArguments, comment);\n\n        // Automatically confirm the transaction\n        _confirm(txIndex, sender);\n    }\n\n    /// @notice Submits multiple contract call transactions in a single call\n    /// @param targets Array of contract addresses\n    /// @param values Array of ETH amounts\n    /// @param selectors Array of function selectors\n    /// @param abiEncodedArguments Array of ABI-encoded arguments\n    /// @param comments Array of transaction descriptions\n    /// @return txIndices Array of created transaction indices\n    function batchSubmitContractCalls(\n        address[] calldata targets,\n        uint256[] calldata values,\n        bytes4[] calldata selectors,\n        bytes[] calldata abiEncodedArguments,\n        string[] calldata comments\n    )\n        external\n        onlyRole(SIGNER_ROLE)\n        whenNotPaused\n        nonReentrant\n        returns (uint256[] memory txIndices)\n    {\n        uint256 batchSize = targets.length;\n        if (batchSize == 0) revert EmptyBatchArray();\n        // Ensure all arrays have the same length\n        if (\n            batchSize != values.length || batchSize != selectors.length || batchSize != abiEncodedArguments.length\n                || batchSize != comments.length\n        ) revert ArrayLengthMismatch();\n\n        address sender = _msgSender();\n        txIndices = new uint256[](batchSize);\n\n        // Process each contract call in the batch\n        for (uint256 i = 0; i < batchSize; i++) {\n            bytes memory data = bytes.concat(selectors[i], abiEncodedArguments[i]);\n            txIndices[i] = _storeTransaction(targets[i], values[i], data, comments[i]);\n\n            emit SubmitContractCallTransaction(\n                sender, txIndices[i], targets[i], values[i], selectors[i], abiEncodedArguments[i], comments[i]\n            );\n\n            // Automatically confirm each transaction\n            _confirm(txIndices[i], sender);\n        }\n    }\n\n    /// @notice Confirms a pending transaction\n    /// @param txIndex Index of the transaction to confirm\n    function confirm(uint256 txIndex) external onlyRole(SIGNER_ROLE) whenNotPaused nonReentrant {\n        _confirm(txIndex, _msgSender());\n    }\n\n    /// @notice Confirms multiple pending transactions in a single call\n    /// @param txIndices Array of transaction indices to confirm\n    function batchConfirm(uint256[] calldata txIndices) external onlyRole(SIGNER_ROLE) whenNotPaused nonReentrant {\n        if (txIndices.length == 0) revert EmptyBatchArray();\n\n        address sender = _msgSender();\n        // Confirm each transaction in the batch\n        for (uint256 i = 0; i < txIndices.length; i++) {\n            _confirm(txIndices[i], sender);\n        }\n    }\n\n    /// @notice Revokes a confirmation from a pending transaction\n    /// @param txIndex Index of the transaction\n    function revoke(uint256 txIndex) external onlyRole(SIGNER_ROLE) whenNotPaused {\n        Transaction storage txn = _assertTxPending(txIndex); // Ensures tx exists and is not executed\n        address sender = _msgSender();\n\n        // Check that the sender has previously confirmed this transaction\n        if (!_txConfirmers[txIndex].contains(sender)) revert NotConfirmed(txIndex, sender);\n\n        // Remove from both the EnumerableSet and the lookup mapping\n        _txConfirmers[txIndex].remove(sender);\n        confirmations[txIndex][sender] = false;\n\n        // Decrease confirmation count safely\n        unchecked {\n            --txn.numConfirmations;\n        }\n        emit RevokeConfirmation(sender, txIndex);\n    }\n\n    /// @notice Returns a list of all current signers\n    /// @return signers_ Array of signer addresses\n    function signers() external view returns (address[] memory signers_) {\n        uint256 count = getRoleMemberCount(SIGNER_ROLE);\n        signers_ = new address[](count);\n        // Get each signer from the role-based access control\n        for (uint256 i = 0; i < count; ++i) {\n            signers_[i] = getRoleMember(SIGNER_ROLE, i);\n        }\n        return signers_;\n    }\n\n    /// @notice Returns detailed information about a transaction\n    /// @param txIndex Index of the transaction\n    /// @return Transaction struct containing all transaction details\n    function transaction(uint256 txIndex) external view returns (Transaction memory) {\n        if (txIndex >= transactions.length) {\n            revert TxDoesNotExist(txIndex, transactions.length > 0 ? transactions.length - 1 : 0);\n        }\n        return transactions[txIndex];\n    }\n\n    /// @notice Checks if a signer has confirmed a transaction\n    /// @param txIndex Index of the transaction\n    /// @param signer Address of the signer\n    /// @return True if the signer has confirmed the transaction\n    function hasConfirmed(uint256 txIndex, address signer) external view returns (bool) {\n        return _txConfirmers[txIndex].contains(signer);\n    }\n\n    /// @notice Returns a list of all signers who confirmed a transaction\n    /// @param txIndex Index of the transaction\n    /// @return Array of signer addresses who confirmed the transaction\n    function getConfirmers(uint256 txIndex) external view returns (address[] memory) {\n        if (txIndex >= transactions.length) {\n            revert TxDoesNotExist(txIndex, transactions.length > 0 ? transactions.length - 1 : 0);\n        }\n\n        uint256 count = _txConfirmers[txIndex].length();\n        address[] memory result = new address[](count);\n\n        // Get each confirmer from the EnumerableSet\n        for (uint256 i = 0; i < count; i++) {\n            result[i] = _txConfirmers[txIndex].at(i);\n        }\n\n        return result;\n    }\n\n    /// @notice Internal helper to store a new transaction\n    /// @param to Destination address\n    /// @param value ETH amount to send\n    /// @param data Call data\n    /// @param comment Transaction description\n    /// @return index Index of the newly created transaction\n    function _storeTransaction(\n        address to,\n        uint256 value,\n        bytes memory data,\n        string memory comment\n    )\n        internal\n        returns (uint256 index)\n    {\n        index = transactions.length;\n        // Add the new transaction to the array\n        transactions.push(\n            Transaction({ to: to, value: value, data: data, executed: false, numConfirmations: 0, comment: comment })\n        );\n        // _txConfirmers[index] is automatically initialized as an empty set\n    }\n\n    /// @notice Checks that a transaction exists and is not yet executed\n    /// @param txIndex Index of the transaction\n    /// @return txn Reference to the transaction struct\n    function _assertTxPending(uint256 txIndex) internal view returns (Transaction storage txn) {\n        if (txIndex >= transactions.length) {\n            revert TxDoesNotExist(txIndex, transactions.length > 0 ? transactions.length - 1 : 0);\n        }\n        txn = transactions[txIndex];\n        if (txn.executed) revert TxExecuted(txIndex);\n    }\n\n    /// @notice Internal helper to confirm a transaction\n    /// @param txIndex Index of the transaction\n    /// @param confirmer Address of the signer confirming the transaction\n    function _confirm(uint256 txIndex, address confirmer) internal {\n        Transaction storage txn = _assertTxPending(txIndex); // Ensure tx exists and is pending\n\n        // Check that the signer hasn't already confirmed\n        if (_txConfirmers[txIndex].contains(confirmer)) revert AlreadyConfirmed(txIndex, confirmer);\n\n        // Add to both the EnumerableSet and the lookup mapping\n        _txConfirmers[txIndex].add(confirmer);\n        confirmations[txIndex][confirmer] = true;\n\n        // Increment confirmation count safely\n        unchecked {\n            ++txn.numConfirmations;\n        }\n        emit ConfirmTransaction(confirmer, txIndex);\n\n        // Automatically execute the transaction if enough confirmations\n        if (txn.numConfirmations >= required && !txn.executed) {\n            bool executedSuccessfully = _executeTransaction(txIndex, confirmer);\n            if (!executedSuccessfully) {\n                // Execution was attempted but failed. Revert the entire confirm transaction.\n                // State changes in _confirm (adding confirmer, incrementing count) will be rolled back.\n                revert ExecutionFailed(txIndex, txn.to, txn.data);\n            }\n        }\n    }\n\n    /// @notice Internal helper to execute a transaction. Returns true on success, false on failure.\n    /// @param txIndex Index of the transaction\n    /// @param executor Address of the signer who triggered execution\n    /// @return success True if execution succeeded, false otherwise.\n    function _executeTransaction(uint256 txIndex, address executor) private returns (bool success) {\n        Transaction storage txn = transactions[txIndex];\n\n        // Prevent execution if already executed (belt-and-suspenders check)\n        if (txn.executed) return true; // Already done, consider it success for the caller\n\n        // Mark as executed BEFORE external call to prevent reentrancy attacks\n        txn.executed = true;\n\n        // Make the external call\n        (bool callSuccess,) = txn.to.call{ value: txn.value }(txn.data);\n        if (!callSuccess) {\n            txn.executed = false; // Revert the execution marker\n            // Do NOT revert here, return false instead\n            return false;\n        }\n\n        emit ExecuteTransaction(executor, txIndex);\n\n        // Clear all confirmations to save gas on future operations\n        uint256 confirmerCount = _txConfirmers[txIndex].length();\n        for (uint256 i = 0; i < confirmerCount; i++) {\n            // Always get the first one since we're removing them\n            address confirmer = _txConfirmers[txIndex].at(0);\n            confirmations[txIndex][confirmer] = false; // Clear the lookup mapping\n            _txConfirmers[txIndex].remove(confirmer); // Remove from set\n        }\n\n        // Reset numConfirmations to 0\n        txn.numConfirmations = 0;\n\n        return true; // Indicate success\n    }\n\n    /// @notice Internal override to support meta-transactions\n    /// @return Address of the message sender (could be forwarded)\n    function _msgSender() internal view override(Context, ERC2771Context) returns (address) {\n        return super._msgSender();\n    }\n\n    /// @notice Internal override to support meta-transactions\n    /// @return Message data, potentially modified by the trusted forwarder\n    function _msgData() internal view override(Context, ERC2771Context) returns (bytes calldata) {\n        return super._msgData();\n    }\n\n    /// @notice Internal override to support meta-transactions\n    /// @return Length of the trusted forwarder suffix\n    function _contextSuffixLength() internal view override(Context, ERC2771Context) returns (uint256) {\n        return super._contextSuffixLength();\n    }\n}\n"},"contracts/addons/vault/ATKVaultFactoryImplementation.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity 0.8.28;\n\n// OpenZeppelin Contracts\nimport { IERC165 } from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n// Interfaces\nimport { IATKVaultFactory } from \"./IATKVaultFactory.sol\";\nimport { IATKSystem } from \"../../system/IATKSystem.sol\";\n\n// Implementations\nimport { AbstractATKSystemAddonFactoryImplementation } from\n    \"../../system/AbstractATKSystemAddonFactoryImplementation.sol\";\nimport { ATKVault } from \"./ATKVault.sol\";\n\n// Constants\nimport { ATKSystemRoles } from \"../../system/ATKSystemRoles.sol\";\n\n/// @title Factory for Creating ATKVault Proxies\n/// @notice This contract serves as a factory to deploy new UUPS proxy instances of `ATKVault` contracts.\n/// It manages a single implementation contract and allows for updating this implementation.\n/// @dev Key features of this factory:\n/// - **Deployment of Proxies**: Provides a `createVault` function to deploy new `ATKVaultProxy` instances,\n///   which point to a shared `ATKVault` implementation.\n/// - **CREATE2**: Leverages `CREATE2` for deploying proxies, allowing their addresses to be pre-calculated.\n/// - **Implementation Management**: Deploys an initial implementation and allows the owner to update it.\n/// - **Authorization**: The `createVault` function requires the `DEPLOYER_ROLE` for proper access control.\n/// - **Registry**: Maintains an array `allVaults` to keep track of all vault proxies created.\n/// - **Meta-transactions**: Inherits `ERC2771Context` to support gasless operations if a trusted forwarder is\n/// configured.\ncontract ATKVaultFactoryImplementation is AbstractATKSystemAddonFactoryImplementation, IATKVaultFactory {\n    bytes32 public constant override typeId = keccak256(\"ATKVaultFactory\");\n\n    /// @notice An array that stores references (addresses) to all vault\n    /// contracts created by this factory.\n    address[] private allVaults;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address forwarder) AbstractATKSystemAddonFactoryImplementation(forwarder) { }\n\n    /// @notice Initializes the `ATKVaultFactory`.\n    /// @dev Initializes the factory and sets up support for meta-transactions via ERC2771Context.\n    /// @param systemAddress_ The address of the `IATKSystem` contract.\n    /// @param initialAdmin_ The address of the initial admin.\n    function initialize(address systemAddress_, address initialAdmin_) public initializer {\n        _initializeAbstractSystemAddonFactory(systemAddress_, initialAdmin_);\n    }\n\n    /// @notice Creates and deploys a new `ATKVault` contract for a given configuration.\n    /// @dev This function performs the following steps:\n    /// 1. **Authorization Check**: Verifies the caller has the `DEPLOYER_ROLE`.\n    /// 2. **Salt Generation**: Computes a unique `salt` for CREATE2.\n    /// 3. **Constructor Arguments**: Prepares the constructor arguments for the ATKVault contract.\n    /// 4. **Vault Deployment**: Deploys an `ATKVault` using CREATE2.\n    /// 5. **Event Emission**: Emits `ATKVaultCreated`.\n    /// 6. **Registry Update**: Adds the new vault to `allVaults`.\n    /// @param signers Array of initial signer addresses\n    /// @param required Number of confirmations required to execute a transaction\n    /// @param initialOwner Address that will have admin role\n    /// @param salt Salt value for deterministic address generation\n    /// @return contractAddress Address of the newly created vault\n    function createVault(\n        address[] memory signers,\n        uint256 required,\n        address initialOwner,\n        bytes32 salt\n    )\n        external\n        override(IATKVaultFactory)\n        onlyRole(ATKSystemRoles.DEPLOYER_ROLE)\n        returns (address contractAddress)\n    {\n        bytes memory saltInputData = abi.encode(address(this), signers, required, initialOwner, salt);\n        bytes memory constructorArgs = abi.encode(signers, required, initialOwner, trustedForwarder());\n        bytes memory vaultBytecode = type(ATKVault).creationCode;\n\n        // Predict the address first for validation\n        address expectedAddress = _predictProxyAddress(vaultBytecode, constructorArgs, saltInputData);\n\n        // Deploy using the abstract factory method\n        contractAddress = _deploySystemAddon(vaultBytecode, constructorArgs, saltInputData, expectedAddress);\n\n        // Emit an event to log the creation of the new vault.\n        emit ATKVaultCreated(contractAddress, _msgSender());\n\n        // Add the new vault to the list of all vaults created by this factory.\n        allVaults.push(contractAddress);\n\n        return contractAddress;\n    }\n\n    /// @notice Predicts the address where an ATK Vault contract would be deployed\n    /// @param signers Array of initial signer addresses\n    /// @param required Number of confirmations required to execute a transaction\n    /// @param initialOwner Address that will have admin role\n    /// @param salt Salt value for deterministic address generation\n    /// @return predictedAddress The predicted address of the vault\n    function predictVaultAddress(\n        address[] memory signers,\n        uint256 required,\n        address initialOwner,\n        bytes32 salt\n    )\n        external\n        view\n        override(IATKVaultFactory)\n        returns (address predictedAddress)\n    {\n        bytes memory saltInputData = abi.encode(address(this), signers, required, initialOwner, salt);\n        bytes memory constructorArgs = abi.encode(signers, required, initialOwner, trustedForwarder());\n        bytes memory vaultBytecode = type(ATKVault).creationCode;\n\n        return _predictProxyAddress(vaultBytecode, constructorArgs, saltInputData);\n    }\n\n    /// @notice Returns the total number of vault contracts created by this factory.\n    function allVaultsLength() external view returns (uint256 count) {\n        return allVaults.length;\n    }\n\n    /// @notice Returns the address of the ATKVault implementation (not used in this pattern).\n    /// @dev Since we deploy ATKVault contracts directly, this returns address(0).\n    function atkVaultImplementation() external pure returns (address) {\n        return address(0);\n    }\n\n    /// @notice Checks if a contract supports a given interface.\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(AbstractATKSystemAddonFactoryImplementation)\n        returns (bool)\n    {\n        return interfaceId == type(IATKVaultFactory).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"},"contracts/addons/vault/ATKVaultFactoryProxy.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity 0.8.28;\n\nimport { ATKSystemAddonProxy } from \"../../system/ATKSystemAddonProxy.sol\";\nimport { IATKVaultFactory } from \"./IATKVaultFactory.sol\";\nimport { IATKSystem } from \"../../system/IATKSystem.sol\";\n\n/// @title ATKVaultFactoryProxy\n/// @notice Proxy contract for the ATK Vault Factory addon\n/// @dev This contract serves as a proxy to the ATK Vault Factory implementation\ncontract ATKVaultFactoryProxy {\n    /// @notice The ATK System contract that manages addon implementations\n    IATKSystem private immutable _system;\n\n    /// @notice Constructor for the ATKVaultFactoryProxy\n    /// @param systemAddress Address of the ATK System contract\n    /// @param forwarder_ Address of the trusted forwarder for meta-transactions\n    /// @param initialAdmin_ Address that will have admin role\n    constructor(address systemAddress, address forwarder_, address initialAdmin_) {\n        if (systemAddress == address(0)) revert(\"Invalid system address\");\n        _system = IATKSystem(systemAddress);\n\n        // Get the implementation address from the system\n        address implementation = _system.addonImplementation(keccak256(\"VaultFactory\"));\n        if (implementation == address(0)) revert(\"Vault factory implementation not set\");\n\n        // Initialize the implementation\n        (bool success,) = implementation.delegatecall(\n            abi.encodeWithSelector(IATKVaultFactory.initialize.selector, forwarder_, initialAdmin_)\n        );\n        if (!success) revert(\"Initialization failed\");\n    }\n\n    /// @notice Fallback function that delegates all calls to the implementation\n    /// @dev Uses delegatecall to preserve the proxy's storage context\n    fallback() external payable {\n        address implementation = _system.addonImplementation(keccak256(\"VaultFactory\"));\n        if (implementation == address(0)) revert(\"Vault factory implementation not set\");\n\n        assembly {\n            // Copy msg.data to memory\n            calldatacopy(0, 0, calldatasize())\n\n            // Delegate call to the implementation\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data\n            returndatacopy(0, 0, returndatasize())\n\n            // Return or revert based on the result\n            switch result\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n\n    /// @notice Receive function to handle plain ETH transfers\n    receive() external payable {\n        address implementation = _system.addonImplementation(keccak256(\"VaultFactory\"));\n        if (implementation == address(0)) revert(\"Vault factory implementation not set\");\n\n        assembly {\n            // Copy msg.data to memory (empty for receive)\n            calldatacopy(0, 0, calldatasize())\n\n            // Delegate call to the implementation\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data\n            returndatacopy(0, 0, returndatasize())\n\n            // Return or revert based on the result\n            switch result\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n}\n"},"contracts/addons/vault/IATKVaultFactory.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity ^0.8.28;\n\n/// @title IATKVaultFactory Interface\n/// @notice Interface for the ATK Vault Factory contract\n/// @dev Defines the functions for creating and managing ATK Vault contracts\ninterface IATKVaultFactory {\n    /// @notice Emitted when a new ATK Vault contract is created\n    /// @param vault Address of the newly created vault\n    /// @param creator Address of the account that created the vault\n    event ATKVaultCreated(address indexed vault, address indexed creator);\n\n    /// @notice Creates a new ATK Vault contract\n    /// @param signers Array of initial signer addresses\n    /// @param required Number of confirmations required to execute a transaction\n    /// @param initialOwner Address that will have admin role\n    /// @param salt Salt value for deterministic address generation\n    /// @return contractAddress Address of the newly created vault\n    function createVault(\n        address[] memory signers,\n        uint256 required,\n        address initialOwner,\n        bytes32 salt\n    )\n        external\n        returns (address contractAddress);\n\n    /// @notice Predicts the address where an ATK Vault contract would be deployed\n    /// @param signers Array of initial signer addresses\n    /// @param required Number of confirmations required to execute a transaction\n    /// @param initialOwner Address that will have admin role\n    /// @param salt Salt value for deterministic address generation\n    /// @return predictedAddress The predicted address of the vault\n    function predictVaultAddress(\n        address[] memory signers,\n        uint256 required,\n        address initialOwner,\n        bytes32 salt\n    )\n        external\n        view\n        returns (address predictedAddress);\n\n    /// @notice Initializes the factory contract\n    /// @param forwarder_ Address of the trusted forwarder for meta-transactions\n    /// @param initialAdmin_ Address that will have admin role\n    function initialize(address forwarder_, address initialAdmin_) external;\n\n    /// @notice Returns the address of the current ATKVault logic contract (implementation).\n    /// @dev This function is expected to be available on the factory contract.\n    function atkVaultImplementation() external view returns (address);\n}\n"},"contracts/system/AbstractATKSystemAddonFactoryImplementation.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity 0.8.28;\n\n// OpenZeppelin Contracts\nimport { Initializable } from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport { ERC2771ContextUpgradeable } from \"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol\";\nimport { AccessControlUpgradeable } from \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport { ContextUpgradeable } from \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\nimport { ERC165Upgradeable } from \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\nimport { IERC165 } from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport { Create2 } from \"@openzeppelin/contracts/utils/Create2.sol\";\n\n// Interfaces\nimport { IATKSystem } from \"./IATKSystem.sol\";\nimport { IATKComplianceBypassList } from \"./compliance/IATKComplianceBypassList.sol\";\nimport { IWithTypeIdentifier } from \"./IWithTypeIdentifier.sol\";\n\n// Constants\nimport { ATKSystemRoles } from \"./ATKSystemRoles.sol\";\n\n/// @title Abstract Factory for Creating ATK System Addon Proxies\n/// @notice This abstract contract provides common functionality for system addon factory implementations.\n/// It manages implementation contracts and provides CREATE2 address prediction capabilities.\n/// @dev Key features of this abstract factory:\n/// - **Implementation Management**: Manages implementation contracts and allows for updating them.\n/// - **CREATE2 Support**: Provides utilities for CREATE2 deployment and address prediction.\n/// - **Authorization**: Access control with role-based permissions.\n/// - **Registry**: Maintains tracking of deployed system addon contracts.\n/// - **Meta-transactions**: Inherits `ERC2771Context` to support gasless operations.\nabstract contract AbstractATKSystemAddonFactoryImplementation is\n    Initializable,\n    ERC165Upgradeable,\n    ERC2771ContextUpgradeable,\n    AccessControlUpgradeable,\n    IWithTypeIdentifier\n{\n    /// @notice Error thrown when a CREATE2 address is already deployed.\n    error AddressAlreadyDeployed(address deployedAddress);\n\n    /// @notice Error thrown when proxy creation fails.\n    error ProxyCreationFailed();\n\n    /// @notice The address of the `IATKSystem` contract.\n    address internal _systemAddress;\n\n    /// @notice Mapping indicating whether an system addon address was deployed by this factory.\n    /// @dev Stores a boolean value for each system addon address, true if deployed by this factory.\n    mapping(address systemAddonAddress => bool isFactorySystemAddon) public isFactorySystemAddon;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address forwarder) ERC2771ContextUpgradeable(forwarder) {\n        _disableInitializers();\n    }\n\n    /// @notice Initializes the abstract airdrop factory.\n    /// @dev Sets up access control and system address.\n    /// @param systemAddress_ The address of the `IATKSystem` contract.\n    /// @param initialAdmin_ The address of the initial admin.\n    function _initializeAbstractSystemAddonFactory(address systemAddress_, address initialAdmin_) internal {\n        __AccessControl_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, initialAdmin_);\n        _grantRole(ATKSystemRoles.IMPLEMENTATION_MANAGER_ROLE, initialAdmin_);\n        _grantRole(ATKSystemRoles.DEPLOYER_ROLE, initialAdmin_);\n\n        _systemAddress = systemAddress_;\n    }\n\n    /// @notice Calculates the salt for CREATE2 deployment.\n    /// @dev Can be overridden by derived contracts for custom salt calculation.\n    /// @param saltInputData The ABI encoded data to be used for salt calculation.\n    /// @return The calculated salt for CREATE2 deployment.\n    function _calculateSalt(bytes memory saltInputData) internal view returns (bytes32) {\n        return keccak256(abi.encode(address(this), saltInputData));\n    }\n\n    /// @notice Predicts the deployment address of a proxy using CREATE2.\n    /// @dev Internal function to compute the address without performing deployment.\n    /// @param proxyCreationCode The creation bytecode of the proxy contract.\n    /// @param encodedConstructorArgs ABI-encoded constructor arguments for the proxy.\n    /// @param saltInputData The ABI encoded data to be used for salt calculation.\n    /// @return predictedAddress The predicted address where the proxy would be deployed.\n    function _predictProxyAddress(\n        bytes memory proxyCreationCode,\n        bytes memory encodedConstructorArgs,\n        bytes memory saltInputData\n    )\n        internal\n        view\n        returns (address predictedAddress)\n    {\n        bytes32 salt = _calculateSalt(saltInputData);\n        bytes memory fullCreationCode = bytes.concat(proxyCreationCode, encodedConstructorArgs);\n        bytes32 bytecodeHash = keccak256(fullCreationCode);\n        predictedAddress = Create2.computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /// @notice Deploys a proxy contract using CREATE2.\n    /// @dev This internal function handles the prediction and deployment of the system addon proxy.\n    /// @param proxyCreationCode The creation bytecode of the proxy contract.\n    /// @param encodedConstructorArgs ABI-encoded constructor arguments for the proxy.\n    /// @param saltInputData The ABI encoded data to be used for salt calculation.\n    /// @param expectedAddress The expected deployment address for validation.\n    /// @return deployedAddress The address of the newly deployed proxy contract.\n    function _deploySystemAddon(\n        bytes memory proxyCreationCode,\n        bytes memory encodedConstructorArgs,\n        bytes memory saltInputData,\n        address expectedAddress\n    )\n        internal\n        onlyRole(ATKSystemRoles.DEPLOYER_ROLE)\n        returns (address deployedAddress)\n    {\n        if (isFactorySystemAddon[expectedAddress]) {\n            revert AddressAlreadyDeployed(expectedAddress);\n        }\n\n        bytes32 salt = _calculateSalt(saltInputData);\n        bytes memory fullCreationCode = bytes.concat(proxyCreationCode, encodedConstructorArgs);\n\n        deployedAddress = Create2.deploy(0, salt, fullCreationCode);\n\n        if (deployedAddress != expectedAddress) {\n            revert ProxyCreationFailed();\n        }\n\n        isFactorySystemAddon[deployedAddress] = true;\n\n        // Add to compliance bypass list if available\n        _addToComplianceBypassList(deployedAddress);\n\n        return deployedAddress;\n    }\n\n    /// @notice Adds an system addon address to the compliance bypass list if available.\n    /// @dev Internal helper to handle compliance bypass list registration.\n    /// @param systemAddonAddress The address of the system addon contract to add.\n    function _addToComplianceBypassList(address systemAddonAddress) internal {\n        address complianceProxy = IATKSystem(_systemAddress).complianceProxy();\n        if (\n            complianceProxy != address(0)\n                && IERC165(complianceProxy).supportsInterface(type(IATKComplianceBypassList).interfaceId)\n        ) {\n            // Allow system addons to receive tokens\n            IATKComplianceBypassList(complianceProxy).addToBypassList(systemAddonAddress);\n        }\n    }\n\n    /// @notice Checks if a contract supports a given interface.\n    /// @param interfaceId The interface identifier.\n    /// @return bool True if the contract supports the interface, false otherwise.\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(AccessControlUpgradeable, ERC165Upgradeable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /// @dev Overridden from `Context` and `ERC2771Context` to correctly identify the transaction sender,\n    /// accounting for meta-transactions if a trusted forwarder is used.\n    /// @return The actual sender of the transaction (`msg.sender` or the relayed sender).\n    function _msgSender() internal view override(ContextUpgradeable, ERC2771ContextUpgradeable) returns (address) {\n        return super._msgSender();\n    }\n\n    /// @dev Overridden from `Context` and `ERC2771Context` to correctly retrieve the transaction data,\n    /// accounting for meta-transactions.\n    /// @return The actual transaction data (`msg.data` or the relayed data).\n    function _msgData()\n        internal\n        view\n        override(ContextUpgradeable, ERC2771ContextUpgradeable)\n        returns (bytes calldata)\n    {\n        return super._msgData();\n    }\n\n    /// @dev Overridden from `ERC2771Context` to define the length of the suffix appended to `msg.data` for relayed\n    /// calls.\n    /// @return The length of the context suffix (typically 20 bytes for the sender's address).\n    function _contextSuffixLength()\n        internal\n        view\n        override(ContextUpgradeable, ERC2771ContextUpgradeable)\n        returns (uint256)\n    {\n        return super._contextSuffixLength();\n    }\n}\n"},"contracts/system/ATKSystemAddonProxy.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity ^0.8.28;\n\nimport { Proxy } from \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport { IERC165 } from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport { StorageSlot } from \"@openzeppelin/contracts/utils/StorageSlot.sol\";\nimport { IATKSystem } from \"./IATKSystem.sol\";\nimport { InvalidSystemAddress, ETHTransfersNotAllowed, AddonImplementationNotSet } from \"./ATKSystemErrors.sol\";\nimport { ATKSystemProxy } from \"./ATKSystemProxy.sol\";\n\n/// @title Proxy contract for ATK System Addon.\n/// @notice This contract serves as a proxy to the ATK System Addon implementation,\n/// allowing for upgradeability of the system addon logic.\n/// It retrieves the implementation address from the IATKSystem contract.\ncontract ATKSystemAddonProxy is ATKSystemProxy {\n    // keccak256(\"org.atk.contracts.proxy.ATKSystemAddonProxy.addonTypeHash\")\n    bytes32 private constant _ADDON_TYPE_HASH_SLOT = 0x00e3e0cec59b60132eea2c7a5f5ee6f561df7478627a471ef97f7437cc141bee;\n\n    function _setAddonTypeHash(bytes32 addonTypeHash_) internal {\n        StorageSlot.getBytes32Slot(_ADDON_TYPE_HASH_SLOT).value = addonTypeHash_;\n    }\n\n    function _getAddonTypeHash() internal view returns (bytes32) {\n        return StorageSlot.getBytes32Slot(_ADDON_TYPE_HASH_SLOT).value;\n    }\n\n    /// @notice Constructor for the `ATKSystemAddonProxy`.\n    /// @dev This function is called only once when the proxy contract is deployed.\n    /// It performs critical setup steps:\n    /// 1. Stores the `systemAddress` (handled by `ATKSystemProxy` constructor).\n    /// 2. Retrieves the initial `ATKSystemAddonImplementation` address from the `IATKSystem` contract.\n    /// 3. Ensures this retrieved implementation address is not the zero address.\n    /// 4. Executes a `delegatecall` to the `initialize` function of the `ATKSystemAddonImplementation` contract\n    ///    via `_performInitializationDelegatecall`.\n    /// @param systemAddress The address of the `IATKSystem` contract.\n    /// @param addonTypeHash The hash of the addon type.\n    /// @param initializeData The encoded function call to initialize the proxy (e.g., abi.encodeWithSelector(...)).\n    constructor(\n        address systemAddress,\n        bytes32 addonTypeHash,\n        bytes memory initializeData\n    )\n        ATKSystemProxy(systemAddress)\n    {\n        _setAddonTypeHash(addonTypeHash);\n\n        IATKSystem system_ = _getSystem();\n        address implementation = _getSpecificImplementationAddress(system_);\n\n        _performInitializationDelegatecall(implementation, initializeData);\n    }\n\n    /// @dev Retrieves the implementation address for the System Addon module from the `IATKSystem` contract.\n    /// @dev Reverts with `AddonImplementationNotSet` if the implementation address is zero.\n    /// @param system The `IATKSystem` contract instance.\n    /// @return The address of the `ATKSystemAddonImplementation` contract.\n    /// @inheritdoc ATKSystemProxy\n    function _getSpecificImplementationAddress(IATKSystem system) internal view override returns (address) {\n        bytes32 addonTypeHash = _getAddonTypeHash();\n        address implementation = system.addonImplementation(addonTypeHash);\n        if (implementation == address(0)) {\n            revert AddonImplementationNotSet(addonTypeHash);\n        }\n        return implementation;\n    }\n}\n"},"contracts/system/ATKSystemErrors.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\n\npragma solidity ^0.8.28;\n\n/// @notice Error indicating that an invalid system address was provided or encountered.\n/// @dev This typically means an address expected to be a core system component (like a module proxy or implementation)\n/// was found to be the zero address or an otherwise incorrect address during a critical operation.\nerror InvalidSystemAddress();\n\n/// @notice Error indicating that a system initialization process failed.\n/// @dev This could occur during the `bootstrap` phase of the `SMARTSystem` or during the constructor execution\n/// of a critical component if a required setup step could not be completed successfully.\nerror InitializationFailed();\n\n/// @notice Error indicating that an action is being attempted on a system that has not been bootstrapped yet.\n/// @dev This is thrown when a function requires core proxy contracts to be deployed, but they haven't been.\nerror SystemNotBootstrapped();\n\n/// @notice Error indicating that the system has already been bootstrapped and cannot be bootstrapped again.\n/// @dev This error is thrown if the `bootstrap` function is called when the system proxy contracts have already\n/// been deployed and initialized.\nerror SystemAlreadyBootstrapped();\n\n/// @notice Error indicating that the compliance module implementation address has not been set.\n/// @dev This error is thrown if an operation requires the compliance module, but its logic contract address is\n/// zero or has not been configured in the `SMARTSystem`.\nerror ComplianceImplementationNotSet();\n\n/// @notice Error indicating that the identity registry implementation address has not been set.\n/// @dev This error is thrown if an operation requires the identity registry, but its logic contract address is\n/// zero or has not been configured in the `SMARTSystem`.\nerror IdentityRegistryImplementationNotSet();\n\n/// @notice Error indicating that the identity registry storage implementation address has not been set.\n/// @dev This error is thrown if an operation requires the identity registry storage, but its logic contract address is\n/// zero or has not been configured in the `SMARTSystem`.\nerror IdentityRegistryStorageImplementationNotSet();\n\n/// @notice Error indicating that the trusted issuers registry implementation address has not been set.\n/// @dev This error is thrown if an operation requires the trusted issuers registry, but its logic contract address is\n/// zero or has not been configured in the `SMARTSystem`.\nerror TrustedIssuersRegistryImplementationNotSet();\n\n/// @notice Error indicating that the topic scheme registry implementation address has not been set.\n/// @dev This error is thrown if an operation requires the topic scheme registry, but its logic contract address is\n/// zero or has not been configured in the `SMARTSystem`.\nerror TopicSchemeRegistryImplementationNotSet();\n\n/// @notice Error indicating that the identity factory implementation address has not been set.\n/// @dev This error is thrown if an operation requires the identity factory, but its logic contract address is\n/// zero or has not been configured in the `SMARTSystem`.\nerror IdentityFactoryImplementationNotSet();\n\n/// @notice Error indicating that the standard identity contract implementation address has not been set.\n/// @dev This error is thrown if an operation requires the standard identity implementation (the template for user\n/// identities), but its logic contract address is zero or has not been configured in the `SMARTSystem`.\nerror IdentityImplementationNotSet();\n\n/// @notice Error indicating that the token identity contract implementation address has not been set.\n/// @dev This error is thrown if an operation requires the token identity implementation (the template for\n/// token-specific\n/// identities), but its logic contract address is zero or has not been configured in the `SMARTSystem`.\nerror TokenIdentityImplementationNotSet();\n\n/// @notice Error indicating that the token access manager contract implementation address has not been set.\n/// @dev This error is thrown if an operation requires the token access manager implementation, but its logic\n/// contract address is zero or has not been configured in the `SMARTSystem`.\nerror TokenAccessManagerImplementationNotSet();\n\n/// @notice Error indicating that the identity verification module implementation address has not been set.\n/// @dev This error is thrown if an operation requires the identity verification module, but its logic contract address\n/// is\n/// zero or has not been configured in the `SMARTSystem`.\nerror IdentityVerificationModuleNotSet();\n\n/// @notice Error indicating that the system addon implementation address has not been set.\n/// @dev This error is thrown if an operation requires the system addon implementation, but its logic contract address\n/// is zero or has not been configured in the `SMARTSystem`.\nerror AddonImplementationNotSet(bytes32 addonTypeHash);\n\n/// @notice Error indicating that an index provided for accessing an array or list is out of its valid range.\n/// @dev For example, trying to access the 5th element in an array that only has 3 elements.\n/// @param index The invalid index that was attempted to be accessed.\n/// @param length The actual length or size of the array/list.\nerror IndexOutOfBounds(uint256 index, uint256 length);\n\n/// @notice Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it.\n/// @dev Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent\n/// loss of funds or unexpected behavior.\nerror ETHTransfersNotAllowed();\n\n/// @notice Error indicating that a provided implementation address does not support a required interface.\n/// @dev When setting implementation addresses for modules (e.g., compliance, identity registry), the `SMARTSystem`\n/// checks if these implementations adhere to specific standard interfaces (like `IERC165` and the module-specific\n/// interface). If this check fails, this error is thrown.\n/// @param implAddress The address of the implementation contract that failed the interface check.\n/// @param interfaceId The bytes4 identifier of the interface that the `implAddress` was expected to support.\nerror InvalidImplementationInterface(address implAddress, bytes4 interfaceId);\n\n/// @notice Error indicating that an invalid token factory address was provided.\nerror InvalidTokenFactoryAddress();\n\n/// @notice Error indicating that the token factory implementation address has not been set.\nerror TokenFactoryImplementationNotSet(bytes32 registryTypeHash);\n\n/// @notice Error indicating that a token factory type hash has already been registered.\nerror TokenFactoryTypeAlreadyRegistered(string typeName);\n\n/// @notice Error indicating that a system addon type hash has already been registered.\nerror AddonTypeAlreadyRegistered(string typeName);\n\n/// @notice Error indicating that the token implementation address has not been set.\nerror TokenImplementationNotSet();\n\n/// @notice Error indicating that an invalid token implementation address was provided.\nerror InvalidTokenImplementationAddress();\n\n/// @notice Error indicating that an invalid addon address was provided.\nerror InvalidAddonAddress();\n\n/// @notice Error indicating that an invalid token implementation interface was provided.\nerror InvalidTokenImplementationInterface();\n\n/// @notice Error indicating that an attempt was made to initialize a component with a zero address for its\n/// implementation.\n/// @dev This typically occurs in proxy constructors if the logic contract address fetched from the system is\n/// address(0).\nerror InitializationWithZeroAddress();\n\n/// @notice Error indicating that an invalid ATKSystem implementation address was provided.\n/// @dev This error is thrown if the ATKSystem implementation address is the zero address.\nerror InvalidSystemImplementation();\n"},"contracts/system/ATKSystemProxy.sol":{"content":"// File: contracts/system/SMARTSystemProxy.sol\n// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity ^0.8.28;\n\nimport { Proxy } from \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport { IERC165 } from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport { StorageSlot } from \"@openzeppelin/contracts/utils/StorageSlot.sol\";\nimport { IATKSystem } from \"./IATKSystem.sol\";\nimport { InvalidSystemAddress, ETHTransfersNotAllowed, InitializationWithZeroAddress } from \"./ATKSystemErrors.sol\";\n\n/// @title Abstract Base Proxy for ATK System Components\n/// @author SettleMint Tokenization Services\n/// @notice Provides common functionality for proxy contracts that interact with an IATKSystem contract\n///         to determine their implementation address and handle initialization.\n/// @dev Child contracts must:\n///      1. Provide their unique storage slot for the IATKSystem address via the constructor.\n///      2. Implement `_getSpecificImplementationAddress` to fetch their logic contract address from IATKSystem\n///         and revert with a specific error if not found.\n///      3. In their own constructor, fetch the implementation address, prepare initialization data,\n///         and then call `_performInitializationDelegatecall`.\nabstract contract ATKSystemProxy is Proxy {\n    /// @dev Fixed storage slot for the IATKSystem address.\n    /// Value: keccak256(\"org.smart.contracts.proxy.ATKSystemProxy.systemAddress\")\n    bytes32 private constant _ATK_SYSTEM_ADDRESS_SLOT =\n        0x4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d3;\n\n    /// @notice Child contracts MUST implement this function.\n    /// @dev It should retrieve the specific implementation address for the child proxy from the provided `IATKSystem`\n    /// instance.\n    /// If the implementation address from the system is `address(0)`, this function MUST revert with the\n    /// child proxy's specific \"ImplementationNotSet\" error (e.g., `TrustedIssuersRegistryImplementationNotSet`).\n    /// @param system The `IATKSystem` instance to query.\n    /// @return implementationAddress The address of the child's logic/implementation contract.\n    function _getSpecificImplementationAddress(IATKSystem system)\n        internal\n        view\n        virtual\n        returns (address implementationAddress);\n\n    /// @notice Constructs the ATKSystemProxy.\n    /// @dev Validates and stores the `systemAddress_`.\n    /// @param systemAddress_ The address of the IATKSystem contract.\n    constructor(address systemAddress_) {\n        if (systemAddress_ == address(0) || !IERC165(systemAddress_).supportsInterface(type(IATKSystem).interfaceId)) {\n            revert InvalidSystemAddress();\n        }\n        // Store systemAddress_ at the fixed slot\n        StorageSlot.getAddressSlot(_ATK_SYSTEM_ADDRESS_SLOT).value = systemAddress_;\n    }\n\n    /// @dev Internal function to retrieve the `IATKSystem` contract instance from the stored address.\n    /// @return An `IATKSystem` instance pointing to the stored system contract address.\n    function _getSystem() internal view returns (IATKSystem) {\n        // Retrieve system address from the fixed slot\n        return IATKSystem(StorageSlot.getAddressSlot(_ATK_SYSTEM_ADDRESS_SLOT).value);\n    }\n\n    /// @dev Performs the delegatecall to initialize the implementation contract.\n    /// @notice Child proxy constructors should call this helper function after they have:\n    ///         1. Fetched their specific implementation address from `IATKSystem`.\n    ///         2. Verified this address is not `address(0)` (and reverted with their specific error if it is).\n    ///         3. Prepared the `bytes memory initializeData` specific to their implementation's `initialize` function.\n    /// @param implementationAddress The non-zero address of the logic contract to `delegatecall` to.\n    /// @param initializeData The ABI-encoded data for the `initialize` function call.\n    function _performInitializationDelegatecall(address implementationAddress, bytes memory initializeData) internal {\n        if (implementationAddress == address(0)) {\n            revert InitializationWithZeroAddress();\n        }\n        (bool success, bytes memory returnData) = implementationAddress.delegatecall(initializeData);\n        if (!success) {\n            assembly {\n                revert(add(returnData, 0x20), mload(returnData))\n            }\n        }\n    }\n\n    /// @dev Overrides `Proxy._implementation()`. This is used by OpenZeppelin's proxy mechanisms (e.g., fallback,\n    /// upgrades).\n    /// It retrieves the `IATKSystem` instance and then calls the abstract `_getSpecificImplementationAddress`\n    /// which the child contract must implement. The child's implementation is responsible for returning a valid\n    /// address or reverting with its specific \"ImplementationNotSet\" error.\n    /// @return The address of the current logic/implementation contract.\n    function _implementation() internal view override returns (address) {\n        IATKSystem system_ = _getSystem();\n        return _getSpecificImplementationAddress(system_);\n    }\n\n    /// @notice Fallback function to reject any direct Ether transfers to this proxy contract.\n    receive() external payable virtual {\n        revert ETHTransfersNotAllowed();\n    }\n}\n"},"contracts/system/ATKSystemRoles.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity 0.8.28;\n\n/// @title ATKSystemRoles\n/// @notice Library defining role constants for the ATK protocol's access control system\n/// @dev These roles are used with OpenZeppelin's AccessControl contract\nlibrary ATKSystemRoles {\n    /// @notice The default admin role that can grant and revoke other roles\n    /// @dev Matches the default admin role in OpenZeppelin's AccessControl\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /// @notice Role for managing registration operations\n    /// @dev Assigned to entities responsible for user registration\n    bytes32 public constant REGISTRAR_ROLE = keccak256(\"REGISTRAR_ROLE\");\n\n    /// @notice Role for managing claims\n    /// @dev Assigned to entities responsible for handling token claims\n    bytes32 public constant CLAIM_MANAGER_ROLE = keccak256(\"CLAIM_MANAGER_ROLE\");\n\n    /// @notice Role for managing identity issuers\n    /// @dev Assigned to entities responsible for handling identity issuers\n    bytes32 public constant IDENTITY_ISSUER_ROLE = keccak256(\"IDENTITY_ISSUER_ROLE\");\n\n    /// @notice Role for token identity issuers\n    /// @dev Assigned to entities responsible for issuing new token identities\n    bytes32 public constant TOKEN_IDENTITY_ISSUER_ROLE = keccak256(\"TOKEN_IDENTITY_ISSUER_ROLE\");\n\n    /// @notice Role for managing token identity issuers\n    /// @dev Assigned to entities responsible for managing token identity issuers\n    bytes32 public constant TOKEN_IDENTITY_ISSUER_ADMIN_ROLE = keccak256(\"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE\");\n\n    /// @notice Role for token deployers\n    /// @dev Assigned to entities responsible for deploying new tokens\n    bytes32 public constant DEPLOYER_ROLE = keccak256(\"DEPLOYER_ROLE\");\n\n    /// @notice Role for managing implementation addresses\n    /// @dev Assigned to entities responsible for managing implementation addresses\n    bytes32 public constant IMPLEMENTATION_MANAGER_ROLE = keccak256(\"IMPLEMENTATION_MANAGER_ROLE\");\n\n    /// @notice A unique identifier (hash) for the role that grants permission to modify the data stored in this\n    /// contract.\n    /// @dev This role is typically granted to `ATKIdentityRegistry` contracts that are \"bound\" to this storage.\n    /// Only addresses holding this role can call functions like `addIdentityToStorage`, `removeIdentityFromStorage`,\n    /// `modifyStoredIdentity`, and `modifyStoredInvestorCountry`.\n    /// The value is calculated as `keccak256(\"STORAGE_MODIFIER_ROLE\")`.\n    bytes32 public constant STORAGE_MODIFIER_ROLE = keccak256(\"STORAGE_MODIFIER_ROLE\");\n\n    /// @notice A unique identifier (hash) for the role that grants permission to manage the list of bound identity\n    /// registry contracts.\n    /// @dev Addresses holding this role can call `bindIdentityRegistry` to authorize a new registry contract and\n    /// `unbindIdentityRegistry` to revoke authorization from an existing one.\n    /// This role is crucial for controlling which external contracts can write to this storage.\n    /// It is typically assigned to a high-level system management contract (e.g., `ATKSystem` or an identity factory\n    /// contract).\n    /// The value is calculated as `keccak256(\"MANAGE_REGISTRIES_ROLE\")`.\n    bytes32 public constant MANAGE_REGISTRIES_ROLE = keccak256(\"MANAGE_REGISTRIES_ROLE\");\n\n    // --- Access Control Roles ---\n    /// @notice Role identifier for addresses that can manage the compliance bypass list\n    /// @dev This role allows adding/removing addresses from the bypass list that can bypass compliance checks\n    bytes32 public constant BYPASS_LIST_MANAGER_ROLE = keccak256(\"BYPASS_LIST_MANAGER_ROLE\");\n}\n"},"contracts/system/compliance/IATKComplianceBypassList.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity ^0.8.28;\n\n/// @title ATK Compliance Bypass List Interface\n/// @author SettleMint Tokenization Services\n/// @notice Interface for managing the compliance bypass list functionality.\n/// @dev This interface defines the standard functions for managing addresses that bypass compliance checks.\ninterface IATKComplianceBypassList {\n    // --- Events ---\n    /// @notice Emitted when an address is added to the compliance bypass list.\n    /// @param account The address that was added to the bypass list.\n    /// @param manager The address that performed the addition.\n    event AddressAddedToBypassList(address indexed account, address indexed manager);\n\n    /// @notice Emitted when an address is removed from the compliance bypass list.\n    /// @param account The address that was removed from the bypass list.\n    /// @param manager The address that performed the removal.\n    event AddressRemovedFromBypassList(address indexed account, address indexed manager);\n\n    // --- Custom Errors ---\n    /// @notice Error thrown when trying to remove an address that is not on the bypass list.\n    error AddressNotOnBypassList(address account);\n\n    /// @notice Error thrown when trying to add an address that is already on the bypass list.\n    error AddressAlreadyOnBypassList(address account);\n\n    // --- Functions ---\n    /// @notice Adds an address to the compliance bypass list.\n    /// @dev Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\n    /// Addresses on the bypass list can bypass compliance checks in canTransfer function.\n    /// @param account The address to add to the bypass list.\n    function addToBypassList(address account) external;\n\n    /// @notice Removes an address from the compliance bypass list.\n    /// @dev Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\n    /// @param account The address to remove from the bypass list.\n    function removeFromBypassList(address account) external;\n\n    /// @notice Adds multiple addresses to the compliance bypass list in a single transaction.\n    /// @dev Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\n    /// This is a gas-efficient way to add multiple addresses to the bypass list at once.\n    /// @param accounts Array of addresses to add to the bypass list.\n    function addMultipleToBypassList(address[] calldata accounts) external;\n\n    /// @notice Removes multiple addresses from the compliance bypass list in a single transaction.\n    /// @dev Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\n    /// @param accounts Array of addresses to remove from the bypass list.\n    function removeMultipleFromBypassList(address[] calldata accounts) external;\n\n    /// @notice Checks if an address is on the bypass list.\n    /// @param account The address to check.\n    /// @return True if the address is on the bypass list, false otherwise.\n    function isBypassed(address account) external view returns (bool);\n}\n"},"contracts/system/IATKSystem.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity ^0.8.28;\n\nimport { IERC165 } from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/// @title IATKSystem Interface\n/// @author SettleMint Tokenization Services\n/// @notice This interface outlines the essential functions for interacting with the ATK Protocol's central system\n/// contract.\n/// @dev The ATK System contract serves as the main hub and discovery point for various modules and features within\n/// the\n/// ATK Protocol. It allows other contracts and external users to find the addresses of crucial components like\n/// compliance modules, identity registries, and their corresponding proxy contracts. These proxies are important\n/// because they enable these components to be upgraded in the future without altering the addresses that other parts\n/// of the system use to interact with them, ensuring stability and maintainability.\ninterface IATKSystem is IERC165 {\n    // --- Events ---\n    // Events are signals emitted by the contract that can be listened to by external applications or other contracts.\n    // They are a way to log important state changes or actions.\n\n    /// @notice Emitted when the implementation (logic contract) for the compliance module is updated.\n    /// @param sender The address that called the `updateComplianceImplementation` function.\n    /// @param newImplementation The address of the new compliance module implementation contract.\n    event ComplianceImplementationUpdated(address indexed sender, address indexed newImplementation);\n    /// @notice Emitted when the implementation (logic contract) for the identity registry module is updated.\n    /// @param sender The address that called the `updateIdentityRegistryImplementation` function.\n    /// @param newImplementation The address of the new identity registry module implementation contract.\n    event IdentityRegistryImplementationUpdated(address indexed sender, address indexed newImplementation);\n    /// @notice Emitted when the implementation (logic contract) for the identity registry storage module is updated.\n    /// @param sender The address that called the `updateIdentityRegistryStorageImplementation` function.\n    /// @param newImplementation The address of the new identity registry storage module implementation contract.\n    event IdentityRegistryStorageImplementationUpdated(address indexed sender, address indexed newImplementation);\n    /// @notice Emitted when the implementation (logic contract) for the trusted issuers registry module is updated.\n    /// @param sender The address that called the `updateTrustedIssuersRegistryImplementation` function.\n    /// @param newImplementation The address of the new trusted issuers registry module implementation contract.\n    event TrustedIssuersRegistryImplementationUpdated(address indexed sender, address indexed newImplementation);\n    /// @notice Emitted when the implementation (logic contract) for the topic scheme registry module is updated.\n    /// @param sender The address that called the `updateTopicSchemeRegistryImplementation` function.\n    /// @param newImplementation The address of the new topic scheme registry module implementation contract.\n    event TopicSchemeRegistryImplementationUpdated(address indexed sender, address indexed newImplementation);\n    /// @notice Emitted when the implementation (logic contract) for the identity factory module is updated.\n    /// @param sender The address that called the `updateIdentityFactoryImplementation` function.\n    /// @param newImplementation The address of the new identity factory module implementation contract.\n    event IdentityFactoryImplementationUpdated(address indexed sender, address indexed newImplementation);\n    /// @notice Emitted when the implementation (logic contract) for the standard identity module is updated.\n    /// @dev Standard identity contracts are typically used to represent users or general entities.\n    /// @param sender The address that called the `updateIdentityImplementation` function.\n    /// @param newImplementation The address of the new standard identity module implementation contract.\n    event IdentityImplementationUpdated(address indexed sender, address indexed newImplementation);\n    /// @notice Emitted when the implementation (logic contract) for the token identity module is updated.\n    /// @dev Token identity contracts might be specialized identities associated with specific tokens.\n    /// @param sender The address that called the `updateTokenIdentityImplementation` function.\n    /// @param newImplementation The address of the new token identity module implementation contract.\n    event TokenIdentityImplementationUpdated(address indexed sender, address indexed newImplementation);\n    /// @notice Emitted when the implementation (logic contract) for the token access manager module is updated.\n    /// @param sender The address that called the `updateTokenAccessManagerImplementation` function.\n    /// @param newImplementation The address of the new token access manager module implementation contract.\n    event TokenAccessManagerImplementationUpdated(address indexed sender, address indexed newImplementation);\n\n    /// @notice Emitted when the `bootstrap` function has been successfully executed, creating and linking proxy\n    /// contracts\n    /// for all core modules of the ATKSystem.\n    /// @param sender The address that called the `bootstrap` function.\n    /// @param complianceProxy The address of the deployed ATKComplianceProxy contract.\n    /// @param identityRegistryProxy The address of the deployed ATKIdentityRegistryProxy contract.\n    /// @param identityRegistryStorageProxy The address of the deployed ATKIdentityRegistryStorageProxy contract.\n    /// @param trustedIssuersRegistryProxy The address of the deployed ATKTrustedIssuersRegistryProxy contract.\n    /// @param topicSchemeRegistryProxy The address of the deployed ATKTopicSchemeRegistryProxy contract.\n    /// @param identityFactoryProxy The address of the deployed ATKIdentityFactoryProxy contract.\n    /// @param identityVerificationModule The address of the deployed IdentityVerificationModule contract.\n    event Bootstrapped(\n        address indexed sender,\n        address indexed complianceProxy,\n        address indexed identityRegistryProxy,\n        address identityRegistryStorageProxy,\n        address trustedIssuersRegistryProxy,\n        address topicSchemeRegistryProxy,\n        address identityFactoryProxy,\n        address identityVerificationModule\n    );\n\n    /// @notice Emitted when a ATKTokenFactory is registered.\n    /// @param sender The address that registered the token factory.\n    /// @param name The human-readable name of the token factory.\n    /// @param typeId The type identifier of the token factory.\n    /// @param proxyAddress The address of the deployed token factory proxy.\n    /// @param implementationAddress The address of the deployed token factory implementation.\n    /// @param timestamp The timestamp of the token factory creation.\n    event TokenFactoryCreated(\n        address indexed sender,\n        string name,\n        bytes32 typeId,\n        address proxyAddress,\n        address implementationAddress,\n        uint256 timestamp\n    );\n\n    /// @notice Emitted when a system addon is created.\n    /// @param sender The address that created the system addon.\n    /// @param name The human-readable name of the system addon.\n    /// @param typeId The type identifier of the system addon.\n    /// @param proxyAddress The address of the deployed system addon proxy.\n    /// @param implementation The address of the deployed system addon implementation.\n    /// @param initializationData The encoded function call to initialize the system addon.\n    /// @param timestamp The timestamp of the system addon creation.\n    event SystemAddonCreated(\n        address indexed sender,\n        string name,\n        bytes32 typeId,\n        address proxyAddress,\n        address implementation,\n        bytes initializationData,\n        uint256 timestamp\n    );\n\n    /// @notice Initializes and sets up the entire ATK Protocol system.\n    /// @dev This function is responsible for the initial deployment and configuration of the ATK Protocol.\n    /// This involves deploying necessary smart contracts, setting initial parameters, and defining the relationships\n    /// and connections between different components of the system.\n    /// It is critically important that this function is called only ONCE during the very first deployment of the\n    /// protocol.\n    /// Attempting to call it more than once could result in severe errors, misconfigurations, or unpredictable behavior\n    /// in the protocol's operation.\n    function bootstrap() external;\n\n    /// @notice Creates a new token factory implementation and proxy.\n    /// @param _name The human-readable name of the token factory.\n    /// @param _factoryImplementation The address of the token factory implementation contract.\n    /// @param _tokenImplementation The address of the token implementation contract.\n    function createTokenFactory(\n        string calldata _name,\n        address _factoryImplementation,\n        address _tokenImplementation\n    )\n        external\n        returns (address);\n\n    /// @notice Deploys and registers a new system addon with a proxy and initializer.\n    /// @param name A human-readable identifier (e.g., \"Swap\", \"YieldContract\").\n    /// @param implementation The address of the logic contract to use for the proxy.\n    /// @param initializationData Encoded function call to initialize the proxy (e.g., abi.encodeWithSelector(...)).\n    /// @return proxyAddress The address of the newly deployed proxy.\n    function createSystemAddon(\n        string calldata name,\n        address implementation,\n        bytes calldata initializationData\n    )\n        external\n        returns (address proxyAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the compliance module's logic.\n    /// @dev Compliance modules are responsible for enforcing rules and restrictions on token transfers, account\n    /// interactions,\n    /// or other operations within the ATK Protocol. For example, they might check if a transfer is allowed based on\n    /// regulatory requirements.\n    /// This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n    /// for these compliance checks.\n    /// It's important to note that this address can change if the compliance logic is updated or upgraded to a new\n    /// version.\n    /// @return complianceImplementationAddress The blockchain address of the smart contract containing the compliance\n    /// logic.\n    function complianceImplementation() external view returns (address complianceImplementationAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the identity registry module's logic.\n    /// @dev Identity registries are a core component for managing information about users, organizations, or any entity\n    /// interacting with ATK tokens. This can include details like Know Your Customer (KYC) / Anti-Money Laundering\n    /// (AML)\n    /// status, investor qualifications, country of residence, or other relevant identity attributes.\n    /// This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n    /// for the identity registry.\n    /// Similar to other modules, this address can change if the identity registry's logic is upgraded.\n    /// @return identityRegistryImplementationAddress The blockchain address of the smart contract containing the\n    /// identity\n    /// registry logic.\n    function identityRegistryImplementation() external view returns (address identityRegistryImplementationAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the identity registry storage module's logic.\n    /// @dev Identity registry storage modules are dedicated to securely and efficiently storing the data associated\n    /// with\n    /// the identities managed by the identity registry. This separation of logic and storage can enhance security and\n    /// upgradeability.\n    /// This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n    /// for managing this identity data storage.\n    /// This address may change if the storage management logic is upgraded or if data is migrated to a new storage\n    /// system.\n    /// @return identityRegistryStorageImplementationAddress The blockchain address of the smart contract containing the\n    /// identity registry storage logic.\n    function identityRegistryStorageImplementation()\n        external\n        view\n        returns (address identityRegistryStorageImplementationAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the identity factory module's logic.\n    /// @dev Identity factories are responsible for the creation of new identity contracts or records within the\n    /// ATK Protocol. They provide a standardized way to onboard new users or entities and associate them with\n    /// an on-chain identity.\n    /// This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n    /// for this identity creation process.\n    /// This address can change if the identity factory's logic is upgraded.\n    /// @return identityFactoryImplementationAddress The blockchain address of the smart contract containing the\n    /// identity\n    /// factory logic.\n    function identityFactoryImplementation() external view returns (address identityFactoryImplementationAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the trusted issuers registry module's logic.\n    /// @dev Trusted issuers registries play a crucial role in decentralized identity systems. They maintain a list of\n    /// entities (known as \"issuers,\" such as KYC providers, accreditation bodies, etc.) that are authorized and trusted\n    /// to make verifiable claims or attestations about identities (e.g., \"User X is KYC verified,\" \"Entity Y is an\n    /// accredited investor\").\n    /// This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n    /// for managing this list of trusted issuers.\n    /// This address can change if the trusted issuers registry's logic is upgraded.\n    /// @return trustedIssuersRegistryImplementationAddress The blockchain address of the smart contract containing the\n    /// trusted issuers registry logic.\n    function trustedIssuersRegistryImplementation()\n        external\n        view\n        returns (address trustedIssuersRegistryImplementationAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the topic scheme registry module's logic.\n    /// @dev Topic scheme registries manage the registration and lifecycle of topic schemes used for claim data\n    /// structures.\n    /// They store mapping between topic IDs and their corresponding signatures for encoding/decoding claim data.\n    /// This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n    /// for managing topic schemes.\n    /// This address can change if the topic scheme registry's logic is upgraded.\n    /// @return topicSchemeRegistryImplementationAddress The blockchain address of the smart contract containing the\n    /// topic scheme registry logic.\n    function topicSchemeRegistryImplementation()\n        external\n        view\n        returns (address topicSchemeRegistryImplementationAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the standard identity contract's logic.\n    /// @dev Standard identity contracts are the actual on-chain representations of individual users, organizations, or\n    /// entities within the ATK Protocol. These contracts typically hold claims and attributes related to an identity.\n    /// This function returns the address of the base implementation (template) contract that new standard identity\n    /// contracts will be created from (often via a proxy pattern).\n    /// This address can change if the underlying logic for standard identity contracts is upgraded.\n    /// @return identityImplementationAddress The blockchain address of the smart contract containing the standard\n    /// identity logic.\n    function identityImplementation() external view returns (address identityImplementationAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the token identity contract's logic.\n    /// @dev Token identity contracts are a specialized type of identity contract that might be specifically linked to\n    /// certain tokens, tokenized assets, or have features tailored for token interactions.\n    /// This function returns the address of the base implementation (template) contract that new token identity\n    /// contracts will be created from.\n    /// This address can change if the underlying logic for token identity contracts is upgraded.\n    /// @return tokenIdentityImplementationAddress The blockchain address of the smart contract containing the token\n    /// identity logic.\n    function tokenIdentityImplementation() external view returns (address tokenIdentityImplementationAddress);\n\n    /// @notice Retrieves the current, active smart contract address of the token access manager contract's logic.\n    /// @dev Token access managers are responsible for managing access control for tokens.\n    /// This function returns the address of the base implementation (template) contract that new token access\n    /// managers will be created from.\n    /// This address can change if the underlying logic for token access managers is upgraded.\n    /// @return tokenAccessManagerImplementationAddress The blockchain address of the smart contract containing the\n    function tokenAccessManagerImplementation()\n        external\n        view\n        returns (address tokenAccessManagerImplementationAddress);\n\n    /// @notice Returns the address of the current token registry implementation.\n    /// @param factoryTypeHash The hash of the factory type.\n    /// @return The address of the token factory implementation contract.\n    function tokenFactoryImplementation(bytes32 factoryTypeHash) external view returns (address);\n\n    /// @notice Returns the address of the current system addon implementation.\n    /// @param addonTypeHash The hash of the addon type.\n    /// @return The address of the system addon implementation contract.\n    function addonImplementation(bytes32 addonTypeHash) external view returns (address);\n\n    /// @notice Retrieves the smart contract address of the proxy for the compliance module.\n    /// @dev A proxy contract is an intermediary contract that delegates all function calls it receives to another\n    /// contract, known as the implementation contract (which contains the actual logic).\n    /// The primary benefit of using a proxy is that the underlying logic (implementation) can be upgraded\n    /// without changing the address that other contracts or users interact with. This provides flexibility and\n    /// allows for bug fixes or feature additions without disrupting the ecosystem.\n    /// This function returns the stable, unchanging address of the compliance module's proxy contract.\n    /// All interactions with the compliance module should go through this proxy address.\n    /// @return complianceProxyAddress The blockchain address of the compliance module's proxy contract.\n    function complianceProxy() external view returns (address complianceProxyAddress);\n\n    /// @notice Retrieves the smart contract address of the proxy for the identity registry module.\n    /// @dev Similar to the compliance proxy, this function returns the stable, unchanging address of the identity\n    /// registry's proxy contract.\n    /// To interact with the identity registry (e.g., to query identity information or register a new identity,\n    /// depending on its features), you should use this proxy address. It will automatically forward your requests\n    /// to the current logic implementation contract.\n    /// @return identityRegistryProxyAddress The blockchain address of the identity registry module's proxy contract.\n    function identityRegistryProxy() external view returns (address identityRegistryProxyAddress);\n\n    /// @notice Retrieves the smart contract address of the proxy for the identity registry storage module.\n    /// @dev This function returns the stable, unchanging address of the identity registry storage's proxy contract.\n    /// All interactions related to storing or retrieving identity data should go through this proxy address.\n    /// It ensures that calls are directed to the current logic implementation for identity data management.\n    /// @return identityRegistryStorageProxyAddress The blockchain address of the identity registry storage module's\n    /// proxy contract.\n    function identityRegistryStorageProxy() external view returns (address identityRegistryStorageProxyAddress);\n\n    /// @notice Retrieves the smart contract address of the proxy for the trusted issuers registry module.\n    /// @dev This function returns the stable, unchanging address of the trusted issuers registry's proxy contract.\n    /// To interact with the trusted issuers registry (e.g., to check if an issuer is trusted or to add/remove\n    /// issuers, depending on its features), you should use this proxy address. It will forward calls to the\n    /// current logic implementation.\n    /// @return trustedIssuersRegistryProxyAddress The blockchain address of the trusted issuers registry module's\n    /// proxy.\n    function trustedIssuersRegistryProxy() external view returns (address trustedIssuersRegistryProxyAddress);\n\n    /// @notice Retrieves the smart contract address of the proxy for the identity factory module.\n    /// @dev This function returns the stable, unchanging address of the identity factory's proxy contract.\n    /// To create new identities within the ATK Protocol, you should interact with this proxy address.\n    /// It will delegate the identity creation requests to the current active logic implementation of the\n    /// identity factory.\n    /// @return identityFactoryProxyAddress The blockchain address of the identity factory module's proxy contract.\n    function identityFactoryProxy() external view returns (address identityFactoryProxyAddress);\n\n    /// @notice Returns the address of the token factory proxy.\n    /// @param factoryTypeHash The hash of the factory type.\n    /// @return The address of the token factory proxy contract.\n    function tokenFactoryProxy(bytes32 factoryTypeHash) external view returns (address);\n\n    /// @notice Returns the address of the system addon proxy.\n    /// @param addonTypeHash The hash of the addon type.\n    /// @return The address of the system addon proxy contract.\n    function addonProxy(bytes32 addonTypeHash) external view returns (address);\n\n    /// @notice Retrieves the smart contract address of the proxy for the topic scheme registry module.\n    /// @dev This function returns the stable, unchanging address of the topic scheme registry's proxy contract.\n    /// To interact with the topic scheme registry (e.g., to register topic schemes or retrieve topic signatures),\n    /// you should use this proxy address. It will forward calls to the current logic implementation.\n    /// @return topicSchemeRegistryProxyAddress The blockchain address of the topic scheme registry module's proxy.\n    function topicSchemeRegistryProxy() external view returns (address topicSchemeRegistryProxyAddress);\n\n    /// @notice Retrieves the smart contract address of the proxy for the identity verification module.\n    /// @dev This function returns the stable, unchanging address of the identity verification module's proxy contract.\n    /// To interact with the identity verification module (e.g., to verify an identity or check verification status),\n    /// you should use this proxy address. It will forward calls to the current logic implementation.\n    /// @return identityVerificationModuleAddress The blockchain address of the identity verification module's proxy.\n    function identityVerificationModule() external view returns (address identityVerificationModuleAddress);\n}\n"},"contracts/system/IWithTypeIdentifier.sol":{"content":"// SPDX-License-Identifier: FSL-1.1-MIT\npragma solidity ^0.8.28;\n\n/// @title IWithTypeIdentifier\n/// @notice Interface for contracts that have a unique type identifier.\n/// @dev This interface is used to identify the type of a contract.\n///      It is used to identify the type of a contract.\n///      It is used to identify the type of a contract.\ninterface IWithTypeIdentifier {\n    /// @notice Returns a unique identifier for the type of this contract.\n    function typeId() external pure returns (bytes32);\n}\n"}},"settings":{"evmVersion":"cancun","viaIR":true,"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[823],"ERC165Upgradeable":[863],"IAccessControl":[1242],"Initializable":[777]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1243,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":824,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":864,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":778,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":823,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":863,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,863,3817,1242,823,777],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[862],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1242_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1242_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1242","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":862,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1209],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1217],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1225],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1233],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1241],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7978:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8017:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7988:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7988:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7988:20:0"},"referencedDeclaration":35,"src":"7988:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8021:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7988:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8069:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8075:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8061:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8061:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8239:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8260:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8253:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8057:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8085:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8099:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8101:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8099:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8108:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8099:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8114:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8099:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8122:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8099:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8133:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8099:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8099:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8169:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8175:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"8184:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"8157:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8157:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8152:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8218:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8211:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7903:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7923:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7915:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7915:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7937:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7929:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7929:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7914:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7972:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7972:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7971:6:0"},"scope":362,"src":"7894:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6194:0","usedErrors":[526,529,1169,1172],"usedEvents":[534,1181,1190,1199]}],"src":"108:8177:0"},"id":0},"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[823],"ERC2771ContextUpgradeable":[509],"Initializable":[777]},"id":510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":510,"sourceUnit":824,"src":"135:67:1","symbolAliases":[{"foreign":{"id":365,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"143:18:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":510,"sourceUnit":778,"src":"203:63:1","symbolAliases":[{"foreign":{"id":367,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"211:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":370,"name":"Initializable","nameLocations":["1102:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1102:13:1"},"id":371,"nodeType":"InheritanceSpecifier","src":"1102:13:1"},{"baseName":{"id":372,"name":"ContextUpgradeable","nameLocations":["1117:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":823,"src":"1117:18:1"},"id":373,"nodeType":"InheritanceSpecifier","src":"1117:18:1"}],"canonicalName":"ERC2771ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"268:786:1","text":" @dev Context variant with ERC-2771 support.\n WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n function only accessible if `msg.data.length == 0`.\n WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n recovery."},"fullyImplemented":true,"id":509,"linearizedBaseContracts":[509,823,777],"name":"ERC2771ContextUpgradeable","nameLocation":"1073:25:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"1142:61:1","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":376,"mutability":"immutable","name":"_trustedForwarder","nameLocation":"1234:17:1","nodeType":"VariableDeclaration","scope":509,"src":"1208:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":386,"nodeType":"Block","src":"1613:54:1","statements":[{"expression":{"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":382,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1623:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":383,"name":"trustedForwarder_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"1643:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1623:37:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":385,"nodeType":"ExpressionStatement","src":"1623:37:1"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1521:48:1","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":387,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"trustedForwarder_","nameLocation":"1594:17:1","nodeType":"VariableDeclaration","scope":387,"src":"1586:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1585:27:1"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"1613:0:1"},"scope":509,"src":"1574:93:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":395,"nodeType":"Block","src":"1813:41:1","statements":[{"expression":{"id":393,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1830:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":392,"id":394,"nodeType":"Return","src":"1823:24:1"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"1673:69:1","text":" @dev Returns the address of the trusted forwarder."},"functionSelector":"7da0a877","id":396,"implemented":true,"kind":"function","modifiers":[],"name":"trustedForwarder","nameLocation":"1756:16:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"1772:2:1"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"1804:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"1804:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1803:9:1"},"scope":509,"src":"1747:107:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"2037:55:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":404,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2054:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":405,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2067:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2054:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":403,"id":408,"nodeType":"Return","src":"2047:38:1"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"1860:90:1","text":" @dev Indicates whether any particular address is the trusted forwarder."},"functionSelector":"572b6c05","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"1964:18:1","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"forwarder","nameLocation":"1991:9:1","nodeType":"VariableDeclaration","scope":410,"src":"1983:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1983:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1982:19:1"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"2031:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"2031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2030:6:1"},"scope":509,"src":"1955:137:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[805],"body":{"id":456,"nodeType":"Block","src":"2400:358:1","statements":[{"assignments":[418],"declarations":[{"constant":false,"id":418,"mutability":"mutable","name":"calldataLength","nameLocation":"2418:14:1","nodeType":"VariableDeclaration","scope":456,"src":"2410:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2410:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":422,"initialValue":{"expression":{"expression":{"id":419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2435:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2439:4:1","memberName":"data","nodeType":"MemberAccess","src":"2435:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2444:6:1","memberName":"length","nodeType":"MemberAccess","src":"2435:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2410:40:1"},{"assignments":[424],"declarations":[{"constant":false,"id":424,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"2468:19:1","nodeType":"VariableDeclaration","scope":456,"src":"2460:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":427,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":425,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[508],"referencedDeclaration":508,"src":"2490:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2490:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2460:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2545:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2549:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2545:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":428,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"2526:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":432,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2560:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":433,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2578:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2560:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2526:71:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":454,"nodeType":"Block","src":"2702:50:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":450,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2723:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771ContextUpgradeable_$509_$","typeString":"type(contract super ERC2771ContextUpgradeable)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2729:10:1","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":805,"src":"2723:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":416,"id":453,"nodeType":"Return","src":"2716:25:1"}]},"id":455,"nodeType":"IfStatement","src":"2522:230:1","trueBody":{"id":449,"nodeType":"Block","src":"2599:97:1","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2636:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2640:4:1","memberName":"data","nodeType":"MemberAccess","src":"2636:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2636:47:1","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2645:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":443,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2662:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2645:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2628:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":438,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2628:7:1","typeDescriptions":{}}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2628:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2620:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"2620:7:1","typeDescriptions":{}}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":416,"id":448,"nodeType":"Return","src":"2613:72:1"}]}}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"2098:226:1","text":" @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"2338:10:1","nodeType":"FunctionDefinition","overrides":{"id":413,"nodeType":"OverrideSpecifier","overrides":[],"src":"2373:8:1"},"parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"2348:2:1"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"2391:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2390:9:1"},"scope":509,"src":"2329:429:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[814],"body":{"id":497,"nodeType":"Block","src":"3067:338:1","statements":[{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"calldataLength","nameLocation":"3085:14:1","nodeType":"VariableDeclaration","scope":497,"src":"3077:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3077:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":469,"initialValue":{"expression":{"expression":{"id":466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3102:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3106:4:1","memberName":"data","nodeType":"MemberAccess","src":"3102:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3111:6:1","memberName":"length","nodeType":"MemberAccess","src":"3102:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3077:40:1"},{"assignments":[471],"declarations":[{"constant":false,"id":471,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"3135:19:1","nodeType":"VariableDeclaration","scope":497,"src":"3127:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3127:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":474,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":472,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[508],"referencedDeclaration":508,"src":"3157:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3157:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3127:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3212:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3216:6:1","memberName":"sender","nodeType":"MemberAccess","src":"3212:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":475,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3193:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3193:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3227:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":480,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3245:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3227:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3193:71:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":495,"nodeType":"Block","src":"3351:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":491,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3372:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771ContextUpgradeable_$509_$","typeString":"type(contract super ERC2771ContextUpgradeable)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3378:8:1","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":814,"src":"3372:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3372:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":463,"id":494,"nodeType":"Return","src":"3365:23:1"}]},"id":496,"nodeType":"IfStatement","src":"3189:210:1","trueBody":{"id":490,"nodeType":"Block","src":"3266:79:1","statements":[{"expression":{"baseExpression":{"expression":{"id":483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3287:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3291:4:1","memberName":"data","nodeType":"MemberAccess","src":"3287:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3297:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":486,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3314:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3297:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3287:47:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":463,"id":489,"nodeType":"Return","src":"3280:54:1"}]}}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"2764:222:1","text":" @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"3000:8:1","nodeType":"FunctionDefinition","overrides":{"id":460,"nodeType":"OverrideSpecifier","overrides":[],"src":"3033:8:1"},"parameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"3008:2:1"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"3051:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"3051:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3050:16:1"},"scope":509,"src":"2991:414:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[822],"body":{"id":507,"nodeType":"Block","src":"3589:26:1","statements":[{"expression":{"hexValue":"3230","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3606:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"functionReturnParameters":504,"id":506,"nodeType":"Return","src":"3599:9:1"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"3411:92:1","text":" @dev ERC-2771 specifies the context as being a single address (20 bytes)."},"id":508,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3517:20:1","nodeType":"FunctionDefinition","overrides":{"id":501,"nodeType":"OverrideSpecifier","overrides":[],"src":"3562:8:1"},"parameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3537:2:1"},"returnParameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"3580:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3579:9:1"},"scope":509,"src":"3508:107:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":510,"src":"1055:2562:1","usedErrors":[526,529],"usedEvents":[534]}],"src":"109:3509:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":511,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"139:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":777,"linearizedBaseContracts":[777],"name":"Initializable","nameLocation":"2367:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2387:293:2","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":520,"members":[{"constant":false,"id":516,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:2","nodeType":"VariableDeclaration","scope":520,"src":"2813:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":515,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:2","nodeType":"VariableDeclaration","scope":520,"src":"2950:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":518,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:2","nodeType":"StructDefinition","scope":777,"src":"2685:290:2","visibility":"public"},{"constant":true,"id":523,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:2","nodeType":"VariableDeclaration","scope":777,"src":"3098:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:2","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"3220:60:2","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":526,"name":"InvalidInitialization","nameLocation":"3291:21:2","nodeType":"ErrorDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"3312:2:2"},"src":"3285:30:2"},{"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"3321:57:2","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":529,"name":"NotInitializing","nameLocation":"3389:15:2","nodeType":"ErrorDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"3404:2:2"},"src":"3383:24:2"},{"anonymous":false,"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"3413:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":534,"name":"Initialized","nameLocation":"3514:11:2","nodeType":"EventDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:2","nodeType":"VariableDeclaration","scope":534,"src":"3526:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":531,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:2"},"src":"3508:34:2"},{"body":{"id":616,"nodeType":"Block","src":"4092:1079:2","statements":[{"assignments":[539],"declarations":[{"constant":false,"id":539,"mutability":"mutable","name":"$","nameLocation":"4187:1:2","nodeType":"VariableDeclaration","scope":616,"src":"4158:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":538,"nodeType":"UserDefinedTypeName","pathNode":{"id":537,"name":"InitializableStorage","nameLocations":["4158:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"4158:20:2"},"referencedDeclaration":520,"src":"4158:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":542,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":540,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"4191:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$520_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:2"},{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:2","nodeType":"VariableDeclaration","scope":616,"src":"4279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":543,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":548,"initialValue":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:2","subExpression":{"expression":{"id":545,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4302:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":519,"src":"4302:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:2"},{"assignments":[550],"declarations":[{"constant":false,"id":550,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:2","nodeType":"VariableDeclaration","scope":616,"src":"4327:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":549,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":553,"initialValue":{"expression":{"id":551,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4348:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":516,"src":"4348:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:2"},{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:2","nodeType":"VariableDeclaration","scope":616,"src":"4704:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":554,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":561,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4724:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":559,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4744:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:2"},{"assignments":[563],"declarations":[{"constant":false,"id":563,"mutability":"mutable","name":"construction","nameLocation":"4773:12:2","nodeType":"VariableDeclaration","scope":616,"src":"4768:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":576,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4788:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":569,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$777","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$777","typeString":"contract Initializable"}],"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:2","typeDescriptions":{}}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:2","memberName":"code","nodeType":"MemberAccess","src":"4808:18:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:2","memberName":"length","nodeType":"MemberAccess","src":"4808:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:2","subExpression":{"id":577,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"4854:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:2","subExpression":{"id":579,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4871:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":586,"nodeType":"IfStatement","src":"4849:91:2","trueBody":{"id":585,"nodeType":"Block","src":"4885:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":582,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"4906:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":584,"nodeType":"RevertStatement","src":"4899:30:2"}]}},{"expression":{"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":587,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4949:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":516,"src":"4949:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":592,"nodeType":"ExpressionStatement","src":"4949:18:2"},{"condition":{"id":593,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4981:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":601,"nodeType":"IfStatement","src":"4977:67:2","trueBody":{"id":600,"nodeType":"Block","src":"4997:47:2","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":594,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"5011:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":519,"src":"5011:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"ExpressionStatement","src":"5011:22:2"}]}},{"id":602,"nodeType":"PlaceholderStatement","src":"5053:1:2"},{"condition":{"id":603,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5068:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":615,"nodeType":"IfStatement","src":"5064:101:2","trueBody":{"id":614,"nodeType":"Block","src":"5084:81:2","statements":[{"expression":{"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":604,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"5098:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":519,"src":"5098:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"ExpressionStatement","src":"5098:23:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":610,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"5140:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"EmitStatement","src":"5135:19:2"}]}}]},"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"3548:516:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":617,"name":"initializer","nameLocation":"4078:11:2","nodeType":"ModifierDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[],"src":"4089:2:2"},"src":"4069:1102:2","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"6289:392:2","statements":[{"assignments":[624],"declarations":[{"constant":false,"id":624,"mutability":"mutable","name":"$","nameLocation":"6384:1:2","nodeType":"VariableDeclaration","scope":663,"src":"6355:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":623,"nodeType":"UserDefinedTypeName","pathNode":{"id":622,"name":"InitializableStorage","nameLocations":["6355:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"6355:20:2"},"referencedDeclaration":520,"src":"6355:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":627,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":625,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6388:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$520_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":628,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6429:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":519,"src":"6429:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":630,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6448:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":516,"src":"6448:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":632,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6466:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":639,"nodeType":"IfStatement","src":"6425:105:2","trueBody":{"id":638,"nodeType":"Block","src":"6475:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":635,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":637,"nodeType":"RevertStatement","src":"6489:30:2"}]}},{"expression":{"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":640,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6539:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":516,"src":"6539:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":643,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6556:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":645,"nodeType":"ExpressionStatement","src":"6539:24:2"},{"expression":{"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":646,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6573:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":519,"src":"6573:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":651,"nodeType":"ExpressionStatement","src":"6573:22:2"},{"id":652,"nodeType":"PlaceholderStatement","src":"6605:1:2"},{"expression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":653,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6616:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":519,"src":"6616:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":658,"nodeType":"ExpressionStatement","src":"6616:23:2"},{"eventCall":{"arguments":[{"id":660,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6666:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":659,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6654:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"EmitStatement","src":"6649:25:2"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"5177:1068:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":664,"name":"reinitializer","nameLocation":"6259:13:2","nodeType":"ModifierDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"version","nameLocation":"6280:7:2","nodeType":"VariableDeclaration","scope":664,"src":"6273:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":619,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:2"},"src":"6250:431:2","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"6919:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":667,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"6929:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"6929:20:2"},{"id":670,"nodeType":"PlaceholderStatement","src":"6959:1:2"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"6687:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":672,"name":"onlyInitializing","nameLocation":"6900:16:2","nodeType":"ModifierDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"6916:2:2"},"src":"6891:76:2","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"7134:89:2","statements":[{"condition":{"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":676,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7149:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":683,"nodeType":"IfStatement","src":"7144:73:2","trueBody":{"id":682,"nodeType":"Block","src":"7168:49:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":679,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"7189:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":681,"nodeType":"RevertStatement","src":"7182:24:2"}]}}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"6973:104:2","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"7109:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"7134:0:2"},"scope":777,"src":"7082:141:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":730,"nodeType":"Block","src":"7758:373:2","statements":[{"assignments":[691],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"$","nameLocation":"7853:1:2","nodeType":"VariableDeclaration","scope":730,"src":"7824:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":690,"nodeType":"UserDefinedTypeName","pathNode":{"id":689,"name":"InitializableStorage","nameLocations":["7824:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"7824:20:2"},"referencedDeclaration":520,"src":"7824:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":694,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":692,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7857:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$520_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:2"},{"condition":{"expression":{"id":695,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"7898:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":519,"src":"7898:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":701,"nodeType":"IfStatement","src":"7894:76:2","trueBody":{"id":700,"nodeType":"Block","src":"7915:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":697,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"7936:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":699,"nodeType":"RevertStatement","src":"7929:30:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":702,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"7983:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":516,"src":"7983:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":705,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:2","memberName":"max","nodeType":"MemberAccess","src":"8001:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":729,"nodeType":"IfStatement","src":"7979:146:2","trueBody":{"id":728,"nodeType":"Block","src":"8019:106:2","statements":[{"expression":{"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":710,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"8033:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":516,"src":"8033:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":714,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":713,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:2","memberName":"max","nodeType":"MemberAccess","src":"8050:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":719,"nodeType":"ExpressionStatement","src":"8033:33:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":722,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":721,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:2","memberName":"max","nodeType":"MemberAccess","src":"8097:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":720,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"8085:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"EmitStatement","src":"8080:34:2"}]}}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"7229:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":731,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:2","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"7738:2:2"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"7758:0:2"},"scope":777,"src":"7709:422:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":741,"nodeType":"Block","src":"8306:63:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":737,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8323:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$520_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":516,"src":"8323:39:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":736,"id":740,"nodeType":"Return","src":"8316:46:2"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"8137:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":742,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:2","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"8272:2:2"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"8298:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":734,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:2"},"scope":777,"src":"8241:128:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"8541:64:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":748,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8558:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$520_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":519,"src":"8558:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":751,"nodeType":"Return","src":"8551:47:2"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"8375:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:2","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"8509:2:2"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"8535:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:2"},"scope":777,"src":"8485:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"8896:45:2","statements":[{"expression":{"id":759,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"8913:21:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":758,"id":760,"nodeType":"Return","src":"8906:28:2"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"8611:203:2","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:2","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"8853:2:2"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"8887:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:2"},"scope":777,"src":"8819:122:2","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"9161:115:2","statements":[{"assignments":[770],"declarations":[{"constant":false,"id":770,"mutability":"mutable","name":"slot","nameLocation":"9179:4:2","nodeType":"VariableDeclaration","scope":775,"src":"9171:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":773,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":771,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"9186:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:2"},{"AST":{"nativeSrc":"9232:38:2","nodeType":"YulBlock","src":"9232:38:2","statements":[{"nativeSrc":"9246:14:2","nodeType":"YulAssignment","src":"9246:14:2","value":{"name":"slot","nativeSrc":"9256:4:2","nodeType":"YulIdentifier","src":"9256:4:2"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:2","nodeType":"YulIdentifier","src":"9246:6:2"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":767,"isOffset":false,"isSlot":true,"src":"9246:6:2","suffix":"slot","valueSize":1},{"declaration":770,"isOffset":false,"isSlot":false,"src":"9256:4:2","valueSize":1}],"id":774,"nodeType":"InlineAssembly","src":"9223:47:2"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"8947:67:2","text":" @dev Returns a pointer to the storage namespace."},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"9104:2:2"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"$","nameLocation":"9158:1:2","nodeType":"VariableDeclaration","scope":776,"src":"9129:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"InitializableStorage","nameLocations":["9129:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"9129:20:2"},"referencedDeclaration":520,"src":"9129:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$520_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:2"},"scope":777,"src":"9071:205:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":778,"src":"2349:6929:2","usedErrors":[526,529],"usedEvents":[534]}],"src":"113:9166:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[823],"Initializable":[777]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":781,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":778,"src":"126:63:3","symbolAliases":[{"foreign":{"id":780,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":783,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"728:13:3"},"id":784,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823,777],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":789,"nodeType":"Block","src":"800:7:3","statements":[]},"id":790,"implemented":true,"kind":"function","modifiers":[{"id":787,"kind":"modifierInvocation","modifierName":{"id":786,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":823,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"875:7:3","statements":[]},"id":796,"implemented":true,"kind":"function","modifiers":[{"id":793,"kind":"modifierInvocation","modifierName":{"id":792,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":823,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":801,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":800,"id":803,"nodeType":"Return","src":"959:17:3"}]},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":805,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":823,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":813,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":809,"id":812,"nodeType":"Return","src":"1066:15:3"}]},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":823,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":821,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":818,"id":820,"nodeType":"Return","src":"1176:8:3"}]},"id":822,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":823,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":824,"src":"688:505:3","usedErrors":[526,529],"usedEvents":[534]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[863],"IERC165":[3817],"Initializable":[777]},"id":864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":864,"sourceUnit":3818,"src":"140:80:4","symbolAliases":[{"foreign":{"id":826,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"148:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":864,"sourceUnit":778,"src":"221:66:4","symbolAliases":[{"foreign":{"id":828,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"229:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":831,"name":"Initializable","nameLocations":["808:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"808:13:4"},"id":832,"nodeType":"InheritanceSpecifier","src":"808:13:4"},{"baseName":{"id":833,"name":"IERC165","nameLocations":["823:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"823:7:4"},"id":834,"nodeType":"InheritanceSpecifier","src":"823:7:4"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"289:479:4","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":863,"linearizedBaseContracts":[863,3817,777],"name":"ERC165Upgradeable","nameLocation":"787:17:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":839,"nodeType":"Block","src":"888:7:4","statements":[]},"id":840,"implemented":true,"kind":"function","modifiers":[{"id":837,"kind":"modifierInvocation","modifierName":{"id":836,"name":"onlyInitializing","nameLocations":["871:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"871:16:4"},"nodeType":"ModifierInvocation","src":"871:16:4"}],"name":"__ERC165_init","nameLocation":"846:13:4","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"859:2:4"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"888:0:4"},"scope":863,"src":"837:58:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":845,"nodeType":"Block","src":"962:7:4","statements":[]},"id":846,"implemented":true,"kind":"function","modifiers":[{"id":843,"kind":"modifierInvocation","modifierName":{"id":842,"name":"onlyInitializing","nameLocations":["945:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"945:16:4"},"nodeType":"ModifierInvocation","src":"945:16:4"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:4","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"933:2:4"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"962:0:4"},"scope":863,"src":"901:68:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3816],"body":{"id":861,"nodeType":"Block","src":"1117:64:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":854,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1134:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":856,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"1154:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3817_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3817_$","typeString":"type(contract IERC165)"}],"id":855,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3817","typeString":"type(contract IERC165)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":853,"id":860,"nodeType":"Return","src":"1127:47:4"}]},"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"974:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":862,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:4","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:4","nodeType":"VariableDeclaration","scope":862,"src":"1062:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":848,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:4"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"1111:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":851,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:4"},"scope":863,"src":"1035:146:4","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":864,"src":"769:414:4","usedErrors":[526,529],"usedEvents":[534]}],"src":"114:1070:4"},"id":4},"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[1159],"Context":[3177],"ERC165":[3805],"IAccessControl":[1242]},"id":1160,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":865,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:5"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1160,"sourceUnit":1243,"src":"134:52:5","symbolAliases":[{"foreign":{"id":866,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"142:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1160,"sourceUnit":3178,"src":"187:45:5","symbolAliases":[{"foreign":{"id":868,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"195:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":871,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1160,"sourceUnit":3806,"src":"233:57:5","symbolAliases":[{"foreign":{"id":870,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"241:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":873,"name":"Context","nameLocations":["1988:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"1988:7:5"},"id":874,"nodeType":"InheritanceSpecifier","src":"1988:7:5"},{"baseName":{"id":875,"name":"IAccessControl","nameLocations":["1997:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"1997:14:5"},"id":876,"nodeType":"InheritanceSpecifier","src":"1997:14:5"},{"baseName":{"id":877,"name":"ERC165","nameLocations":["2013:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3805,"src":"2013:6:5"},"id":878,"nodeType":"InheritanceSpecifier","src":"2013:6:5"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"292:1660:5","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":1159,"linearizedBaseContracts":[1159,3805,3817,1242,3177],"name":"AccessControl","nameLocation":"1971:13:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":885,"members":[{"constant":false,"id":882,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:5","nodeType":"VariableDeclaration","scope":885,"src":"2052:40:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":881,"keyName":"account","keyNameLocation":"2068:7:5","keyType":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":880,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:5","nodeType":"VariableDeclaration","scope":885,"src":"2102:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:5","nodeType":"StructDefinition","scope":1159,"src":"2026:100:5","visibility":"public"},{"constant":false,"id":890,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:5","nodeType":"VariableDeclaration","scope":1159,"src":"2132:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$885_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":889,"keyName":"role","keyNameLocation":"2148:4:5","keyType":{"id":886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$885_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":888,"nodeType":"UserDefinedTypeName","pathNode":{"id":887,"name":"RoleData","nameLocations":["2156:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":885,"src":"2156:8:5"},"referencedDeclaration":885,"src":"2156:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$885_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":893,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:5","nodeType":"VariableDeclaration","scope":1159,"src":"2187:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":903,"nodeType":"Block","src":"2454:44:5","statements":[{"expression":{"arguments":[{"id":899,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2475:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":898,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[957,978],"referencedDeclaration":957,"src":"2464:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"2464:16:5"},{"id":902,"nodeType":"PlaceholderStatement","src":"2490:1:5"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"2243:174:5","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":904,"name":"onlyRole","nameLocation":"2431:8:5","nodeType":"ModifierDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"role","nameLocation":"2448:4:5","nodeType":"VariableDeclaration","scope":904,"src":"2440:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:5"},"src":"2422:76:5","virtual":false,"visibility":"internal"},{"baseFunctions":[3804],"body":{"id":925,"nodeType":"Block","src":"2656:111:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"2673:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":915,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2693:14:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1242_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1242_$","typeString":"type(contract IAccessControl)"}],"id":914,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1242","typeString":"type(contract IAccessControl)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":921,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"2748:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":919,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$1159_$","typeString":"type(contract super AccessControl)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3804,"src":"2724:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":912,"id":924,"nodeType":"Return","src":"2666:94:5"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"2504:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:5","nodeType":"FunctionDefinition","overrides":{"id":909,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:5"},"parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:5","nodeType":"VariableDeclaration","scope":926,"src":"2592:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":906,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:5"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"2650:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":910,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:5"},"scope":1159,"src":"2565:202:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1209],"body":{"id":943,"nodeType":"Block","src":"2937:53:5","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":936,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"2954:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$885_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":938,"indexExpression":{"id":937,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"2961:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$885_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:5","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":882,"src":"2954:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":941,"indexExpression":{"id":940,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2975:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":935,"id":942,"nodeType":"Return","src":"2947:36:5"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"2773:76:5","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":944,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:5","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"role","nameLocation":"2879:4:5","nodeType":"VariableDeclaration","scope":944,"src":"2871:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"account","nameLocation":"2893:7:5","nodeType":"VariableDeclaration","scope":944,"src":"2885:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:5"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"2931:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":933,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:5"},"scope":1159,"src":"2854:136:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":956,"nodeType":"Block","src":"3255:47:5","statements":[{"expression":{"arguments":[{"id":951,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3276:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":952,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"3282:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":950,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[957,978],"referencedDeclaration":978,"src":"3265:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"3265:30:5"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"2996:198:5","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":957,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:5","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"role","nameLocation":"3227:4:5","nodeType":"VariableDeclaration","scope":957,"src":"3219:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:5"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"3255:0:5"},"scope":1159,"src":"3199:103:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"3505:124:5","statements":[{"condition":{"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:5","subExpression":{"arguments":[{"id":966,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"3528:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":967,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3534:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":965,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"3520:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":976,"nodeType":"IfStatement","src":"3515:108:5","trueBody":{"id":975,"nodeType":"Block","src":"3544:79:5","statements":[{"errorCall":{"arguments":[{"id":971,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3598:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":972,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"3607:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":970,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"3565:32:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":974,"nodeType":"RevertStatement","src":"3558:54:5"}]}}]},"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"3308:119:5","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:5","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"role","nameLocation":"3460:4:5","nodeType":"VariableDeclaration","scope":978,"src":"3452:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"account","nameLocation":"3474:7:5","nodeType":"VariableDeclaration","scope":978,"src":"3466:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:5"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"3505:0:5"},"scope":1159,"src":"3432:197:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1217],"body":{"id":991,"nodeType":"Block","src":"3884:46:5","statements":[{"expression":{"expression":{"baseExpression":{"id":986,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"3901:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$885_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":988,"indexExpression":{"id":987,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"3908:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$885_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:5","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":884,"src":"3901:22:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":985,"id":990,"nodeType":"Return","src":"3894:29:5"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"3635:170:5","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":992,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:5","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"role","nameLocation":"3840:4:5","nodeType":"VariableDeclaration","scope":992,"src":"3832:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:5"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"3875:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:5"},"scope":1159,"src":"3810:120:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1225],"body":{"id":1010,"nodeType":"Block","src":"4320:42:5","statements":[{"expression":{"arguments":[{"id":1006,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"4341:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1007,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"4347:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4330:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1009,"nodeType":"ExpressionStatement","src":"4330:25:5"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"3936:285:5","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":1011,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":1001,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"4313:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1000,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"4300:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1003,"kind":"modifierInvocation","modifierName":{"id":999,"name":"onlyRole","nameLocations":["4291:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"4291:8:5"},"nodeType":"ModifierInvocation","src":"4291:28:5"}],"name":"grantRole","nameLocation":"4235:9:5","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"role","nameLocation":"4253:4:5","nodeType":"VariableDeclaration","scope":1011,"src":"4245:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"account","nameLocation":"4267:7:5","nodeType":"VariableDeclaration","scope":1011,"src":"4259:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:5"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"4320:0:5"},"scope":1159,"src":"4226:136:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1233],"body":{"id":1029,"nodeType":"Block","src":"4737:43:5","statements":[{"expression":{"arguments":[{"id":1025,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4759:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1026,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4765:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1024,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"4747:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1028,"nodeType":"ExpressionStatement","src":"4747:26:5"}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"4368:269:5","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":1030,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":1020,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4730:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1019,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"4717:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1022,"kind":"modifierInvocation","modifierName":{"id":1018,"name":"onlyRole","nameLocations":["4708:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"4708:8:5"},"nodeType":"ModifierInvocation","src":"4708:28:5"}],"name":"revokeRole","nameLocation":"4651:10:5","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"role","nameLocation":"4670:4:5","nodeType":"VariableDeclaration","scope":1030,"src":"4662:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"account","nameLocation":"4684:7:5","nodeType":"VariableDeclaration","scope":1030,"src":"4676:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:5"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"4737:0:5"},"scope":1159,"src":"4642:138:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1241],"body":{"id":1052,"nodeType":"Block","src":"5407:166:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5421:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1039,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"5443:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"nodeType":"IfStatement","src":"5417:102:5","trueBody":{"id":1045,"nodeType":"Block","src":"5457:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1042,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"5478:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1044,"nodeType":"RevertStatement","src":"5471:37:5"}]}},{"expression":{"arguments":[{"id":1048,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5541:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1049,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5547:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1047,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"5529:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1051,"nodeType":"ExpressionStatement","src":"5529:37:5"}]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"4786:537:5","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:5","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"role","nameLocation":"5358:4:5","nodeType":"VariableDeclaration","scope":1053,"src":"5350:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:5","nodeType":"VariableDeclaration","scope":1053,"src":"5364:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:5"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"5407:0:5"},"scope":1159,"src":"5328:245:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1080,"nodeType":"Block","src":"5771:174:5","statements":[{"assignments":[1062],"declarations":[{"constant":false,"id":1062,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:5","nodeType":"VariableDeclaration","scope":1080,"src":"5781:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1066,"initialValue":{"arguments":[{"id":1064,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"5822:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1063,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"5809:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:5"},{"expression":{"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1067,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5837:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$885_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":1069,"indexExpression":{"id":1068,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"5844:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$885_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":1070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:5","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":884,"src":"5837:22:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1071,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"5862:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1073,"nodeType":"ExpressionStatement","src":"5837:34:5"},{"eventCall":{"arguments":[{"id":1075,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"5903:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1076,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"5909:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1077,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"5928:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1074,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"5886:16:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"EmitStatement","src":"5881:57:5"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"5579:114:5","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":1081,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:5","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"role","nameLocation":"5729:4:5","nodeType":"VariableDeclaration","scope":1081,"src":"5721:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:5","nodeType":"VariableDeclaration","scope":1081,"src":"5735:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:5"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"5771:0:5"},"scope":1159,"src":"5698:247:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"6262:233:5","statements":[{"condition":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:5","subExpression":{"arguments":[{"id":1092,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"6285:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1093,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"6291:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1091,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6277:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1117,"nodeType":"Block","src":"6452:37:5","statements":[{"expression":{"hexValue":"66616c7365","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1090,"id":1116,"nodeType":"Return","src":"6466:12:5"}]},"id":1118,"nodeType":"IfStatement","src":"6272:217:5","trueBody":{"id":1114,"nodeType":"Block","src":"6301:145:5","statements":[{"expression":{"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":1096,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6315:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$885_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":1098,"indexExpression":{"id":1097,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"6322:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$885_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":1099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:5","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":882,"src":"6315:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1101,"indexExpression":{"id":1100,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"6336:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"ExpressionStatement","src":"6315:36:5"},{"eventCall":{"arguments":[{"id":1106,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"6382:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"6388:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1108,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"6397:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1105,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6370:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1111,"nodeType":"EmitStatement","src":"6365:45:5"},{"expression":{"hexValue":"74727565","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1090,"id":1113,"nodeType":"Return","src":"6424:11:5"}]}}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"5951:223:5","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:5","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"role","nameLocation":"6207:4:5","nodeType":"VariableDeclaration","scope":1120,"src":"6199:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"account","nameLocation":"6221:7:5","nodeType":"VariableDeclaration","scope":1120,"src":"6213:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:5"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"6256:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1088,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:5"},"scope":1159,"src":"6179:316:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1157,"nodeType":"Block","src":"6816:233:5","statements":[{"condition":{"arguments":[{"id":1131,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6838:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1132,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6844:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1130,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"6830:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1155,"nodeType":"Block","src":"7006:37:5","statements":[{"expression":{"hexValue":"66616c7365","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1129,"id":1154,"nodeType":"Return","src":"7020:12:5"}]},"id":1156,"nodeType":"IfStatement","src":"6826:217:5","trueBody":{"id":1152,"nodeType":"Block","src":"6854:146:5","statements":[{"expression":{"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":1134,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6868:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$885_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":1136,"indexExpression":{"id":1135,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6875:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$885_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":1137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6881:7:5","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":882,"src":"6868:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1139,"indexExpression":{"id":1138,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6889:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6868:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6900:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6868:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1142,"nodeType":"ExpressionStatement","src":"6868:37:5"},{"eventCall":{"arguments":[{"id":1144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6936:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1145,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6942:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1146,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"6951:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1143,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"6924:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"EmitStatement","src":"6919:45:5"},{"expression":{"hexValue":"74727565","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6985:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1129,"id":1151,"nodeType":"Return","src":"6978:11:5"}]}}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"6501:226:5","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6741:11:5","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"role","nameLocation":"6761:4:5","nodeType":"VariableDeclaration","scope":1158,"src":"6753:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6753:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"account","nameLocation":"6775:7:5","nodeType":"VariableDeclaration","scope":1158,"src":"6767:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6752:31:5"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"6810:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1127,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:5"},"scope":1159,"src":"6732:317:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1160,"src":"1953:5098:5","usedErrors":[1169,1172],"usedEvents":[1181,1190,1199]}],"src":"108:6944:5"},"id":5},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1242]},"id":1243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1161,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"135:90:6","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":1242,"linearizedBaseContracts":[1242],"name":"IAccessControl","nameLocation":"236:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"257:56:6","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":1169,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:6","nodeType":"ErrorDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"account","nameLocation":"365:7:6","nodeType":"VariableDeclaration","scope":1169,"src":"357:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:6","nodeType":"VariableDeclaration","scope":1169,"src":"374:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:6"},"src":"318:76:6"},{"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"400:148:6","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":1172,"name":"AccessControlBadConfirmation","nameLocation":"559:28:6","nodeType":"ErrorDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"587:2:6"},"src":"553:37:6"},{"anonymous":false,"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"596:254:6","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":1181,"name":"RoleAdminChanged","nameLocation":"861:16:6","nodeType":"EventDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:6","nodeType":"VariableDeclaration","scope":1181,"src":"878:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1177,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:6","nodeType":"VariableDeclaration","scope":1181,"src":"900:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1179,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:6","nodeType":"VariableDeclaration","scope":1181,"src":"935:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:6"},"src":"855:110:6"},{"anonymous":false,"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"971:295:6","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":1190,"name":"RoleGranted","nameLocation":"1277:11:6","nodeType":"EventDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:6","nodeType":"VariableDeclaration","scope":1190,"src":"1289:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1186,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:6","nodeType":"VariableDeclaration","scope":1190,"src":"1311:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:6","nodeType":"VariableDeclaration","scope":1190,"src":"1336:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:6"},"src":"1271:89:6"},{"anonymous":false,"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1366:275:6","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":1199,"name":"RoleRevoked","nameLocation":"1652:11:6","nodeType":"EventDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:6","nodeType":"VariableDeclaration","scope":1199,"src":"1664:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1195,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:6","nodeType":"VariableDeclaration","scope":1199,"src":"1686:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:6","nodeType":"VariableDeclaration","scope":1199,"src":"1711:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:6"},"src":"1646:89:6"},{"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"1741:76:6","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1209,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:6","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"role","nameLocation":"1847:4:6","nodeType":"VariableDeclaration","scope":1209,"src":"1839:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"account","nameLocation":"1861:7:6","nodeType":"VariableDeclaration","scope":1209,"src":"1853:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:6"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1209,"src":"1893:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1206,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:6"},"scope":1242,"src":"1822:77:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"1905:184:6","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1217,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:6","nodeType":"FunctionDefinition","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"role","nameLocation":"2124:4:6","nodeType":"VariableDeclaration","scope":1217,"src":"2116:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:6"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"2153:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:6"},"scope":1242,"src":"2094:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"2168:239:6","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1225,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:6","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"role","nameLocation":"2439:4:6","nodeType":"VariableDeclaration","scope":1225,"src":"2431:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"account","nameLocation":"2453:7:6","nodeType":"VariableDeclaration","scope":1225,"src":"2445:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:6"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[],"src":"2470:0:6"},"scope":1242,"src":"2412:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"2477:223:6","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1233,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:6","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"role","nameLocation":"2733:4:6","nodeType":"VariableDeclaration","scope":1233,"src":"2725:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"account","nameLocation":"2747:7:6","nodeType":"VariableDeclaration","scope":1233,"src":"2739:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:6"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[],"src":"2764:0:6"},"scope":1242,"src":"2705:60:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"2771:491:6","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1241,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:6","nodeType":"FunctionDefinition","parameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"role","nameLocation":"3297:4:6","nodeType":"VariableDeclaration","scope":1241,"src":"3289:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:6","nodeType":"VariableDeclaration","scope":1241,"src":"3303:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:6"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[],"src":"3339:0:6"},"scope":1242,"src":"3267:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1243,"src":"226:3116:6","usedErrors":[1169,1172],"usedEvents":[1181,1190,1199]}],"src":"109:3234:6"},"id":6},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[1159],"AccessControlEnumerable":[1400],"EnumerableSet":[7900],"IAccessControlEnumerable":[1426]},"id":1401,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1244,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:7"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":1246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":1427,"src":"155:72:7","symbolAliases":[{"foreign":{"id":1245,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"163:24:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"../AccessControl.sol","id":1248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":1160,"src":"228:51:7","symbolAliases":[{"foreign":{"id":1247,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"236:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../../utils/structs/EnumerableSet.sol","id":1250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1401,"sourceUnit":7901,"src":"280:68:7","symbolAliases":[{"foreign":{"id":1249,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"288:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1252,"name":"IAccessControlEnumerable","nameLocations":["490:24:7"],"nodeType":"IdentifierPath","referencedDeclaration":1426,"src":"490:24:7"},"id":1253,"nodeType":"InheritanceSpecifier","src":"490:24:7"},{"baseName":{"id":1254,"name":"AccessControl","nameLocations":["516:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1159,"src":"516:13:7"},"id":1255,"nodeType":"InheritanceSpecifier","src":"516:13:7"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"350:94:7","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":1400,"linearizedBaseContracts":[1400,1159,3805,3817,1426,1242,3177],"name":"AccessControlEnumerable","nameLocation":"463:23:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1259,"libraryName":{"id":1256,"name":"EnumerableSet","nameLocations":["542:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":7900,"src":"542:13:7"},"nodeType":"UsingForDirective","src":"536:49:7","typeName":{"id":1258,"nodeType":"UserDefinedTypeName","pathNode":{"id":1257,"name":"EnumerableSet.AddressSet","nameLocations":["560:13:7","574:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"560:24:7"},"referencedDeclaration":7587,"src":"560:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":1264,"mutability":"mutable","name":"_roleMembers","nameLocation":"649:12:7","nodeType":"VariableDeclaration","scope":1400,"src":"591:70:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":1263,"keyName":"role","keyNameLocation":"607:4:7","keyType":{"id":1260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"591:49:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1262,"nodeType":"UserDefinedTypeName","pathNode":{"id":1261,"name":"EnumerableSet.AddressSet","nameLocations":["615:13:7","629:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"615:24:7"},"referencedDeclaration":7587,"src":"615:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[926],"body":{"id":1285,"nodeType":"Block","src":"820:121:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1273,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"837:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1275,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"857:24:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$1426_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$1426_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":1274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"852:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"852:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$1426","typeString":"type(contract IAccessControlEnumerable)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"852:42:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"837:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1281,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"922:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1279,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"898:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$1400_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"904:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":926,"src":"898:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"837:97:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1272,"id":1284,"nodeType":"Return","src":"830:104:7"}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"668:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"738:17:7","nodeType":"FunctionDefinition","overrides":{"id":1269,"nodeType":"OverrideSpecifier","overrides":[],"src":"796:8:7"},"parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"interfaceId","nameLocation":"763:11:7","nodeType":"VariableDeclaration","scope":1286,"src":"756:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1266,"name":"bytes4","nodeType":"ElementaryTypeName","src":"756:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"755:20:7"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1286,"src":"814:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1270,"name":"bool","nodeType":"ElementaryTypeName","src":"814:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"813:6:7"},"scope":1400,"src":"729:212:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1417],"body":{"id":1303,"nodeType":"Block","src":"1616:52:7","statements":[{"expression":{"arguments":[{"id":1300,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1655:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":1296,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1633:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":1298,"indexExpression":{"id":1297,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"1646:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1633:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":1299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1652:2:7","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7723,"src":"1633:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1295,"id":1302,"nodeType":"Return","src":"1626:35:7"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"947:574:7","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":1304,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1535:13:7","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"role","nameLocation":"1557:4:7","nodeType":"VariableDeclaration","scope":1304,"src":"1549:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"index","nameLocation":"1571:5:7","nodeType":"VariableDeclaration","scope":1304,"src":"1563:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:29:7"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1304,"src":"1607:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1606:9:7"},"scope":1400,"src":"1526:142:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1425],"body":{"id":1318,"nodeType":"Block","src":"1916:51:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1312,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1933:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":1314,"indexExpression":{"id":1313,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"1946:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1933:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":1315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1952:6:7","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7696,"src":"1933:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1311,"id":1317,"nodeType":"Return","src":"1926:34:7"}]},"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"1674:157:7","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1845:18:7","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"role","nameLocation":"1872:4:7","nodeType":"VariableDeclaration","scope":1319,"src":"1864:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1863:14:7"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1319,"src":"1907:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1906:9:7"},"scope":1400,"src":"1836:131:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1334,"nodeType":"Block","src":"2595:51:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1328,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"2612:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":1330,"indexExpression":{"id":1329,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"2625:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2612:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":1331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2631:6:7","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":7753,"src":"2612:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1327,"id":1333,"nodeType":"Return","src":"2605:34:7"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"1973:532:7","text":" @dev Return all accounts that have `role`\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"functionSelector":"a3246ad3","id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMembers","nameLocation":"2519:14:7","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"role","nameLocation":"2542:4:7","nodeType":"VariableDeclaration","scope":1335,"src":"2534:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2534:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2533:14:7"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1335,"src":"2577:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1325,"nodeType":"ArrayTypeName","src":"2577:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2576:18:7"},"scope":1400,"src":"2510:136:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1120],"body":{"id":1366,"nodeType":"Block","src":"2840:165:7","statements":[{"assignments":[1347],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"granted","nameLocation":"2855:7:7","nodeType":"VariableDeclaration","scope":1366,"src":"2850:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1346,"name":"bool","nodeType":"ElementaryTypeName","src":"2850:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1353,"initialValue":{"arguments":[{"id":1350,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2882:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1351,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2888:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1348,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2865:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$1400_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2871:10:7","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":1120,"src":"2865:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2850:46:7"},{"condition":{"id":1354,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"2910:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1363,"nodeType":"IfStatement","src":"2906:69:7","trueBody":{"id":1362,"nodeType":"Block","src":"2919:56:7","statements":[{"expression":{"arguments":[{"id":1359,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2956:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":1355,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"2933:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":1357,"indexExpression":{"id":1356,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2946:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2933:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":1358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2952:3:7","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"2933:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7587_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1361,"nodeType":"ExpressionStatement","src":"2933:31:7"}]}},{"expression":{"id":1364,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"2991:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1345,"id":1365,"nodeType":"Return","src":"2984:14:7"}]},"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"2652:91:7","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2757:10:7","nodeType":"FunctionDefinition","overrides":{"id":1342,"nodeType":"OverrideSpecifier","overrides":[],"src":"2816:8:7"},"parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"role","nameLocation":"2776:4:7","nodeType":"VariableDeclaration","scope":1367,"src":"2768:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2768:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"account","nameLocation":"2790:7:7","nodeType":"VariableDeclaration","scope":1367,"src":"2782:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2767:31:7"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"2834:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1343,"name":"bool","nodeType":"ElementaryTypeName","src":"2834:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2833:6:7"},"scope":1400,"src":"2748:257:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1158],"body":{"id":1398,"nodeType":"Block","src":"3201:169:7","statements":[{"assignments":[1379],"declarations":[{"constant":false,"id":1379,"mutability":"mutable","name":"revoked","nameLocation":"3216:7:7","nodeType":"VariableDeclaration","scope":1398,"src":"3211:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1378,"name":"bool","nodeType":"ElementaryTypeName","src":"3211:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1385,"initialValue":{"arguments":[{"id":1382,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"3244:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1383,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3250:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1380,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3226:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$1400_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3232:11:7","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":1158,"src":"3226:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3211:47:7"},{"condition":{"id":1386,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"3272:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1395,"nodeType":"IfStatement","src":"3268:72:7","trueBody":{"id":1394,"nodeType":"Block","src":"3281:59:7","statements":[{"expression":{"arguments":[{"id":1391,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3321:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":1387,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3295:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":1389,"indexExpression":{"id":1388,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"3308:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3295:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":1390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3314:6:7","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7641,"src":"3295:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7587_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1393,"nodeType":"ExpressionStatement","src":"3295:34:7"}]}},{"expression":{"id":1396,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"3356:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1377,"id":1397,"nodeType":"Return","src":"3349:14:7"}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"3011:92:7","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"3117:11:7","nodeType":"FunctionDefinition","overrides":{"id":1374,"nodeType":"OverrideSpecifier","overrides":[],"src":"3177:8:7"},"parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"role","nameLocation":"3137:4:7","nodeType":"VariableDeclaration","scope":1399,"src":"3129:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3129:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"account","nameLocation":"3151:7:7","nodeType":"VariableDeclaration","scope":1399,"src":"3143:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3128:31:7"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1399,"src":"3195:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1375,"name":"bool","nodeType":"ElementaryTypeName","src":"3195:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3194:6:7"},"scope":1400,"src":"3108:262:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1401,"src":"445:2927:7","usedErrors":[1169,1172],"usedEvents":[1181,1190,1199]}],"src":"129:3244:7"},"id":7},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[1242],"IAccessControlEnumerable":[1426]},"id":1427,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1402,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:8"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":1404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1427,"sourceUnit":1243,"src":"156:53:8","symbolAliases":[{"foreign":{"id":1403,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"164:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1406,"name":"IAccessControl","nameLocations":["350:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"350:14:8"},"id":1407,"nodeType":"InheritanceSpecifier","src":"350:14:8"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"211:100:8","text":" @dev External interface of AccessControlEnumerable declared to support ERC-165 detection."},"fullyImplemented":false,"id":1426,"linearizedBaseContracts":[1426,1242],"name":"IAccessControlEnumerable","nameLocation":"322:24:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"371:574:8","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":1417,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"959:13:8","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"role","nameLocation":"981:4:8","nodeType":"VariableDeclaration","scope":1417,"src":"973:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"index","nameLocation":"995:5:8","nodeType":"VariableDeclaration","scope":1417,"src":"987:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"972:29:8"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1417,"src":"1025:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1024:9:8"},"scope":1426,"src":"950:84:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"1040:157:8","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":1425,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1211:18:8","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"role","nameLocation":"1238:4:8","nodeType":"VariableDeclaration","scope":1425,"src":"1230:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1229:14:8"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1425,"src":"1267:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1266:9:8"},"scope":1426,"src":"1202:74:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1427,"src":"312:966:8","usedErrors":[1169,1172],"usedEvents":[1181,1190,1199]}],"src":"130:1149:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[1508],"IERC165":[3817],"IERC20":[1773]},"id":1509,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1428,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:9"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":1430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1509,"sourceUnit":1517,"src":"133:36:9","symbolAliases":[{"foreign":{"id":1429,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"141:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1509,"sourceUnit":1513,"src":"170:38:9","symbolAliases":[{"foreign":{"id":1431,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"178:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1434,"name":"IERC20","nameLocations":["590:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"590:6:9"},"id":1435,"nodeType":"InheritanceSpecifier","src":"590:6:9"},{"baseName":{"id":1436,"name":"IERC165","nameLocations":["598:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"598:7:9"},"id":1437,"nodeType":"InheritanceSpecifier","src":"598:7:9"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"210:357:9","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":1508,"linearizedBaseContracts":[1508,3817,1773],"name":"IERC1363","nameLocation":"578:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"1148:370:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":1447,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:9","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"to","nameLocation":"1556:2:9","nodeType":"VariableDeclaration","scope":1447,"src":"1548:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"value","nameLocation":"1568:5:9","nodeType":"VariableDeclaration","scope":1447,"src":"1560:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:9"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"1593:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1444,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:9"},"scope":1508,"src":"1523:76:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"1605:453:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":1459,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:9","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"to","nameLocation":"2096:2:9","nodeType":"VariableDeclaration","scope":1459,"src":"2088:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"value","nameLocation":"2108:5:9","nodeType":"VariableDeclaration","scope":1459,"src":"2100:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"data","nameLocation":"2130:4:9","nodeType":"VariableDeclaration","scope":1459,"src":"2115:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1453,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:9"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1459,"src":"2154:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1456,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:9"},"scope":1508,"src":"2063:97:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"2166:453:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":1471,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:9","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"from","nameLocation":"2661:4:9","nodeType":"VariableDeclaration","scope":1471,"src":"2653:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"to","nameLocation":"2675:2:9","nodeType":"VariableDeclaration","scope":1471,"src":"2667:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"value","nameLocation":"2687:5:9","nodeType":"VariableDeclaration","scope":1471,"src":"2679:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:9"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1471,"src":"2712:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1468,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:9"},"scope":1508,"src":"2624:94:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"2724:536:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":1485,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:9","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"from","nameLocation":"3302:4:9","nodeType":"VariableDeclaration","scope":1485,"src":"3294:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"to","nameLocation":"3316:2:9","nodeType":"VariableDeclaration","scope":1485,"src":"3308:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"value","nameLocation":"3328:5:9","nodeType":"VariableDeclaration","scope":1485,"src":"3320:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"data","nameLocation":"3350:4:9","nodeType":"VariableDeclaration","scope":1485,"src":"3335:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1479,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:9"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"3374:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1482,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:9"},"scope":1508,"src":"3265:115:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"3386:390:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":1495,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:9","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"spender","nameLocation":"3813:7:9","nodeType":"VariableDeclaration","scope":1495,"src":"3805:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"value","nameLocation":"3830:5:9","nodeType":"VariableDeclaration","scope":1495,"src":"3822:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:9"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1495,"src":"3855:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1492,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:9"},"scope":1508,"src":"3781:80:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"3867:478:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":1507,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:9","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"spender","nameLocation":"4382:7:9","nodeType":"VariableDeclaration","scope":1507,"src":"4374:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"value","nameLocation":"4399:5:9","nodeType":"VariableDeclaration","scope":1507,"src":"4391:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"data","nameLocation":"4421:4:9","nodeType":"VariableDeclaration","scope":1507,"src":"4406:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1501,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:9"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1507,"src":"4445:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1504,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:9"},"scope":1508,"src":"4350:101:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1509,"src":"568:3885:9","usedErrors":[],"usedEvents":[1707,1716]}],"src":"107:4347:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3817]},"id":1513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1510,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1513,"sourceUnit":3818,"src":"132:59:10","symbolAliases":[{"foreign":{"id":1511,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"140:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1773]},"id":1517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1514,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":1516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1517,"sourceUnit":1774,"src":"131:49:11","symbolAliases":[{"foreign":{"id":1515,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"139:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:11"},"id":11},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","exportedSymbols":{"Context":[3177],"ERC2771Context":[1659]},"id":1660,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1518,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1660,"sourceUnit":3178,"src":"135:45:12","symbolAliases":[{"foreign":{"id":1519,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"143:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1522,"name":"Context","nameLocations":["1005:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"1005:7:12"},"id":1523,"nodeType":"InheritanceSpecifier","src":"1005:7:12"}],"canonicalName":"ERC2771Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"182:786:12","text":" @dev Context variant with ERC-2771 support.\n WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n function only accessible if `msg.data.length == 0`.\n WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n recovery."},"fullyImplemented":true,"id":1659,"linearizedBaseContracts":[1659,3177],"name":"ERC2771Context","nameLocation":"987:14:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"1019:61:12","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":1526,"mutability":"immutable","name":"_trustedForwarder","nameLocation":"1111:17:12","nodeType":"VariableDeclaration","scope":1659,"src":"1085:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"1085:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1536,"nodeType":"Block","src":"1490:54:12","statements":[{"expression":{"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1532,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1500:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1533,"name":"trustedForwarder_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"1520:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:37:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1535,"nodeType":"ExpressionStatement","src":"1500:37:12"}]},"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"1398:48:12","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":1537,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"trustedForwarder_","nameLocation":"1471:17:12","nodeType":"VariableDeclaration","scope":1537,"src":"1463:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:27:12"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"1490:0:12"},"scope":1659,"src":"1451:93:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1545,"nodeType":"Block","src":"1690:41:12","statements":[{"expression":{"id":1543,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1707:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1542,"id":1544,"nodeType":"Return","src":"1700:24:12"}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"1550:69:12","text":" @dev Returns the address of the trusted forwarder."},"functionSelector":"7da0a877","id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"trustedForwarder","nameLocation":"1633:16:12","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[],"src":"1649:2:12"},"returnParameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"1681:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"1681:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1680:9:12"},"scope":1659,"src":"1624:107:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1559,"nodeType":"Block","src":"1914:55:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"1931:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1555,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1944:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1931:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1553,"id":1558,"nodeType":"Return","src":"1924:38:12"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1737:90:12","text":" @dev Indicates whether any particular address is the trusted forwarder."},"functionSelector":"572b6c05","id":1560,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"1841:18:12","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"forwarder","nameLocation":"1868:9:12","nodeType":"VariableDeclaration","scope":1560,"src":"1860:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:19:12"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1560,"src":"1908:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1551,"name":"bool","nodeType":"ElementaryTypeName","src":"1908:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1907:6:12"},"scope":1659,"src":"1832:137:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3159],"body":{"id":1606,"nodeType":"Block","src":"2277:358:12","statements":[{"assignments":[1568],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"calldataLength","nameLocation":"2295:14:12","nodeType":"VariableDeclaration","scope":1606,"src":"2287:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1572,"initialValue":{"expression":{"expression":{"id":1569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2312:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2316:4:12","memberName":"data","nodeType":"MemberAccess","src":"2312:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2321:6:12","memberName":"length","nodeType":"MemberAccess","src":"2312:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2287:40:12"},{"assignments":[1574],"declarations":[{"constant":false,"id":1574,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"2345:19:12","nodeType":"VariableDeclaration","scope":1606,"src":"2337:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2337:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1577,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1575,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[1658],"referencedDeclaration":1658,"src":"2367:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2337:52:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1579,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2422:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2426:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2422:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1578,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"2403:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2403:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1582,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2437:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1583,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2455:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2437:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2403:71:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1604,"nodeType":"Block","src":"2579:50:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1600,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2600:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$1659_$","typeString":"type(contract super ERC2771Context)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:10:12","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":3159,"src":"2600:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1566,"id":1603,"nodeType":"Return","src":"2593:25:12"}]},"id":1605,"nodeType":"IfStatement","src":"2399:230:12","trueBody":{"id":1599,"nodeType":"Block","src":"2476:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":1590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2513:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:4:12","memberName":"data","nodeType":"MemberAccess","src":"2513:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2513:47:12","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2522:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1593,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2539:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2522:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2505:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1588,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2505:7:12","typeDescriptions":{}}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2497:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"2497:7:12","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1566,"id":1598,"nodeType":"Return","src":"2490:72:12"}]}}]},"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"1975:226:12","text":" @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":1607,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"2215:10:12","nodeType":"FunctionDefinition","overrides":{"id":1563,"nodeType":"OverrideSpecifier","overrides":[],"src":"2250:8:12"},"parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"2225:2:12"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1607,"src":"2268:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:9:12"},"scope":1659,"src":"2206:429:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3168],"body":{"id":1647,"nodeType":"Block","src":"2944:338:12","statements":[{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"calldataLength","nameLocation":"2962:14:12","nodeType":"VariableDeclaration","scope":1647,"src":"2954:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1619,"initialValue":{"expression":{"expression":{"id":1616,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2979:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2983:4:12","memberName":"data","nodeType":"MemberAccess","src":"2979:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2988:6:12","memberName":"length","nodeType":"MemberAccess","src":"2979:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2954:40:12"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"3012:19:12","nodeType":"VariableDeclaration","scope":1647,"src":"3004:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1624,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1622,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[1658],"referencedDeclaration":1658,"src":"3034:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3034:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3004:52:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3089:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3093:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3089:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1625,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"3070:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"3104:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1630,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3122:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3104:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3070:71:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1645,"nodeType":"Block","src":"3228:48:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1641,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3249:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$1659_$","typeString":"type(contract super ERC2771Context)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3255:8:12","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"3249:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1613,"id":1644,"nodeType":"Return","src":"3242:23:12"}]},"id":1646,"nodeType":"IfStatement","src":"3066:210:12","trueBody":{"id":1640,"nodeType":"Block","src":"3143:79:12","statements":[{"expression":{"baseExpression":{"expression":{"id":1633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3164:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3168:4:12","memberName":"data","nodeType":"MemberAccess","src":"3164:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1635,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"3174:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1636,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3191:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3174:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3164:47:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":1613,"id":1639,"nodeType":"Return","src":"3157:54:12"}]}}]},"documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"2641:222:12","text":" @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":1648,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"2877:8:12","nodeType":"FunctionDefinition","overrides":{"id":1610,"nodeType":"OverrideSpecifier","overrides":[],"src":"2910:8:12"},"parameters":{"id":1609,"nodeType":"ParameterList","parameters":[],"src":"2885:2:12"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1648,"src":"2928:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1611,"name":"bytes","nodeType":"ElementaryTypeName","src":"2928:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2927:16:12"},"scope":1659,"src":"2868:414:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3176],"body":{"id":1657,"nodeType":"Block","src":"3466:26:12","statements":[{"expression":{"hexValue":"3230","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3483:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"functionReturnParameters":1654,"id":1656,"nodeType":"Return","src":"3476:9:12"}]},"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"3288:92:12","text":" @dev ERC-2771 specifies the context as being a single address (20 bytes)."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3394:20:12","nodeType":"FunctionDefinition","overrides":{"id":1651,"nodeType":"OverrideSpecifier","overrides":[],"src":"3439:8:12"},"parameters":{"id":1650,"nodeType":"ParameterList","parameters":[],"src":"3414:2:12"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"3457:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"3457:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3456:9:12"},"scope":1659,"src":"3385:107:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1660,"src":"969:2525:12","usedErrors":[],"usedEvents":[]}],"src":"109:3386:12"},"id":12},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[1695]},"id":1696,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1661,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"125:598:13","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":1695,"linearizedBaseContracts":[1695],"name":"Proxy","nameLocation":"742:5:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1669,"nodeType":"Block","src":"1009:835:13","statements":[{"AST":{"nativeSrc":"1028:810:13","nodeType":"YulBlock","src":"1028:810:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1281:1:13","nodeType":"YulLiteral","src":"1281:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1284:1:13","nodeType":"YulLiteral","src":"1284:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1287:12:13","nodeType":"YulIdentifier","src":"1287:12:13"},"nativeSrc":"1287:14:13","nodeType":"YulFunctionCall","src":"1287:14:13"}],"functionName":{"name":"calldatacopy","nativeSrc":"1268:12:13","nodeType":"YulIdentifier","src":"1268:12:13"},"nativeSrc":"1268:34:13","nodeType":"YulFunctionCall","src":"1268:34:13"},"nativeSrc":"1268:34:13","nodeType":"YulExpressionStatement","src":"1268:34:13"},{"nativeSrc":"1429:74:13","nodeType":"YulVariableDeclaration","src":"1429:74:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1456:3:13","nodeType":"YulIdentifier","src":"1456:3:13"},"nativeSrc":"1456:5:13","nodeType":"YulFunctionCall","src":"1456:5:13"},{"name":"implementation","nativeSrc":"1463:14:13","nodeType":"YulIdentifier","src":"1463:14:13"},{"kind":"number","nativeSrc":"1479:1:13","nodeType":"YulLiteral","src":"1479:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1482:12:13","nodeType":"YulIdentifier","src":"1482:12:13"},"nativeSrc":"1482:14:13","nodeType":"YulFunctionCall","src":"1482:14:13"},{"kind":"number","nativeSrc":"1498:1:13","nodeType":"YulLiteral","src":"1498:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1501:1:13","nodeType":"YulLiteral","src":"1501:1:13","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1443:12:13","nodeType":"YulIdentifier","src":"1443:12:13"},"nativeSrc":"1443:60:13","nodeType":"YulFunctionCall","src":"1443:60:13"},"variables":[{"name":"result","nativeSrc":"1433:6:13","nodeType":"YulTypedName","src":"1433:6:13","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1571:1:13","nodeType":"YulLiteral","src":"1571:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1574:1:13","nodeType":"YulLiteral","src":"1574:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1577:14:13","nodeType":"YulIdentifier","src":"1577:14:13"},"nativeSrc":"1577:16:13","nodeType":"YulFunctionCall","src":"1577:16:13"}],"functionName":{"name":"returndatacopy","nativeSrc":"1556:14:13","nodeType":"YulIdentifier","src":"1556:14:13"},"nativeSrc":"1556:38:13","nodeType":"YulFunctionCall","src":"1556:38:13"},"nativeSrc":"1556:38:13","nodeType":"YulExpressionStatement","src":"1556:38:13"},{"cases":[{"body":{"nativeSrc":"1689:59:13","nodeType":"YulBlock","src":"1689:59:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1714:1:13","nodeType":"YulLiteral","src":"1714:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1717:14:13","nodeType":"YulIdentifier","src":"1717:14:13"},"nativeSrc":"1717:16:13","nodeType":"YulFunctionCall","src":"1717:16:13"}],"functionName":{"name":"revert","nativeSrc":"1707:6:13","nodeType":"YulIdentifier","src":"1707:6:13"},"nativeSrc":"1707:27:13","nodeType":"YulFunctionCall","src":"1707:27:13"},"nativeSrc":"1707:27:13","nodeType":"YulExpressionStatement","src":"1707:27:13"}]},"nativeSrc":"1682:66:13","nodeType":"YulCase","src":"1682:66:13","value":{"kind":"number","nativeSrc":"1687:1:13","nodeType":"YulLiteral","src":"1687:1:13","type":"","value":"0"}},{"body":{"nativeSrc":"1769:59:13","nodeType":"YulBlock","src":"1769:59:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1794:1:13","nodeType":"YulLiteral","src":"1794:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1797:14:13","nodeType":"YulIdentifier","src":"1797:14:13"},"nativeSrc":"1797:16:13","nodeType":"YulFunctionCall","src":"1797:16:13"}],"functionName":{"name":"return","nativeSrc":"1787:6:13","nodeType":"YulIdentifier","src":"1787:6:13"},"nativeSrc":"1787:27:13","nodeType":"YulFunctionCall","src":"1787:27:13"},"nativeSrc":"1787:27:13","nodeType":"YulExpressionStatement","src":"1787:27:13"}]},"nativeSrc":"1761:67:13","nodeType":"YulCase","src":"1761:67:13","value":"default"}],"expression":{"name":"result","nativeSrc":"1615:6:13","nodeType":"YulIdentifier","src":"1615:6:13"},"nativeSrc":"1608:220:13","nodeType":"YulSwitch","src":"1608:220:13"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1665,"isOffset":false,"isSlot":false,"src":"1463:14:13","valueSize":1}],"id":1668,"nodeType":"InlineAssembly","src":"1019:819:13"}]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"754:190:13","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":1670,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:13","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"implementation","nameLocation":"976:14:13","nodeType":"VariableDeclaration","scope":1670,"src":"968:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:13"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"1009:0:13"},"scope":1695,"src":"949:895:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"1850:173:13","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"id":1676,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:13","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"2052:2:13"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1676,"src":"2086:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:13"},"scope":1695,"src":"2028:67:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"2361:45:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1681,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2381:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1680,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2371:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"2371:28:13"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"2101:217:13","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:13","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[],"src":"2341:2:13"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"2361:0:13"},"scope":1695,"src":"2323:83:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1693,"nodeType":"Block","src":"2639:28:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1690,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2649:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1692,"nodeType":"ExpressionStatement","src":"2649:11:13"}]},"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"2412:186:13","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":1694,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"2611:2:13"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[],"src":"2639:0:13"},"scope":1695,"src":"2603:64:13","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":1696,"src":"724:1945:13","usedErrors":[],"usedEvents":[]}],"src":"99:2571:13"},"id":13},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1773]},"id":1774,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1697,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"132:71:14","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1773,"linearizedBaseContracts":[1773],"name":"IERC20","nameLocation":"214:6:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"227:158:14","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1707,"name":"Transfer","nameLocation":"396:8:14","nodeType":"EventDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:14","nodeType":"VariableDeclaration","scope":1707,"src":"405:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:14","nodeType":"VariableDeclaration","scope":1707,"src":"427:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1705,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:14","nodeType":"VariableDeclaration","scope":1707,"src":"447:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:14"},"src":"390:72:14"},{"anonymous":false,"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"468:148:14","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1716,"name":"Approval","nameLocation":"627:8:14","nodeType":"EventDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:14","nodeType":"VariableDeclaration","scope":1716,"src":"636:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1712,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:14","nodeType":"VariableDeclaration","scope":1716,"src":"659:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1714,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:14","nodeType":"VariableDeclaration","scope":1716,"src":"684:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:14"},"src":"621:78:14"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"705:65:14","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1722,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:14","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"795:2:14"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1722,"src":"821:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:14"},"scope":1773,"src":"775:55:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"836:71:14","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1730,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:14","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"account","nameLocation":"939:7:14","nodeType":"VariableDeclaration","scope":1730,"src":"931:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:14"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"971:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:14"},"scope":1773,"src":"912:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"986:213:14","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1740,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:14","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"to","nameLocation":"1230:2:14","nodeType":"VariableDeclaration","scope":1740,"src":"1222:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"value","nameLocation":"1242:5:14","nodeType":"VariableDeclaration","scope":1740,"src":"1234:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:14"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"1267:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1737,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:14"},"scope":1773,"src":"1204:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"1279:264:14","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1750,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:14","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"owner","nameLocation":"1575:5:14","nodeType":"VariableDeclaration","scope":1750,"src":"1567:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"spender","nameLocation":"1590:7:14","nodeType":"VariableDeclaration","scope":1750,"src":"1582:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:14"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1750,"src":"1622:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:14"},"scope":1773,"src":"1548:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"1637:667:14","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1760,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:14","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"spender","nameLocation":"2334:7:14","nodeType":"VariableDeclaration","scope":1760,"src":"2326:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"value","nameLocation":"2351:5:14","nodeType":"VariableDeclaration","scope":1760,"src":"2343:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:14"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"2376:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1757,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:14"},"scope":1773,"src":"2309:73:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"2388:297:14","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1772,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:14","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"from","nameLocation":"2720:4:14","nodeType":"VariableDeclaration","scope":1772,"src":"2712:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"to","nameLocation":"2734:2:14","nodeType":"VariableDeclaration","scope":1772,"src":"2726:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"value","nameLocation":"2746:5:14","nodeType":"VariableDeclaration","scope":1772,"src":"2738:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:14"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1772,"src":"2771:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1769,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:14"},"scope":1773,"src":"2690:87:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1774,"src":"204:2575:14","usedErrors":[],"usedEvents":[1707,1716]}],"src":"106:2674:14"},"id":14},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[1508],"IERC20":[1773],"SafeERC20":[2237]},"id":2238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1775,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2238,"sourceUnit":1774,"src":"141:37:15","symbolAliases":[{"foreign":{"id":1776,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"149:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2238,"sourceUnit":1509,"src":"179:58:15","symbolAliases":[{"foreign":{"id":1778,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"187:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"239:458:15","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2237,"linearizedBaseContracts":[2237],"name":"SafeERC20","nameLocation":"706:9:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"722:65:15","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1785,"name":"SafeERC20FailedOperation","nameLocation":"798:24:15","nodeType":"ErrorDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"token","nameLocation":"831:5:15","nodeType":"VariableDeclaration","scope":1785,"src":"823:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:15"},"src":"792:46:15"},{"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"844:71:15","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1794,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:15","nodeType":"ErrorDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"spender","nameLocation":"967:7:15","nodeType":"VariableDeclaration","scope":1794,"src":"959:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:15","nodeType":"VariableDeclaration","scope":1794,"src":"976:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:15","nodeType":"VariableDeclaration","scope":1794,"src":"1002:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:15"},"src":"920:109:15"},{"body":{"id":1817,"nodeType":"Block","src":"1291:88:15","statements":[{"expression":{"arguments":[{"id":1806,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"1321:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1809,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"1343:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1740,"src":"1343:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1360:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1364:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1807,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1805,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1301:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1816,"nodeType":"ExpressionStatement","src":"1301:71:15"}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"1035:179:15","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:15","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"token","nameLocation":"1248:5:15","nodeType":"VariableDeclaration","scope":1818,"src":"1241:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":1797,"nodeType":"UserDefinedTypeName","pathNode":{"id":1796,"name":"IERC20","nameLocations":["1241:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"1241:6:15"},"referencedDeclaration":1773,"src":"1241:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"to","nameLocation":"1263:2:15","nodeType":"VariableDeclaration","scope":1818,"src":"1255:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"value","nameLocation":"1275:5:15","nodeType":"VariableDeclaration","scope":1818,"src":"1267:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:15"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[],"src":"1291:0:15"},"scope":2237,"src":"1219:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"1708:98:15","statements":[{"expression":{"arguments":[{"id":1832,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"1738:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1835,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"1760:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"1760:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1837,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1781:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1838,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"1787:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"1791:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1833,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1831,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1718:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"1718:81:15"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"1385:228:15","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:15","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"token","nameLocation":"1651:5:15","nodeType":"VariableDeclaration","scope":1845,"src":"1644:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":1821,"nodeType":"UserDefinedTypeName","pathNode":{"id":1820,"name":"IERC20","nameLocations":["1644:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"1644:6:15"},"referencedDeclaration":1773,"src":"1644:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"from","nameLocation":"1666:4:15","nodeType":"VariableDeclaration","scope":1845,"src":"1658:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"to","nameLocation":"1680:2:15","nodeType":"VariableDeclaration","scope":1845,"src":"1672:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"value","nameLocation":"1692:5:15","nodeType":"VariableDeclaration","scope":1845,"src":"1684:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:15"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"1708:0:15"},"scope":2237,"src":"1618:188:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"2033:99:15","statements":[{"expression":{"arguments":[{"id":1859,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"2074:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1862,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"2096:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1740,"src":"2096:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"2113:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"2117:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1860,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1858,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"2050:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1857,"id":1869,"nodeType":"Return","src":"2043:82:15"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"1812:126:15","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:15","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"token","nameLocation":"1975:5:15","nodeType":"VariableDeclaration","scope":1871,"src":"1968:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":1848,"nodeType":"UserDefinedTypeName","pathNode":{"id":1847,"name":"IERC20","nameLocations":["1968:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"1968:6:15"},"referencedDeclaration":1773,"src":"1968:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"to","nameLocation":"1990:2:15","nodeType":"VariableDeclaration","scope":1871,"src":"1982:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"value","nameLocation":"2002:5:15","nodeType":"VariableDeclaration","scope":1871,"src":"1994:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:15"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"2027:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1855,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:15"},"scope":2237,"src":"1943:189:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1899,"nodeType":"Block","src":"2381:109:15","statements":[{"expression":{"arguments":[{"id":1887,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2422:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1890,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2444:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"2444:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1892,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"2465:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1893,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"2471:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2475:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1888,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1886,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"2398:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1885,"id":1898,"nodeType":"Return","src":"2391:92:15"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"2138:130:15","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:15","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"token","nameLocation":"2309:5:15","nodeType":"VariableDeclaration","scope":1900,"src":"2302:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":1874,"nodeType":"UserDefinedTypeName","pathNode":{"id":1873,"name":"IERC20","nameLocations":["2302:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"2302:6:15"},"referencedDeclaration":1773,"src":"2302:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"from","nameLocation":"2324:4:15","nodeType":"VariableDeclaration","scope":1900,"src":"2316:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"to","nameLocation":"2338:2:15","nodeType":"VariableDeclaration","scope":1900,"src":"2330:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"value","nameLocation":"2350:5:15","nodeType":"VariableDeclaration","scope":1900,"src":"2342:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:15"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1900,"src":"2375:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1883,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:15"},"scope":2237,"src":"2273:217:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"3232:139:15","statements":[{"assignments":[1912],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:15","nodeType":"VariableDeclaration","scope":1930,"src":"3242:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1921,"initialValue":{"arguments":[{"arguments":[{"id":1917,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2237","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2237","typeString":"library SafeERC20"}],"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:15","typeDescriptions":{}}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1919,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"3296:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1913,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"3265:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1750,"src":"3265:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:15"},{"expression":{"arguments":[{"id":1923,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"3327:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"id":1924,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"3334:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"3343:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"3358:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3314:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1929,"nodeType":"ExpressionStatement","src":"3314:50:15"}]},"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"2496:645:15","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:15","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"token","nameLocation":"3184:5:15","nodeType":"VariableDeclaration","scope":1931,"src":"3177:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":1903,"nodeType":"UserDefinedTypeName","pathNode":{"id":1902,"name":"IERC20","nameLocations":["3177:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"3177:6:15"},"referencedDeclaration":1773,"src":"3177:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"spender","nameLocation":"3199:7:15","nodeType":"VariableDeclaration","scope":1931,"src":"3191:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"value","nameLocation":"3216:5:15","nodeType":"VariableDeclaration","scope":1931,"src":"3208:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:15"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[],"src":"3232:0:15"},"scope":2237,"src":"3146:225:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1973,"nodeType":"Block","src":"4137:370:15","statements":[{"id":1972,"nodeType":"UncheckedBlock","src":"4147:354:15","statements":[{"assignments":[1943],"declarations":[{"constant":false,"id":1943,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:15","nodeType":"VariableDeclaration","scope":1972,"src":"4171:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1952,"initialValue":{"arguments":[{"arguments":[{"id":1948,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2237","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2237","typeString":"library SafeERC20"}],"id":1947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:15","typeDescriptions":{}}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1950,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"4229:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1944,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"4198:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1750,"src":"4198:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"4255:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1954,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"4274:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"nodeType":"IfStatement","src":"4251:160:15","trueBody":{"id":1962,"nodeType":"Block","src":"4293:118:15","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"4351:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1958,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"4360:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1959,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"4378:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1956,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"4318:32:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1961,"nodeType":"RevertStatement","src":"4311:85:15"}]}},{"expression":{"arguments":[{"id":1965,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"4437:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"id":1966,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"4444:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1967,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"4453:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1968,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"4472:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1964,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4424:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"ExpressionStatement","src":"4424:66:15"}]}]},"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"3377:657:15","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1974,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:15","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"token","nameLocation":"4077:5:15","nodeType":"VariableDeclaration","scope":1974,"src":"4070:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":1934,"nodeType":"UserDefinedTypeName","pathNode":{"id":1933,"name":"IERC20","nameLocations":["4070:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"4070:6:15"},"referencedDeclaration":1773,"src":"4070:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"spender","nameLocation":"4092:7:15","nodeType":"VariableDeclaration","scope":1974,"src":"4084:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:15","nodeType":"VariableDeclaration","scope":1974,"src":"4101:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:15"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[],"src":"4137:0:15"},"scope":2237,"src":"4039:468:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2020,"nodeType":"Block","src":"5161:303:15","statements":[{"assignments":[1986],"declarations":[{"constant":false,"id":1986,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:15","nodeType":"VariableDeclaration","scope":2020,"src":"5171:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1985,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1995,"initialValue":{"arguments":[{"expression":{"id":1989,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"5214:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1760,"src":"5214:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"5230:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5239:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1987,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:15"},{"condition":{"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:15","subExpression":{"arguments":[{"id":1997,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"5286:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"id":1998,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"5293:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1996,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"5262:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2019,"nodeType":"IfStatement","src":"5257:201:15","trueBody":{"id":2018,"nodeType":"Block","src":"5308:150:15","statements":[{"expression":{"arguments":[{"id":2002,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"5342:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2005,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"5364:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1760,"src":"5364:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2007,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"5380:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2003,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2001,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"5322:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2012,"nodeType":"ExpressionStatement","src":"5322:71:15"},{"expression":{"arguments":[{"id":2014,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"5427:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},{"id":2015,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"5434:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2013,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"5407:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2017,"nodeType":"ExpressionStatement","src":"5407:40:15"}]}}]},"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"4513:566:15","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":2021,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:15","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"token","nameLocation":"5113:5:15","nodeType":"VariableDeclaration","scope":2021,"src":"5106:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":1977,"nodeType":"UserDefinedTypeName","pathNode":{"id":1976,"name":"IERC20","nameLocations":["5106:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"5106:6:15"},"referencedDeclaration":1773,"src":"5106:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1980,"mutability":"mutable","name":"spender","nameLocation":"5128:7:15","nodeType":"VariableDeclaration","scope":2021,"src":"5120:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"value","nameLocation":"5145:5:15","nodeType":"VariableDeclaration","scope":2021,"src":"5137:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:15"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[],"src":"5161:0:15"},"scope":2237,"src":"5084:380:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2063,"nodeType":"Block","src":"5911:219:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2034,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5925:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:15","memberName":"code","nodeType":"MemberAccess","src":"5925:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:15","memberName":"length","nodeType":"MemberAccess","src":"5925:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:15","subExpression":{"arguments":[{"id":2048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"6034:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"6038:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2050,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"6045:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2046,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"6012:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:15","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1459,"src":"6012:21:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"6007:117:15","trueBody":{"id":2060,"nodeType":"Block","src":"6052:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2056,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"6106:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:15","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2053,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"6073:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2059,"nodeType":"RevertStatement","src":"6066:47:15"}]}},"id":2062,"nodeType":"IfStatement","src":"5921:203:15","trueBody":{"id":2045,"nodeType":"Block","src":"5946:55:15","statements":[{"expression":{"arguments":[{"id":2040,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5973:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},{"id":2041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5980:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"5984:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"5960:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"ExpressionStatement","src":"5960:30:15"}]}}]},"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"5470:333:15","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2064,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:15","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"token","nameLocation":"5849:5:15","nodeType":"VariableDeclaration","scope":2064,"src":"5840:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"},"typeName":{"id":2024,"nodeType":"UserDefinedTypeName","pathNode":{"id":2023,"name":"IERC1363","nameLocations":["5840:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1508,"src":"5840:8:15"},"referencedDeclaration":1508,"src":"5840:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"to","nameLocation":"5864:2:15","nodeType":"VariableDeclaration","scope":2064,"src":"5856:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"value","nameLocation":"5876:5:15","nodeType":"VariableDeclaration","scope":2064,"src":"5868:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"data","nameLocation":"5896:4:15","nodeType":"VariableDeclaration","scope":2064,"src":"5883:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2030,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:15"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"5911:0:15"},"scope":2237,"src":"5808:322:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2110,"nodeType":"Block","src":"6649:239:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6663:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:15","memberName":"code","nodeType":"MemberAccess","src":"6663:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:15","memberName":"length","nodeType":"MemberAccess","src":"6663:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:15","subExpression":{"arguments":[{"id":2094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6786:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2095,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6792:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"6796:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2097,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"6803:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2092,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6760:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:15","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"6760:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2108,"nodeType":"IfStatement","src":"6755:127:15","trueBody":{"id":2107,"nodeType":"Block","src":"6810:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2103,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6864:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}],"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2101,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:15","typeDescriptions":{}}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2100,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"6831:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2106,"nodeType":"RevertStatement","src":"6824:47:15"}]}},"id":2109,"nodeType":"IfStatement","src":"6659:223:15","trueBody":{"id":2091,"nodeType":"Block","src":"6684:65:15","statements":[{"expression":{"arguments":[{"id":2085,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6715:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},{"id":2086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6722:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2087,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6728:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"6732:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2084,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"6698:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2090,"nodeType":"ExpressionStatement","src":"6698:40:15"}]}}]},"documentation":{"id":2065,"nodeType":"StructuredDocumentation","src":"6136:341:15","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:15","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"token","nameLocation":"6536:5:15","nodeType":"VariableDeclaration","scope":2111,"src":"6527:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"},"typeName":{"id":2067,"nodeType":"UserDefinedTypeName","pathNode":{"id":2066,"name":"IERC1363","nameLocations":["6527:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1508,"src":"6527:8:15"},"referencedDeclaration":1508,"src":"6527:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"from","nameLocation":"6559:4:15","nodeType":"VariableDeclaration","scope":2111,"src":"6551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"to","nameLocation":"6581:2:15","nodeType":"VariableDeclaration","scope":2111,"src":"6573:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"value","nameLocation":"6601:5:15","nodeType":"VariableDeclaration","scope":2111,"src":"6593:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"data","nameLocation":"6629:4:15","nodeType":"VariableDeclaration","scope":2111,"src":"6616:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2075,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:15"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[],"src":"6649:0:15"},"scope":2237,"src":"6482:406:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2153,"nodeType":"Block","src":"7655:218:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2124,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"7669:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:15","memberName":"code","nodeType":"MemberAccess","src":"7669:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:15","memberName":"length","nodeType":"MemberAccess","src":"7669:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:15","subExpression":{"arguments":[{"id":2138,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"7777:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7781:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2140,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"7788:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"7756:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:15","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"7756:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2151,"nodeType":"IfStatement","src":"7751:116:15","trueBody":{"id":2150,"nodeType":"Block","src":"7795:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2146,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"7849:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}],"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:15","typeDescriptions":{}}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2143,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"7816:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2149,"nodeType":"RevertStatement","src":"7809:47:15"}]}},"id":2152,"nodeType":"IfStatement","src":"7665:202:15","trueBody":{"id":2135,"nodeType":"Block","src":"7690:55:15","statements":[{"expression":{"arguments":[{"id":2130,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"7717:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},{"id":2131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"7724:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7728:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2129,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"7704:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1773_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"7704:30:15"}]}}]},"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"6894:654:15","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:15","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"token","nameLocation":"7593:5:15","nodeType":"VariableDeclaration","scope":2154,"src":"7584:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"},"typeName":{"id":2114,"nodeType":"UserDefinedTypeName","pathNode":{"id":2113,"name":"IERC1363","nameLocations":["7584:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":1508,"src":"7584:8:15"},"referencedDeclaration":1508,"src":"7584:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1508","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"to","nameLocation":"7608:2:15","nodeType":"VariableDeclaration","scope":2154,"src":"7600:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"value","nameLocation":"7620:5:15","nodeType":"VariableDeclaration","scope":2154,"src":"7612:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"data","nameLocation":"7640:4:15","nodeType":"VariableDeclaration","scope":2154,"src":"7627:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2120,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:15"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[],"src":"7655:0:15"},"scope":2237,"src":"7553:320:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2194,"nodeType":"Block","src":"8440:650:15","statements":[{"assignments":[2164],"declarations":[{"constant":false,"id":2164,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:15","nodeType":"VariableDeclaration","scope":2194,"src":"8450:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2165,"nodeType":"VariableDeclarationStatement","src":"8450:18:15"},{"assignments":[2167],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:15","nodeType":"VariableDeclaration","scope":2194,"src":"8478:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2168,"nodeType":"VariableDeclarationStatement","src":"8478:19:15"},{"AST":{"nativeSrc":"8532:396:15","nodeType":"YulBlock","src":"8532:396:15","statements":[{"nativeSrc":"8546:75:15","nodeType":"YulVariableDeclaration","src":"8546:75:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:15","nodeType":"YulIdentifier","src":"8566:3:15"},"nativeSrc":"8566:5:15","nodeType":"YulFunctionCall","src":"8566:5:15"},{"name":"token","nativeSrc":"8573:5:15","nodeType":"YulIdentifier","src":"8573:5:15"},{"kind":"number","nativeSrc":"8580:1:15","nodeType":"YulLiteral","src":"8580:1:15","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:15","nodeType":"YulIdentifier","src":"8587:4:15"},{"kind":"number","nativeSrc":"8593:4:15","nodeType":"YulLiteral","src":"8593:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:15","nodeType":"YulIdentifier","src":"8583:3:15"},"nativeSrc":"8583:15:15","nodeType":"YulFunctionCall","src":"8583:15:15"},{"arguments":[{"name":"data","nativeSrc":"8606:4:15","nodeType":"YulIdentifier","src":"8606:4:15"}],"functionName":{"name":"mload","nativeSrc":"8600:5:15","nodeType":"YulIdentifier","src":"8600:5:15"},"nativeSrc":"8600:11:15","nodeType":"YulFunctionCall","src":"8600:11:15"},{"kind":"number","nativeSrc":"8613:1:15","nodeType":"YulLiteral","src":"8613:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:15","nodeType":"YulLiteral","src":"8616:4:15","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:15","nodeType":"YulIdentifier","src":"8561:4:15"},"nativeSrc":"8561:60:15","nodeType":"YulFunctionCall","src":"8561:60:15"},"variables":[{"name":"success","nativeSrc":"8550:7:15","nodeType":"YulTypedName","src":"8550:7:15","type":""}]},{"body":{"nativeSrc":"8682:157:15","nodeType":"YulBlock","src":"8682:157:15","statements":[{"nativeSrc":"8700:22:15","nodeType":"YulVariableDeclaration","src":"8700:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:15","nodeType":"YulLiteral","src":"8717:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:15","nodeType":"YulIdentifier","src":"8711:5:15"},"nativeSrc":"8711:11:15","nodeType":"YulFunctionCall","src":"8711:11:15"},"variables":[{"name":"ptr","nativeSrc":"8704:3:15","nodeType":"YulTypedName","src":"8704:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:15","nodeType":"YulIdentifier","src":"8754:3:15"},{"kind":"number","nativeSrc":"8759:1:15","nodeType":"YulLiteral","src":"8759:1:15","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:15","nodeType":"YulIdentifier","src":"8762:14:15"},"nativeSrc":"8762:16:15","nodeType":"YulFunctionCall","src":"8762:16:15"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:15","nodeType":"YulIdentifier","src":"8739:14:15"},"nativeSrc":"8739:40:15","nodeType":"YulFunctionCall","src":"8739:40:15"},"nativeSrc":"8739:40:15","nodeType":"YulExpressionStatement","src":"8739:40:15"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:15","nodeType":"YulIdentifier","src":"8803:3:15"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:15","nodeType":"YulIdentifier","src":"8808:14:15"},"nativeSrc":"8808:16:15","nodeType":"YulFunctionCall","src":"8808:16:15"}],"functionName":{"name":"revert","nativeSrc":"8796:6:15","nodeType":"YulIdentifier","src":"8796:6:15"},"nativeSrc":"8796:29:15","nodeType":"YulFunctionCall","src":"8796:29:15"},"nativeSrc":"8796:29:15","nodeType":"YulExpressionStatement","src":"8796:29:15"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:15","nodeType":"YulIdentifier","src":"8673:7:15"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:15","nodeType":"YulIdentifier","src":"8666:6:15"},"nativeSrc":"8666:15:15","nodeType":"YulFunctionCall","src":"8666:15:15"},"nativeSrc":"8663:176:15","nodeType":"YulIf","src":"8663:176:15"},{"nativeSrc":"8852:30:15","nodeType":"YulAssignment","src":"8852:30:15","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:15","nodeType":"YulIdentifier","src":"8866:14:15"},"nativeSrc":"8866:16:15","nodeType":"YulFunctionCall","src":"8866:16:15"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:15","nodeType":"YulIdentifier","src":"8852:10:15"}]},{"nativeSrc":"8895:23:15","nodeType":"YulAssignment","src":"8895:23:15","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:15","nodeType":"YulLiteral","src":"8916:1:15","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:15","nodeType":"YulIdentifier","src":"8910:5:15"},"nativeSrc":"8910:8:15","nodeType":"YulFunctionCall","src":"8910:8:15"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:15","nodeType":"YulIdentifier","src":"8895:11:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2160,"isOffset":false,"isSlot":false,"src":"8587:4:15","valueSize":1},{"declaration":2160,"isOffset":false,"isSlot":false,"src":"8606:4:15","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"8852:10:15","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"8895:11:15","valueSize":1},{"declaration":2158,"isOffset":false,"isSlot":false,"src":"8573:5:15","valueSize":1}],"flags":["memory-safe"],"id":2169,"nodeType":"InlineAssembly","src":"8507:421:15"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"8942:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"8994:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2175,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"8968:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}],"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:15","typeDescriptions":{}}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:15","memberName":"code","nodeType":"MemberAccess","src":"8960:19:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:15","memberName":"length","nodeType":"MemberAccess","src":"8960:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2193,"nodeType":"IfStatement","src":"8938:146:15","trueBody":{"id":2192,"nodeType":"Block","src":"9012:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2188,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"9066:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}],"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:15","typeDescriptions":{}}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2185,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"9033:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2191,"nodeType":"RevertStatement","src":"9026:47:15"}]}}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"7879:486:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2195,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:15","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"token","nameLocation":"8406:5:15","nodeType":"VariableDeclaration","scope":2195,"src":"8399:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":2157,"nodeType":"UserDefinedTypeName","pathNode":{"id":2156,"name":"IERC20","nameLocations":["8399:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"8399:6:15"},"referencedDeclaration":1773,"src":"8399:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"data","nameLocation":"8426:4:15","nodeType":"VariableDeclaration","scope":2195,"src":"8413:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:15"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"8440:0:15"},"scope":2237,"src":"8370:720:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2235,"nodeType":"Block","src":"9681:391:15","statements":[{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"success","nameLocation":"9696:7:15","nodeType":"VariableDeclaration","scope":2235,"src":"9691:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2206,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2208,"nodeType":"VariableDeclarationStatement","src":"9691:12:15"},{"assignments":[2210],"declarations":[{"constant":false,"id":2210,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:15","nodeType":"VariableDeclaration","scope":2235,"src":"9713:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2211,"nodeType":"VariableDeclarationStatement","src":"9713:18:15"},{"assignments":[2213],"declarations":[{"constant":false,"id":2213,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:15","nodeType":"VariableDeclaration","scope":2235,"src":"9741:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2214,"nodeType":"VariableDeclarationStatement","src":"9741:19:15"},{"AST":{"nativeSrc":"9795:174:15","nodeType":"YulBlock","src":"9795:174:15","statements":[{"nativeSrc":"9809:71:15","nodeType":"YulAssignment","src":"9809:71:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:15","nodeType":"YulIdentifier","src":"9825:3:15"},"nativeSrc":"9825:5:15","nodeType":"YulFunctionCall","src":"9825:5:15"},{"name":"token","nativeSrc":"9832:5:15","nodeType":"YulIdentifier","src":"9832:5:15"},{"kind":"number","nativeSrc":"9839:1:15","nodeType":"YulLiteral","src":"9839:1:15","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:15","nodeType":"YulIdentifier","src":"9846:4:15"},{"kind":"number","nativeSrc":"9852:4:15","nodeType":"YulLiteral","src":"9852:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:15","nodeType":"YulIdentifier","src":"9842:3:15"},"nativeSrc":"9842:15:15","nodeType":"YulFunctionCall","src":"9842:15:15"},{"arguments":[{"name":"data","nativeSrc":"9865:4:15","nodeType":"YulIdentifier","src":"9865:4:15"}],"functionName":{"name":"mload","nativeSrc":"9859:5:15","nodeType":"YulIdentifier","src":"9859:5:15"},"nativeSrc":"9859:11:15","nodeType":"YulFunctionCall","src":"9859:11:15"},{"kind":"number","nativeSrc":"9872:1:15","nodeType":"YulLiteral","src":"9872:1:15","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:15","nodeType":"YulLiteral","src":"9875:4:15","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:15","nodeType":"YulIdentifier","src":"9820:4:15"},"nativeSrc":"9820:60:15","nodeType":"YulFunctionCall","src":"9820:60:15"},"variableNames":[{"name":"success","nativeSrc":"9809:7:15","nodeType":"YulIdentifier","src":"9809:7:15"}]},{"nativeSrc":"9893:30:15","nodeType":"YulAssignment","src":"9893:30:15","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:15","nodeType":"YulIdentifier","src":"9907:14:15"},"nativeSrc":"9907:16:15","nodeType":"YulFunctionCall","src":"9907:16:15"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:15","nodeType":"YulIdentifier","src":"9893:10:15"}]},{"nativeSrc":"9936:23:15","nodeType":"YulAssignment","src":"9936:23:15","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:15","nodeType":"YulLiteral","src":"9957:1:15","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:15","nodeType":"YulIdentifier","src":"9951:5:15"},"nativeSrc":"9951:8:15","nodeType":"YulFunctionCall","src":"9951:8:15"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:15","nodeType":"YulIdentifier","src":"9936:11:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2201,"isOffset":false,"isSlot":false,"src":"9846:4:15","valueSize":1},{"declaration":2201,"isOffset":false,"isSlot":false,"src":"9865:4:15","valueSize":1},{"declaration":2210,"isOffset":false,"isSlot":false,"src":"9893:10:15","valueSize":1},{"declaration":2213,"isOffset":false,"isSlot":false,"src":"9936:11:15","valueSize":1},{"declaration":2207,"isOffset":false,"isSlot":false,"src":"9809:7:15","valueSize":1},{"declaration":2199,"isOffset":false,"isSlot":false,"src":"9832:5:15","valueSize":1}],"flags":["memory-safe"],"id":2215,"nodeType":"InlineAssembly","src":"9770:199:15"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2216,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9985:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"9997:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"10048:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"10023:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}],"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:15","typeDescriptions":{}}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:15","memberName":"code","nodeType":"MemberAccess","src":"10015:19:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:15","memberName":"length","nodeType":"MemberAccess","src":"10015:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2205,"id":2234,"nodeType":"Return","src":"9978:87:15"}]},"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"9096:491:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:15","nodeType":"FunctionDefinition","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"token","nameLocation":"9632:5:15","nodeType":"VariableDeclaration","scope":2236,"src":"9625:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"},"typeName":{"id":2198,"nodeType":"UserDefinedTypeName","pathNode":{"id":2197,"name":"IERC20","nameLocations":["9625:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"9625:6:15"},"referencedDeclaration":1773,"src":"9625:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"data","nameLocation":"9652:4:15","nodeType":"VariableDeclaration","scope":2236,"src":"9639:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2200,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:15"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"9675:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2203,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:15"},"scope":2237,"src":"9592:480:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2238,"src":"698:9376:15","usedErrors":[1785,1794],"usedEvents":[]}],"src":"115:9960:15"},"id":15},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3115],"Comparators":[3147],"Math":[5438],"SlotDerivation":[3657],"StorageSlot":[3781]},"id":3116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3116,"sourceUnit":3148,"src":"209:46:16","symbolAliases":[{"foreign":{"id":2240,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"217:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3116,"sourceUnit":3658,"src":"256:52:16","symbolAliases":[{"foreign":{"id":2242,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"264:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3116,"sourceUnit":3782,"src":"309:46:16","symbolAliases":[{"foreign":{"id":2244,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"317:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2247,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3116,"sourceUnit":5439,"src":"356:37:16","symbolAliases":[{"foreign":{"id":2246,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"364:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"395:63:16","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3115,"linearizedBaseContracts":[3115],"name":"Arrays","nameLocation":"467:6:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2251,"libraryName":{"id":2249,"name":"SlotDerivation","nameLocations":["486:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":3657,"src":"486:14:16"},"nodeType":"UsingForDirective","src":"480:33:16","typeName":{"id":2250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2254,"libraryName":{"id":2252,"name":"StorageSlot","nameLocations":["524:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3781,"src":"524:11:16"},"nodeType":"UsingForDirective","src":"518:30:16","typeName":{"id":2253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2286,"nodeType":"Block","src":"1628:83:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2276,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1656:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2275,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"1649:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2279,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1669:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2278,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"1664:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2281,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"1677:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2274,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"1638:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2283,"nodeType":"ExpressionStatement","src":"1638:44:16"},{"expression":{"id":2284,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1699:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2273,"id":2285,"nodeType":"Return","src":"1692:12:16"}]},"documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"554:915:16","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2287,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:16","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"array","nameLocation":"1514:5:16","nodeType":"VariableDeclaration","scope":2287,"src":"1497:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2257,"nodeType":"ArrayTypeName","src":"1497:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"comp","nameLocation":"1576:4:16","nodeType":"VariableDeclaration","scope":2287,"src":"1529:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2267,"nodeType":"FunctionTypeName","parameterTypes":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"1538:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"1547:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:16"},"returnParameterTypes":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"1570:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2264,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:16"},"src":"1529:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:16"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2287,"src":"1610:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2271,"nodeType":"ArrayTypeName","src":"1610:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:16"},"scope":3115,"src":"1474:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2305,"nodeType":"Block","src":"1894:66:16","statements":[{"expression":{"arguments":[{"id":2298,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"1909:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2299,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"1916:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3147_$","typeString":"type(library Comparators)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"1916:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2297,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2287,2306,2338,2359,2391,2412],"referencedDeclaration":2287,"src":"1904:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2302,"nodeType":"ExpressionStatement","src":"1904:27:16"},{"expression":{"id":2303,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"1948:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2296,"id":2304,"nodeType":"Return","src":"1941:12:16"}]},"documentation":{"id":2288,"nodeType":"StructuredDocumentation","src":"1717:93:16","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:16","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"array","nameLocation":"1846:5:16","nodeType":"VariableDeclaration","scope":2306,"src":"1829:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"nodeType":"ArrayTypeName","src":"1829:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:16"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"1876:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2294,"nodeType":"ArrayTypeName","src":"1876:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:16"},"scope":3115,"src":"1815:145:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2337,"nodeType":"Block","src":"3040:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2328,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"3075:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2327,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2563,2575],"referencedDeclaration":2563,"src":"3055:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2331,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"3102:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2330,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2601,2627],"referencedDeclaration":2601,"src":"3083:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2326,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2287,2306,2338,2359,2391,2412],"referencedDeclaration":2287,"src":"3050:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2334,"nodeType":"ExpressionStatement","src":"3050:58:16"},{"expression":{"id":2335,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"3125:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2325,"id":2336,"nodeType":"Return","src":"3118:12:16"}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"1966:915:16","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:16","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"array","nameLocation":"2926:5:16","nodeType":"VariableDeclaration","scope":2338,"src":"2909:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2309,"nodeType":"ArrayTypeName","src":"2909:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"comp","nameLocation":"2988:4:16","nodeType":"VariableDeclaration","scope":2338,"src":"2941:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2319,"nodeType":"FunctionTypeName","parameterTypes":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2319,"src":"2950:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2311,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2319,"src":"2959:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:16"},"returnParameterTypes":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2319,"src":"2982:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2316,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:16"},"src":"2941:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:16"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"3022:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2323,"nodeType":"ArrayTypeName","src":"3022:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:16"},"scope":3115,"src":"2886:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2358,"nodeType":"Block","src":"3320:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2350,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"3355:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2349,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2563,2575],"referencedDeclaration":2563,"src":"3335:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2352,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"3363:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3147_$","typeString":"type(library Comparators)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"3363:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2348,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2287,2306,2338,2359,2391,2412],"referencedDeclaration":2287,"src":"3330:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2355,"nodeType":"ExpressionStatement","src":"3330:48:16"},{"expression":{"id":2356,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"3395:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2347,"id":2357,"nodeType":"Return","src":"3388:12:16"}]},"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"3143:93:16","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:16","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"array","nameLocation":"3272:5:16","nodeType":"VariableDeclaration","scope":2359,"src":"3255:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2341,"nodeType":"ArrayTypeName","src":"3255:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:16"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2359,"src":"3302:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2345,"nodeType":"ArrayTypeName","src":"3302:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:16"},"scope":3115,"src":"3241:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2390,"nodeType":"Block","src":"4487:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2381,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2380,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2563,2575],"referencedDeclaration":2575,"src":"4502:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2384,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"4549:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2383,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2601,2627],"referencedDeclaration":2627,"src":"4530:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2379,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2287,2306,2338,2359,2391,2412],"referencedDeclaration":2287,"src":"4497:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2387,"nodeType":"ExpressionStatement","src":"4497:58:16"},{"expression":{"id":2388,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"4572:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2378,"id":2389,"nodeType":"Return","src":"4565:12:16"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"3413:915:16","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:16","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"array","nameLocation":"4373:5:16","nodeType":"VariableDeclaration","scope":2391,"src":"4356:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2362,"nodeType":"ArrayTypeName","src":"4356:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"comp","nameLocation":"4435:4:16","nodeType":"VariableDeclaration","scope":2391,"src":"4388:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2372,"nodeType":"FunctionTypeName","parameterTypes":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"4397:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"4406:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:16"},"returnParameterTypes":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"4429:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2369,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:16"},"src":"4388:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:16"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2391,"src":"4469:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2376,"nodeType":"ArrayTypeName","src":"4469:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:16"},"scope":3115,"src":"4333:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2411,"nodeType":"Block","src":"4767:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2403,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4802:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2402,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2563,2575],"referencedDeclaration":2575,"src":"4782:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2405,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"4810:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3147_$","typeString":"type(library Comparators)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"4810:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2401,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2287,2306,2338,2359,2391,2412],"referencedDeclaration":2287,"src":"4777:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2408,"nodeType":"ExpressionStatement","src":"4777:48:16"},{"expression":{"id":2409,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4842:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2400,"id":2410,"nodeType":"Return","src":"4835:12:16"}]},"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"4590:93:16","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2412,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:16","nodeType":"FunctionDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"array","nameLocation":"4719:5:16","nodeType":"VariableDeclaration","scope":2412,"src":"4702:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2394,"nodeType":"ArrayTypeName","src":"4702:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:16"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2412,"src":"4749:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2398,"nodeType":"ArrayTypeName","src":"4749:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:16"},"scope":3115,"src":"4688:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"5470:889:16","statements":[{"id":2498,"nodeType":"UncheckedBlock","src":"5480:873:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2430,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"5508:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2431,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"5514:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2436,"nodeType":"IfStatement","src":"5504:31:16","trueBody":{"functionReturnParameters":2429,"id":2435,"nodeType":"Return","src":"5528:7:16"}},{"assignments":[2438],"declarations":[{"constant":false,"id":2438,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:16","nodeType":"VariableDeclaration","scope":2498,"src":"5591:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2442,"initialValue":{"arguments":[{"id":2440,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"5614:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2439,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"5607:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:16"},{"assignments":[2444],"declarations":[{"constant":false,"id":2444,"mutability":"mutable","name":"pos","nameLocation":"5715:3:16","nodeType":"VariableDeclaration","scope":2498,"src":"5707:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2446,"initialValue":{"id":2445,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"5721:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:16"},{"body":{"id":2477,"nodeType":"Block","src":"5795:331:16","statements":[{"condition":{"arguments":[{"arguments":[{"id":2462,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5829:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2461,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"5822:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2464,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"5834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2460,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"5817:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2476,"nodeType":"IfStatement","src":"5813:299:16","trueBody":{"id":2475,"nodeType":"Block","src":"5842:270:16","statements":[{"expression":{"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2466,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"6046:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2469,"nodeType":"ExpressionStatement","src":"6046:11:16"},{"expression":{"arguments":[{"id":2471,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"6085:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2472,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"6090:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2470,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6079:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"ExpressionStatement","src":"6079:14:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5773:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2454,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"5778:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2478,"initializationExpression":{"assignments":[2448],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"it","nameLocation":"5754:2:16","nodeType":"VariableDeclaration","scope":2478,"src":"5746:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2452,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"5759:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2456,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5783:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2459,"nodeType":"ExpressionStatement","src":"5783:10:16"},"nodeType":"ForStatement","src":"5741:385:16"},{"expression":{"arguments":[{"id":2480,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"6146:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2481,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"6153:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2479,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6140:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2483,"nodeType":"ExpressionStatement","src":"6140:17:16"},{"expression":{"arguments":[{"id":2485,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"6207:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2486,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"6214:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2487,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"6219:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2484,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6196:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"ExpressionStatement","src":"6196:28:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"6284:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2494,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"6296:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2495,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"6301:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2490,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6273:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2497,"nodeType":"ExpressionStatement","src":"6273:33:16"}]}]},"documentation":{"id":2413,"nodeType":"StructuredDocumentation","src":"4860:491:16","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:16","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"begin","nameLocation":"5384:5:16","nodeType":"VariableDeclaration","scope":2500,"src":"5376:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"end","nameLocation":"5399:3:16","nodeType":"VariableDeclaration","scope":2500,"src":"5391:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"comp","nameLocation":"5451:4:16","nodeType":"VariableDeclaration","scope":2500,"src":"5404:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2426,"nodeType":"FunctionTypeName","parameterTypes":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"5413:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"5422:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:16"},"returnParameterTypes":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"5445:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2423,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:16"},"src":"5404:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:16"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[],"src":"5470:0:16"},"scope":3115,"src":"5356:1003:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2510,"nodeType":"Block","src":"6532:88:16","statements":[{"AST":{"nativeSrc":"6567:47:16","nodeType":"YulBlock","src":"6567:47:16","statements":[{"nativeSrc":"6581:23:16","nodeType":"YulAssignment","src":"6581:23:16","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:16","nodeType":"YulIdentifier","src":"6592:5:16"},{"kind":"number","nativeSrc":"6599:4:16","nodeType":"YulLiteral","src":"6599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:16","nodeType":"YulIdentifier","src":"6588:3:16"},"nativeSrc":"6588:16:16","nodeType":"YulFunctionCall","src":"6588:16:16"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:16","nodeType":"YulIdentifier","src":"6581:3:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2504,"isOffset":false,"isSlot":false,"src":"6592:5:16","valueSize":1},{"declaration":2507,"isOffset":false,"isSlot":false,"src":"6581:3:16","valueSize":1}],"flags":["memory-safe"],"id":2509,"nodeType":"InlineAssembly","src":"6542:72:16"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"6365:87:16","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2511,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:16","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"array","nameLocation":"6490:5:16","nodeType":"VariableDeclaration","scope":2511,"src":"6473:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ArrayTypeName","src":"6473:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:16"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:16","nodeType":"VariableDeclaration","scope":2511,"src":"6519:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:16"},"scope":3115,"src":"6457:163:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2530,"nodeType":"Block","src":"6892:93:16","statements":[{"id":2529,"nodeType":"UncheckedBlock","src":"6902:77:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2521,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"6940:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2520,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"6933:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2523,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"6949:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:16","memberName":"length","nodeType":"MemberAccess","src":"6949:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2519,"id":2528,"nodeType":"Return","src":"6926:42:16"}]}]},"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"6626:188:16","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2531,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:16","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"array","nameLocation":"6850:5:16","nodeType":"VariableDeclaration","scope":2531,"src":"6833:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ArrayTypeName","src":"6833:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:16"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:16","nodeType":"VariableDeclaration","scope":2531,"src":"6879:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:16"},"scope":3115,"src":"6819:166:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2540,"nodeType":"Block","src":"7136:68:16","statements":[{"AST":{"nativeSrc":"7155:43:16","nodeType":"YulBlock","src":"7155:43:16","statements":[{"nativeSrc":"7169:19:16","nodeType":"YulAssignment","src":"7169:19:16","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:16","nodeType":"YulIdentifier","src":"7184:3:16"}],"functionName":{"name":"mload","nativeSrc":"7178:5:16","nodeType":"YulIdentifier","src":"7178:5:16"},"nativeSrc":"7178:10:16","nodeType":"YulFunctionCall","src":"7178:10:16"},"variableNames":[{"name":"value","nativeSrc":"7169:5:16","nodeType":"YulIdentifier","src":"7169:5:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2534,"isOffset":false,"isSlot":false,"src":"7184:3:16","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"7169:5:16","valueSize":1}],"id":2539,"nodeType":"InlineAssembly","src":"7146:52:16"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"6991:74:16","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:16","nodeType":"FunctionDefinition","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:16","nodeType":"VariableDeclaration","scope":2541,"src":"7086:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:16"},"returnParameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"value","nameLocation":"7129:5:16","nodeType":"VariableDeclaration","scope":2541,"src":"7121:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:16"},"scope":3115,"src":"7070:134:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2550,"nodeType":"Block","src":"7348:178:16","statements":[{"AST":{"nativeSrc":"7367:153:16","nodeType":"YulBlock","src":"7367:153:16","statements":[{"nativeSrc":"7381:25:16","nodeType":"YulVariableDeclaration","src":"7381:25:16","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:16","nodeType":"YulIdentifier","src":"7401:4:16"}],"functionName":{"name":"mload","nativeSrc":"7395:5:16","nodeType":"YulIdentifier","src":"7395:5:16"},"nativeSrc":"7395:11:16","nodeType":"YulFunctionCall","src":"7395:11:16"},"variables":[{"name":"value1","nativeSrc":"7385:6:16","nodeType":"YulTypedName","src":"7385:6:16","type":""}]},{"nativeSrc":"7419:25:16","nodeType":"YulVariableDeclaration","src":"7419:25:16","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:16","nodeType":"YulIdentifier","src":"7439:4:16"}],"functionName":{"name":"mload","nativeSrc":"7433:5:16","nodeType":"YulIdentifier","src":"7433:5:16"},"nativeSrc":"7433:11:16","nodeType":"YulFunctionCall","src":"7433:11:16"},"variables":[{"name":"value2","nativeSrc":"7423:6:16","nodeType":"YulTypedName","src":"7423:6:16","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:16","nodeType":"YulIdentifier","src":"7464:4:16"},{"name":"value2","nativeSrc":"7470:6:16","nodeType":"YulIdentifier","src":"7470:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:16","nodeType":"YulIdentifier","src":"7457:6:16"},"nativeSrc":"7457:20:16","nodeType":"YulFunctionCall","src":"7457:20:16"},"nativeSrc":"7457:20:16","nodeType":"YulExpressionStatement","src":"7457:20:16"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:16","nodeType":"YulIdentifier","src":"7497:4:16"},{"name":"value1","nativeSrc":"7503:6:16","nodeType":"YulIdentifier","src":"7503:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:16","nodeType":"YulIdentifier","src":"7490:6:16"},"nativeSrc":"7490:20:16","nodeType":"YulFunctionCall","src":"7490:20:16"},"nativeSrc":"7490:20:16","nodeType":"YulExpressionStatement","src":"7490:20:16"}]},"evmVersion":"cancun","externalReferences":[{"declaration":2544,"isOffset":false,"isSlot":false,"src":"7401:4:16","valueSize":1},{"declaration":2544,"isOffset":false,"isSlot":false,"src":"7464:4:16","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"7439:4:16","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"7497:4:16","valueSize":1}],"id":2549,"nodeType":"InlineAssembly","src":"7358:162:16"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"7210:77:16","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":2551,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:16","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:16","nodeType":"VariableDeclaration","scope":2551,"src":"7307:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:16","nodeType":"VariableDeclaration","scope":2551,"src":"7321:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:16"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[],"src":"7348:0:16"},"scope":3115,"src":"7292:234:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2562,"nodeType":"Block","src":"7713:64:16","statements":[{"AST":{"nativeSrc":"7732:39:16","nodeType":"YulBlock","src":"7732:39:16","statements":[{"nativeSrc":"7746:15:16","nodeType":"YulAssignment","src":"7746:15:16","value":{"name":"input","nativeSrc":"7756:5:16","nodeType":"YulIdentifier","src":"7756:5:16"},"variableNames":[{"name":"output","nativeSrc":"7746:6:16","nodeType":"YulIdentifier","src":"7746:6:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2555,"isOffset":false,"isSlot":false,"src":"7756:5:16","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"7746:6:16","valueSize":1}],"id":2561,"nodeType":"InlineAssembly","src":"7723:48:16"}]},"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"7532:76:16","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:16","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"input","nameLocation":"7659:5:16","nodeType":"VariableDeclaration","scope":2563,"src":"7642:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2554,"nodeType":"ArrayTypeName","src":"7642:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:16"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"output","nameLocation":"7705:6:16","nodeType":"VariableDeclaration","scope":2563,"src":"7688:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ArrayTypeName","src":"7688:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:16"},"scope":3115,"src":"7613:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2574,"nodeType":"Block","src":"7964:64:16","statements":[{"AST":{"nativeSrc":"7983:39:16","nodeType":"YulBlock","src":"7983:39:16","statements":[{"nativeSrc":"7997:15:16","nodeType":"YulAssignment","src":"7997:15:16","value":{"name":"input","nativeSrc":"8007:5:16","nodeType":"YulIdentifier","src":"8007:5:16"},"variableNames":[{"name":"output","nativeSrc":"7997:6:16","nodeType":"YulIdentifier","src":"7997:6:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2567,"isOffset":false,"isSlot":false,"src":"8007:5:16","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"7997:6:16","valueSize":1}],"id":2573,"nodeType":"InlineAssembly","src":"7974:48:16"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"7783:76:16","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":2575,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:16","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"input","nameLocation":"7910:5:16","nodeType":"VariableDeclaration","scope":2575,"src":"7893:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2566,"nodeType":"ArrayTypeName","src":"7893:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:16"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"output","nameLocation":"7956:6:16","nodeType":"VariableDeclaration","scope":2575,"src":"7939:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2570,"nodeType":"ArrayTypeName","src":"7939:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:16"},"scope":3115,"src":"7864:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2600,"nodeType":"Block","src":"8290:64:16","statements":[{"AST":{"nativeSrc":"8309:39:16","nodeType":"YulBlock","src":"8309:39:16","statements":[{"nativeSrc":"8323:15:16","nodeType":"YulAssignment","src":"8323:15:16","value":{"name":"input","nativeSrc":"8333:5:16","nodeType":"YulIdentifier","src":"8333:5:16"},"variableNames":[{"name":"output","nativeSrc":"8323:6:16","nodeType":"YulIdentifier","src":"8323:6:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2586,"isOffset":false,"isSlot":false,"src":"8333:5:16","valueSize":1},{"declaration":2597,"isOffset":false,"isSlot":false,"src":"8323:6:16","valueSize":1}],"id":2599,"nodeType":"InlineAssembly","src":"8300:48:16"}]},"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"8034:78:16","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2601,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:16","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"input","nameLocation":"8201:5:16","nodeType":"VariableDeclaration","scope":2601,"src":"8154:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2585,"nodeType":"FunctionTypeName","parameterTypes":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2585,"src":"8163:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2585,"src":"8172:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:16"},"returnParameterTypes":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2585,"src":"8195:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2582,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:16"},"src":"8154:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:16"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"output","nameLocation":"8282:6:16","nodeType":"VariableDeclaration","scope":2601,"src":"8235:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2596,"nodeType":"FunctionTypeName","parameterTypes":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2596,"src":"8244:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2596,"src":"8253:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:16"},"returnParameterTypes":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2596,"src":"8276:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2593,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:16"},"src":"8235:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:16"},"scope":3115,"src":"8117:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2626,"nodeType":"Block","src":"8616:64:16","statements":[{"AST":{"nativeSrc":"8635:39:16","nodeType":"YulBlock","src":"8635:39:16","statements":[{"nativeSrc":"8649:15:16","nodeType":"YulAssignment","src":"8649:15:16","value":{"name":"input","nativeSrc":"8659:5:16","nodeType":"YulIdentifier","src":"8659:5:16"},"variableNames":[{"name":"output","nativeSrc":"8649:6:16","nodeType":"YulIdentifier","src":"8649:6:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2612,"isOffset":false,"isSlot":false,"src":"8659:5:16","valueSize":1},{"declaration":2623,"isOffset":false,"isSlot":false,"src":"8649:6:16","valueSize":1}],"id":2625,"nodeType":"InlineAssembly","src":"8626:48:16"}]},"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"8360:78:16","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2627,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:16","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"input","nameLocation":"8527:5:16","nodeType":"VariableDeclaration","scope":2627,"src":"8480:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2611,"nodeType":"FunctionTypeName","parameterTypes":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"8489:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"8498:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:16"},"returnParameterTypes":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"8521:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2608,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:16"},"src":"8480:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:16"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"output","nameLocation":"8608:6:16","nodeType":"VariableDeclaration","scope":2627,"src":"8561:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2622,"nodeType":"FunctionTypeName","parameterTypes":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"8570:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"8579:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:16"},"returnParameterTypes":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"8602:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2619,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:16"},"src":"8561:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:16"},"scope":3115,"src":"8443:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2709,"nodeType":"Block","src":"9405:834:16","statements":[{"assignments":[2639],"declarations":[{"constant":false,"id":2639,"mutability":"mutable","name":"low","nameLocation":"9423:3:16","nodeType":"VariableDeclaration","scope":2709,"src":"9415:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2641,"initialValue":{"hexValue":"30","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:16"},{"assignments":[2643],"declarations":[{"constant":false,"id":2643,"mutability":"mutable","name":"high","nameLocation":"9448:4:16","nodeType":"VariableDeclaration","scope":2709,"src":"9440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"initialValue":{"expression":{"id":2644,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"9455:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:16","memberName":"length","nodeType":"MemberAccess","src":"9455:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"9482:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2653,"nodeType":"IfStatement","src":"9478:48:16","trueBody":{"id":2652,"nodeType":"Block","src":"9493:33:16","statements":[{"expression":{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2637,"id":2651,"nodeType":"Return","src":"9507:8:16"}]}},{"body":{"id":2685,"nodeType":"Block","src":"9555:423:16","statements":[{"assignments":[2658],"declarations":[{"constant":false,"id":2658,"mutability":"mutable","name":"mid","nameLocation":"9577:3:16","nodeType":"VariableDeclaration","scope":2685,"src":"9569:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2664,"initialValue":{"arguments":[{"id":2661,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"9596:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2662,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"9601:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2659,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"9583:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5438_$","typeString":"type(library Math)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"9583:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2666,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"9844:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2667,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"9851:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2665,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2990,3016,3042],"referencedDeclaration":3042,"src":"9831:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3672_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3671,"src":"9831:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2670,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"9864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2683,"nodeType":"Block","src":"9922:46:16","statements":[{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2677,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"9940:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"9946:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2682,"nodeType":"ExpressionStatement","src":"9940:13:16"}]},"id":2684,"nodeType":"IfStatement","src":"9827:141:16","trueBody":{"id":2676,"nodeType":"Block","src":"9873:43:16","statements":[{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2672,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"9891:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2673,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"9898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2675,"nodeType":"ExpressionStatement","src":"9891:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"9543:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2655,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"9549:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2686,"nodeType":"WhileStatement","src":"9536:442:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2687,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"10095:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2691,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"10119:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2692,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"10126:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2690,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2990,3016,3042],"referencedDeclaration":3042,"src":"10106:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3672_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3671,"src":"10106:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2697,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"10144:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2707,"nodeType":"Block","src":"10198:35:16","statements":[{"expression":{"id":2705,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"10219:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2637,"id":2706,"nodeType":"Return","src":"10212:10:16"}]},"id":2708,"nodeType":"IfStatement","src":"10091:142:16","trueBody":{"id":2704,"nodeType":"Block","src":"10153:39:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"10174:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2637,"id":2703,"nodeType":"Return","src":"10167:14:16"}]}}]},"documentation":{"id":2628,"nodeType":"StructuredDocumentation","src":"8686:616:16","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:16","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"array","nameLocation":"9349:5:16","nodeType":"VariableDeclaration","scope":2710,"src":"9331:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2630,"nodeType":"ArrayTypeName","src":"9331:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"element","nameLocation":"9364:7:16","nodeType":"VariableDeclaration","scope":2710,"src":"9356:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:16"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"9396:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:16"},"scope":3115,"src":"9307:932:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2773,"nodeType":"Block","src":"10756:709:16","statements":[{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"low","nameLocation":"10774:3:16","nodeType":"VariableDeclaration","scope":2773,"src":"10766:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2724,"initialValue":{"hexValue":"30","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:16"},{"assignments":[2726],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"high","nameLocation":"10799:4:16","nodeType":"VariableDeclaration","scope":2773,"src":"10791:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2729,"initialValue":{"expression":{"id":2727,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"10806:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:16","memberName":"length","nodeType":"MemberAccess","src":"10806:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2730,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"10833:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2736,"nodeType":"IfStatement","src":"10829:48:16","trueBody":{"id":2735,"nodeType":"Block","src":"10844:33:16","statements":[{"expression":{"hexValue":"30","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2720,"id":2734,"nodeType":"Return","src":"10858:8:16"}]}},{"body":{"id":2769,"nodeType":"Block","src":"10906:532:16","statements":[{"assignments":[2741],"declarations":[{"constant":false,"id":2741,"mutability":"mutable","name":"mid","nameLocation":"10928:3:16","nodeType":"VariableDeclaration","scope":2769,"src":"10920:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2747,"initialValue":{"arguments":[{"id":2744,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"10947:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2745,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"10952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2742,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"10934:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5438_$","typeString":"type(library Math)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"10934:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2749,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"11195:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2750,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"11202:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2748,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2990,3016,3042],"referencedDeclaration":3042,"src":"11182:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3672_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3671,"src":"11182:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2753,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"11215:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2767,"nodeType":"Block","src":"11385:43:16","statements":[{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2763,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"11403:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2764,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"11410:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2766,"nodeType":"ExpressionStatement","src":"11403:10:16"}]},"id":2768,"nodeType":"IfStatement","src":"11178:250:16","trueBody":{"id":2762,"nodeType":"Block","src":"11224:155:16","statements":[{"id":2761,"nodeType":"UncheckedBlock","src":"11301:64:16","statements":[{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2755,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"11333:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2756,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"11339:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2760,"nodeType":"ExpressionStatement","src":"11333:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"10894:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2738,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"10900:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2770,"nodeType":"WhileStatement","src":"10887:551:16"},{"expression":{"id":2771,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"11455:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2720,"id":2772,"nodeType":"Return","src":"11448:10:16"}]},"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"10245:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2774,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:16","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"array","nameLocation":"10700:5:16","nodeType":"VariableDeclaration","scope":2774,"src":"10682:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2713,"nodeType":"ArrayTypeName","src":"10682:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"element","nameLocation":"10715:7:16","nodeType":"VariableDeclaration","scope":2774,"src":"10707:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:16"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2774,"src":"10747:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:16"},"scope":3115,"src":"10662:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"11982:709:16","statements":[{"assignments":[2786],"declarations":[{"constant":false,"id":2786,"mutability":"mutable","name":"low","nameLocation":"12000:3:16","nodeType":"VariableDeclaration","scope":2837,"src":"11992:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2788,"initialValue":{"hexValue":"30","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:16"},{"assignments":[2790],"declarations":[{"constant":false,"id":2790,"mutability":"mutable","name":"high","nameLocation":"12025:4:16","nodeType":"VariableDeclaration","scope":2837,"src":"12017:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2793,"initialValue":{"expression":{"id":2791,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"12032:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:16","memberName":"length","nodeType":"MemberAccess","src":"12032:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"12059:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2800,"nodeType":"IfStatement","src":"12055:48:16","trueBody":{"id":2799,"nodeType":"Block","src":"12070:33:16","statements":[{"expression":{"hexValue":"30","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2784,"id":2798,"nodeType":"Return","src":"12084:8:16"}]}},{"body":{"id":2833,"nodeType":"Block","src":"12132:532:16","statements":[{"assignments":[2805],"declarations":[{"constant":false,"id":2805,"mutability":"mutable","name":"mid","nameLocation":"12154:3:16","nodeType":"VariableDeclaration","scope":2833,"src":"12146:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2811,"initialValue":{"arguments":[{"id":2808,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"12173:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2809,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"12178:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2806,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"12160:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5438_$","typeString":"type(library Math)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"12160:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2813,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"12421:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2814,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"12428:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2812,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2990,3016,3042],"referencedDeclaration":3042,"src":"12408:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3672_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3671,"src":"12408:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2817,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"12441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2831,"nodeType":"Block","src":"12499:155:16","statements":[{"id":2830,"nodeType":"UncheckedBlock","src":"12576:64:16","statements":[{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2824,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"12608:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"12614:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"nodeType":"ExpressionStatement","src":"12608:13:16"}]}]},"id":2832,"nodeType":"IfStatement","src":"12404:250:16","trueBody":{"id":2823,"nodeType":"Block","src":"12450:43:16","statements":[{"expression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2819,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"12468:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2820,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"12475:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2822,"nodeType":"ExpressionStatement","src":"12468:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"12120:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2802,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"12126:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2834,"nodeType":"WhileStatement","src":"12113:551:16"},{"expression":{"id":2835,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"12681:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2784,"id":2836,"nodeType":"Return","src":"12674:10:16"}]},"documentation":{"id":2775,"nodeType":"StructuredDocumentation","src":"11471:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:16","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"array","nameLocation":"11926:5:16","nodeType":"VariableDeclaration","scope":2838,"src":"11908:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2777,"nodeType":"ArrayTypeName","src":"11908:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"element","nameLocation":"11941:7:16","nodeType":"VariableDeclaration","scope":2838,"src":"11933:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:16"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"11973:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:16"},"scope":3115,"src":"11888:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2900,"nodeType":"Block","src":"12875:709:16","statements":[{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"low","nameLocation":"12893:3:16","nodeType":"VariableDeclaration","scope":2900,"src":"12885:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2852,"initialValue":{"hexValue":"30","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:16"},{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"high","nameLocation":"12918:4:16","nodeType":"VariableDeclaration","scope":2900,"src":"12910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2857,"initialValue":{"expression":{"id":2855,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"12925:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:16","memberName":"length","nodeType":"MemberAccess","src":"12925:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"12952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2864,"nodeType":"IfStatement","src":"12948:48:16","trueBody":{"id":2863,"nodeType":"Block","src":"12963:33:16","statements":[{"expression":{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2848,"id":2862,"nodeType":"Return","src":"12977:8:16"}]}},{"body":{"id":2896,"nodeType":"Block","src":"13025:532:16","statements":[{"assignments":[2869],"declarations":[{"constant":false,"id":2869,"mutability":"mutable","name":"mid","nameLocation":"13047:3:16","nodeType":"VariableDeclaration","scope":2896,"src":"13039:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2875,"initialValue":{"arguments":[{"id":2872,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"13066:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2873,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"13071:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2870,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"13053:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5438_$","typeString":"type(library Math)"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"13053:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2877,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"13320:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2878,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"13327:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2876,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3055,3068,3081],"referencedDeclaration":3081,"src":"13301:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2880,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"13334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2894,"nodeType":"Block","src":"13504:43:16","statements":[{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2890,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"13522:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2891,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"13529:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"13522:10:16"}]},"id":2895,"nodeType":"IfStatement","src":"13297:250:16","trueBody":{"id":2889,"nodeType":"Block","src":"13343:155:16","statements":[{"id":2888,"nodeType":"UncheckedBlock","src":"13420:64:16","statements":[{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2882,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"13452:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"13458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2887,"nodeType":"ExpressionStatement","src":"13452:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2865,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"13013:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2866,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"13019:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2897,"nodeType":"WhileStatement","src":"13006:551:16"},{"expression":{"id":2898,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"13574:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2848,"id":2899,"nodeType":"Return","src":"13567:10:16"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"12697:74:16","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:16","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"array","nameLocation":"12819:5:16","nodeType":"VariableDeclaration","scope":2901,"src":"12802:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2841,"nodeType":"ArrayTypeName","src":"12802:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"element","nameLocation":"12834:7:16","nodeType":"VariableDeclaration","scope":2901,"src":"12826:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:16"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"12866:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:16"},"scope":3115,"src":"12776:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2963,"nodeType":"Block","src":"13768:709:16","statements":[{"assignments":[2913],"declarations":[{"constant":false,"id":2913,"mutability":"mutable","name":"low","nameLocation":"13786:3:16","nodeType":"VariableDeclaration","scope":2963,"src":"13778:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2915,"initialValue":{"hexValue":"30","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:16"},{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"high","nameLocation":"13811:4:16","nodeType":"VariableDeclaration","scope":2963,"src":"13803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2920,"initialValue":{"expression":{"id":2918,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"13818:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:16","memberName":"length","nodeType":"MemberAccess","src":"13818:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"13845:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2927,"nodeType":"IfStatement","src":"13841:48:16","trueBody":{"id":2926,"nodeType":"Block","src":"13856:33:16","statements":[{"expression":{"hexValue":"30","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2911,"id":2925,"nodeType":"Return","src":"13870:8:16"}]}},{"body":{"id":2959,"nodeType":"Block","src":"13918:532:16","statements":[{"assignments":[2932],"declarations":[{"constant":false,"id":2932,"mutability":"mutable","name":"mid","nameLocation":"13940:3:16","nodeType":"VariableDeclaration","scope":2959,"src":"13932:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2938,"initialValue":{"arguments":[{"id":2935,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"13959:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2936,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"13964:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2933,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"13946:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5438_$","typeString":"type(library Math)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"13946:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2940,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"14213:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2941,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"14220:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2939,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3055,3068,3081],"referencedDeclaration":3081,"src":"14194:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2943,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"14227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2957,"nodeType":"Block","src":"14285:155:16","statements":[{"id":2956,"nodeType":"UncheckedBlock","src":"14362:64:16","statements":[{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2950,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"14394:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"14400:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"14394:13:16"}]}]},"id":2958,"nodeType":"IfStatement","src":"14190:250:16","trueBody":{"id":2949,"nodeType":"Block","src":"14236:43:16","statements":[{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2945,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"14254:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2946,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"14261:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"14254:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"13906:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2929,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"13912:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2960,"nodeType":"WhileStatement","src":"13899:551:16"},{"expression":{"id":2961,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"14467:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2911,"id":2962,"nodeType":"Return","src":"14460:10:16"}]},"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"13590:74:16","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:16","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"array","nameLocation":"13712:5:16","nodeType":"VariableDeclaration","scope":2964,"src":"13695:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2904,"nodeType":"ArrayTypeName","src":"13695:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"element","nameLocation":"13727:7:16","nodeType":"VariableDeclaration","scope":2964,"src":"13719:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:16"},"returnParameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"13759:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:16"},"scope":3115,"src":"13669:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"14793:167:16","statements":[{"assignments":[2977],"declarations":[{"constant":false,"id":2977,"mutability":"mutable","name":"slot","nameLocation":"14811:4:16","nodeType":"VariableDeclaration","scope":2989,"src":"14803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2978,"nodeType":"VariableDeclarationStatement","src":"14803:12:16"},{"AST":{"nativeSrc":"14850:40:16","nodeType":"YulBlock","src":"14850:40:16","statements":[{"nativeSrc":"14864:16:16","nodeType":"YulAssignment","src":"14864:16:16","value":{"name":"arr.slot","nativeSrc":"14872:8:16","nodeType":"YulIdentifier","src":"14872:8:16"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:16","nodeType":"YulIdentifier","src":"14864:4:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2968,"isOffset":false,"isSlot":true,"src":"14872:8:16","suffix":"slot","valueSize":1},{"declaration":2977,"isOffset":false,"isSlot":false,"src":"14864:4:16","valueSize":1}],"flags":["memory-safe"],"id":2979,"nodeType":"InlineAssembly","src":"14825:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2984,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"14932:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2980,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"14906:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3572,"src":"14906:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"14906:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:16","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"14906:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3663_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3663_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2975,"id":2988,"nodeType":"Return","src":"14899:54:16"}]},"documentation":{"id":2965,"nodeType":"StructuredDocumentation","src":"14483:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:16","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"arr","nameLocation":"14719:3:16","nodeType":"VariableDeclaration","scope":2990,"src":"14701:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2967,"nodeType":"ArrayTypeName","src":"14701:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"pos","nameLocation":"14732:3:16","nodeType":"VariableDeclaration","scope":2990,"src":"14724:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:16"},"returnParameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"14760:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3663_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2973,"nodeType":"UserDefinedTypeName","pathNode":{"id":2972,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:16","14772:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"14760:23:16"},"referencedDeclaration":3663,"src":"14760:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3663_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:16"},"scope":3115,"src":"14679:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3015,"nodeType":"Block","src":"15276:167:16","statements":[{"assignments":[3003],"declarations":[{"constant":false,"id":3003,"mutability":"mutable","name":"slot","nameLocation":"15294:4:16","nodeType":"VariableDeclaration","scope":3015,"src":"15286:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3004,"nodeType":"VariableDeclarationStatement","src":"15286:12:16"},{"AST":{"nativeSrc":"15333:40:16","nodeType":"YulBlock","src":"15333:40:16","statements":[{"nativeSrc":"15347:16:16","nodeType":"YulAssignment","src":"15347:16:16","value":{"name":"arr.slot","nativeSrc":"15355:8:16","nodeType":"YulIdentifier","src":"15355:8:16"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:16","nodeType":"YulIdentifier","src":"15347:4:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2994,"isOffset":false,"isSlot":true,"src":"15355:8:16","suffix":"slot","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"15347:4:16","valueSize":1}],"flags":["memory-safe"],"id":3005,"nodeType":"InlineAssembly","src":"15308:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3010,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"15415:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3006,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"15389:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3572,"src":"15389:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"15389:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:16","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"15389:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3669_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3669_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3001,"id":3014,"nodeType":"Return","src":"15382:54:16"}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"14966:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:16","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"arr","nameLocation":"15202:3:16","nodeType":"VariableDeclaration","scope":3016,"src":"15184:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2993,"nodeType":"ArrayTypeName","src":"15184:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"pos","nameLocation":"15215:3:16","nodeType":"VariableDeclaration","scope":3016,"src":"15207:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:16"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3016,"src":"15243:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3669_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2999,"nodeType":"UserDefinedTypeName","pathNode":{"id":2998,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:16","15255:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3669,"src":"15243:23:16"},"referencedDeclaration":3669,"src":"15243:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3669_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:16"},"scope":3115,"src":"15162:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3041,"nodeType":"Block","src":"15759:167:16","statements":[{"assignments":[3029],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"slot","nameLocation":"15777:4:16","nodeType":"VariableDeclaration","scope":3041,"src":"15769:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3030,"nodeType":"VariableDeclarationStatement","src":"15769:12:16"},{"AST":{"nativeSrc":"15816:40:16","nodeType":"YulBlock","src":"15816:40:16","statements":[{"nativeSrc":"15830:16:16","nodeType":"YulAssignment","src":"15830:16:16","value":{"name":"arr.slot","nativeSrc":"15838:8:16","nodeType":"YulIdentifier","src":"15838:8:16"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:16","nodeType":"YulIdentifier","src":"15830:4:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3020,"isOffset":false,"isSlot":true,"src":"15838:8:16","suffix":"slot","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":false,"src":"15830:4:16","valueSize":1}],"flags":["memory-safe"],"id":3031,"nodeType":"InlineAssembly","src":"15791:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3036,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"15898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3032,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"15872:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3572,"src":"15872:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"15872:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:16","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"15872:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3672_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3027,"id":3040,"nodeType":"Return","src":"15865:54:16"}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"15449:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3042,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:16","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"arr","nameLocation":"15685:3:16","nodeType":"VariableDeclaration","scope":3042,"src":"15667:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3019,"nodeType":"ArrayTypeName","src":"15667:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"pos","nameLocation":"15698:3:16","nodeType":"VariableDeclaration","scope":3042,"src":"15690:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:16"},"returnParameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3042,"src":"15726:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3025,"nodeType":"UserDefinedTypeName","pathNode":{"id":3024,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:16","15738:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3672,"src":"15726:23:16"},"referencedDeclaration":3672,"src":"15726:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:16"},"scope":3115,"src":"15645:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3054,"nodeType":"Block","src":"16227:98:16","statements":[{"AST":{"nativeSrc":"16246:73:16","nodeType":"YulBlock","src":"16246:73:16","statements":[{"nativeSrc":"16260:49:16","nodeType":"YulAssignment","src":"16260:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:16","nodeType":"YulIdentifier","src":"16281:3:16"},{"kind":"number","nativeSrc":"16286:4:16","nodeType":"YulLiteral","src":"16286:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:16","nodeType":"YulIdentifier","src":"16277:3:16"},"nativeSrc":"16277:14:16","nodeType":"YulFunctionCall","src":"16277:14:16"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:16","nodeType":"YulIdentifier","src":"16297:3:16"},{"kind":"number","nativeSrc":"16302:4:16","nodeType":"YulLiteral","src":"16302:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:16","nodeType":"YulIdentifier","src":"16293:3:16"},"nativeSrc":"16293:14:16","nodeType":"YulFunctionCall","src":"16293:14:16"}],"functionName":{"name":"add","nativeSrc":"16273:3:16","nodeType":"YulIdentifier","src":"16273:3:16"},"nativeSrc":"16273:35:16","nodeType":"YulFunctionCall","src":"16273:35:16"}],"functionName":{"name":"mload","nativeSrc":"16267:5:16","nodeType":"YulIdentifier","src":"16267:5:16"},"nativeSrc":"16267:42:16","nodeType":"YulFunctionCall","src":"16267:42:16"},"variableNames":[{"name":"res","nativeSrc":"16260:3:16","nodeType":"YulIdentifier","src":"16260:3:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3046,"isOffset":false,"isSlot":false,"src":"16281:3:16","valueSize":1},{"declaration":3048,"isOffset":false,"isSlot":false,"src":"16297:3:16","valueSize":1},{"declaration":3051,"isOffset":false,"isSlot":false,"src":"16260:3:16","valueSize":1}],"id":3053,"nodeType":"InlineAssembly","src":"16237:82:16"}]},"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"15932:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:16","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"arr","nameLocation":"16173:3:16","nodeType":"VariableDeclaration","scope":3055,"src":"16156:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3045,"nodeType":"ArrayTypeName","src":"16156:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"pos","nameLocation":"16186:3:16","nodeType":"VariableDeclaration","scope":3055,"src":"16178:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:16"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"res","nameLocation":"16222:3:16","nodeType":"VariableDeclaration","scope":3055,"src":"16214:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:16"},"scope":3115,"src":"16128:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3067,"nodeType":"Block","src":"16626:98:16","statements":[{"AST":{"nativeSrc":"16645:73:16","nodeType":"YulBlock","src":"16645:73:16","statements":[{"nativeSrc":"16659:49:16","nodeType":"YulAssignment","src":"16659:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:16","nodeType":"YulIdentifier","src":"16680:3:16"},{"kind":"number","nativeSrc":"16685:4:16","nodeType":"YulLiteral","src":"16685:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:16","nodeType":"YulIdentifier","src":"16676:3:16"},"nativeSrc":"16676:14:16","nodeType":"YulFunctionCall","src":"16676:14:16"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:16","nodeType":"YulIdentifier","src":"16696:3:16"},{"kind":"number","nativeSrc":"16701:4:16","nodeType":"YulLiteral","src":"16701:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:16","nodeType":"YulIdentifier","src":"16692:3:16"},"nativeSrc":"16692:14:16","nodeType":"YulFunctionCall","src":"16692:14:16"}],"functionName":{"name":"add","nativeSrc":"16672:3:16","nodeType":"YulIdentifier","src":"16672:3:16"},"nativeSrc":"16672:35:16","nodeType":"YulFunctionCall","src":"16672:35:16"}],"functionName":{"name":"mload","nativeSrc":"16666:5:16","nodeType":"YulIdentifier","src":"16666:5:16"},"nativeSrc":"16666:42:16","nodeType":"YulFunctionCall","src":"16666:42:16"},"variableNames":[{"name":"res","nativeSrc":"16659:3:16","nodeType":"YulIdentifier","src":"16659:3:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3059,"isOffset":false,"isSlot":false,"src":"16680:3:16","valueSize":1},{"declaration":3061,"isOffset":false,"isSlot":false,"src":"16696:3:16","valueSize":1},{"declaration":3064,"isOffset":false,"isSlot":false,"src":"16659:3:16","valueSize":1}],"id":3066,"nodeType":"InlineAssembly","src":"16636:82:16"}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"16331:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3068,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:16","nodeType":"FunctionDefinition","parameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"arr","nameLocation":"16572:3:16","nodeType":"VariableDeclaration","scope":3068,"src":"16555:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3058,"nodeType":"ArrayTypeName","src":"16555:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"pos","nameLocation":"16585:3:16","nodeType":"VariableDeclaration","scope":3068,"src":"16577:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:16"},"returnParameters":{"id":3065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"res","nameLocation":"16621:3:16","nodeType":"VariableDeclaration","scope":3068,"src":"16613:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:16"},"scope":3115,"src":"16527:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3080,"nodeType":"Block","src":"17025:98:16","statements":[{"AST":{"nativeSrc":"17044:73:16","nodeType":"YulBlock","src":"17044:73:16","statements":[{"nativeSrc":"17058:49:16","nodeType":"YulAssignment","src":"17058:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:16","nodeType":"YulIdentifier","src":"17079:3:16"},{"kind":"number","nativeSrc":"17084:4:16","nodeType":"YulLiteral","src":"17084:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:16","nodeType":"YulIdentifier","src":"17075:3:16"},"nativeSrc":"17075:14:16","nodeType":"YulFunctionCall","src":"17075:14:16"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:16","nodeType":"YulIdentifier","src":"17095:3:16"},{"kind":"number","nativeSrc":"17100:4:16","nodeType":"YulLiteral","src":"17100:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:16","nodeType":"YulIdentifier","src":"17091:3:16"},"nativeSrc":"17091:14:16","nodeType":"YulFunctionCall","src":"17091:14:16"}],"functionName":{"name":"add","nativeSrc":"17071:3:16","nodeType":"YulIdentifier","src":"17071:3:16"},"nativeSrc":"17071:35:16","nodeType":"YulFunctionCall","src":"17071:35:16"}],"functionName":{"name":"mload","nativeSrc":"17065:5:16","nodeType":"YulIdentifier","src":"17065:5:16"},"nativeSrc":"17065:42:16","nodeType":"YulFunctionCall","src":"17065:42:16"},"variableNames":[{"name":"res","nativeSrc":"17058:3:16","nodeType":"YulIdentifier","src":"17058:3:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3072,"isOffset":false,"isSlot":false,"src":"17079:3:16","valueSize":1},{"declaration":3074,"isOffset":false,"isSlot":false,"src":"17095:3:16","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"17058:3:16","valueSize":1}],"id":3079,"nodeType":"InlineAssembly","src":"17035:82:16"}]},"documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"16730:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:16","nodeType":"FunctionDefinition","parameters":{"id":3075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"arr","nameLocation":"16971:3:16","nodeType":"VariableDeclaration","scope":3081,"src":"16954:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3071,"nodeType":"ArrayTypeName","src":"16954:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"pos","nameLocation":"16984:3:16","nodeType":"VariableDeclaration","scope":3081,"src":"16976:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:16"},"returnParameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"res","nameLocation":"17020:3:16","nodeType":"VariableDeclaration","scope":3081,"src":"17012:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:16"},"scope":3115,"src":"16926:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3091,"nodeType":"Block","src":"17439:88:16","statements":[{"AST":{"nativeSrc":"17474:47:16","nodeType":"YulBlock","src":"17474:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17495:10:16","nodeType":"YulIdentifier","src":"17495:10:16"},{"name":"len","nativeSrc":"17507:3:16","nodeType":"YulIdentifier","src":"17507:3:16"}],"functionName":{"name":"sstore","nativeSrc":"17488:6:16","nodeType":"YulIdentifier","src":"17488:6:16"},"nativeSrc":"17488:23:16","nodeType":"YulFunctionCall","src":"17488:23:16"},"nativeSrc":"17488:23:16","nodeType":"YulExpressionStatement","src":"17488:23:16"}]},"evmVersion":"cancun","externalReferences":[{"declaration":3085,"isOffset":false,"isSlot":true,"src":"17495:10:16","suffix":"slot","valueSize":1},{"declaration":3087,"isOffset":false,"isSlot":false,"src":"17507:3:16","valueSize":1}],"flags":["memory-safe"],"id":3090,"nodeType":"InlineAssembly","src":"17449:72:16"}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"17129:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3092,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:16","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"array","nameLocation":"17410:5:16","nodeType":"VariableDeclaration","scope":3092,"src":"17392:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3084,"nodeType":"ArrayTypeName","src":"17392:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3087,"mutability":"mutable","name":"len","nameLocation":"17425:3:16","nodeType":"VariableDeclaration","scope":3092,"src":"17417:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:16"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[],"src":"17439:0:16"},"scope":3115,"src":"17367:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3102,"nodeType":"Block","src":"17843:88:16","statements":[{"AST":{"nativeSrc":"17878:47:16","nodeType":"YulBlock","src":"17878:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17899:10:16","nodeType":"YulIdentifier","src":"17899:10:16"},{"name":"len","nativeSrc":"17911:3:16","nodeType":"YulIdentifier","src":"17911:3:16"}],"functionName":{"name":"sstore","nativeSrc":"17892:6:16","nodeType":"YulIdentifier","src":"17892:6:16"},"nativeSrc":"17892:23:16","nodeType":"YulFunctionCall","src":"17892:23:16"},"nativeSrc":"17892:23:16","nodeType":"YulExpressionStatement","src":"17892:23:16"}]},"evmVersion":"cancun","externalReferences":[{"declaration":3096,"isOffset":false,"isSlot":true,"src":"17899:10:16","suffix":"slot","valueSize":1},{"declaration":3098,"isOffset":false,"isSlot":false,"src":"17911:3:16","valueSize":1}],"flags":["memory-safe"],"id":3101,"nodeType":"InlineAssembly","src":"17853:72:16"}]},"documentation":{"id":3093,"nodeType":"StructuredDocumentation","src":"17533:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3103,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:16","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"array","nameLocation":"17814:5:16","nodeType":"VariableDeclaration","scope":3103,"src":"17796:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3095,"nodeType":"ArrayTypeName","src":"17796:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"len","nameLocation":"17829:3:16","nodeType":"VariableDeclaration","scope":3103,"src":"17821:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:16"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[],"src":"17843:0:16"},"scope":3115,"src":"17771:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3113,"nodeType":"Block","src":"18247:88:16","statements":[{"AST":{"nativeSrc":"18282:47:16","nodeType":"YulBlock","src":"18282:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18303:10:16","nodeType":"YulIdentifier","src":"18303:10:16"},{"name":"len","nativeSrc":"18315:3:16","nodeType":"YulIdentifier","src":"18315:3:16"}],"functionName":{"name":"sstore","nativeSrc":"18296:6:16","nodeType":"YulIdentifier","src":"18296:6:16"},"nativeSrc":"18296:23:16","nodeType":"YulFunctionCall","src":"18296:23:16"},"nativeSrc":"18296:23:16","nodeType":"YulExpressionStatement","src":"18296:23:16"}]},"evmVersion":"cancun","externalReferences":[{"declaration":3107,"isOffset":false,"isSlot":true,"src":"18303:10:16","suffix":"slot","valueSize":1},{"declaration":3109,"isOffset":false,"isSlot":false,"src":"18315:3:16","valueSize":1}],"flags":["memory-safe"],"id":3112,"nodeType":"InlineAssembly","src":"18257:72:16"}]},"documentation":{"id":3104,"nodeType":"StructuredDocumentation","src":"17937:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3114,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:16","nodeType":"FunctionDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"array","nameLocation":"18218:5:16","nodeType":"VariableDeclaration","scope":3114,"src":"18200:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3106,"nodeType":"ArrayTypeName","src":"18200:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"len","nameLocation":"18233:3:16","nodeType":"VariableDeclaration","scope":3114,"src":"18225:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:16"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[],"src":"18247:0:16"},"scope":3115,"src":"18175:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3116,"src":"459:17878:16","usedErrors":[],"usedEvents":[]}],"src":"183:18155:16"},"id":16},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3147]},"id":3148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3117,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"131:92:17","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3147,"linearizedBaseContracts":[3147],"name":"Comparators","nameLocation":"232:11:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3131,"nodeType":"Block","src":"313:29:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3128,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"334:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3126,"id":3130,"nodeType":"Return","src":"323:12:17"}]},"id":3132,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:17","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"a","nameLocation":"270:1:17","nodeType":"VariableDeclaration","scope":3132,"src":"262:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"b","nameLocation":"281:1:17","nodeType":"VariableDeclaration","scope":3132,"src":"273:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:17"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3132,"src":"307:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3124,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:17"},"scope":3147,"src":"250:92:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3145,"nodeType":"Block","src":"411:29:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"428:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3142,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"432:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3140,"id":3144,"nodeType":"Return","src":"421:12:17"}]},"id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:17","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"a","nameLocation":"368:1:17","nodeType":"VariableDeclaration","scope":3146,"src":"360:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"b","nameLocation":"379:1:17","nodeType":"VariableDeclaration","scope":3146,"src":"371:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:17"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"405:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3138,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:17"},"scope":3147,"src":"348:92:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3148,"src":"224:218:17","usedErrors":[],"usedEvents":[]}],"src":"105:338:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3177]},"id":3178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"127:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3177,"linearizedBaseContracts":[3177],"name":"Context","nameLocation":"642:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3158,"nodeType":"Block","src":"718:34:18","statements":[{"expression":{"expression":{"id":3155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:18","memberName":"sender","nodeType":"MemberAccess","src":"735:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3154,"id":3157,"nodeType":"Return","src":"728:17:18"}]},"id":3159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:18","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[],"src":"675:2:18"},"returnParameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"709:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:18"},"scope":3177,"src":"656:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3167,"nodeType":"Block","src":"825:32:18","statements":[{"expression":{"expression":{"id":3164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:18","memberName":"data","nodeType":"MemberAccess","src":"842:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3163,"id":3166,"nodeType":"Return","src":"835:15:18"}]},"id":3168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:18","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[],"src":"775:2:18"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3168,"src":"809:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:18"},"scope":3177,"src":"758:99:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3175,"nodeType":"Block","src":"935:25:18","statements":[{"expression":{"hexValue":"30","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3172,"id":3174,"nodeType":"Return","src":"945:8:18"}]},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:18","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[],"src":"892:2:18"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3176,"src":"926:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:18"},"scope":3177,"src":"863:97:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3178,"src":"624:338:18","usedErrors":[],"usedEvents":[]}],"src":"101:862:18"},"id":18},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[3276],"Errors":[3298]},"id":3277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":3181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3277,"sourceUnit":3299,"src":"127:36:19","symbolAliases":[{"foreign":{"id":3180,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"135:6:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"165:367:19","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":3276,"linearizedBaseContracts":[3276],"name":"Create2","nameLocation":"541:7:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"555:50:19","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":3185,"name":"Create2EmptyBytecode","nameLocation":"616:20:19","nodeType":"ErrorDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"636:2:19"},"src":"610:29:19"},{"body":{"id":3240,"nodeType":"Block","src":"1311:746:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3199,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1333:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$3276","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$3276","typeString":"library Create2"}],"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1325:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3197,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:19","typeDescriptions":{}}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1325:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1339:7:19","memberName":"balance","nodeType":"MemberAccess","src":"1325:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3202,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"1349:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1325:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"IfStatement","src":"1321:125:19","trueBody":{"id":3215,"nodeType":"Block","src":"1357:89:19","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3209,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1413:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$3276","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$3276","typeString":"library Create2"}],"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1405:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:19","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1405:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1419:7:19","memberName":"balance","nodeType":"MemberAccess","src":"1405:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3212,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"1428:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3204,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1378:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3298_$","typeString":"type(library Errors)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1385:19:19","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"1378:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1378:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3214,"nodeType":"RevertStatement","src":"1371:64:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3217,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1459:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1468:6:19","memberName":"length","nodeType":"MemberAccess","src":"1459:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1478:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1459:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3225,"nodeType":"IfStatement","src":"1455:80:19","trueBody":{"id":3224,"nodeType":"Block","src":"1481:54:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3221,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"1502:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3223,"nodeType":"RevertStatement","src":"1495:29:19"}]}},{"AST":{"nativeSrc":"1569:392:19","nodeType":"YulBlock","src":"1569:392:19","statements":[{"nativeSrc":"1583:67:19","nodeType":"YulAssignment","src":"1583:67:19","value":{"arguments":[{"name":"amount","nativeSrc":"1599:6:19","nodeType":"YulIdentifier","src":"1599:6:19"},{"arguments":[{"name":"bytecode","nativeSrc":"1611:8:19","nodeType":"YulIdentifier","src":"1611:8:19"},{"kind":"number","nativeSrc":"1621:4:19","nodeType":"YulLiteral","src":"1621:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1607:3:19","nodeType":"YulIdentifier","src":"1607:3:19"},"nativeSrc":"1607:19:19","nodeType":"YulFunctionCall","src":"1607:19:19"},{"arguments":[{"name":"bytecode","nativeSrc":"1634:8:19","nodeType":"YulIdentifier","src":"1634:8:19"}],"functionName":{"name":"mload","nativeSrc":"1628:5:19","nodeType":"YulIdentifier","src":"1628:5:19"},"nativeSrc":"1628:15:19","nodeType":"YulFunctionCall","src":"1628:15:19"},{"name":"salt","nativeSrc":"1645:4:19","nodeType":"YulIdentifier","src":"1645:4:19"}],"functionName":{"name":"create2","nativeSrc":"1591:7:19","nodeType":"YulIdentifier","src":"1591:7:19"},"nativeSrc":"1591:59:19","nodeType":"YulFunctionCall","src":"1591:59:19"},"variableNames":[{"name":"addr","nativeSrc":"1583:4:19","nodeType":"YulIdentifier","src":"1583:4:19"}]},{"body":{"nativeSrc":"1800:151:19","nodeType":"YulBlock","src":"1800:151:19","statements":[{"nativeSrc":"1818:20:19","nodeType":"YulVariableDeclaration","src":"1818:20:19","value":{"arguments":[{"kind":"number","nativeSrc":"1833:4:19","nodeType":"YulLiteral","src":"1833:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1827:5:19","nodeType":"YulIdentifier","src":"1827:5:19"},"nativeSrc":"1827:11:19","nodeType":"YulFunctionCall","src":"1827:11:19"},"variables":[{"name":"p","nativeSrc":"1822:1:19","nodeType":"YulTypedName","src":"1822:1:19","type":""}]},{"expression":{"arguments":[{"name":"p","nativeSrc":"1870:1:19","nodeType":"YulIdentifier","src":"1870:1:19"},{"kind":"number","nativeSrc":"1873:1:19","nodeType":"YulLiteral","src":"1873:1:19","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1876:14:19","nodeType":"YulIdentifier","src":"1876:14:19"},"nativeSrc":"1876:16:19","nodeType":"YulFunctionCall","src":"1876:16:19"}],"functionName":{"name":"returndatacopy","nativeSrc":"1855:14:19","nodeType":"YulIdentifier","src":"1855:14:19"},"nativeSrc":"1855:38:19","nodeType":"YulFunctionCall","src":"1855:38:19"},"nativeSrc":"1855:38:19","nodeType":"YulExpressionStatement","src":"1855:38:19"},{"expression":{"arguments":[{"name":"p","nativeSrc":"1917:1:19","nodeType":"YulIdentifier","src":"1917:1:19"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1920:14:19","nodeType":"YulIdentifier","src":"1920:14:19"},"nativeSrc":"1920:16:19","nodeType":"YulFunctionCall","src":"1920:16:19"}],"functionName":{"name":"revert","nativeSrc":"1910:6:19","nodeType":"YulIdentifier","src":"1910:6:19"},"nativeSrc":"1910:27:19","nodeType":"YulFunctionCall","src":"1910:27:19"},"nativeSrc":"1910:27:19","nodeType":"YulExpressionStatement","src":"1910:27:19"}]},"condition":{"arguments":[{"arguments":[{"name":"addr","nativeSrc":"1762:4:19","nodeType":"YulIdentifier","src":"1762:4:19"}],"functionName":{"name":"iszero","nativeSrc":"1755:6:19","nodeType":"YulIdentifier","src":"1755:6:19"},"nativeSrc":"1755:12:19","nodeType":"YulFunctionCall","src":"1755:12:19"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1780:14:19","nodeType":"YulIdentifier","src":"1780:14:19"},"nativeSrc":"1780:16:19","nodeType":"YulFunctionCall","src":"1780:16:19"}],"functionName":{"name":"iszero","nativeSrc":"1773:6:19","nodeType":"YulIdentifier","src":"1773:6:19"},"nativeSrc":"1773:24:19","nodeType":"YulFunctionCall","src":"1773:24:19"}],"functionName":{"name":"not","nativeSrc":"1769:3:19","nodeType":"YulIdentifier","src":"1769:3:19"},"nativeSrc":"1769:29:19","nodeType":"YulFunctionCall","src":"1769:29:19"}],"functionName":{"name":"and","nativeSrc":"1751:3:19","nodeType":"YulIdentifier","src":"1751:3:19"},"nativeSrc":"1751:48:19","nodeType":"YulFunctionCall","src":"1751:48:19"},"nativeSrc":"1748:203:19","nodeType":"YulIf","src":"1748:203:19"}]},"evmVersion":"cancun","externalReferences":[{"declaration":3195,"isOffset":false,"isSlot":false,"src":"1583:4:19","valueSize":1},{"declaration":3195,"isOffset":false,"isSlot":false,"src":"1762:4:19","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"1599:6:19","valueSize":1},{"declaration":3192,"isOffset":false,"isSlot":false,"src":"1611:8:19","valueSize":1},{"declaration":3192,"isOffset":false,"isSlot":false,"src":"1634:8:19","valueSize":1},{"declaration":3190,"isOffset":false,"isSlot":false,"src":"1645:4:19","valueSize":1}],"flags":["memory-safe"],"id":3226,"nodeType":"InlineAssembly","src":"1544:417:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"1974:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1982:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:19","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1974:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3239,"nodeType":"IfStatement","src":"1970:81:19","trueBody":{"id":3238,"nodeType":"Block","src":"1994:57:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3233,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"2015:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3298_$","typeString":"type(library Errors)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2022:16:19","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":3292,"src":"2015:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3237,"nodeType":"RevertStatement","src":"2008:32:19"}]}}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"645:560:19","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1219:6:19","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"amount","nameLocation":"1234:6:19","nodeType":"VariableDeclaration","scope":3241,"src":"1226:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"salt","nameLocation":"1250:4:19","nodeType":"VariableDeclaration","scope":3241,"src":"1242:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1242:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"bytecode","nameLocation":"1269:8:19","nodeType":"VariableDeclaration","scope":3241,"src":"1256:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3191,"name":"bytes","nodeType":"ElementaryTypeName","src":"1256:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1225:53:19"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"addr","nameLocation":"1305:4:19","nodeType":"VariableDeclaration","scope":3241,"src":"1297:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1296:14:19"},"scope":3276,"src":"1210:847:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"2353:73:19","statements":[{"expression":{"arguments":[{"id":3252,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2385:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3253,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"2391:12:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3256,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2413:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$3276","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$3276","typeString":"library Create2"}],"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3254,"name":"address","nodeType":"ElementaryTypeName","src":"2405:7:19","typeDescriptions":{}}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3251,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[3261,3275],"referencedDeclaration":3275,"src":"2370:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3250,"id":3259,"nodeType":"Return","src":"2363:56:19"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"2063:193:19","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2270:14:19","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"salt","nameLocation":"2293:4:19","nodeType":"VariableDeclaration","scope":3261,"src":"2285:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2285:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2307:12:19","nodeType":"VariableDeclaration","scope":3261,"src":"2299:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2284:36:19"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"2344:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2343:9:19"},"scope":3276,"src":"2261:165:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3274,"nodeType":"Block","src":"2784:1679:19","statements":[{"AST":{"nativeSrc":"2819:1638:19","nodeType":"YulBlock","src":"2819:1638:19","statements":[{"nativeSrc":"2833:22:19","nodeType":"YulVariableDeclaration","src":"2833:22:19","value":{"arguments":[{"kind":"number","nativeSrc":"2850:4:19","nodeType":"YulLiteral","src":"2850:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2844:5:19","nodeType":"YulIdentifier","src":"2844:5:19"},"nativeSrc":"2844:11:19","nodeType":"YulFunctionCall","src":"2844:11:19"},"variables":[{"name":"ptr","nativeSrc":"2837:3:19","nodeType":"YulTypedName","src":"2837:3:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4057:3:19","nodeType":"YulIdentifier","src":"4057:3:19"},{"kind":"number","nativeSrc":"4062:4:19","nodeType":"YulLiteral","src":"4062:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4053:3:19","nodeType":"YulIdentifier","src":"4053:3:19"},"nativeSrc":"4053:14:19","nodeType":"YulFunctionCall","src":"4053:14:19"},{"name":"bytecodeHash","nativeSrc":"4069:12:19","nodeType":"YulIdentifier","src":"4069:12:19"}],"functionName":{"name":"mstore","nativeSrc":"4046:6:19","nodeType":"YulIdentifier","src":"4046:6:19"},"nativeSrc":"4046:36:19","nodeType":"YulFunctionCall","src":"4046:36:19"},"nativeSrc":"4046:36:19","nodeType":"YulExpressionStatement","src":"4046:36:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4106:3:19","nodeType":"YulIdentifier","src":"4106:3:19"},{"kind":"number","nativeSrc":"4111:4:19","nodeType":"YulLiteral","src":"4111:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4102:3:19","nodeType":"YulIdentifier","src":"4102:3:19"},"nativeSrc":"4102:14:19","nodeType":"YulFunctionCall","src":"4102:14:19"},{"name":"salt","nativeSrc":"4118:4:19","nodeType":"YulIdentifier","src":"4118:4:19"}],"functionName":{"name":"mstore","nativeSrc":"4095:6:19","nodeType":"YulIdentifier","src":"4095:6:19"},"nativeSrc":"4095:28:19","nodeType":"YulFunctionCall","src":"4095:28:19"},"nativeSrc":"4095:28:19","nodeType":"YulExpressionStatement","src":"4095:28:19"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4143:3:19","nodeType":"YulIdentifier","src":"4143:3:19"},{"name":"deployer","nativeSrc":"4148:8:19","nodeType":"YulIdentifier","src":"4148:8:19"}],"functionName":{"name":"mstore","nativeSrc":"4136:6:19","nodeType":"YulIdentifier","src":"4136:6:19"},"nativeSrc":"4136:21:19","nodeType":"YulFunctionCall","src":"4136:21:19"},"nativeSrc":"4136:21:19","nodeType":"YulExpressionStatement","src":"4136:21:19"},{"nativeSrc":"4219:27:19","nodeType":"YulVariableDeclaration","src":"4219:27:19","value":{"arguments":[{"name":"ptr","nativeSrc":"4236:3:19","nodeType":"YulIdentifier","src":"4236:3:19"},{"kind":"number","nativeSrc":"4241:4:19","nodeType":"YulLiteral","src":"4241:4:19","type":"","value":"0x0b"}],"functionName":{"name":"add","nativeSrc":"4232:3:19","nodeType":"YulIdentifier","src":"4232:3:19"},"nativeSrc":"4232:14:19","nodeType":"YulFunctionCall","src":"4232:14:19"},"variables":[{"name":"start","nativeSrc":"4223:5:19","nodeType":"YulTypedName","src":"4223:5:19","type":""}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"4345:5:19","nodeType":"YulIdentifier","src":"4345:5:19"},{"kind":"number","nativeSrc":"4352:4:19","nodeType":"YulLiteral","src":"4352:4:19","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nativeSrc":"4337:7:19","nodeType":"YulIdentifier","src":"4337:7:19"},"nativeSrc":"4337:20:19","nodeType":"YulFunctionCall","src":"4337:20:19"},"nativeSrc":"4337:20:19","nodeType":"YulExpressionStatement","src":"4337:20:19"},{"nativeSrc":"4370:77:19","nodeType":"YulAssignment","src":"4370:77:19","value":{"arguments":[{"arguments":[{"name":"start","nativeSrc":"4392:5:19","nodeType":"YulIdentifier","src":"4392:5:19"},{"kind":"number","nativeSrc":"4399:2:19","nodeType":"YulLiteral","src":"4399:2:19","type":"","value":"85"}],"functionName":{"name":"keccak256","nativeSrc":"4382:9:19","nodeType":"YulIdentifier","src":"4382:9:19"},"nativeSrc":"4382:20:19","nodeType":"YulFunctionCall","src":"4382:20:19"},{"kind":"number","nativeSrc":"4404:42:19","nodeType":"YulLiteral","src":"4404:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4378:3:19","nodeType":"YulIdentifier","src":"4378:3:19"},"nativeSrc":"4378:69:19","nodeType":"YulFunctionCall","src":"4378:69:19"},"variableNames":[{"name":"addr","nativeSrc":"4370:4:19","nodeType":"YulIdentifier","src":"4370:4:19"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3271,"isOffset":false,"isSlot":false,"src":"4370:4:19","valueSize":1},{"declaration":3266,"isOffset":false,"isSlot":false,"src":"4069:12:19","valueSize":1},{"declaration":3268,"isOffset":false,"isSlot":false,"src":"4148:8:19","valueSize":1},{"declaration":3264,"isOffset":false,"isSlot":false,"src":"4118:4:19","valueSize":1}],"flags":["memory-safe"],"id":3273,"nodeType":"InlineAssembly","src":"2794:1663:19"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"2432:232:19","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2678:14:19","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"salt","nameLocation":"2701:4:19","nodeType":"VariableDeclaration","scope":3275,"src":"2693:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2693:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2715:12:19","nodeType":"VariableDeclaration","scope":3275,"src":"2707:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2707:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"deployer","nameLocation":"2737:8:19","nodeType":"VariableDeclaration","scope":3275,"src":"2729:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"2729:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2692:54:19"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"addr","nameLocation":"2778:4:19","nodeType":"VariableDeclaration","scope":3275,"src":"2770:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2769:14:19"},"scope":3276,"src":"2669:1794:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3277,"src":"533:3932:19","usedErrors":[3185],"usedEvents":[]}],"src":"101:4365:19"},"id":19},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[3298]},"id":3299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3278,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"126:284:20","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":3298,"linearizedBaseContracts":[3298],"name":"Errors","nameLocation":"419:6:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"432:94:20","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":3286,"name":"InsufficientBalance","nameLocation":"537:19:20","nodeType":"ErrorDefinition","parameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"balance","nameLocation":"565:7:20","nodeType":"VariableDeclaration","scope":3286,"src":"557:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"needed","nameLocation":"582:6:20","nodeType":"VariableDeclaration","scope":3286,"src":"574:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:20"},"src":"531:59:20"},{"documentation":{"id":3287,"nodeType":"StructuredDocumentation","src":"596:89:20","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":3289,"name":"FailedCall","nameLocation":"696:10:20","nodeType":"ErrorDefinition","parameters":{"id":3288,"nodeType":"ParameterList","parameters":[],"src":"706:2:20"},"src":"690:19:20"},{"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"715:46:20","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":3292,"name":"FailedDeployment","nameLocation":"772:16:20","nodeType":"ErrorDefinition","parameters":{"id":3291,"nodeType":"ParameterList","parameters":[],"src":"788:2:20"},"src":"766:25:20"},{"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"797:58:20","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":3297,"name":"MissingPrecompile","nameLocation":"866:17:20","nodeType":"ErrorDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3297,"src":"884:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:20"},"src":"860:33:20"}],"scope":3299,"src":"411:484:20","usedErrors":[3286,3289,3292,3297],"usedEvents":[]}],"src":"100:796:20"},"id":20},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3350]},"id":3351,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3300,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3301,"nodeType":"StructuredDocumentation","src":"125:489:21","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3350,"linearizedBaseContracts":[3350],"name":"Panic","nameLocation":"665:5:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"677:36:21","text":"@dev generic / unspecified error"},"id":3305,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:21","nodeType":"VariableDeclaration","scope":3350,"src":"718:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3306,"nodeType":"StructuredDocumentation","src":"764:37:21","text":"@dev used by the assert() builtin"},"id":3309,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:21","nodeType":"VariableDeclaration","scope":3350,"src":"806:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"851:41:21","text":"@dev arithmetic underflow or overflow"},"id":3313,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:21","nodeType":"VariableDeclaration","scope":3350,"src":"897:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:21","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"950:35:21","text":"@dev division or modulo by zero"},"id":3317,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:21","nodeType":"VariableDeclaration","scope":3350,"src":"990:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"1045:30:21","text":"@dev enum conversion error"},"id":3321,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:21","nodeType":"VariableDeclaration","scope":3350,"src":"1080:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:21","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"1140:36:21","text":"@dev invalid encoding in storage"},"id":3325,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:21","nodeType":"VariableDeclaration","scope":3350,"src":"1181:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:21","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"1242:24:21","text":"@dev empty array pop"},"id":3329,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:21","nodeType":"VariableDeclaration","scope":3350,"src":"1271:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:21","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"1325:35:21","text":"@dev array out of bounds access"},"id":3333,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:21","nodeType":"VariableDeclaration","scope":3350,"src":"1365:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"1423:65:21","text":"@dev resource error (too large allocation or too large array)"},"id":3337,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:21","nodeType":"VariableDeclaration","scope":3350,"src":"1493:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"1546:42:21","text":"@dev calling invalid internal function"},"id":3341,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:21","nodeType":"VariableDeclaration","scope":3350,"src":"1593:58:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:21","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3348,"nodeType":"Block","src":"1819:151:21","statements":[{"AST":{"nativeSrc":"1854:110:21","nodeType":"YulBlock","src":"1854:110:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:21","nodeType":"YulLiteral","src":"1875:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:21","nodeType":"YulLiteral","src":"1881:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:21","nodeType":"YulIdentifier","src":"1868:6:21"},"nativeSrc":"1868:24:21","nodeType":"YulFunctionCall","src":"1868:24:21"},"nativeSrc":"1868:24:21","nodeType":"YulExpressionStatement","src":"1868:24:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:21","nodeType":"YulLiteral","src":"1912:4:21","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:21","nodeType":"YulIdentifier","src":"1918:4:21"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:21","nodeType":"YulIdentifier","src":"1905:6:21"},"nativeSrc":"1905:18:21","nodeType":"YulFunctionCall","src":"1905:18:21"},"nativeSrc":"1905:18:21","nodeType":"YulExpressionStatement","src":"1905:18:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:21","nodeType":"YulLiteral","src":"1943:4:21","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:21","nodeType":"YulLiteral","src":"1949:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:21","nodeType":"YulIdentifier","src":"1936:6:21"},"nativeSrc":"1936:18:21","nodeType":"YulFunctionCall","src":"1936:18:21"},"nativeSrc":"1936:18:21","nodeType":"YulExpressionStatement","src":"1936:18:21"}]},"evmVersion":"cancun","externalReferences":[{"declaration":3344,"isOffset":false,"isSlot":false,"src":"1918:4:21","valueSize":1}],"flags":["memory-safe"],"id":3347,"nodeType":"InlineAssembly","src":"1829:135:21"}]},"documentation":{"id":3342,"nodeType":"StructuredDocumentation","src":"1658:113:21","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:21","nodeType":"FunctionDefinition","parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"code","nameLocation":"1799:4:21","nodeType":"VariableDeclaration","scope":3349,"src":"1791:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:21"},"returnParameters":{"id":3346,"nodeType":"ParameterList","parameters":[],"src":"1819:0:21"},"scope":3350,"src":"1776:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3351,"src":"657:1315:21","usedErrors":[],"usedEvents":[]}],"src":"99:1874:21"},"id":21},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[3177],"Pausable":[3458]},"id":3459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3352,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3354,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3459,"sourceUnit":3178,"src":"128:45:22","symbolAliases":[{"foreign":{"id":3353,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"136:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3356,"name":"Context","nameLocations":["645:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"645:7:22"},"id":3357,"nodeType":"InheritanceSpecifier","src":"645:7:22"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3355,"nodeType":"StructuredDocumentation","src":"175:439:22","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":3458,"linearizedBaseContracts":[3458,3177],"name":"Pausable","nameLocation":"633:8:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3359,"mutability":"mutable","name":"_paused","nameLocation":"672:7:22","nodeType":"VariableDeclaration","scope":3458,"src":"659:20:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3358,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"686:73:22","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":3364,"name":"Paused","nameLocation":"770:6:22","nodeType":"EventDefinition","parameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:22","nodeType":"VariableDeclaration","scope":3364,"src":"777:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3361,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:22"},"src":"764:30:22"},{"anonymous":false,"documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"800:70:22","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":3369,"name":"Unpaused","nameLocation":"881:8:22","nodeType":"EventDefinition","parameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:22","nodeType":"VariableDeclaration","scope":3369,"src":"890:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3366,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:22"},"src":"875:32:22"},{"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"913:76:22","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":3372,"name":"EnforcedPause","nameLocation":"1000:13:22","nodeType":"ErrorDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[],"src":"1013:2:22"},"src":"994:22:22"},{"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"1022:80:22","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":3375,"name":"ExpectedPause","nameLocation":"1113:13:22","nodeType":"ErrorDefinition","parameters":{"id":3374,"nodeType":"ParameterList","parameters":[],"src":"1126:2:22"},"src":"1107:22:22"},{"body":{"id":3382,"nodeType":"Block","src":"1340:47:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3378,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"1350:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3380,"nodeType":"ExpressionStatement","src":"1350:19:22"},{"id":3381,"nodeType":"PlaceholderStatement","src":"1379:1:22"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"1135:175:22","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":3383,"name":"whenNotPaused","nameLocation":"1324:13:22","nodeType":"ModifierDefinition","parameters":{"id":3377,"nodeType":"ParameterList","parameters":[],"src":"1337:2:22"},"src":"1315:72:22","virtual":false,"visibility":"internal"},{"body":{"id":3390,"nodeType":"Block","src":"1587:44:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3386,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"1597:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3388,"nodeType":"ExpressionStatement","src":"1597:16:22"},{"id":3389,"nodeType":"PlaceholderStatement","src":"1623:1:22"}]},"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"1393:167:22","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":3391,"name":"whenPaused","nameLocation":"1574:10:22","nodeType":"ModifierDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[],"src":"1584:2:22"},"src":"1565:66:22","virtual":false,"visibility":"internal"},{"body":{"id":3399,"nodeType":"Block","src":"1779:31:22","statements":[{"expression":{"id":3397,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"1796:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3396,"id":3398,"nodeType":"Return","src":"1789:14:22"}]},"documentation":{"id":3392,"nodeType":"StructuredDocumentation","src":"1637:84:22","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":3400,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:22","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[],"src":"1741:2:22"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3400,"src":"1773:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3394,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:22"},"scope":3458,"src":"1726:84:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3411,"nodeType":"Block","src":"1929:77:22","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":3404,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"1943:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3410,"nodeType":"IfStatement","src":"1939:61:22","trueBody":{"id":3409,"nodeType":"Block","src":"1953:47:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3406,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1974:13:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3408,"nodeType":"RevertStatement","src":"1967:22:22"}]}}]},"documentation":{"id":3401,"nodeType":"StructuredDocumentation","src":"1816:57:22","text":" @dev Throws if the contract is paused."},"id":3412,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:22","nodeType":"FunctionDefinition","parameters":{"id":3402,"nodeType":"ParameterList","parameters":[],"src":"1904:2:22"},"returnParameters":{"id":3403,"nodeType":"ParameterList","parameters":[],"src":"1929:0:22"},"scope":3458,"src":"1878:128:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3424,"nodeType":"Block","src":"2126:78:22","statements":[{"condition":{"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:22","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3416,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"2141:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"2136:62:22","trueBody":{"id":3422,"nodeType":"Block","src":"2151:47:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3419,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"2172:13:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3421,"nodeType":"RevertStatement","src":"2165:22:22"}]}}]},"documentation":{"id":3413,"nodeType":"StructuredDocumentation","src":"2012:61:22","text":" @dev Throws if the contract is not paused."},"id":3425,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:22","nodeType":"FunctionDefinition","parameters":{"id":3414,"nodeType":"ParameterList","parameters":[],"src":"2101:2:22"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[],"src":"2126:0:22"},"scope":3458,"src":"2078:126:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3440,"nodeType":"Block","src":"2388:66:22","statements":[{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3431,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"2398:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"nodeType":"ExpressionStatement","src":"2398:14:22"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"2434:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3435,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"2427:6:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3439,"nodeType":"EmitStatement","src":"2422:25:22"}]},"documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"2210:124:22","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":3441,"implemented":true,"kind":"function","modifiers":[{"id":3429,"kind":"modifierInvocation","modifierName":{"id":3428,"name":"whenNotPaused","nameLocations":["2374:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"2374:13:22"},"nodeType":"ModifierInvocation","src":"2374:13:22"}],"name":"_pause","nameLocation":"2348:6:22","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[],"src":"2354:2:22"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[],"src":"2388:0:22"},"scope":3458,"src":"2339:115:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3456,"nodeType":"Block","src":"2634:69:22","statements":[{"expression":{"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3447,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"2644:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3450,"nodeType":"ExpressionStatement","src":"2644:15:22"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"2683:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3451,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"2674:8:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3455,"nodeType":"EmitStatement","src":"2669:27:22"}]},"documentation":{"id":3442,"nodeType":"StructuredDocumentation","src":"2460:121:22","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":3457,"implemented":true,"kind":"function","modifiers":[{"id":3445,"kind":"modifierInvocation","modifierName":{"id":3444,"name":"whenPaused","nameLocations":["2623:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":3391,"src":"2623:10:22"},"nodeType":"ModifierInvocation","src":"2623:10:22"}],"name":"_unpause","nameLocation":"2595:8:22","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[],"src":"2603:2:22"},"returnParameters":{"id":3446,"nodeType":"ParameterList","parameters":[],"src":"2634:0:22"},"scope":3458,"src":"2586:117:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3459,"src":"615:2090:22","usedErrors":[3372,3375],"usedEvents":[3364,3369]}],"src":"102:2604:22"},"id":22},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3527]},"id":3528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3460,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"135:894:23","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3527,"linearizedBaseContracts":[3527],"name":"ReentrancyGuard","nameLocation":"1048:15:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3464,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:23","nodeType":"VariableDeclaration","scope":3527,"src":"1818:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3467,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:23","nodeType":"VariableDeclaration","scope":3527,"src":"1864:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3469,"mutability":"mutable","name":"_status","nameLocation":"1923:7:23","nodeType":"VariableDeclaration","scope":3527,"src":"1907:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"1937:52:23","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3472,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:23","nodeType":"ErrorDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[],"src":"2028:2:23"},"src":"1994:37:23"},{"body":{"id":3479,"nodeType":"Block","src":"2051:38:23","statements":[{"expression":{"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3475,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"2061:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3476,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"2071:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3478,"nodeType":"ExpressionStatement","src":"2061:21:23"}]},"id":3480,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3473,"nodeType":"ParameterList","parameters":[],"src":"2048:2:23"},"returnParameters":{"id":3474,"nodeType":"ParameterList","parameters":[],"src":"2051:0:23"},"scope":3527,"src":"2037:52:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3490,"nodeType":"Block","src":"2490:79:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3483,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"2500:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3485,"nodeType":"ExpressionStatement","src":"2500:21:23"},{"id":3486,"nodeType":"PlaceholderStatement","src":"2531:1:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3487,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"2542:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3489,"nodeType":"ExpressionStatement","src":"2542:20:23"}]},"documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"2095:366:23","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3491,"name":"nonReentrant","nameLocation":"2475:12:23","nodeType":"ModifierDefinition","parameters":{"id":3482,"nodeType":"ParameterList","parameters":[],"src":"2487:2:23"},"src":"2466:103:23","virtual":false,"visibility":"internal"},{"body":{"id":3506,"nodeType":"Block","src":"2614:268:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"2702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3495,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"2713:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3501,"nodeType":"IfStatement","src":"2698:86:23","trueBody":{"id":3500,"nodeType":"Block","src":"2722:62:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3497,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"2743:28:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3499,"nodeType":"RevertStatement","src":"2736:37:23"}]}},{"expression":{"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3502,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"2858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3503,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"2868:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3505,"nodeType":"ExpressionStatement","src":"2858:17:23"}]},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:23","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[],"src":"2603:2:23"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[],"src":"2614:0:23"},"scope":3527,"src":"2575:307:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3514,"nodeType":"Block","src":"2926:170:23","statements":[{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3510,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"3068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3511,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"3078:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"nodeType":"ExpressionStatement","src":"3068:21:23"}]},"id":3515,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:23","nodeType":"FunctionDefinition","parameters":{"id":3508,"nodeType":"ParameterList","parameters":[],"src":"2915:2:23"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[],"src":"2926:0:23"},"scope":3527,"src":"2888:208:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3525,"nodeType":"Block","src":"3339:42:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"3356:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3522,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"3367:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3520,"id":3524,"nodeType":"Return","src":"3349:25:23"}]},"documentation":{"id":3516,"nodeType":"StructuredDocumentation","src":"3102:168:23","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3526,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:23","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[],"src":"3307:2:23"},"returnParameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3526,"src":"3333:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3518,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:23"},"scope":3527,"src":"3275:106:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3528,"src":"1030:2353:23","usedErrors":[3472],"usedEvents":[]}],"src":"109:3275:23"},"id":23},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3657]},"id":3658,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3529,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3530,"nodeType":"StructuredDocumentation","src":"225:1373:24","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3657,"linearizedBaseContracts":[3657],"name":"SlotDerivation","nameLocation":"1607:14:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":3539,"nodeType":"Block","src":"1790:194:24","statements":[{"AST":{"nativeSrc":"1825:153:24","nodeType":"YulBlock","src":"1825:153:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:24","nodeType":"YulLiteral","src":"1846:4:24","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:24","nodeType":"YulIdentifier","src":"1870:9:24"},{"kind":"number","nativeSrc":"1881:4:24","nodeType":"YulLiteral","src":"1881:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:24","nodeType":"YulIdentifier","src":"1866:3:24"},"nativeSrc":"1866:20:24","nodeType":"YulFunctionCall","src":"1866:20:24"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:24","nodeType":"YulIdentifier","src":"1894:9:24"}],"functionName":{"name":"mload","nativeSrc":"1888:5:24","nodeType":"YulIdentifier","src":"1888:5:24"},"nativeSrc":"1888:16:24","nodeType":"YulFunctionCall","src":"1888:16:24"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:24","nodeType":"YulIdentifier","src":"1856:9:24"},"nativeSrc":"1856:49:24","nodeType":"YulFunctionCall","src":"1856:49:24"},{"kind":"number","nativeSrc":"1907:1:24","nodeType":"YulLiteral","src":"1907:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:24","nodeType":"YulIdentifier","src":"1852:3:24"},"nativeSrc":"1852:57:24","nodeType":"YulFunctionCall","src":"1852:57:24"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:24","nodeType":"YulIdentifier","src":"1839:6:24"},"nativeSrc":"1839:71:24","nodeType":"YulFunctionCall","src":"1839:71:24"},"nativeSrc":"1839:71:24","nodeType":"YulExpressionStatement","src":"1839:71:24"},{"nativeSrc":"1923:45:24","nodeType":"YulAssignment","src":"1923:45:24","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:24","nodeType":"YulLiteral","src":"1945:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:24","nodeType":"YulLiteral","src":"1951:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:24","nodeType":"YulIdentifier","src":"1935:9:24"},"nativeSrc":"1935:21:24","nodeType":"YulFunctionCall","src":"1935:21:24"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:24","nodeType":"YulLiteral","src":"1962:4:24","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:24","nodeType":"YulIdentifier","src":"1958:3:24"},"nativeSrc":"1958:9:24","nodeType":"YulFunctionCall","src":"1958:9:24"}],"functionName":{"name":"and","nativeSrc":"1931:3:24","nodeType":"YulIdentifier","src":"1931:3:24"},"nativeSrc":"1931:37:24","nodeType":"YulFunctionCall","src":"1931:37:24"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:24","nodeType":"YulIdentifier","src":"1923:4:24"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3533,"isOffset":false,"isSlot":false,"src":"1870:9:24","valueSize":1},{"declaration":3533,"isOffset":false,"isSlot":false,"src":"1894:9:24","valueSize":1},{"declaration":3536,"isOffset":false,"isSlot":false,"src":"1923:4:24","valueSize":1}],"flags":["memory-safe"],"id":3538,"nodeType":"InlineAssembly","src":"1800:178:24"}]},"documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"1628:74:24","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:24","nodeType":"FunctionDefinition","parameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:24","nodeType":"VariableDeclaration","scope":3540,"src":"1728:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3532,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:24"},"returnParameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"slot","nameLocation":"1784:4:24","nodeType":"VariableDeclaration","scope":3540,"src":"1776:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:24"},"scope":3657,"src":"1707:277:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3561,"nodeType":"Block","src":"2176:86:24","statements":[{"id":3560,"nodeType":"UncheckedBlock","src":"2186:70:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3554,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"2233:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:24","typeDescriptions":{}}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3556,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"2241:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:24","typeDescriptions":{}}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3549,"id":3559,"nodeType":"Return","src":"2210:35:24"}]}]},"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"1990:99:24","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3562,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:24","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"slot","nameLocation":"2118:4:24","nodeType":"VariableDeclaration","scope":3562,"src":"2110:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"pos","nameLocation":"2132:3:24","nodeType":"VariableDeclaration","scope":3562,"src":"2124:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:24"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"result","nameLocation":"2168:6:24","nodeType":"VariableDeclaration","scope":3562,"src":"2160:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:24"},"scope":3657,"src":"2094:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3571,"nodeType":"Block","src":"2465:127:24","statements":[{"AST":{"nativeSrc":"2500:86:24","nodeType":"YulBlock","src":"2500:86:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:24","nodeType":"YulLiteral","src":"2521:4:24","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:24","nodeType":"YulIdentifier","src":"2527:4:24"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:24","nodeType":"YulIdentifier","src":"2514:6:24"},"nativeSrc":"2514:18:24","nodeType":"YulFunctionCall","src":"2514:18:24"},"nativeSrc":"2514:18:24","nodeType":"YulExpressionStatement","src":"2514:18:24"},{"nativeSrc":"2545:31:24","nodeType":"YulAssignment","src":"2545:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:24","nodeType":"YulLiteral","src":"2565:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:24","nodeType":"YulLiteral","src":"2571:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:24","nodeType":"YulIdentifier","src":"2555:9:24"},"nativeSrc":"2555:21:24","nodeType":"YulFunctionCall","src":"2555:21:24"},"variableNames":[{"name":"result","nativeSrc":"2545:6:24","nodeType":"YulIdentifier","src":"2545:6:24"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3568,"isOffset":false,"isSlot":false,"src":"2545:6:24","valueSize":1},{"declaration":3565,"isOffset":false,"isSlot":false,"src":"2527:4:24","valueSize":1}],"flags":["memory-safe"],"id":3570,"nodeType":"InlineAssembly","src":"2475:111:24"}]},"documentation":{"id":3563,"nodeType":"StructuredDocumentation","src":"2268:118:24","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:24","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"slot","nameLocation":"2420:4:24","nodeType":"VariableDeclaration","scope":3572,"src":"2412:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:24"},"returnParameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"result","nameLocation":"2457:6:24","nodeType":"VariableDeclaration","scope":3572,"src":"2449:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:24"},"scope":3657,"src":"2391:201:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"2770:179:24","statements":[{"AST":{"nativeSrc":"2805:138:24","nodeType":"YulBlock","src":"2805:138:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:24","nodeType":"YulLiteral","src":"2826:4:24","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:24","nodeType":"YulIdentifier","src":"2836:3:24"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:24","nodeType":"YulLiteral","src":"2845:2:24","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:24","nodeType":"YulLiteral","src":"2853:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:24","nodeType":"YulIdentifier","src":"2849:3:24"},"nativeSrc":"2849:6:24","nodeType":"YulFunctionCall","src":"2849:6:24"}],"functionName":{"name":"shr","nativeSrc":"2841:3:24","nodeType":"YulIdentifier","src":"2841:3:24"},"nativeSrc":"2841:15:24","nodeType":"YulFunctionCall","src":"2841:15:24"}],"functionName":{"name":"and","nativeSrc":"2832:3:24","nodeType":"YulIdentifier","src":"2832:3:24"},"nativeSrc":"2832:25:24","nodeType":"YulFunctionCall","src":"2832:25:24"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:24","nodeType":"YulIdentifier","src":"2819:6:24"},"nativeSrc":"2819:39:24","nodeType":"YulFunctionCall","src":"2819:39:24"},"nativeSrc":"2819:39:24","nodeType":"YulExpressionStatement","src":"2819:39:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:24","nodeType":"YulLiteral","src":"2878:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:24","nodeType":"YulIdentifier","src":"2884:4:24"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:24","nodeType":"YulIdentifier","src":"2871:6:24"},"nativeSrc":"2871:18:24","nodeType":"YulFunctionCall","src":"2871:18:24"},"nativeSrc":"2871:18:24","nodeType":"YulExpressionStatement","src":"2871:18:24"},{"nativeSrc":"2902:31:24","nodeType":"YulAssignment","src":"2902:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:24","nodeType":"YulLiteral","src":"2922:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:24","nodeType":"YulLiteral","src":"2928:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:24","nodeType":"YulIdentifier","src":"2912:9:24"},"nativeSrc":"2912:21:24","nodeType":"YulFunctionCall","src":"2912:21:24"},"variableNames":[{"name":"result","nativeSrc":"2902:6:24","nodeType":"YulIdentifier","src":"2902:6:24"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3577,"isOffset":false,"isSlot":false,"src":"2836:3:24","valueSize":1},{"declaration":3580,"isOffset":false,"isSlot":false,"src":"2902:6:24","valueSize":1},{"declaration":3575,"isOffset":false,"isSlot":false,"src":"2884:4:24","valueSize":1}],"flags":["memory-safe"],"id":3582,"nodeType":"InlineAssembly","src":"2780:163:24"}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"2598:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:24","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"slot","nameLocation":"2712:4:24","nodeType":"VariableDeclaration","scope":3584,"src":"2704:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"key","nameLocation":"2726:3:24","nodeType":"VariableDeclaration","scope":3584,"src":"2718:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3576,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:24"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"result","nameLocation":"2762:6:24","nodeType":"VariableDeclaration","scope":3584,"src":"2754:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:24"},"scope":3657,"src":"2681:268:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3595,"nodeType":"Block","src":"3124:173:24","statements":[{"AST":{"nativeSrc":"3159:132:24","nodeType":"YulBlock","src":"3159:132:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:24","nodeType":"YulLiteral","src":"3180:4:24","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:24","nodeType":"YulIdentifier","src":"3200:3:24"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:24","nodeType":"YulIdentifier","src":"3193:6:24"},"nativeSrc":"3193:11:24","nodeType":"YulFunctionCall","src":"3193:11:24"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:24","nodeType":"YulIdentifier","src":"3186:6:24"},"nativeSrc":"3186:19:24","nodeType":"YulFunctionCall","src":"3186:19:24"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:24","nodeType":"YulIdentifier","src":"3173:6:24"},"nativeSrc":"3173:33:24","nodeType":"YulFunctionCall","src":"3173:33:24"},"nativeSrc":"3173:33:24","nodeType":"YulExpressionStatement","src":"3173:33:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:24","nodeType":"YulLiteral","src":"3226:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:24","nodeType":"YulIdentifier","src":"3232:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:24","nodeType":"YulIdentifier","src":"3219:6:24"},"nativeSrc":"3219:18:24","nodeType":"YulFunctionCall","src":"3219:18:24"},"nativeSrc":"3219:18:24","nodeType":"YulExpressionStatement","src":"3219:18:24"},{"nativeSrc":"3250:31:24","nodeType":"YulAssignment","src":"3250:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:24","nodeType":"YulLiteral","src":"3270:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:24","nodeType":"YulLiteral","src":"3276:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:24","nodeType":"YulIdentifier","src":"3260:9:24"},"nativeSrc":"3260:21:24","nodeType":"YulFunctionCall","src":"3260:21:24"},"variableNames":[{"name":"result","nativeSrc":"3250:6:24","nodeType":"YulIdentifier","src":"3250:6:24"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3589,"isOffset":false,"isSlot":false,"src":"3200:3:24","valueSize":1},{"declaration":3592,"isOffset":false,"isSlot":false,"src":"3250:6:24","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"3232:4:24","valueSize":1}],"flags":["memory-safe"],"id":3594,"nodeType":"InlineAssembly","src":"3134:157:24"}]},"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"2955:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3596,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:24","nodeType":"FunctionDefinition","parameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"slot","nameLocation":"3069:4:24","nodeType":"VariableDeclaration","scope":3596,"src":"3061:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3589,"mutability":"mutable","name":"key","nameLocation":"3080:3:24","nodeType":"VariableDeclaration","scope":3596,"src":"3075:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3588,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:24"},"returnParameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"result","nameLocation":"3116:6:24","nodeType":"VariableDeclaration","scope":3596,"src":"3108:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:24"},"scope":3657,"src":"3038:259:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3607,"nodeType":"Block","src":"3475:157:24","statements":[{"AST":{"nativeSrc":"3510:116:24","nodeType":"YulBlock","src":"3510:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:24","nodeType":"YulLiteral","src":"3531:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:24","nodeType":"YulIdentifier","src":"3537:3:24"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:24","nodeType":"YulIdentifier","src":"3524:6:24"},"nativeSrc":"3524:17:24","nodeType":"YulFunctionCall","src":"3524:17:24"},"nativeSrc":"3524:17:24","nodeType":"YulExpressionStatement","src":"3524:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:24","nodeType":"YulLiteral","src":"3561:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:24","nodeType":"YulIdentifier","src":"3567:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:24","nodeType":"YulIdentifier","src":"3554:6:24"},"nativeSrc":"3554:18:24","nodeType":"YulFunctionCall","src":"3554:18:24"},"nativeSrc":"3554:18:24","nodeType":"YulExpressionStatement","src":"3554:18:24"},{"nativeSrc":"3585:31:24","nodeType":"YulAssignment","src":"3585:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:24","nodeType":"YulLiteral","src":"3605:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:24","nodeType":"YulLiteral","src":"3611:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:24","nodeType":"YulIdentifier","src":"3595:9:24"},"nativeSrc":"3595:21:24","nodeType":"YulFunctionCall","src":"3595:21:24"},"variableNames":[{"name":"result","nativeSrc":"3585:6:24","nodeType":"YulIdentifier","src":"3585:6:24"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3601,"isOffset":false,"isSlot":false,"src":"3537:3:24","valueSize":1},{"declaration":3604,"isOffset":false,"isSlot":false,"src":"3585:6:24","valueSize":1},{"declaration":3599,"isOffset":false,"isSlot":false,"src":"3567:4:24","valueSize":1}],"flags":["memory-safe"],"id":3606,"nodeType":"InlineAssembly","src":"3485:141:24"}]},"documentation":{"id":3597,"nodeType":"StructuredDocumentation","src":"3303:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3608,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:24","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"slot","nameLocation":"3417:4:24","nodeType":"VariableDeclaration","scope":3608,"src":"3409:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"key","nameLocation":"3431:3:24","nodeType":"VariableDeclaration","scope":3608,"src":"3423:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:24"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"result","nameLocation":"3467:6:24","nodeType":"VariableDeclaration","scope":3608,"src":"3459:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:24"},"scope":3657,"src":"3386:246:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3619,"nodeType":"Block","src":"3810:157:24","statements":[{"AST":{"nativeSrc":"3845:116:24","nodeType":"YulBlock","src":"3845:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:24","nodeType":"YulLiteral","src":"3866:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:24","nodeType":"YulIdentifier","src":"3872:3:24"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:24","nodeType":"YulIdentifier","src":"3859:6:24"},"nativeSrc":"3859:17:24","nodeType":"YulFunctionCall","src":"3859:17:24"},"nativeSrc":"3859:17:24","nodeType":"YulExpressionStatement","src":"3859:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:24","nodeType":"YulLiteral","src":"3896:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:24","nodeType":"YulIdentifier","src":"3902:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:24","nodeType":"YulIdentifier","src":"3889:6:24"},"nativeSrc":"3889:18:24","nodeType":"YulFunctionCall","src":"3889:18:24"},"nativeSrc":"3889:18:24","nodeType":"YulExpressionStatement","src":"3889:18:24"},{"nativeSrc":"3920:31:24","nodeType":"YulAssignment","src":"3920:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:24","nodeType":"YulLiteral","src":"3940:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:24","nodeType":"YulLiteral","src":"3946:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:24","nodeType":"YulIdentifier","src":"3930:9:24"},"nativeSrc":"3930:21:24","nodeType":"YulFunctionCall","src":"3930:21:24"},"variableNames":[{"name":"result","nativeSrc":"3920:6:24","nodeType":"YulIdentifier","src":"3920:6:24"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3613,"isOffset":false,"isSlot":false,"src":"3872:3:24","valueSize":1},{"declaration":3616,"isOffset":false,"isSlot":false,"src":"3920:6:24","valueSize":1},{"declaration":3611,"isOffset":false,"isSlot":false,"src":"3902:4:24","valueSize":1}],"flags":["memory-safe"],"id":3618,"nodeType":"InlineAssembly","src":"3820:141:24"}]},"documentation":{"id":3609,"nodeType":"StructuredDocumentation","src":"3638:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:24","nodeType":"FunctionDefinition","parameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"slot","nameLocation":"3752:4:24","nodeType":"VariableDeclaration","scope":3620,"src":"3744:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3613,"mutability":"mutable","name":"key","nameLocation":"3766:3:24","nodeType":"VariableDeclaration","scope":3620,"src":"3758:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:24"},"returnParameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"result","nameLocation":"3802:6:24","nodeType":"VariableDeclaration","scope":3620,"src":"3794:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:24"},"scope":3657,"src":"3721:246:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3631,"nodeType":"Block","src":"4144:157:24","statements":[{"AST":{"nativeSrc":"4179:116:24","nodeType":"YulBlock","src":"4179:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:24","nodeType":"YulLiteral","src":"4200:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:24","nodeType":"YulIdentifier","src":"4206:3:24"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:24","nodeType":"YulIdentifier","src":"4193:6:24"},"nativeSrc":"4193:17:24","nodeType":"YulFunctionCall","src":"4193:17:24"},"nativeSrc":"4193:17:24","nodeType":"YulExpressionStatement","src":"4193:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:24","nodeType":"YulLiteral","src":"4230:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:24","nodeType":"YulIdentifier","src":"4236:4:24"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:24","nodeType":"YulIdentifier","src":"4223:6:24"},"nativeSrc":"4223:18:24","nodeType":"YulFunctionCall","src":"4223:18:24"},"nativeSrc":"4223:18:24","nodeType":"YulExpressionStatement","src":"4223:18:24"},{"nativeSrc":"4254:31:24","nodeType":"YulAssignment","src":"4254:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:24","nodeType":"YulLiteral","src":"4274:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:24","nodeType":"YulLiteral","src":"4280:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:24","nodeType":"YulIdentifier","src":"4264:9:24"},"nativeSrc":"4264:21:24","nodeType":"YulFunctionCall","src":"4264:21:24"},"variableNames":[{"name":"result","nativeSrc":"4254:6:24","nodeType":"YulIdentifier","src":"4254:6:24"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3625,"isOffset":false,"isSlot":false,"src":"4206:3:24","valueSize":1},{"declaration":3628,"isOffset":false,"isSlot":false,"src":"4254:6:24","valueSize":1},{"declaration":3623,"isOffset":false,"isSlot":false,"src":"4236:4:24","valueSize":1}],"flags":["memory-safe"],"id":3630,"nodeType":"InlineAssembly","src":"4154:141:24"}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"3973:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3632,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:24","nodeType":"FunctionDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"slot","nameLocation":"4087:4:24","nodeType":"VariableDeclaration","scope":3632,"src":"4079:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"key","nameLocation":"4100:3:24","nodeType":"VariableDeclaration","scope":3632,"src":"4093:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3624,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:24"},"returnParameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"result","nameLocation":"4136:6:24","nodeType":"VariableDeclaration","scope":3632,"src":"4128:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:24"},"scope":3657,"src":"4056:245:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3643,"nodeType":"Block","src":"4485:326:24","statements":[{"AST":{"nativeSrc":"4520:285:24","nodeType":"YulBlock","src":"4520:285:24","statements":[{"nativeSrc":"4534:24:24","nodeType":"YulVariableDeclaration","src":"4534:24:24","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:24","nodeType":"YulIdentifier","src":"4554:3:24"}],"functionName":{"name":"mload","nativeSrc":"4548:5:24","nodeType":"YulIdentifier","src":"4548:5:24"},"nativeSrc":"4548:10:24","nodeType":"YulFunctionCall","src":"4548:10:24"},"variables":[{"name":"length","nativeSrc":"4538:6:24","nodeType":"YulTypedName","src":"4538:6:24","type":""}]},{"nativeSrc":"4571:27:24","nodeType":"YulVariableDeclaration","src":"4571:27:24","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:24","nodeType":"YulIdentifier","src":"4588:3:24"},{"kind":"number","nativeSrc":"4593:4:24","nodeType":"YulLiteral","src":"4593:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:24","nodeType":"YulIdentifier","src":"4584:3:24"},"nativeSrc":"4584:14:24","nodeType":"YulFunctionCall","src":"4584:14:24"},"variables":[{"name":"begin","nativeSrc":"4575:5:24","nodeType":"YulTypedName","src":"4575:5:24","type":""}]},{"nativeSrc":"4611:29:24","nodeType":"YulVariableDeclaration","src":"4611:29:24","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:24","nodeType":"YulIdentifier","src":"4626:5:24"},{"name":"length","nativeSrc":"4633:6:24","nodeType":"YulIdentifier","src":"4633:6:24"}],"functionName":{"name":"add","nativeSrc":"4622:3:24","nodeType":"YulIdentifier","src":"4622:3:24"},"nativeSrc":"4622:18:24","nodeType":"YulFunctionCall","src":"4622:18:24"},"variables":[{"name":"end","nativeSrc":"4615:3:24","nodeType":"YulTypedName","src":"4615:3:24","type":""}]},{"nativeSrc":"4653:23:24","nodeType":"YulVariableDeclaration","src":"4653:23:24","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:24","nodeType":"YulIdentifier","src":"4672:3:24"}],"functionName":{"name":"mload","nativeSrc":"4666:5:24","nodeType":"YulIdentifier","src":"4666:5:24"},"nativeSrc":"4666:10:24","nodeType":"YulFunctionCall","src":"4666:10:24"},"variables":[{"name":"cache","nativeSrc":"4657:5:24","nodeType":"YulTypedName","src":"4657:5:24","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:24","nodeType":"YulIdentifier","src":"4696:3:24"},{"name":"slot","nativeSrc":"4701:4:24","nodeType":"YulIdentifier","src":"4701:4:24"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:24","nodeType":"YulIdentifier","src":"4689:6:24"},"nativeSrc":"4689:17:24","nodeType":"YulFunctionCall","src":"4689:17:24"},"nativeSrc":"4689:17:24","nodeType":"YulExpressionStatement","src":"4689:17:24"},{"nativeSrc":"4719:45:24","nodeType":"YulAssignment","src":"4719:45:24","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:24","nodeType":"YulIdentifier","src":"4739:5:24"},{"arguments":[{"name":"length","nativeSrc":"4750:6:24","nodeType":"YulIdentifier","src":"4750:6:24"},{"kind":"number","nativeSrc":"4758:4:24","nodeType":"YulLiteral","src":"4758:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:24","nodeType":"YulIdentifier","src":"4746:3:24"},"nativeSrc":"4746:17:24","nodeType":"YulFunctionCall","src":"4746:17:24"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:24","nodeType":"YulIdentifier","src":"4729:9:24"},"nativeSrc":"4729:35:24","nodeType":"YulFunctionCall","src":"4729:35:24"},"variableNames":[{"name":"result","nativeSrc":"4719:6:24","nodeType":"YulIdentifier","src":"4719:6:24"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:24","nodeType":"YulIdentifier","src":"4784:3:24"},{"name":"cache","nativeSrc":"4789:5:24","nodeType":"YulIdentifier","src":"4789:5:24"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:24","nodeType":"YulIdentifier","src":"4777:6:24"},"nativeSrc":"4777:18:24","nodeType":"YulFunctionCall","src":"4777:18:24"},"nativeSrc":"4777:18:24","nodeType":"YulExpressionStatement","src":"4777:18:24"}]},"evmVersion":"cancun","externalReferences":[{"declaration":3637,"isOffset":false,"isSlot":false,"src":"4554:3:24","valueSize":1},{"declaration":3637,"isOffset":false,"isSlot":false,"src":"4588:3:24","valueSize":1},{"declaration":3640,"isOffset":false,"isSlot":false,"src":"4719:6:24","valueSize":1},{"declaration":3635,"isOffset":false,"isSlot":false,"src":"4701:4:24","valueSize":1}],"flags":["memory-safe"],"id":3642,"nodeType":"InlineAssembly","src":"4495:310:24"}]},"documentation":{"id":3633,"nodeType":"StructuredDocumentation","src":"4307:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:24","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"slot","nameLocation":"4421:4:24","nodeType":"VariableDeclaration","scope":3644,"src":"4413:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"key","nameLocation":"4441:3:24","nodeType":"VariableDeclaration","scope":3644,"src":"4427:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3636,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:24"},"returnParameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"result","nameLocation":"4477:6:24","nodeType":"VariableDeclaration","scope":3644,"src":"4469:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:24"},"scope":3657,"src":"4390:421:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3655,"nodeType":"Block","src":"4994:326:24","statements":[{"AST":{"nativeSrc":"5029:285:24","nodeType":"YulBlock","src":"5029:285:24","statements":[{"nativeSrc":"5043:24:24","nodeType":"YulVariableDeclaration","src":"5043:24:24","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:24","nodeType":"YulIdentifier","src":"5063:3:24"}],"functionName":{"name":"mload","nativeSrc":"5057:5:24","nodeType":"YulIdentifier","src":"5057:5:24"},"nativeSrc":"5057:10:24","nodeType":"YulFunctionCall","src":"5057:10:24"},"variables":[{"name":"length","nativeSrc":"5047:6:24","nodeType":"YulTypedName","src":"5047:6:24","type":""}]},{"nativeSrc":"5080:27:24","nodeType":"YulVariableDeclaration","src":"5080:27:24","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:24","nodeType":"YulIdentifier","src":"5097:3:24"},{"kind":"number","nativeSrc":"5102:4:24","nodeType":"YulLiteral","src":"5102:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:24","nodeType":"YulIdentifier","src":"5093:3:24"},"nativeSrc":"5093:14:24","nodeType":"YulFunctionCall","src":"5093:14:24"},"variables":[{"name":"begin","nativeSrc":"5084:5:24","nodeType":"YulTypedName","src":"5084:5:24","type":""}]},{"nativeSrc":"5120:29:24","nodeType":"YulVariableDeclaration","src":"5120:29:24","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:24","nodeType":"YulIdentifier","src":"5135:5:24"},{"name":"length","nativeSrc":"5142:6:24","nodeType":"YulIdentifier","src":"5142:6:24"}],"functionName":{"name":"add","nativeSrc":"5131:3:24","nodeType":"YulIdentifier","src":"5131:3:24"},"nativeSrc":"5131:18:24","nodeType":"YulFunctionCall","src":"5131:18:24"},"variables":[{"name":"end","nativeSrc":"5124:3:24","nodeType":"YulTypedName","src":"5124:3:24","type":""}]},{"nativeSrc":"5162:23:24","nodeType":"YulVariableDeclaration","src":"5162:23:24","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:24","nodeType":"YulIdentifier","src":"5181:3:24"}],"functionName":{"name":"mload","nativeSrc":"5175:5:24","nodeType":"YulIdentifier","src":"5175:5:24"},"nativeSrc":"5175:10:24","nodeType":"YulFunctionCall","src":"5175:10:24"},"variables":[{"name":"cache","nativeSrc":"5166:5:24","nodeType":"YulTypedName","src":"5166:5:24","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:24","nodeType":"YulIdentifier","src":"5205:3:24"},{"name":"slot","nativeSrc":"5210:4:24","nodeType":"YulIdentifier","src":"5210:4:24"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:24","nodeType":"YulIdentifier","src":"5198:6:24"},"nativeSrc":"5198:17:24","nodeType":"YulFunctionCall","src":"5198:17:24"},"nativeSrc":"5198:17:24","nodeType":"YulExpressionStatement","src":"5198:17:24"},{"nativeSrc":"5228:45:24","nodeType":"YulAssignment","src":"5228:45:24","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:24","nodeType":"YulIdentifier","src":"5248:5:24"},{"arguments":[{"name":"length","nativeSrc":"5259:6:24","nodeType":"YulIdentifier","src":"5259:6:24"},{"kind":"number","nativeSrc":"5267:4:24","nodeType":"YulLiteral","src":"5267:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:24","nodeType":"YulIdentifier","src":"5255:3:24"},"nativeSrc":"5255:17:24","nodeType":"YulFunctionCall","src":"5255:17:24"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:24","nodeType":"YulIdentifier","src":"5238:9:24"},"nativeSrc":"5238:35:24","nodeType":"YulFunctionCall","src":"5238:35:24"},"variableNames":[{"name":"result","nativeSrc":"5228:6:24","nodeType":"YulIdentifier","src":"5228:6:24"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:24","nodeType":"YulIdentifier","src":"5293:3:24"},{"name":"cache","nativeSrc":"5298:5:24","nodeType":"YulIdentifier","src":"5298:5:24"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:24","nodeType":"YulIdentifier","src":"5286:6:24"},"nativeSrc":"5286:18:24","nodeType":"YulFunctionCall","src":"5286:18:24"},"nativeSrc":"5286:18:24","nodeType":"YulExpressionStatement","src":"5286:18:24"}]},"evmVersion":"cancun","externalReferences":[{"declaration":3649,"isOffset":false,"isSlot":false,"src":"5063:3:24","valueSize":1},{"declaration":3649,"isOffset":false,"isSlot":false,"src":"5097:3:24","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"5228:6:24","valueSize":1},{"declaration":3647,"isOffset":false,"isSlot":false,"src":"5210:4:24","valueSize":1}],"flags":["memory-safe"],"id":3654,"nodeType":"InlineAssembly","src":"5004:310:24"}]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"4817:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:24","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"slot","nameLocation":"4931:4:24","nodeType":"VariableDeclaration","scope":3656,"src":"4923:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"key","nameLocation":"4950:3:24","nodeType":"VariableDeclaration","scope":3656,"src":"4937:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3648,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:24"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"result","nameLocation":"4986:6:24","nodeType":"VariableDeclaration","scope":3656,"src":"4978:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:24"},"scope":3657,"src":"4900:420:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3658,"src":"1599:3723:24","usedErrors":[],"usedEvents":[]}],"src":"199:5124:24"},"id":24},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3781]},"id":3782,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3659,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3660,"nodeType":"StructuredDocumentation","src":"219:1187:25","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3781,"linearizedBaseContracts":[3781],"name":"StorageSlot","nameLocation":"1415:11:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3663,"members":[{"constant":false,"id":3662,"mutability":"mutable","name":"value","nameLocation":"1470:5:25","nodeType":"VariableDeclaration","scope":3663,"src":"1462:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3661,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:25","nodeType":"StructDefinition","scope":3781,"src":"1433:49:25","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3666,"members":[{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"1522:5:25","nodeType":"VariableDeclaration","scope":3666,"src":"1517:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3664,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:25","nodeType":"StructDefinition","scope":3781,"src":"1488:46:25","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3669,"members":[{"constant":false,"id":3668,"mutability":"mutable","name":"value","nameLocation":"1577:5:25","nodeType":"VariableDeclaration","scope":3669,"src":"1569:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:25","nodeType":"StructDefinition","scope":3781,"src":"1540:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3672,"members":[{"constant":false,"id":3671,"mutability":"mutable","name":"value","nameLocation":"1632:5:25","nodeType":"VariableDeclaration","scope":3672,"src":"1624:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:25","nodeType":"StructDefinition","scope":3781,"src":"1595:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3675,"members":[{"constant":false,"id":3674,"mutability":"mutable","name":"value","nameLocation":"1685:5:25","nodeType":"VariableDeclaration","scope":3675,"src":"1678:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3673,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:25","nodeType":"StructDefinition","scope":3781,"src":"1650:47:25","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3678,"members":[{"constant":false,"id":3677,"mutability":"mutable","name":"value","nameLocation":"1738:5:25","nodeType":"VariableDeclaration","scope":3678,"src":"1731:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3676,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:25","nodeType":"StructDefinition","scope":3781,"src":"1703:47:25","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3681,"members":[{"constant":false,"id":3680,"mutability":"mutable","name":"value","nameLocation":"1789:5:25","nodeType":"VariableDeclaration","scope":3681,"src":"1783:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3679,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:25","nodeType":"StructDefinition","scope":3781,"src":"1756:45:25","visibility":"public"},{"body":{"id":3691,"nodeType":"Block","src":"1983:79:25","statements":[{"AST":{"nativeSrc":"2018:38:25","nodeType":"YulBlock","src":"2018:38:25","statements":[{"nativeSrc":"2032:14:25","nodeType":"YulAssignment","src":"2032:14:25","value":{"name":"slot","nativeSrc":"2042:4:25","nodeType":"YulIdentifier","src":"2042:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:25","nodeType":"YulIdentifier","src":"2032:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3688,"isOffset":false,"isSlot":true,"src":"2032:6:25","suffix":"slot","valueSize":1},{"declaration":3684,"isOffset":false,"isSlot":false,"src":"2042:4:25","valueSize":1}],"flags":["memory-safe"],"id":3690,"nodeType":"InlineAssembly","src":"1993:63:25"}]},"documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"1807:87:25","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:25","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"slot","nameLocation":"1931:4:25","nodeType":"VariableDeclaration","scope":3692,"src":"1923:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:25"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"r","nameLocation":"1980:1:25","nodeType":"VariableDeclaration","scope":3692,"src":"1960:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3663_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3687,"nodeType":"UserDefinedTypeName","pathNode":{"id":3686,"name":"AddressSlot","nameLocations":["1960:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3663,"src":"1960:11:25"},"referencedDeclaration":3663,"src":"1960:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3663_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:25"},"scope":3781,"src":"1899:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3702,"nodeType":"Block","src":"2243:79:25","statements":[{"AST":{"nativeSrc":"2278:38:25","nodeType":"YulBlock","src":"2278:38:25","statements":[{"nativeSrc":"2292:14:25","nodeType":"YulAssignment","src":"2292:14:25","value":{"name":"slot","nativeSrc":"2302:4:25","nodeType":"YulIdentifier","src":"2302:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:25","nodeType":"YulIdentifier","src":"2292:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3699,"isOffset":false,"isSlot":true,"src":"2292:6:25","suffix":"slot","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"2302:4:25","valueSize":1}],"flags":["memory-safe"],"id":3701,"nodeType":"InlineAssembly","src":"2253:63:25"}]},"documentation":{"id":3693,"nodeType":"StructuredDocumentation","src":"2068:86:25","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3703,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:25","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"slot","nameLocation":"2191:4:25","nodeType":"VariableDeclaration","scope":3703,"src":"2183:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:25"},"returnParameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"r","nameLocation":"2240:1:25","nodeType":"VariableDeclaration","scope":3703,"src":"2220:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3666_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3698,"nodeType":"UserDefinedTypeName","pathNode":{"id":3697,"name":"BooleanSlot","nameLocations":["2220:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3666,"src":"2220:11:25"},"referencedDeclaration":3666,"src":"2220:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3666_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:25"},"scope":3781,"src":"2159:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3713,"nodeType":"Block","src":"2503:79:25","statements":[{"AST":{"nativeSrc":"2538:38:25","nodeType":"YulBlock","src":"2538:38:25","statements":[{"nativeSrc":"2552:14:25","nodeType":"YulAssignment","src":"2552:14:25","value":{"name":"slot","nativeSrc":"2562:4:25","nodeType":"YulIdentifier","src":"2562:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:25","nodeType":"YulIdentifier","src":"2552:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3710,"isOffset":false,"isSlot":true,"src":"2552:6:25","suffix":"slot","valueSize":1},{"declaration":3706,"isOffset":false,"isSlot":false,"src":"2562:4:25","valueSize":1}],"flags":["memory-safe"],"id":3712,"nodeType":"InlineAssembly","src":"2513:63:25"}]},"documentation":{"id":3704,"nodeType":"StructuredDocumentation","src":"2328:86:25","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3714,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:25","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"slot","nameLocation":"2451:4:25","nodeType":"VariableDeclaration","scope":3714,"src":"2443:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:25"},"returnParameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"r","nameLocation":"2500:1:25","nodeType":"VariableDeclaration","scope":3714,"src":"2480:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3669_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3709,"nodeType":"UserDefinedTypeName","pathNode":{"id":3708,"name":"Bytes32Slot","nameLocations":["2480:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3669,"src":"2480:11:25"},"referencedDeclaration":3669,"src":"2480:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3669_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:25"},"scope":3781,"src":"2419:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3724,"nodeType":"Block","src":"2763:79:25","statements":[{"AST":{"nativeSrc":"2798:38:25","nodeType":"YulBlock","src":"2798:38:25","statements":[{"nativeSrc":"2812:14:25","nodeType":"YulAssignment","src":"2812:14:25","value":{"name":"slot","nativeSrc":"2822:4:25","nodeType":"YulIdentifier","src":"2822:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:25","nodeType":"YulIdentifier","src":"2812:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3721,"isOffset":false,"isSlot":true,"src":"2812:6:25","suffix":"slot","valueSize":1},{"declaration":3717,"isOffset":false,"isSlot":false,"src":"2822:4:25","valueSize":1}],"flags":["memory-safe"],"id":3723,"nodeType":"InlineAssembly","src":"2773:63:25"}]},"documentation":{"id":3715,"nodeType":"StructuredDocumentation","src":"2588:86:25","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3725,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:25","nodeType":"FunctionDefinition","parameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"slot","nameLocation":"2711:4:25","nodeType":"VariableDeclaration","scope":3725,"src":"2703:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:25"},"returnParameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"r","nameLocation":"2760:1:25","nodeType":"VariableDeclaration","scope":3725,"src":"2740:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3720,"nodeType":"UserDefinedTypeName","pathNode":{"id":3719,"name":"Uint256Slot","nameLocations":["2740:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":3672,"src":"2740:11:25"},"referencedDeclaration":3672,"src":"2740:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3672_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:25"},"scope":3781,"src":"2679:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3735,"nodeType":"Block","src":"3020:79:25","statements":[{"AST":{"nativeSrc":"3055:38:25","nodeType":"YulBlock","src":"3055:38:25","statements":[{"nativeSrc":"3069:14:25","nodeType":"YulAssignment","src":"3069:14:25","value":{"name":"slot","nativeSrc":"3079:4:25","nodeType":"YulIdentifier","src":"3079:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:25","nodeType":"YulIdentifier","src":"3069:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3732,"isOffset":false,"isSlot":true,"src":"3069:6:25","suffix":"slot","valueSize":1},{"declaration":3728,"isOffset":false,"isSlot":false,"src":"3079:4:25","valueSize":1}],"flags":["memory-safe"],"id":3734,"nodeType":"InlineAssembly","src":"3030:63:25"}]},"documentation":{"id":3726,"nodeType":"StructuredDocumentation","src":"2848:85:25","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:25","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"slot","nameLocation":"2969:4:25","nodeType":"VariableDeclaration","scope":3736,"src":"2961:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:25"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"r","nameLocation":"3017:1:25","nodeType":"VariableDeclaration","scope":3736,"src":"2998:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3675_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3731,"nodeType":"UserDefinedTypeName","pathNode":{"id":3730,"name":"Int256Slot","nameLocations":["2998:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"2998:10:25"},"referencedDeclaration":3675,"src":"2998:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3675_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:25"},"scope":3781,"src":"2938:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3746,"nodeType":"Block","src":"3277:79:25","statements":[{"AST":{"nativeSrc":"3312:38:25","nodeType":"YulBlock","src":"3312:38:25","statements":[{"nativeSrc":"3326:14:25","nodeType":"YulAssignment","src":"3326:14:25","value":{"name":"slot","nativeSrc":"3336:4:25","nodeType":"YulIdentifier","src":"3336:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:25","nodeType":"YulIdentifier","src":"3326:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3743,"isOffset":false,"isSlot":true,"src":"3326:6:25","suffix":"slot","valueSize":1},{"declaration":3739,"isOffset":false,"isSlot":false,"src":"3336:4:25","valueSize":1}],"flags":["memory-safe"],"id":3745,"nodeType":"InlineAssembly","src":"3287:63:25"}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"3105:85:25","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:25","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"slot","nameLocation":"3226:4:25","nodeType":"VariableDeclaration","scope":3747,"src":"3218:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:25"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"r","nameLocation":"3274:1:25","nodeType":"VariableDeclaration","scope":3747,"src":"3255:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3678_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3742,"nodeType":"UserDefinedTypeName","pathNode":{"id":3741,"name":"StringSlot","nameLocations":["3255:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"3255:10:25"},"referencedDeclaration":3678,"src":"3255:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3678_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:25"},"scope":3781,"src":"3195:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3757,"nodeType":"Block","src":"3558:85:25","statements":[{"AST":{"nativeSrc":"3593:44:25","nodeType":"YulBlock","src":"3593:44:25","statements":[{"nativeSrc":"3607:20:25","nodeType":"YulAssignment","src":"3607:20:25","value":{"name":"store.slot","nativeSrc":"3617:10:25","nodeType":"YulIdentifier","src":"3617:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:25","nodeType":"YulIdentifier","src":"3607:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3754,"isOffset":false,"isSlot":true,"src":"3607:6:25","suffix":"slot","valueSize":1},{"declaration":3750,"isOffset":false,"isSlot":true,"src":"3617:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3756,"nodeType":"InlineAssembly","src":"3568:69:25"}]},"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"3362:101:25","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3758,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:25","nodeType":"FunctionDefinition","parameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"store","nameLocation":"3506:5:25","nodeType":"VariableDeclaration","scope":3758,"src":"3491:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3749,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:25"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"r","nameLocation":"3555:1:25","nodeType":"VariableDeclaration","scope":3758,"src":"3536:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3678_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3753,"nodeType":"UserDefinedTypeName","pathNode":{"id":3752,"name":"StringSlot","nameLocations":["3536:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"3536:10:25"},"referencedDeclaration":3678,"src":"3536:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3678_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:25"},"scope":3781,"src":"3468:175:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"3818:79:25","statements":[{"AST":{"nativeSrc":"3853:38:25","nodeType":"YulBlock","src":"3853:38:25","statements":[{"nativeSrc":"3867:14:25","nodeType":"YulAssignment","src":"3867:14:25","value":{"name":"slot","nativeSrc":"3877:4:25","nodeType":"YulIdentifier","src":"3877:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:25","nodeType":"YulIdentifier","src":"3867:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3765,"isOffset":false,"isSlot":true,"src":"3867:6:25","suffix":"slot","valueSize":1},{"declaration":3761,"isOffset":false,"isSlot":false,"src":"3877:4:25","valueSize":1}],"flags":["memory-safe"],"id":3767,"nodeType":"InlineAssembly","src":"3828:63:25"}]},"documentation":{"id":3759,"nodeType":"StructuredDocumentation","src":"3649:84:25","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:25","nodeType":"FunctionDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"slot","nameLocation":"3768:4:25","nodeType":"VariableDeclaration","scope":3769,"src":"3760:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:25"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"r","nameLocation":"3815:1:25","nodeType":"VariableDeclaration","scope":3769,"src":"3797:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3681_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3764,"nodeType":"UserDefinedTypeName","pathNode":{"id":3763,"name":"BytesSlot","nameLocations":["3797:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":3681,"src":"3797:9:25"},"referencedDeclaration":3681,"src":"3797:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3681_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:25"},"scope":3781,"src":"3738:159:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3779,"nodeType":"Block","src":"4094:85:25","statements":[{"AST":{"nativeSrc":"4129:44:25","nodeType":"YulBlock","src":"4129:44:25","statements":[{"nativeSrc":"4143:20:25","nodeType":"YulAssignment","src":"4143:20:25","value":{"name":"store.slot","nativeSrc":"4153:10:25","nodeType":"YulIdentifier","src":"4153:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:25","nodeType":"YulIdentifier","src":"4143:6:25"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3776,"isOffset":false,"isSlot":true,"src":"4143:6:25","suffix":"slot","valueSize":1},{"declaration":3772,"isOffset":false,"isSlot":true,"src":"4153:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3778,"nodeType":"InlineAssembly","src":"4104:69:25"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"3903:99:25","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3780,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:25","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"store","nameLocation":"4043:5:25","nodeType":"VariableDeclaration","scope":3780,"src":"4029:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3771,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:25"},"returnParameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"mutability":"mutable","name":"r","nameLocation":"4091:1:25","nodeType":"VariableDeclaration","scope":3780,"src":"4073:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3681_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3775,"nodeType":"UserDefinedTypeName","pathNode":{"id":3774,"name":"BytesSlot","nameLocations":["4073:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":3681,"src":"4073:9:25"},"referencedDeclaration":3681,"src":"4073:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3681_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:25"},"scope":3781,"src":"4007:172:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3782,"src":"1407:2774:25","usedErrors":[],"usedEvents":[]}],"src":"193:3989:25"},"id":25},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3805],"IERC165":[3817]},"id":3806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3783,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3806,"sourceUnit":3818,"src":"140:38:26","symbolAliases":[{"foreign":{"id":3784,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"148:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3787,"name":"IERC165","nameLocations":["688:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"688:7:26"},"id":3788,"nodeType":"InheritanceSpecifier","src":"688:7:26"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3786,"nodeType":"StructuredDocumentation","src":"180:479:26","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3805,"linearizedBaseContracts":[3805,3817],"name":"ERC165","nameLocation":"678:6:26","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3816],"body":{"id":3803,"nodeType":"Block","src":"845:64:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"862:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3798,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"882:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3817_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3817_$","typeString":"type(contract IERC165)"}],"id":3797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3817","typeString":"type(contract IERC165)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:26","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3795,"id":3802,"nodeType":"Return","src":"855:47:26"}]},"documentation":{"id":3789,"nodeType":"StructuredDocumentation","src":"702:56:26","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3804,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:26","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:26","nodeType":"VariableDeclaration","scope":3804,"src":"790:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3790,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:26"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3804,"src":"839:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3793,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:26"},"scope":3805,"src":"763:146:26","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3806,"src":"660:251:26","usedErrors":[],"usedEvents":[]}],"src":"114:798:26"},"id":26},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3817]},"id":3818,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3807,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"141:280:27","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3817,"linearizedBaseContracts":[3817],"name":"IERC165","nameLocation":"432:7:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"446:340:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3816,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:27","nodeType":"FunctionDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:27","nodeType":"VariableDeclaration","scope":3816,"src":"818:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3810,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:27"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3816,"src":"861:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3813,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:27"},"scope":3817,"src":"791:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3818,"src":"422:447:27","usedErrors":[],"usedEvents":[]}],"src":"115:755:27"},"id":27},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5438],"Panic":[3350],"SafeCast":[7203]},"id":5439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3819,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5439,"sourceUnit":3351,"src":"129:35:28","symbolAliases":[{"foreign":{"id":3820,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"137:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5439,"sourceUnit":7204,"src":"165:40:28","symbolAliases":[{"foreign":{"id":3822,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"173:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"207:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5438,"linearizedBaseContracts":[5438],"name":"Math","nameLocation":"289:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3829,"members":[{"id":3825,"name":"Floor","nameLocation":"324:5:28","nodeType":"EnumValue","src":"324:5:28"},{"id":3826,"name":"Ceil","nameLocation":"367:4:28","nodeType":"EnumValue","src":"367:4:28"},{"id":3827,"name":"Trunc","nameLocation":"409:5:28","nodeType":"EnumValue","src":"409:5:28"},{"id":3828,"name":"Expand","nameLocation":"439:6:28","nodeType":"EnumValue","src":"439:6:28"}],"name":"Rounding","nameLocation":"305:8:28","nodeType":"EnumDefinition","src":"300:169:28"},{"body":{"id":3842,"nodeType":"Block","src":"731:112:28","statements":[{"AST":{"nativeSrc":"766:71:28","nodeType":"YulBlock","src":"766:71:28","statements":[{"nativeSrc":"780:16:28","nodeType":"YulAssignment","src":"780:16:28","value":{"arguments":[{"name":"a","nativeSrc":"791:1:28","nodeType":"YulIdentifier","src":"791:1:28"},{"name":"b","nativeSrc":"794:1:28","nodeType":"YulIdentifier","src":"794:1:28"}],"functionName":{"name":"add","nativeSrc":"787:3:28","nodeType":"YulIdentifier","src":"787:3:28"},"nativeSrc":"787:9:28","nodeType":"YulFunctionCall","src":"787:9:28"},"variableNames":[{"name":"low","nativeSrc":"780:3:28","nodeType":"YulIdentifier","src":"780:3:28"}]},{"nativeSrc":"809:18:28","nodeType":"YulAssignment","src":"809:18:28","value":{"arguments":[{"name":"low","nativeSrc":"820:3:28","nodeType":"YulIdentifier","src":"820:3:28"},{"name":"a","nativeSrc":"825:1:28","nodeType":"YulIdentifier","src":"825:1:28"}],"functionName":{"name":"lt","nativeSrc":"817:2:28","nodeType":"YulIdentifier","src":"817:2:28"},"nativeSrc":"817:10:28","nodeType":"YulFunctionCall","src":"817:10:28"},"variableNames":[{"name":"high","nativeSrc":"809:4:28","nodeType":"YulIdentifier","src":"809:4:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3832,"isOffset":false,"isSlot":false,"src":"791:1:28","valueSize":1},{"declaration":3832,"isOffset":false,"isSlot":false,"src":"825:1:28","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"794:1:28","valueSize":1},{"declaration":3837,"isOffset":false,"isSlot":false,"src":"809:4:28","valueSize":1},{"declaration":3839,"isOffset":false,"isSlot":false,"src":"780:3:28","valueSize":1},{"declaration":3839,"isOffset":false,"isSlot":false,"src":"820:3:28","valueSize":1}],"flags":["memory-safe"],"id":3841,"nodeType":"InlineAssembly","src":"741:96:28"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"475:163:28","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3843,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:28","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"a","nameLocation":"667:1:28","nodeType":"VariableDeclaration","scope":3843,"src":"659:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"b","nameLocation":"678:1:28","nodeType":"VariableDeclaration","scope":3843,"src":"670:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:28"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"high","nameLocation":"712:4:28","nodeType":"VariableDeclaration","scope":3843,"src":"704:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"low","nameLocation":"726:3:28","nodeType":"VariableDeclaration","scope":3843,"src":"718:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:28"},"scope":5438,"src":"643:200:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3856,"nodeType":"Block","src":"1115:462:28","statements":[{"AST":{"nativeSrc":"1437:134:28","nodeType":"YulBlock","src":"1437:134:28","statements":[{"nativeSrc":"1451:30:28","nodeType":"YulVariableDeclaration","src":"1451:30:28","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:28","nodeType":"YulIdentifier","src":"1468:1:28"},{"name":"b","nativeSrc":"1471:1:28","nodeType":"YulIdentifier","src":"1471:1:28"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:28","nodeType":"YulLiteral","src":"1478:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:28","nodeType":"YulIdentifier","src":"1474:3:28"},"nativeSrc":"1474:6:28","nodeType":"YulFunctionCall","src":"1474:6:28"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:28","nodeType":"YulIdentifier","src":"1461:6:28"},"nativeSrc":"1461:20:28","nodeType":"YulFunctionCall","src":"1461:20:28"},"variables":[{"name":"mm","nativeSrc":"1455:2:28","nodeType":"YulTypedName","src":"1455:2:28","type":""}]},{"nativeSrc":"1494:16:28","nodeType":"YulAssignment","src":"1494:16:28","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:28","nodeType":"YulIdentifier","src":"1505:1:28"},{"name":"b","nativeSrc":"1508:1:28","nodeType":"YulIdentifier","src":"1508:1:28"}],"functionName":{"name":"mul","nativeSrc":"1501:3:28","nodeType":"YulIdentifier","src":"1501:3:28"},"nativeSrc":"1501:9:28","nodeType":"YulFunctionCall","src":"1501:9:28"},"variableNames":[{"name":"low","nativeSrc":"1494:3:28","nodeType":"YulIdentifier","src":"1494:3:28"}]},{"nativeSrc":"1523:38:28","nodeType":"YulAssignment","src":"1523:38:28","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:28","nodeType":"YulIdentifier","src":"1539:2:28"},{"name":"low","nativeSrc":"1543:3:28","nodeType":"YulIdentifier","src":"1543:3:28"}],"functionName":{"name":"sub","nativeSrc":"1535:3:28","nodeType":"YulIdentifier","src":"1535:3:28"},"nativeSrc":"1535:12:28","nodeType":"YulFunctionCall","src":"1535:12:28"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:28","nodeType":"YulIdentifier","src":"1552:2:28"},{"name":"low","nativeSrc":"1556:3:28","nodeType":"YulIdentifier","src":"1556:3:28"}],"functionName":{"name":"lt","nativeSrc":"1549:2:28","nodeType":"YulIdentifier","src":"1549:2:28"},"nativeSrc":"1549:11:28","nodeType":"YulFunctionCall","src":"1549:11:28"}],"functionName":{"name":"sub","nativeSrc":"1531:3:28","nodeType":"YulIdentifier","src":"1531:3:28"},"nativeSrc":"1531:30:28","nodeType":"YulFunctionCall","src":"1531:30:28"},"variableNames":[{"name":"high","nativeSrc":"1523:4:28","nodeType":"YulIdentifier","src":"1523:4:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3846,"isOffset":false,"isSlot":false,"src":"1468:1:28","valueSize":1},{"declaration":3846,"isOffset":false,"isSlot":false,"src":"1505:1:28","valueSize":1},{"declaration":3848,"isOffset":false,"isSlot":false,"src":"1471:1:28","valueSize":1},{"declaration":3848,"isOffset":false,"isSlot":false,"src":"1508:1:28","valueSize":1},{"declaration":3851,"isOffset":false,"isSlot":false,"src":"1523:4:28","valueSize":1},{"declaration":3853,"isOffset":false,"isSlot":false,"src":"1494:3:28","valueSize":1},{"declaration":3853,"isOffset":false,"isSlot":false,"src":"1543:3:28","valueSize":1},{"declaration":3853,"isOffset":false,"isSlot":false,"src":"1556:3:28","valueSize":1}],"flags":["memory-safe"],"id":3855,"nodeType":"InlineAssembly","src":"1412:159:28"}]},"documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"849:173:28","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3857,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:28","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"a","nameLocation":"1051:1:28","nodeType":"VariableDeclaration","scope":3857,"src":"1043:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"b","nameLocation":"1062:1:28","nodeType":"VariableDeclaration","scope":3857,"src":"1054:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:28"},"returnParameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"high","nameLocation":"1096:4:28","nodeType":"VariableDeclaration","scope":3857,"src":"1088:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"low","nameLocation":"1110:3:28","nodeType":"VariableDeclaration","scope":3857,"src":"1102:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:28"},"scope":5438,"src":"1027:550:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3891,"nodeType":"Block","src":"1784:149:28","statements":[{"id":3890,"nodeType":"UncheckedBlock","src":"1794:133:28","statements":[{"assignments":[3870],"declarations":[{"constant":false,"id":3870,"mutability":"mutable","name":"c","nameLocation":"1826:1:28","nodeType":"VariableDeclaration","scope":3890,"src":"1818:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"1830:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"1834:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:28"},{"expression":{"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3875,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"1849:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"1859:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"1864:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3880,"nodeType":"ExpressionStatement","src":"1849:16:28"},{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3881,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"1879:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"1888:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3885,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"1908:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3883,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"1892:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"1892:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"1879:37:28"}]}]},"documentation":{"id":3858,"nodeType":"StructuredDocumentation","src":"1583:105:28","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3892,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:28","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"a","nameLocation":"1717:1:28","nodeType":"VariableDeclaration","scope":3892,"src":"1709:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3862,"mutability":"mutable","name":"b","nameLocation":"1728:1:28","nodeType":"VariableDeclaration","scope":3892,"src":"1720:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:28"},"returnParameters":{"id":3868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"success","nameLocation":"1759:7:28","nodeType":"VariableDeclaration","scope":3892,"src":"1754:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3864,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"result","nameLocation":"1776:6:28","nodeType":"VariableDeclaration","scope":3892,"src":"1768:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:28"},"scope":5438,"src":"1693:240:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3926,"nodeType":"Block","src":"2143:149:28","statements":[{"id":3925,"nodeType":"UncheckedBlock","src":"2153:133:28","statements":[{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"c","nameLocation":"2185:1:28","nodeType":"VariableDeclaration","scope":3925,"src":"2177:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3909,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"2189:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"2193:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:28"},{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3910,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"2208:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"2218:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3912,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"2223:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3915,"nodeType":"ExpressionStatement","src":"2208:16:28"},{"expression":{"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"2238:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"2247:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3920,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"2267:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3918,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"2251:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"2251:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3924,"nodeType":"ExpressionStatement","src":"2238:37:28"}]}]},"documentation":{"id":3893,"nodeType":"StructuredDocumentation","src":"1939:108:28","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3927,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:28","nodeType":"FunctionDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"a","nameLocation":"2076:1:28","nodeType":"VariableDeclaration","scope":3927,"src":"2068:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"b","nameLocation":"2087:1:28","nodeType":"VariableDeclaration","scope":3927,"src":"2079:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:28"},"returnParameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"success","nameLocation":"2118:7:28","nodeType":"VariableDeclaration","scope":3927,"src":"2113:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3899,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"result","nameLocation":"2135:6:28","nodeType":"VariableDeclaration","scope":3927,"src":"2127:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:28"},"scope":5438,"src":"2052:240:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3956,"nodeType":"Block","src":"2505:391:28","statements":[{"id":3955,"nodeType":"UncheckedBlock","src":"2515:375:28","statements":[{"assignments":[3940],"declarations":[{"constant":false,"id":3940,"mutability":"mutable","name":"c","nameLocation":"2547:1:28","nodeType":"VariableDeclaration","scope":3955,"src":"2539:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3944,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"2551:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3942,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"2555:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:28"},{"AST":{"nativeSrc":"2595:188:28","nodeType":"YulBlock","src":"2595:188:28","statements":[{"nativeSrc":"2727:42:28","nodeType":"YulAssignment","src":"2727:42:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:28","nodeType":"YulIdentifier","src":"2748:1:28"},{"name":"a","nativeSrc":"2751:1:28","nodeType":"YulIdentifier","src":"2751:1:28"}],"functionName":{"name":"div","nativeSrc":"2744:3:28","nodeType":"YulIdentifier","src":"2744:3:28"},"nativeSrc":"2744:9:28","nodeType":"YulFunctionCall","src":"2744:9:28"},{"name":"b","nativeSrc":"2755:1:28","nodeType":"YulIdentifier","src":"2755:1:28"}],"functionName":{"name":"eq","nativeSrc":"2741:2:28","nodeType":"YulIdentifier","src":"2741:2:28"},"nativeSrc":"2741:16:28","nodeType":"YulFunctionCall","src":"2741:16:28"},{"arguments":[{"name":"a","nativeSrc":"2766:1:28","nodeType":"YulIdentifier","src":"2766:1:28"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:28","nodeType":"YulIdentifier","src":"2759:6:28"},"nativeSrc":"2759:9:28","nodeType":"YulFunctionCall","src":"2759:9:28"}],"functionName":{"name":"or","nativeSrc":"2738:2:28","nodeType":"YulIdentifier","src":"2738:2:28"},"nativeSrc":"2738:31:28","nodeType":"YulFunctionCall","src":"2738:31:28"},"variableNames":[{"name":"success","nativeSrc":"2727:7:28","nodeType":"YulIdentifier","src":"2727:7:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3930,"isOffset":false,"isSlot":false,"src":"2751:1:28","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"2766:1:28","valueSize":1},{"declaration":3932,"isOffset":false,"isSlot":false,"src":"2755:1:28","valueSize":1},{"declaration":3940,"isOffset":false,"isSlot":false,"src":"2748:1:28","valueSize":1},{"declaration":3935,"isOffset":false,"isSlot":false,"src":"2727:7:28","valueSize":1}],"flags":["memory-safe"],"id":3945,"nodeType":"InlineAssembly","src":"2570:213:28"},{"expression":{"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"2842:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"2851:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3950,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"2871:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3948,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"2855:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"2855:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"nodeType":"ExpressionStatement","src":"2842:37:28"}]}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"2298:111:28","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:28","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"a","nameLocation":"2438:1:28","nodeType":"VariableDeclaration","scope":3957,"src":"2430:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"b","nameLocation":"2449:1:28","nodeType":"VariableDeclaration","scope":3957,"src":"2441:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:28"},"returnParameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"success","nameLocation":"2480:7:28","nodeType":"VariableDeclaration","scope":3957,"src":"2475:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3934,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3937,"mutability":"mutable","name":"result","nameLocation":"2497:6:28","nodeType":"VariableDeclaration","scope":3957,"src":"2489:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:28"},"scope":5438,"src":"2414:482:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3977,"nodeType":"Block","src":"3111:231:28","statements":[{"id":3976,"nodeType":"UncheckedBlock","src":"3121:215:28","statements":[{"expression":{"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3969,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"3145:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"3155:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3974,"nodeType":"ExpressionStatement","src":"3145:15:28"},{"AST":{"nativeSrc":"3199:127:28","nodeType":"YulBlock","src":"3199:127:28","statements":[{"nativeSrc":"3293:19:28","nodeType":"YulAssignment","src":"3293:19:28","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:28","nodeType":"YulIdentifier","src":"3307:1:28"},{"name":"b","nativeSrc":"3310:1:28","nodeType":"YulIdentifier","src":"3310:1:28"}],"functionName":{"name":"div","nativeSrc":"3303:3:28","nodeType":"YulIdentifier","src":"3303:3:28"},"nativeSrc":"3303:9:28","nodeType":"YulFunctionCall","src":"3303:9:28"},"variableNames":[{"name":"result","nativeSrc":"3293:6:28","nodeType":"YulIdentifier","src":"3293:6:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3960,"isOffset":false,"isSlot":false,"src":"3307:1:28","valueSize":1},{"declaration":3962,"isOffset":false,"isSlot":false,"src":"3310:1:28","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"3293:6:28","valueSize":1}],"flags":["memory-safe"],"id":3975,"nodeType":"InlineAssembly","src":"3174:152:28"}]}]},"documentation":{"id":3958,"nodeType":"StructuredDocumentation","src":"2902:113:28","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:28","nodeType":"FunctionDefinition","parameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"a","nameLocation":"3044:1:28","nodeType":"VariableDeclaration","scope":3978,"src":"3036:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"b","nameLocation":"3055:1:28","nodeType":"VariableDeclaration","scope":3978,"src":"3047:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:28"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"success","nameLocation":"3086:7:28","nodeType":"VariableDeclaration","scope":3978,"src":"3081:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3964,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3967,"mutability":"mutable","name":"result","nameLocation":"3103:6:28","nodeType":"VariableDeclaration","scope":3978,"src":"3095:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:28"},"scope":5438,"src":"3020:322:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"3567:231:28","statements":[{"id":3997,"nodeType":"UncheckedBlock","src":"3577:215:28","statements":[{"expression":{"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3990,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"3601:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3991,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"3611:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"nodeType":"ExpressionStatement","src":"3601:15:28"},{"AST":{"nativeSrc":"3655:127:28","nodeType":"YulBlock","src":"3655:127:28","statements":[{"nativeSrc":"3749:19:28","nodeType":"YulAssignment","src":"3749:19:28","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:28","nodeType":"YulIdentifier","src":"3763:1:28"},{"name":"b","nativeSrc":"3766:1:28","nodeType":"YulIdentifier","src":"3766:1:28"}],"functionName":{"name":"mod","nativeSrc":"3759:3:28","nodeType":"YulIdentifier","src":"3759:3:28"},"nativeSrc":"3759:9:28","nodeType":"YulFunctionCall","src":"3759:9:28"},"variableNames":[{"name":"result","nativeSrc":"3749:6:28","nodeType":"YulIdentifier","src":"3749:6:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3981,"isOffset":false,"isSlot":false,"src":"3763:1:28","valueSize":1},{"declaration":3983,"isOffset":false,"isSlot":false,"src":"3766:1:28","valueSize":1},{"declaration":3988,"isOffset":false,"isSlot":false,"src":"3749:6:28","valueSize":1}],"flags":["memory-safe"],"id":3996,"nodeType":"InlineAssembly","src":"3630:152:28"}]}]},"documentation":{"id":3979,"nodeType":"StructuredDocumentation","src":"3348:123:28","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:28","nodeType":"FunctionDefinition","parameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"a","nameLocation":"3500:1:28","nodeType":"VariableDeclaration","scope":3999,"src":"3492:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"b","nameLocation":"3511:1:28","nodeType":"VariableDeclaration","scope":3999,"src":"3503:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:28"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"success","nameLocation":"3542:7:28","nodeType":"VariableDeclaration","scope":3999,"src":"3537:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3985,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"result","nameLocation":"3559:6:28","nodeType":"VariableDeclaration","scope":3999,"src":"3551:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:28"},"scope":5438,"src":"3476:322:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4028,"nodeType":"Block","src":"3989:122:28","statements":[{"assignments":[4010,4012],"declarations":[{"constant":false,"id":4010,"mutability":"mutable","name":"success","nameLocation":"4005:7:28","nodeType":"VariableDeclaration","scope":4028,"src":"4000:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4009,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"result","nameLocation":"4022:6:28","nodeType":"VariableDeclaration","scope":4028,"src":"4014:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4017,"initialValue":{"arguments":[{"id":4014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"4039:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"4042:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4013,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"4032:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:28"},{"expression":{"arguments":[{"id":4019,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"4069:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"4078:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4021,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:28","memberName":"max","nodeType":"MemberAccess","src":"4086:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4018,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"4061:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4008,"id":4027,"nodeType":"Return","src":"4054:50:28"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"3804:103:28","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4029,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:28","nodeType":"FunctionDefinition","parameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"a","nameLocation":"3943:1:28","nodeType":"VariableDeclaration","scope":4029,"src":"3935:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"b","nameLocation":"3954:1:28","nodeType":"VariableDeclaration","scope":4029,"src":"3946:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:28"},"returnParameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4029,"src":"3980:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:28"},"scope":5438,"src":"3912:199:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"4294:73:28","statements":[{"assignments":[null,4040],"declarations":[null,{"constant":false,"id":4040,"mutability":"mutable","name":"result","nameLocation":"4315:6:28","nodeType":"VariableDeclaration","scope":4048,"src":"4307:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4045,"initialValue":{"arguments":[{"id":4042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"4332:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"4335:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4041,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4325:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:28"},{"expression":{"id":4046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"4354:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4038,"id":4047,"nodeType":"Return","src":"4347:13:28"}]},"documentation":{"id":4030,"nodeType":"StructuredDocumentation","src":"4117:95:28","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:28","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"a","nameLocation":"4248:1:28","nodeType":"VariableDeclaration","scope":4049,"src":"4240:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"b","nameLocation":"4259:1:28","nodeType":"VariableDeclaration","scope":4049,"src":"4251:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:28"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"4285:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:28"},"scope":5438,"src":"4217:150:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"4564:122:28","statements":[{"assignments":[4060,4062],"declarations":[{"constant":false,"id":4060,"mutability":"mutable","name":"success","nameLocation":"4580:7:28","nodeType":"VariableDeclaration","scope":4078,"src":"4575:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4059,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4062,"mutability":"mutable","name":"result","nameLocation":"4597:6:28","nodeType":"VariableDeclaration","scope":4078,"src":"4589:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4067,"initialValue":{"arguments":[{"id":4064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"4614:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"4617:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4063,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"4607:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:28"},{"expression":{"arguments":[{"id":4069,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"4644:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"4653:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4071,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:28","memberName":"max","nodeType":"MemberAccess","src":"4661:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4068,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"4636:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4058,"id":4077,"nodeType":"Return","src":"4629:50:28"}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"4373:109:28","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:28","nodeType":"FunctionDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"a","nameLocation":"4518:1:28","nodeType":"VariableDeclaration","scope":4079,"src":"4510:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4054,"mutability":"mutable","name":"b","nameLocation":"4529:1:28","nodeType":"VariableDeclaration","scope":4079,"src":"4521:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:28"},"returnParameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4079,"src":"4555:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:28"},"scope":5438,"src":"4487:199:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4105,"nodeType":"Block","src":"5158:207:28","statements":[{"id":4104,"nodeType":"UncheckedBlock","src":"5168:191:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"5306:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"5312:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4093,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"5316:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4098,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"5337:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4096,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"5321:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"5321:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4090,"id":4103,"nodeType":"Return","src":"5299:49:28"}]}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"4692:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4106,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:28","nodeType":"FunctionDefinition","parameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"condition","nameLocation":"5093:9:28","nodeType":"VariableDeclaration","scope":4106,"src":"5088:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4081,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"a","nameLocation":"5112:1:28","nodeType":"VariableDeclaration","scope":4106,"src":"5104:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"b","nameLocation":"5123:1:28","nodeType":"VariableDeclaration","scope":4106,"src":"5115:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:28"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4106,"src":"5149:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:28"},"scope":5438,"src":"5071:294:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4124,"nodeType":"Block","src":"5502:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5527:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"5531:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5534:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"5537:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4116,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"5519:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4115,"id":4123,"nodeType":"Return","src":"5512:27:28"}]},"documentation":{"id":4107,"nodeType":"StructuredDocumentation","src":"5371:59:28","text":" @dev Returns the largest of two numbers."},"id":4125,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:28","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"a","nameLocation":"5456:1:28","nodeType":"VariableDeclaration","scope":4125,"src":"5448:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"b","nameLocation":"5467:1:28","nodeType":"VariableDeclaration","scope":4125,"src":"5459:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:28"},"returnParameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4125,"src":"5493:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:28"},"scope":5438,"src":"5435:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4143,"nodeType":"Block","src":"5684:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"5709:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4137,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"5713:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4139,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"5716:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4140,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"5719:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4135,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"5701:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4134,"id":4142,"nodeType":"Return","src":"5694:27:28"}]},"documentation":{"id":4126,"nodeType":"StructuredDocumentation","src":"5552:60:28","text":" @dev Returns the smallest of two numbers."},"id":4144,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:28","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"a","nameLocation":"5638:1:28","nodeType":"VariableDeclaration","scope":4144,"src":"5630:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"b","nameLocation":"5649:1:28","nodeType":"VariableDeclaration","scope":4144,"src":"5641:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:28"},"returnParameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4144,"src":"5675:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:28"},"scope":5438,"src":"5617:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"5912:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"5967:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4155,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"5971:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4158,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"5977:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4159,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"5981:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4153,"id":4165,"nodeType":"Return","src":"5959:28:28"}]},"documentation":{"id":4145,"nodeType":"StructuredDocumentation","src":"5734:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:28","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"a","nameLocation":"5866:1:28","nodeType":"VariableDeclaration","scope":4167,"src":"5858:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"b","nameLocation":"5877:1:28","nodeType":"VariableDeclaration","scope":4167,"src":"5869:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:28"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"5903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:28"},"scope":5438,"src":"5841:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4207,"nodeType":"Block","src":"6286:633:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6300:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4188,"nodeType":"IfStatement","src":"6296:150:28","trueBody":{"id":4187,"nodeType":"Block","src":"6308:138:28","statements":[{"expression":{"arguments":[{"expression":{"id":4183,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"6412:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"6412:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4180,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"6400:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"6400:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4186,"nodeType":"ExpressionStatement","src":"6400:35:28"}]}},{"id":4206,"nodeType":"UncheckedBlock","src":"6829:84:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6876:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4189,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"6860:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"6860:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6887:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6896:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4176,"id":4205,"nodeType":"Return","src":"6853:49:28"}]}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"6000:210:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:28","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"a","nameLocation":"6240:1:28","nodeType":"VariableDeclaration","scope":4208,"src":"6232:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"b","nameLocation":"6251:1:28","nodeType":"VariableDeclaration","scope":4208,"src":"6243:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:28"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4208,"src":"6277:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:28"},"scope":5438,"src":"6215:704:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4343,"nodeType":"Block","src":"7340:3585:28","statements":[{"id":4342,"nodeType":"UncheckedBlock","src":"7350:3569:28","statements":[{"assignments":[4221,4223],"declarations":[{"constant":false,"id":4221,"mutability":"mutable","name":"high","nameLocation":"7383:4:28","nodeType":"VariableDeclaration","scope":4342,"src":"7375:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"low","nameLocation":"7397:3:28","nodeType":"VariableDeclaration","scope":4342,"src":"7389:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4228,"initialValue":{"arguments":[{"id":4225,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"7411:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4226,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"7414:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4224,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"7404:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"7498:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4237,"nodeType":"IfStatement","src":"7494:365:28","trueBody":{"id":4236,"nodeType":"Block","src":"7509:350:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"7827:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4233,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"7833:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4219,"id":4235,"nodeType":"Return","src":"7820:24:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"7969:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4239,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"7984:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4256,"nodeType":"IfStatement","src":"7965:142:28","trueBody":{"id":4255,"nodeType":"Block","src":"7990:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4245,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"8028:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4248,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"8046:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"8046:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4250,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"8070:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3313,"src":"8070:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4244,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"8020:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4241,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"8008:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"8008:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4254,"nodeType":"ExpressionStatement","src":"8008:84:28"}]}},{"assignments":[4258],"declarations":[{"constant":false,"id":4258,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:28","nodeType":"VariableDeclaration","scope":4342,"src":"8359:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4259,"nodeType":"VariableDeclarationStatement","src":"8359:17:28"},{"AST":{"nativeSrc":"8415:283:28","nodeType":"YulBlock","src":"8415:283:28","statements":[{"nativeSrc":"8484:38:28","nodeType":"YulAssignment","src":"8484:38:28","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:28","nodeType":"YulIdentifier","src":"8504:1:28"},{"name":"y","nativeSrc":"8507:1:28","nodeType":"YulIdentifier","src":"8507:1:28"},{"name":"denominator","nativeSrc":"8510:11:28","nodeType":"YulIdentifier","src":"8510:11:28"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:28","nodeType":"YulIdentifier","src":"8497:6:28"},"nativeSrc":"8497:25:28","nodeType":"YulFunctionCall","src":"8497:25:28"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:28","nodeType":"YulIdentifier","src":"8484:9:28"}]},{"nativeSrc":"8604:37:28","nodeType":"YulAssignment","src":"8604:37:28","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:28","nodeType":"YulIdentifier","src":"8616:4:28"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:28","nodeType":"YulIdentifier","src":"8625:9:28"},{"name":"low","nativeSrc":"8636:3:28","nodeType":"YulIdentifier","src":"8636:3:28"}],"functionName":{"name":"gt","nativeSrc":"8622:2:28","nodeType":"YulIdentifier","src":"8622:2:28"},"nativeSrc":"8622:18:28","nodeType":"YulFunctionCall","src":"8622:18:28"}],"functionName":{"name":"sub","nativeSrc":"8612:3:28","nodeType":"YulIdentifier","src":"8612:3:28"},"nativeSrc":"8612:29:28","nodeType":"YulFunctionCall","src":"8612:29:28"},"variableNames":[{"name":"high","nativeSrc":"8604:4:28","nodeType":"YulIdentifier","src":"8604:4:28"}]},{"nativeSrc":"8658:26:28","nodeType":"YulAssignment","src":"8658:26:28","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:28","nodeType":"YulIdentifier","src":"8669:3:28"},{"name":"remainder","nativeSrc":"8674:9:28","nodeType":"YulIdentifier","src":"8674:9:28"}],"functionName":{"name":"sub","nativeSrc":"8665:3:28","nodeType":"YulIdentifier","src":"8665:3:28"},"nativeSrc":"8665:19:28","nodeType":"YulFunctionCall","src":"8665:19:28"},"variableNames":[{"name":"low","nativeSrc":"8658:3:28","nodeType":"YulIdentifier","src":"8658:3:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4215,"isOffset":false,"isSlot":false,"src":"8510:11:28","valueSize":1},{"declaration":4221,"isOffset":false,"isSlot":false,"src":"8604:4:28","valueSize":1},{"declaration":4221,"isOffset":false,"isSlot":false,"src":"8616:4:28","valueSize":1},{"declaration":4223,"isOffset":false,"isSlot":false,"src":"8636:3:28","valueSize":1},{"declaration":4223,"isOffset":false,"isSlot":false,"src":"8658:3:28","valueSize":1},{"declaration":4223,"isOffset":false,"isSlot":false,"src":"8669:3:28","valueSize":1},{"declaration":4258,"isOffset":false,"isSlot":false,"src":"8484:9:28","valueSize":1},{"declaration":4258,"isOffset":false,"isSlot":false,"src":"8625:9:28","valueSize":1},{"declaration":4258,"isOffset":false,"isSlot":false,"src":"8674:9:28","valueSize":1},{"declaration":4211,"isOffset":false,"isSlot":false,"src":"8504:1:28","valueSize":1},{"declaration":4213,"isOffset":false,"isSlot":false,"src":"8507:1:28","valueSize":1}],"flags":["memory-safe"],"id":4260,"nodeType":"InlineAssembly","src":"8390:308:28"},{"assignments":[4262],"declarations":[{"constant":false,"id":4262,"mutability":"mutable","name":"twos","nameLocation":"8910:4:28","nodeType":"VariableDeclaration","scope":4342,"src":"8902:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4269,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"8917:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4265,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"8936:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:28"},{"AST":{"nativeSrc":"8987:359:28","nodeType":"YulBlock","src":"8987:359:28","statements":[{"nativeSrc":"9052:37:28","nodeType":"YulAssignment","src":"9052:37:28","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:28","nodeType":"YulIdentifier","src":"9071:11:28"},{"name":"twos","nativeSrc":"9084:4:28","nodeType":"YulIdentifier","src":"9084:4:28"}],"functionName":{"name":"div","nativeSrc":"9067:3:28","nodeType":"YulIdentifier","src":"9067:3:28"},"nativeSrc":"9067:22:28","nodeType":"YulFunctionCall","src":"9067:22:28"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:28","nodeType":"YulIdentifier","src":"9052:11:28"}]},{"nativeSrc":"9153:21:28","nodeType":"YulAssignment","src":"9153:21:28","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:28","nodeType":"YulIdentifier","src":"9164:3:28"},{"name":"twos","nativeSrc":"9169:4:28","nodeType":"YulIdentifier","src":"9169:4:28"}],"functionName":{"name":"div","nativeSrc":"9160:3:28","nodeType":"YulIdentifier","src":"9160:3:28"},"nativeSrc":"9160:14:28","nodeType":"YulFunctionCall","src":"9160:14:28"},"variableNames":[{"name":"low","nativeSrc":"9153:3:28","nodeType":"YulIdentifier","src":"9153:3:28"}]},{"nativeSrc":"9293:39:28","nodeType":"YulAssignment","src":"9293:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:28","nodeType":"YulLiteral","src":"9313:1:28","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:28","nodeType":"YulIdentifier","src":"9316:4:28"}],"functionName":{"name":"sub","nativeSrc":"9309:3:28","nodeType":"YulIdentifier","src":"9309:3:28"},"nativeSrc":"9309:12:28","nodeType":"YulFunctionCall","src":"9309:12:28"},{"name":"twos","nativeSrc":"9323:4:28","nodeType":"YulIdentifier","src":"9323:4:28"}],"functionName":{"name":"div","nativeSrc":"9305:3:28","nodeType":"YulIdentifier","src":"9305:3:28"},"nativeSrc":"9305:23:28","nodeType":"YulFunctionCall","src":"9305:23:28"},{"kind":"number","nativeSrc":"9330:1:28","nodeType":"YulLiteral","src":"9330:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:28","nodeType":"YulIdentifier","src":"9301:3:28"},"nativeSrc":"9301:31:28","nodeType":"YulFunctionCall","src":"9301:31:28"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:28","nodeType":"YulIdentifier","src":"9293:4:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4215,"isOffset":false,"isSlot":false,"src":"9052:11:28","valueSize":1},{"declaration":4215,"isOffset":false,"isSlot":false,"src":"9071:11:28","valueSize":1},{"declaration":4223,"isOffset":false,"isSlot":false,"src":"9153:3:28","valueSize":1},{"declaration":4223,"isOffset":false,"isSlot":false,"src":"9164:3:28","valueSize":1},{"declaration":4262,"isOffset":false,"isSlot":false,"src":"9084:4:28","valueSize":1},{"declaration":4262,"isOffset":false,"isSlot":false,"src":"9169:4:28","valueSize":1},{"declaration":4262,"isOffset":false,"isSlot":false,"src":"9293:4:28","valueSize":1},{"declaration":4262,"isOffset":false,"isSlot":false,"src":"9316:4:28","valueSize":1},{"declaration":4262,"isOffset":false,"isSlot":false,"src":"9323:4:28","valueSize":1}],"flags":["memory-safe"],"id":4270,"nodeType":"InlineAssembly","src":"8962:384:28"},{"expression":{"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4271,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"9409:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4272,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"9416:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4273,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"9423:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"nodeType":"ExpressionStatement","src":"9409:18:28"},{"assignments":[4278],"declarations":[{"constant":false,"id":4278,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:28","nodeType":"VariableDeclaration","scope":4342,"src":"9762:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4285,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4280,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"9785:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:28"},{"expression":{"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4286,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10018:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"10033:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4289,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10047:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4293,"nodeType":"ExpressionStatement","src":"10018:36:28"},{"expression":{"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4294,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"10103:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4297,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10117:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4301,"nodeType":"ExpressionStatement","src":"10088:36:28"},{"expression":{"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4302,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10160:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"10175:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4305,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10189:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4309,"nodeType":"ExpressionStatement","src":"10160:36:28"},{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4310,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10231:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"10246:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4313,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10260:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4317,"nodeType":"ExpressionStatement","src":"10231:36:28"},{"expression":{"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4318,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10304:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"10319:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4321,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10333:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4325,"nodeType":"ExpressionStatement","src":"10304:36:28"},{"expression":{"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4326,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4328,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"10393:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4329,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10407:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4333,"nodeType":"ExpressionStatement","src":"10378:36:28"},{"expression":{"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"10859:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"10868:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4336,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"10874:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4339,"nodeType":"ExpressionStatement","src":"10859:22:28"},{"expression":{"id":4340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"10902:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4219,"id":4341,"nodeType":"Return","src":"10895:13:28"}]}]},"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"6925:312:28","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4344,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:28","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"x","nameLocation":"7266:1:28","nodeType":"VariableDeclaration","scope":4344,"src":"7258:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"y","nameLocation":"7277:1:28","nodeType":"VariableDeclaration","scope":4344,"src":"7269:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:28","nodeType":"VariableDeclaration","scope":4344,"src":"7280:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:28"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"result","nameLocation":"7332:6:28","nodeType":"VariableDeclaration","scope":4344,"src":"7324:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:28"},"scope":5438,"src":"7242:3683:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4380,"nodeType":"Block","src":"11164:128:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4360,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"11188:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4361,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"11191:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4362,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11194:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4359,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4344,4381],"referencedDeclaration":4344,"src":"11181:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4367,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"11242:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}],"id":4366,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"11225:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3829_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4370,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"11262:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4371,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"11265:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4372,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11268:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4369,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"11209:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"11209:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4358,"id":4379,"nodeType":"Return","src":"11174:111:28"}]},"documentation":{"id":4345,"nodeType":"StructuredDocumentation","src":"10931:118:28","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4381,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:28","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"x","nameLocation":"11078:1:28","nodeType":"VariableDeclaration","scope":4381,"src":"11070:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4349,"mutability":"mutable","name":"y","nameLocation":"11089:1:28","nodeType":"VariableDeclaration","scope":4381,"src":"11081:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4351,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:28","nodeType":"VariableDeclaration","scope":4381,"src":"11092:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:28","nodeType":"VariableDeclaration","scope":4381,"src":"11113:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"},"typeName":{"id":4353,"nodeType":"UserDefinedTypeName","pathNode":{"id":4352,"name":"Rounding","nameLocations":["11113:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"11113:8:28"},"referencedDeclaration":3829,"src":"11113:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:28"},"returnParameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4381,"src":"11155:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:28"},"scope":5438,"src":"11054:238:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4430,"nodeType":"Block","src":"11500:245:28","statements":[{"id":4429,"nodeType":"UncheckedBlock","src":"11510:229:28","statements":[{"assignments":[4394,4396],"declarations":[{"constant":false,"id":4394,"mutability":"mutable","name":"high","nameLocation":"11543:4:28","nodeType":"VariableDeclaration","scope":4429,"src":"11535:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"low","nameLocation":"11557:3:28","nodeType":"VariableDeclaration","scope":4429,"src":"11549:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4401,"initialValue":{"arguments":[{"id":4398,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"11571:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4399,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"11574:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"11564:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4402,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"11594:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4404,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"11607:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4415,"nodeType":"IfStatement","src":"11590:86:28","trueBody":{"id":4414,"nodeType":"Block","src":"11610:66:28","statements":[{"expression":{"arguments":[{"expression":{"id":4410,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"11640:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3313,"src":"11640:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4407,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"11628:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"11628:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4413,"nodeType":"ExpressionStatement","src":"11628:33:28"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"11697:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4418,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"11712:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"11719:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4424,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"11726:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4392,"id":4428,"nodeType":"Return","src":"11689:39:28"}]}]},"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"11298:111:28","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4431,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:28","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"x","nameLocation":"11438:1:28","nodeType":"VariableDeclaration","scope":4431,"src":"11430:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"y","nameLocation":"11449:1:28","nodeType":"VariableDeclaration","scope":4431,"src":"11441:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"n","nameLocation":"11458:1:28","nodeType":"VariableDeclaration","scope":4431,"src":"11452:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4387,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:28"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"result","nameLocation":"11492:6:28","nodeType":"VariableDeclaration","scope":4431,"src":"11484:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:28"},"scope":5438,"src":"11414:331:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4469,"nodeType":"Block","src":"11963:113:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4447,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"11987:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4448,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"11990:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4449,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"11993:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4446,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4431,4470],"referencedDeclaration":4431,"src":"11980:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4454,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"12031:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}],"id":4453,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"12014:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3829_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4457,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"12051:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4458,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"12054:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4460,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"12062:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4456,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4451,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"11998:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"11998:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4445,"id":4468,"nodeType":"Return","src":"11973:96:28"}]},"documentation":{"id":4432,"nodeType":"StructuredDocumentation","src":"11751:109:28","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4470,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:28","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"x","nameLocation":"11889:1:28","nodeType":"VariableDeclaration","scope":4470,"src":"11881:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"y","nameLocation":"11900:1:28","nodeType":"VariableDeclaration","scope":4470,"src":"11892:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4435,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4438,"mutability":"mutable","name":"n","nameLocation":"11909:1:28","nodeType":"VariableDeclaration","scope":4470,"src":"11903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4437,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:28","nodeType":"VariableDeclaration","scope":4470,"src":"11912:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"},"typeName":{"id":4440,"nodeType":"UserDefinedTypeName","pathNode":{"id":4439,"name":"Rounding","nameLocations":["11912:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"11912:8:28"},"referencedDeclaration":3829,"src":"11912:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:28"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4470,"src":"11954:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:28"},"scope":5438,"src":"11865:211:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4566,"nodeType":"Block","src":"12710:1849:28","statements":[{"id":4565,"nodeType":"UncheckedBlock","src":"12720:1833:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"12748:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4485,"nodeType":"IfStatement","src":"12744:20:28","trueBody":{"expression":{"hexValue":"30","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4479,"id":4484,"nodeType":"Return","src":"12756:8:28"}},{"assignments":[4487],"declarations":[{"constant":false,"id":4487,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:28","nodeType":"VariableDeclaration","scope":4565,"src":"13235:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4486,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4491,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"13255:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4489,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"13259:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:28"},{"assignments":[4493],"declarations":[{"constant":false,"id":4493,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:28","nodeType":"VariableDeclaration","scope":4565,"src":"13274:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4495,"initialValue":{"id":4494,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"13288:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:28"},{"assignments":[4497],"declarations":[{"constant":false,"id":4497,"mutability":"mutable","name":"x","nameLocation":"13432:1:28","nodeType":"VariableDeclaration","scope":4565,"src":"13425:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4496,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4499,"initialValue":{"hexValue":"30","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:28"},{"assignments":[4501],"declarations":[{"constant":false,"id":4501,"mutability":"mutable","name":"y","nameLocation":"13458:1:28","nodeType":"VariableDeclaration","scope":4565,"src":"13451:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4500,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4503,"initialValue":{"hexValue":"31","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:28"},{"body":{"id":4540,"nodeType":"Block","src":"13501:882:28","statements":[{"assignments":[4508],"declarations":[{"constant":false,"id":4508,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:28","nodeType":"VariableDeclaration","scope":4540,"src":"13519:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4512,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"13538:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4510,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"13544:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:28"},{"expression":{"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4513,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"13573:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4514,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"13578:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4515,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4516,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"13678:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"13923:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"13929:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4519,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"13941:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4524,"nodeType":"ExpressionStatement","src":"13572:395:28"},{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4525,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"13987:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4526,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"13990:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4527,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4528,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"14072:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4529,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"14326:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"14330:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4533,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"14341:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4531,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:28","typeDescriptions":{}}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4539,"nodeType":"ExpressionStatement","src":"13986:382:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4504,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"13485:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4541,"nodeType":"WhileStatement","src":"13478:905:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"14401:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4547,"nodeType":"IfStatement","src":"14397:22:28","trueBody":{"expression":{"hexValue":"30","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4479,"id":4546,"nodeType":"Return","src":"14411:8:28"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"14470:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"14477:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:28","subExpression":{"id":4555,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"14490:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:28","typeDescriptions":{}}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4561,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"14502:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:28","typeDescriptions":{}}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4548,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"14462:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4479,"id":4564,"nodeType":"Return","src":"14455:50:28"}]}]},"documentation":{"id":4471,"nodeType":"StructuredDocumentation","src":"12082:553:28","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:28","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"a","nameLocation":"12664:1:28","nodeType":"VariableDeclaration","scope":4567,"src":"12656:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4475,"mutability":"mutable","name":"n","nameLocation":"12675:1:28","nodeType":"VariableDeclaration","scope":4567,"src":"12667:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:28"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4567,"src":"12701:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:28"},"scope":5438,"src":"12640:1919:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4587,"nodeType":"Block","src":"15159:82:28","statements":[{"id":4586,"nodeType":"UncheckedBlock","src":"15169:66:28","statements":[{"expression":{"arguments":[{"id":4579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"15212:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"15215:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4583,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"15222:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4577,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"15200:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5438_$","typeString":"type(library Math)"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:28","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4624,"src":"15200:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4576,"id":4585,"nodeType":"Return","src":"15193:31:28"}]}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"14565:514:28","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4588,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:28","nodeType":"FunctionDefinition","parameters":{"id":4573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"a","nameLocation":"15113:1:28","nodeType":"VariableDeclaration","scope":4588,"src":"15105:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4572,"mutability":"mutable","name":"p","nameLocation":"15124:1:28","nodeType":"VariableDeclaration","scope":4588,"src":"15116:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:28"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4588,"src":"15150:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:28"},"scope":5438,"src":"15084:157:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4623,"nodeType":"Block","src":"16011:174:28","statements":[{"assignments":[4601,4603],"declarations":[{"constant":false,"id":4601,"mutability":"mutable","name":"success","nameLocation":"16027:7:28","nodeType":"VariableDeclaration","scope":4623,"src":"16022:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4600,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4603,"mutability":"mutable","name":"result","nameLocation":"16044:6:28","nodeType":"VariableDeclaration","scope":4623,"src":"16036:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4609,"initialValue":{"arguments":[{"id":4605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"16064:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4606,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"16067:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4607,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"16070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4604,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4648,4730],"referencedDeclaration":4648,"src":"16054:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:28"},{"condition":{"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:28","subExpression":{"id":4610,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"16087:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4620,"nodeType":"IfStatement","src":"16082:74:28","trueBody":{"id":4619,"nodeType":"Block","src":"16096:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":4615,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"16122:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"16122:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4612,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"16110:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"16110:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"16110:35:28"}]}},{"expression":{"id":4621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"16172:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4599,"id":4622,"nodeType":"Return","src":"16165:13:28"}]},"documentation":{"id":4589,"nodeType":"StructuredDocumentation","src":"15247:678:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4624,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:28","nodeType":"FunctionDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4591,"mutability":"mutable","name":"b","nameLocation":"15954:1:28","nodeType":"VariableDeclaration","scope":4624,"src":"15946:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4593,"mutability":"mutable","name":"e","nameLocation":"15965:1:28","nodeType":"VariableDeclaration","scope":4624,"src":"15957:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4595,"mutability":"mutable","name":"m","nameLocation":"15976:1:28","nodeType":"VariableDeclaration","scope":4624,"src":"15968:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:28"},"returnParameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4624,"src":"16002:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:28"},"scope":5438,"src":"15930:255:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4647,"nodeType":"Block","src":"17039:1493:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"17053:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4645,"nodeType":"IfStatement","src":"17049:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4637,"id":4644,"nodeType":"Return","src":"17061:17:28"}},{"AST":{"nativeSrc":"17113:1413:28","nodeType":"YulBlock","src":"17113:1413:28","statements":[{"nativeSrc":"17127:22:28","nodeType":"YulVariableDeclaration","src":"17127:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:28","nodeType":"YulLiteral","src":"17144:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:28","nodeType":"YulIdentifier","src":"17138:5:28"},"nativeSrc":"17138:11:28","nodeType":"YulFunctionCall","src":"17138:11:28"},"variables":[{"name":"ptr","nativeSrc":"17131:3:28","nodeType":"YulTypedName","src":"17131:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:28","nodeType":"YulIdentifier","src":"18057:3:28"},{"kind":"number","nativeSrc":"18062:4:28","nodeType":"YulLiteral","src":"18062:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:28","nodeType":"YulIdentifier","src":"18050:6:28"},"nativeSrc":"18050:17:28","nodeType":"YulFunctionCall","src":"18050:17:28"},"nativeSrc":"18050:17:28","nodeType":"YulExpressionStatement","src":"18050:17:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:28","nodeType":"YulIdentifier","src":"18091:3:28"},{"kind":"number","nativeSrc":"18096:4:28","nodeType":"YulLiteral","src":"18096:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:28","nodeType":"YulIdentifier","src":"18087:3:28"},"nativeSrc":"18087:14:28","nodeType":"YulFunctionCall","src":"18087:14:28"},{"kind":"number","nativeSrc":"18103:4:28","nodeType":"YulLiteral","src":"18103:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:28","nodeType":"YulIdentifier","src":"18080:6:28"},"nativeSrc":"18080:28:28","nodeType":"YulFunctionCall","src":"18080:28:28"},"nativeSrc":"18080:28:28","nodeType":"YulExpressionStatement","src":"18080:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:28","nodeType":"YulIdentifier","src":"18132:3:28"},{"kind":"number","nativeSrc":"18137:4:28","nodeType":"YulLiteral","src":"18137:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:28","nodeType":"YulIdentifier","src":"18128:3:28"},"nativeSrc":"18128:14:28","nodeType":"YulFunctionCall","src":"18128:14:28"},{"kind":"number","nativeSrc":"18144:4:28","nodeType":"YulLiteral","src":"18144:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:28","nodeType":"YulIdentifier","src":"18121:6:28"},"nativeSrc":"18121:28:28","nodeType":"YulFunctionCall","src":"18121:28:28"},"nativeSrc":"18121:28:28","nodeType":"YulExpressionStatement","src":"18121:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:28","nodeType":"YulIdentifier","src":"18173:3:28"},{"kind":"number","nativeSrc":"18178:4:28","nodeType":"YulLiteral","src":"18178:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:28","nodeType":"YulIdentifier","src":"18169:3:28"},"nativeSrc":"18169:14:28","nodeType":"YulFunctionCall","src":"18169:14:28"},{"name":"b","nativeSrc":"18185:1:28","nodeType":"YulIdentifier","src":"18185:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:28","nodeType":"YulIdentifier","src":"18162:6:28"},"nativeSrc":"18162:25:28","nodeType":"YulFunctionCall","src":"18162:25:28"},"nativeSrc":"18162:25:28","nodeType":"YulExpressionStatement","src":"18162:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:28","nodeType":"YulIdentifier","src":"18211:3:28"},{"kind":"number","nativeSrc":"18216:4:28","nodeType":"YulLiteral","src":"18216:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:28","nodeType":"YulIdentifier","src":"18207:3:28"},"nativeSrc":"18207:14:28","nodeType":"YulFunctionCall","src":"18207:14:28"},{"name":"e","nativeSrc":"18223:1:28","nodeType":"YulIdentifier","src":"18223:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:28","nodeType":"YulIdentifier","src":"18200:6:28"},"nativeSrc":"18200:25:28","nodeType":"YulFunctionCall","src":"18200:25:28"},"nativeSrc":"18200:25:28","nodeType":"YulExpressionStatement","src":"18200:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:28","nodeType":"YulIdentifier","src":"18249:3:28"},{"kind":"number","nativeSrc":"18254:4:28","nodeType":"YulLiteral","src":"18254:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:28","nodeType":"YulIdentifier","src":"18245:3:28"},"nativeSrc":"18245:14:28","nodeType":"YulFunctionCall","src":"18245:14:28"},{"name":"m","nativeSrc":"18261:1:28","nodeType":"YulIdentifier","src":"18261:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:28","nodeType":"YulIdentifier","src":"18238:6:28"},"nativeSrc":"18238:25:28","nodeType":"YulFunctionCall","src":"18238:25:28"},"nativeSrc":"18238:25:28","nodeType":"YulExpressionStatement","src":"18238:25:28"},{"nativeSrc":"18425:57:28","nodeType":"YulAssignment","src":"18425:57:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:28","nodeType":"YulIdentifier","src":"18447:3:28"},"nativeSrc":"18447:5:28","nodeType":"YulFunctionCall","src":"18447:5:28"},{"kind":"number","nativeSrc":"18454:4:28","nodeType":"YulLiteral","src":"18454:4:28","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:28","nodeType":"YulIdentifier","src":"18460:3:28"},{"kind":"number","nativeSrc":"18465:4:28","nodeType":"YulLiteral","src":"18465:4:28","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:28","nodeType":"YulLiteral","src":"18471:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:28","nodeType":"YulLiteral","src":"18477:4:28","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:28","nodeType":"YulIdentifier","src":"18436:10:28"},"nativeSrc":"18436:46:28","nodeType":"YulFunctionCall","src":"18436:46:28"},"variableNames":[{"name":"success","nativeSrc":"18425:7:28","nodeType":"YulIdentifier","src":"18425:7:28"}]},{"nativeSrc":"18495:21:28","nodeType":"YulAssignment","src":"18495:21:28","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:28","nodeType":"YulLiteral","src":"18511:4:28","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:28","nodeType":"YulIdentifier","src":"18505:5:28"},"nativeSrc":"18505:11:28","nodeType":"YulFunctionCall","src":"18505:11:28"},"variableNames":[{"name":"result","nativeSrc":"18495:6:28","nodeType":"YulIdentifier","src":"18495:6:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4627,"isOffset":false,"isSlot":false,"src":"18185:1:28","valueSize":1},{"declaration":4629,"isOffset":false,"isSlot":false,"src":"18223:1:28","valueSize":1},{"declaration":4631,"isOffset":false,"isSlot":false,"src":"18261:1:28","valueSize":1},{"declaration":4636,"isOffset":false,"isSlot":false,"src":"18495:6:28","valueSize":1},{"declaration":4634,"isOffset":false,"isSlot":false,"src":"18425:7:28","valueSize":1}],"flags":["memory-safe"],"id":4646,"nodeType":"InlineAssembly","src":"17088:1438:28"}]},"documentation":{"id":4625,"nodeType":"StructuredDocumentation","src":"16191:738:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4648,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:28","nodeType":"FunctionDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"b","nameLocation":"16961:1:28","nodeType":"VariableDeclaration","scope":4648,"src":"16953:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4629,"mutability":"mutable","name":"e","nameLocation":"16972:1:28","nodeType":"VariableDeclaration","scope":4648,"src":"16964:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4631,"mutability":"mutable","name":"m","nameLocation":"16983:1:28","nodeType":"VariableDeclaration","scope":4648,"src":"16975:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:28"},"returnParameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"success","nameLocation":"17014:7:28","nodeType":"VariableDeclaration","scope":4648,"src":"17009:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4633,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4636,"mutability":"mutable","name":"result","nameLocation":"17031:6:28","nodeType":"VariableDeclaration","scope":4648,"src":"17023:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4635,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:28"},"scope":5438,"src":"16934:1598:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4683,"nodeType":"Block","src":"18729:179:28","statements":[{"assignments":[4661,4663],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"success","nameLocation":"18745:7:28","nodeType":"VariableDeclaration","scope":4683,"src":"18740:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4660,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4663,"mutability":"mutable","name":"result","nameLocation":"18767:6:28","nodeType":"VariableDeclaration","scope":4683,"src":"18754:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4662,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4669,"initialValue":{"arguments":[{"id":4665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"18787:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4666,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"18790:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4667,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"18793:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4664,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4648,4730],"referencedDeclaration":4730,"src":"18777:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:28"},{"condition":{"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:28","subExpression":{"id":4670,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"18810:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"18805:74:28","trueBody":{"id":4679,"nodeType":"Block","src":"18819:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":4675,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"18845:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3317,"src":"18845:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4672,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"18833:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3350_$","typeString":"type(library Panic)"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"18833:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4678,"nodeType":"ExpressionStatement","src":"18833:35:28"}]}},{"expression":{"id":4681,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"18895:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4659,"id":4682,"nodeType":"Return","src":"18888:13:28"}]},"documentation":{"id":4649,"nodeType":"StructuredDocumentation","src":"18538:85:28","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4684,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:28","nodeType":"FunctionDefinition","parameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"b","nameLocation":"18657:1:28","nodeType":"VariableDeclaration","scope":4684,"src":"18644:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4650,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4653,"mutability":"mutable","name":"e","nameLocation":"18673:1:28","nodeType":"VariableDeclaration","scope":4684,"src":"18660:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4652,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4655,"mutability":"mutable","name":"m","nameLocation":"18689:1:28","nodeType":"VariableDeclaration","scope":4684,"src":"18676:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4654,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:28"},"returnParameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4684,"src":"18715:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4657,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:28"},"scope":5438,"src":"18628:280:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4729,"nodeType":"Block","src":"19162:771:28","statements":[{"condition":{"arguments":[{"id":4699,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"19187:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4698,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"19176:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4708,"nodeType":"IfStatement","src":"19172:47:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4702,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4697,"id":4707,"nodeType":"Return","src":"19191:28:28"}},{"assignments":[4710],"declarations":[{"constant":false,"id":4710,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:28","nodeType":"VariableDeclaration","scope":4729,"src":"19230:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4713,"initialValue":{"expression":{"id":4711,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"19245:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:28","memberName":"length","nodeType":"MemberAccess","src":"19245:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:28"},{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"19335:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4717,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"19361:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:28","memberName":"length","nodeType":"MemberAccess","src":"19361:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4719,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"19371:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:28","memberName":"length","nodeType":"MemberAccess","src":"19371:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4721,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"19381:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"19387:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4723,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"19390:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4724,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"19393:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4715,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4727,"nodeType":"ExpressionStatement","src":"19335:60:28"},{"AST":{"nativeSrc":"19431:496:28","nodeType":"YulBlock","src":"19431:496:28","statements":[{"nativeSrc":"19445:32:28","nodeType":"YulVariableDeclaration","src":"19445:32:28","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:28","nodeType":"YulIdentifier","src":"19464:6:28"},{"kind":"number","nativeSrc":"19472:4:28","nodeType":"YulLiteral","src":"19472:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:28","nodeType":"YulIdentifier","src":"19460:3:28"},"nativeSrc":"19460:17:28","nodeType":"YulFunctionCall","src":"19460:17:28"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:28","nodeType":"YulTypedName","src":"19449:7:28","type":""}]},{"nativeSrc":"19567:73:28","nodeType":"YulAssignment","src":"19567:73:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:28","nodeType":"YulIdentifier","src":"19589:3:28"},"nativeSrc":"19589:5:28","nodeType":"YulFunctionCall","src":"19589:5:28"},{"kind":"number","nativeSrc":"19596:4:28","nodeType":"YulLiteral","src":"19596:4:28","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:28","nodeType":"YulIdentifier","src":"19602:7:28"},{"arguments":[{"name":"result","nativeSrc":"19617:6:28","nodeType":"YulIdentifier","src":"19617:6:28"}],"functionName":{"name":"mload","nativeSrc":"19611:5:28","nodeType":"YulIdentifier","src":"19611:5:28"},"nativeSrc":"19611:13:28","nodeType":"YulFunctionCall","src":"19611:13:28"},{"name":"dataPtr","nativeSrc":"19626:7:28","nodeType":"YulIdentifier","src":"19626:7:28"},{"name":"mLen","nativeSrc":"19635:4:28","nodeType":"YulIdentifier","src":"19635:4:28"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:28","nodeType":"YulIdentifier","src":"19578:10:28"},"nativeSrc":"19578:62:28","nodeType":"YulFunctionCall","src":"19578:62:28"},"variableNames":[{"name":"success","nativeSrc":"19567:7:28","nodeType":"YulIdentifier","src":"19567:7:28"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:28","nodeType":"YulIdentifier","src":"19796:6:28"},{"name":"mLen","nativeSrc":"19804:4:28","nodeType":"YulIdentifier","src":"19804:4:28"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:28","nodeType":"YulIdentifier","src":"19789:6:28"},"nativeSrc":"19789:20:28","nodeType":"YulFunctionCall","src":"19789:20:28"},"nativeSrc":"19789:20:28","nodeType":"YulExpressionStatement","src":"19789:20:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:28","nodeType":"YulLiteral","src":"19892:4:28","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:28","nodeType":"YulIdentifier","src":"19902:7:28"},{"name":"mLen","nativeSrc":"19911:4:28","nodeType":"YulIdentifier","src":"19911:4:28"}],"functionName":{"name":"add","nativeSrc":"19898:3:28","nodeType":"YulIdentifier","src":"19898:3:28"},"nativeSrc":"19898:18:28","nodeType":"YulFunctionCall","src":"19898:18:28"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:28","nodeType":"YulIdentifier","src":"19885:6:28"},"nativeSrc":"19885:32:28","nodeType":"YulFunctionCall","src":"19885:32:28"},"nativeSrc":"19885:32:28","nodeType":"YulExpressionStatement","src":"19885:32:28"}]},"evmVersion":"cancun","externalReferences":[{"declaration":4710,"isOffset":false,"isSlot":false,"src":"19635:4:28","valueSize":1},{"declaration":4710,"isOffset":false,"isSlot":false,"src":"19804:4:28","valueSize":1},{"declaration":4710,"isOffset":false,"isSlot":false,"src":"19911:4:28","valueSize":1},{"declaration":4696,"isOffset":false,"isSlot":false,"src":"19464:6:28","valueSize":1},{"declaration":4696,"isOffset":false,"isSlot":false,"src":"19617:6:28","valueSize":1},{"declaration":4696,"isOffset":false,"isSlot":false,"src":"19796:6:28","valueSize":1},{"declaration":4694,"isOffset":false,"isSlot":false,"src":"19567:7:28","valueSize":1}],"flags":["memory-safe"],"id":4728,"nodeType":"InlineAssembly","src":"19406:521:28"}]},"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"18914:88:28","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4730,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:28","nodeType":"FunctionDefinition","parameters":{"id":4692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"b","nameLocation":"19048:1:28","nodeType":"VariableDeclaration","scope":4730,"src":"19035:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4686,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4689,"mutability":"mutable","name":"e","nameLocation":"19072:1:28","nodeType":"VariableDeclaration","scope":4730,"src":"19059:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4688,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4691,"mutability":"mutable","name":"m","nameLocation":"19096:1:28","nodeType":"VariableDeclaration","scope":4730,"src":"19083:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4690,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:28"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"success","nameLocation":"19132:7:28","nodeType":"VariableDeclaration","scope":4730,"src":"19127:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4693,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4696,"mutability":"mutable","name":"result","nameLocation":"19154:6:28","nodeType":"VariableDeclaration","scope":4730,"src":"19141:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4695,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:28"},"scope":5438,"src":"19007:926:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4762,"nodeType":"Block","src":"20088:176:28","statements":[{"body":{"id":4758,"nodeType":"Block","src":"20145:92:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4749,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"20163:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4751,"indexExpression":{"id":4750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"20173:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4757,"nodeType":"IfStatement","src":"20159:68:28","trueBody":{"id":4756,"nodeType":"Block","src":"20182:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4737,"id":4755,"nodeType":"Return","src":"20200:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"20118:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4743,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"20122:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:28","memberName":"length","nodeType":"MemberAccess","src":"20122:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4759,"initializationExpression":{"assignments":[4739],"declarations":[{"constant":false,"id":4739,"mutability":"mutable","name":"i","nameLocation":"20111:1:28","nodeType":"VariableDeclaration","scope":4759,"src":"20103:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4738,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4741,"initialValue":{"hexValue":"30","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:28","subExpression":{"id":4746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"20142:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4748,"nodeType":"ExpressionStatement","src":"20140:3:28"},"nodeType":"ForStatement","src":"20098:139:28"},{"expression":{"hexValue":"74727565","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4737,"id":4761,"nodeType":"Return","src":"20246:11:28"}]},"documentation":{"id":4731,"nodeType":"StructuredDocumentation","src":"19939:72:28","text":" @dev Returns whether the provided byte array is zero."},"id":4763,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:28","nodeType":"FunctionDefinition","parameters":{"id":4734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4733,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:28","nodeType":"VariableDeclaration","scope":4763,"src":"20036:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4732,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:28"},"returnParameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4763,"src":"20082:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4735,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:28"},"scope":5438,"src":"20016:248:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4981,"nodeType":"Block","src":"20624:5124:28","statements":[{"id":4980,"nodeType":"UncheckedBlock","src":"20634:5108:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"20728:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4777,"nodeType":"IfStatement","src":"20724:53:28","trueBody":{"id":4776,"nodeType":"Block","src":"20736:41:28","statements":[{"expression":{"id":4774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"20761:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4770,"id":4775,"nodeType":"Return","src":"20754:8:28"}]}},{"assignments":[4779],"declarations":[{"constant":false,"id":4779,"mutability":"mutable","name":"aa","nameLocation":"21712:2:28","nodeType":"VariableDeclaration","scope":4980,"src":"21704:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4778,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4781,"initialValue":{"id":4780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"21717:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:28"},{"assignments":[4783],"declarations":[{"constant":false,"id":4783,"mutability":"mutable","name":"xn","nameLocation":"21740:2:28","nodeType":"VariableDeclaration","scope":4980,"src":"21732:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4785,"initialValue":{"hexValue":"31","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"21765:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4801,"nodeType":"IfStatement","src":"21761:92:28","trueBody":{"id":4800,"nodeType":"Block","src":"21783:70:28","statements":[{"expression":{"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"21801:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4795,"nodeType":"ExpressionStatement","src":"21801:10:28"},{"expression":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4796,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"21829:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4799,"nodeType":"ExpressionStatement","src":"21829:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"21870:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4817,"nodeType":"IfStatement","src":"21866:90:28","trueBody":{"id":4816,"nodeType":"Block","src":"21887:69:28","statements":[{"expression":{"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4808,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"21905:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4811,"nodeType":"ExpressionStatement","src":"21905:9:28"},{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4812,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"21932:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"21932:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4818,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"21973:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4833,"nodeType":"IfStatement","src":"21969:90:28","trueBody":{"id":4832,"nodeType":"Block","src":"21990:69:28","statements":[{"expression":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4824,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"22008:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4827,"nodeType":"ExpressionStatement","src":"22008:9:28"},{"expression":{"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4828,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22035:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4831,"nodeType":"ExpressionStatement","src":"22035:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4834,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"22076:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4849,"nodeType":"IfStatement","src":"22072:89:28","trueBody":{"id":4848,"nodeType":"Block","src":"22093:68:28","statements":[{"expression":{"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4840,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"22111:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4843,"nodeType":"ExpressionStatement","src":"22111:9:28"},{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4844,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22138:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4847,"nodeType":"ExpressionStatement","src":"22138:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"22178:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4865,"nodeType":"IfStatement","src":"22174:87:28","trueBody":{"id":4864,"nodeType":"Block","src":"22194:67:28","statements":[{"expression":{"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4856,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"22212:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4859,"nodeType":"ExpressionStatement","src":"22212:8:28"},{"expression":{"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4860,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22238:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4863,"nodeType":"ExpressionStatement","src":"22238:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"22278:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4881,"nodeType":"IfStatement","src":"22274:87:28","trueBody":{"id":4880,"nodeType":"Block","src":"22294:67:28","statements":[{"expression":{"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4872,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"22312:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4875,"nodeType":"ExpressionStatement","src":"22312:8:28"},{"expression":{"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4876,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22338:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4879,"nodeType":"ExpressionStatement","src":"22338:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"22378:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4893,"nodeType":"IfStatement","src":"22374:61:28","trueBody":{"id":4892,"nodeType":"Block","src":"22394:41:28","statements":[{"expression":{"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4888,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22412:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4891,"nodeType":"ExpressionStatement","src":"22412:8:28"}]}},{"expression":{"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4894,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22855:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4896,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22865:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4902,"nodeType":"ExpressionStatement","src":"22855:18:28"},{"expression":{"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4903,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24760:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4904,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24766:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"24771:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4906,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24775:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4913,"nodeType":"ExpressionStatement","src":"24760:23:28"},{"expression":{"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4914,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24869:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4915,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24875:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"24880:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4917,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24884:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4924,"nodeType":"ExpressionStatement","src":"24869:23:28"},{"expression":{"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4925,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24980:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24986:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4927,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"24991:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4928,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24995:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4935,"nodeType":"ExpressionStatement","src":"24980:23:28"},{"expression":{"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4936,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25089:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25095:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4938,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"25100:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4939,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25104:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4946,"nodeType":"ExpressionStatement","src":"25089:23:28"},{"expression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4947,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25199:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4948,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25205:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"25210:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4950,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25214:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4957,"nodeType":"ExpressionStatement","src":"25199:23:28"},{"expression":{"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4958,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25309:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25315:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"25320:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4961,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25324:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4968,"nodeType":"ExpressionStatement","src":"25309:23:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4969,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25698:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25719:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"25724:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4974,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25728:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4970,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"25703:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"25703:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4770,"id":4979,"nodeType":"Return","src":"25691:40:28"}]}]},"documentation":{"id":4764,"nodeType":"StructuredDocumentation","src":"20270:292:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:28","nodeType":"FunctionDefinition","parameters":{"id":4767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"a","nameLocation":"20589:1:28","nodeType":"VariableDeclaration","scope":4982,"src":"20581:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:28"},"returnParameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4982,"src":"20615:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:28"},"scope":5438,"src":"20567:5181:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5015,"nodeType":"Block","src":"25921:171:28","statements":[{"id":5014,"nodeType":"UncheckedBlock","src":"25931:155:28","statements":[{"assignments":[4994],"declarations":[{"constant":false,"id":4994,"mutability":"mutable","name":"result","nameLocation":"25963:6:28","nodeType":"VariableDeclaration","scope":5014,"src":"25955:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4998,"initialValue":{"arguments":[{"id":4996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"25977:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4995,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4982,5016],"referencedDeclaration":4982,"src":"25972:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4999,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"26000:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5003,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"26042:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}],"id":5002,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"26025:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3829_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"26055:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"26064:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"26073:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5000,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"26009:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"26009:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4992,"id":5013,"nodeType":"Return","src":"25993:82:28"}]}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"25754:86:28","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5016,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:28","nodeType":"FunctionDefinition","parameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"a","nameLocation":"25867:1:28","nodeType":"VariableDeclaration","scope":5016,"src":"25859:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4988,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:28","nodeType":"VariableDeclaration","scope":5016,"src":"25870:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"},"typeName":{"id":4987,"nodeType":"UserDefinedTypeName","pathNode":{"id":4986,"name":"Rounding","nameLocations":["25870:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"25870:8:28"},"referencedDeclaration":3829,"src":"25870:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:28"},"returnParameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5016,"src":"25912:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:28"},"scope":5438,"src":"25845:247:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"26281:2334:28","statements":[{"expression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5024,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26363:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5027,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"26383:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5025,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"26367:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"26367:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:28","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5034,"nodeType":"ExpressionStatement","src":"26363:64:28"},{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5035,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26503:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"26525:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5039,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26530:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5036,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"26508:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"26508:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:28","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5048,"nodeType":"ExpressionStatement","src":"26503:56:28"},{"expression":{"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26634:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5052,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"26656:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5053,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26661:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5050,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"26639:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"26639:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5062,"nodeType":"ExpressionStatement","src":"26634:48:28"},{"expression":{"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5063,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26757:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5066,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"26779:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5067,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26784:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5064,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"26762:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"26762:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5076,"nodeType":"ExpressionStatement","src":"26757:44:28"},{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5077,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26874:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"26896:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5081,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26901:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5078,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"26879:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"26879:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5090,"nodeType":"ExpressionStatement","src":"26874:42:28"},{"expression":{"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5091,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"26988:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"27010:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5095,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"27015:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5092,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"26993:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"26993:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5104,"nodeType":"ExpressionStatement","src":"26988:41:28"},{"AST":{"nativeSrc":"28490:119:28","nodeType":"YulBlock","src":"28490:119:28","statements":[{"nativeSrc":"28504:95:28","nodeType":"YulAssignment","src":"28504:95:28","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:28","nodeType":"YulIdentifier","src":"28512:1:28"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:28","nodeType":"YulIdentifier","src":"28524:1:28"},{"name":"x","nativeSrc":"28527:1:28","nodeType":"YulIdentifier","src":"28527:1:28"}],"functionName":{"name":"shr","nativeSrc":"28520:3:28","nodeType":"YulIdentifier","src":"28520:3:28"},"nativeSrc":"28520:9:28","nodeType":"YulFunctionCall","src":"28520:9:28"},{"kind":"number","nativeSrc":"28531:66:28","nodeType":"YulLiteral","src":"28531:66:28","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:28","nodeType":"YulIdentifier","src":"28515:4:28"},"nativeSrc":"28515:83:28","nodeType":"YulFunctionCall","src":"28515:83:28"}],"functionName":{"name":"or","nativeSrc":"28509:2:28","nodeType":"YulIdentifier","src":"28509:2:28"},"nativeSrc":"28509:90:28","nodeType":"YulFunctionCall","src":"28509:90:28"},"variableNames":[{"name":"r","nativeSrc":"28504:1:28","nodeType":"YulIdentifier","src":"28504:1:28"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":5022,"isOffset":false,"isSlot":false,"src":"28504:1:28","valueSize":1},{"declaration":5022,"isOffset":false,"isSlot":false,"src":"28512:1:28","valueSize":1},{"declaration":5022,"isOffset":false,"isSlot":false,"src":"28524:1:28","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"28527:1:28","valueSize":1}],"flags":["memory-safe"],"id":5105,"nodeType":"InlineAssembly","src":"28465:144:28"}]},"documentation":{"id":5017,"nodeType":"StructuredDocumentation","src":"26098:119:28","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:28","nodeType":"FunctionDefinition","parameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"x","nameLocation":"26244:1:28","nodeType":"VariableDeclaration","scope":5107,"src":"26236:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:28"},"returnParameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"r","nameLocation":"26278:1:28","nodeType":"VariableDeclaration","scope":5107,"src":"26270:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:28"},"scope":5438,"src":"26222:2393:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5140,"nodeType":"Block","src":"28848:175:28","statements":[{"id":5139,"nodeType":"UncheckedBlock","src":"28858:159:28","statements":[{"assignments":[5119],"declarations":[{"constant":false,"id":5119,"mutability":"mutable","name":"result","nameLocation":"28890:6:28","nodeType":"VariableDeclaration","scope":5139,"src":"28882:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5123,"initialValue":{"arguments":[{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"28904:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5107,5141],"referencedDeclaration":5107,"src":"28899:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"28931:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5128,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"28973:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}],"id":5127,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"28956:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3829_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"28991:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"29000:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5125,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"28940:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"28940:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5117,"id":5138,"nodeType":"Return","src":"28924:82:28"}]}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"28621:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5141,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:28","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"value","nameLocation":"28790:5:28","nodeType":"VariableDeclaration","scope":5141,"src":"28782:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5113,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:28","nodeType":"VariableDeclaration","scope":5141,"src":"28797:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"},"typeName":{"id":5112,"nodeType":"UserDefinedTypeName","pathNode":{"id":5111,"name":"Rounding","nameLocations":["28797:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"28797:8:28"},"referencedDeclaration":3829,"src":"28797:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:28"},"returnParameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5141,"src":"28839:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5115,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:28"},"scope":5438,"src":"28768:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5269,"nodeType":"Block","src":"29216:854:28","statements":[{"assignments":[5150],"declarations":[{"constant":false,"id":5150,"mutability":"mutable","name":"result","nameLocation":"29234:6:28","nodeType":"VariableDeclaration","scope":5269,"src":"29226:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5149,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5152,"initialValue":{"hexValue":"30","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:28"},{"id":5266,"nodeType":"UncheckedBlock","src":"29254:787:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29282:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5169,"nodeType":"IfStatement","src":"29278:103:28","trueBody":{"id":5168,"nodeType":"Block","src":"29301:80:28","statements":[{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29319:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5163,"nodeType":"ExpressionStatement","src":"29319:17:28"},{"expression":{"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"29354:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5167,"nodeType":"ExpressionStatement","src":"29354:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29398:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5186,"nodeType":"IfStatement","src":"29394:103:28","trueBody":{"id":5185,"nodeType":"Block","src":"29417:80:28","statements":[{"expression":{"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29435:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5180,"nodeType":"ExpressionStatement","src":"29435:17:28"},{"expression":{"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"29470:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5184,"nodeType":"ExpressionStatement","src":"29470:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29514:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5203,"nodeType":"IfStatement","src":"29510:103:28","trueBody":{"id":5202,"nodeType":"Block","src":"29533:80:28","statements":[{"expression":{"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29551:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5197,"nodeType":"ExpressionStatement","src":"29551:17:28"},{"expression":{"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"29586:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5201,"nodeType":"ExpressionStatement","src":"29586:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29630:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5220,"nodeType":"IfStatement","src":"29626:100:28","trueBody":{"id":5219,"nodeType":"Block","src":"29648:78:28","statements":[{"expression":{"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29666:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5214,"nodeType":"ExpressionStatement","src":"29666:16:28"},{"expression":{"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"29700:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5218,"nodeType":"ExpressionStatement","src":"29700:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29743:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5237,"nodeType":"IfStatement","src":"29739:100:28","trueBody":{"id":5236,"nodeType":"Block","src":"29761:78:28","statements":[{"expression":{"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29779:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5231,"nodeType":"ExpressionStatement","src":"29779:16:28"},{"expression":{"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"29813:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5235,"nodeType":"ExpressionStatement","src":"29813:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29856:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5254,"nodeType":"IfStatement","src":"29852:100:28","trueBody":{"id":5253,"nodeType":"Block","src":"29874:78:28","statements":[{"expression":{"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29892:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5248,"nodeType":"ExpressionStatement","src":"29892:16:28"},{"expression":{"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"29926:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5252,"nodeType":"ExpressionStatement","src":"29926:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"29969:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5265,"nodeType":"IfStatement","src":"29965:66:28","trueBody":{"id":5264,"nodeType":"Block","src":"29987:44:28","statements":[{"expression":{"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"30005:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5263,"nodeType":"ExpressionStatement","src":"30005:11:28"}]}}]},{"expression":{"id":5267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"30057:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5148,"id":5268,"nodeType":"Return","src":"30050:13:28"}]},"documentation":{"id":5142,"nodeType":"StructuredDocumentation","src":"29029:120:28","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5270,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:28","nodeType":"FunctionDefinition","parameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"value","nameLocation":"29177:5:28","nodeType":"VariableDeclaration","scope":5270,"src":"29169:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:28"},"returnParameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5270,"src":"29207:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:28"},"scope":5438,"src":"29154:916:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5303,"nodeType":"Block","src":"30305:177:28","statements":[{"id":5302,"nodeType":"UncheckedBlock","src":"30315:161:28","statements":[{"assignments":[5282],"declarations":[{"constant":false,"id":5282,"mutability":"mutable","name":"result","nameLocation":"30347:6:28","nodeType":"VariableDeclaration","scope":5302,"src":"30339:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5281,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5286,"initialValue":{"arguments":[{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"30362:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5283,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5270,5304],"referencedDeclaration":5270,"src":"30356:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"30389:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5291,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"30431:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}],"id":5290,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"30414:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3829_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"30450:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"30459:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5288,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"30398:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"30398:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5280,"id":5301,"nodeType":"Return","src":"30382:83:28"}]}]},"documentation":{"id":5271,"nodeType":"StructuredDocumentation","src":"30076:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5304,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:28","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"value","nameLocation":"30247:5:28","nodeType":"VariableDeclaration","scope":5304,"src":"30239:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5272,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5276,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:28","nodeType":"VariableDeclaration","scope":5304,"src":"30254:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"},"typeName":{"id":5275,"nodeType":"UserDefinedTypeName","pathNode":{"id":5274,"name":"Rounding","nameLocations":["30254:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"30254:8:28"},"referencedDeclaration":3829,"src":"30254:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:28"},"returnParameters":{"id":5280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5304,"src":"30296:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5278,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:28"},"scope":5438,"src":"30224:258:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5380,"nodeType":"Block","src":"30800:675:28","statements":[{"expression":{"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5312,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"30882:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5315,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"30902:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5313,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"30886:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"30886:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:28","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5322,"nodeType":"ExpressionStatement","src":"30882:64:28"},{"expression":{"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5323,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"31022:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5326,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"31044:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5327,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"31049:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5324,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"31027:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"31027:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:28","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5336,"nodeType":"ExpressionStatement","src":"31022:56:28"},{"expression":{"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5337,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"31153:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"31175:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5341,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"31180:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5338,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"31158:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"31158:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5350,"nodeType":"ExpressionStatement","src":"31153:48:28"},{"expression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5351,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"31276:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5354,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"31298:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5355,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"31303:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5352,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"31281:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"31281:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5364,"nodeType":"ExpressionStatement","src":"31276:44:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"31426:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5371,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"31453:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5372,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"31458:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5369,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"31436:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"31436:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5311,"id":5379,"nodeType":"Return","src":"31418:50:28"}]},"documentation":{"id":5305,"nodeType":"StructuredDocumentation","src":"30488:246:28","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5381,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:28","nodeType":"FunctionDefinition","parameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"x","nameLocation":"30763:1:28","nodeType":"VariableDeclaration","scope":5381,"src":"30755:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5306,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:28"},"returnParameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"r","nameLocation":"30797:1:28","nodeType":"VariableDeclaration","scope":5381,"src":"30789:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:28"},"scope":5438,"src":"30739:736:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5417,"nodeType":"Block","src":"31712:184:28","statements":[{"id":5416,"nodeType":"UncheckedBlock","src":"31722:168:28","statements":[{"assignments":[5393],"declarations":[{"constant":false,"id":5393,"mutability":"mutable","name":"result","nameLocation":"31754:6:28","nodeType":"VariableDeclaration","scope":5416,"src":"31746:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5397,"initialValue":{"arguments":[{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"31770:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5394,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5381,5418],"referencedDeclaration":5381,"src":"31763:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"31797:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5402,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"31839:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}],"id":5401,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"31822:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3829_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"31858:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"31873:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5399,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"31806:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7203_$","typeString":"type(library SafeCast)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"31806:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5391,"id":5415,"nodeType":"Return","src":"31790:89:28"}]}]},"documentation":{"id":5382,"nodeType":"StructuredDocumentation","src":"31481:144:28","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:28","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"value","nameLocation":"31654:5:28","nodeType":"VariableDeclaration","scope":5418,"src":"31646:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5387,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:28","nodeType":"VariableDeclaration","scope":5418,"src":"31661:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"},"typeName":{"id":5386,"nodeType":"UserDefinedTypeName","pathNode":{"id":5385,"name":"Rounding","nameLocations":["31661:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"31661:8:28"},"referencedDeclaration":3829,"src":"31661:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:28"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5418,"src":"31703:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:28"},"scope":5438,"src":"31630:266:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5436,"nodeType":"Block","src":"32094:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5429,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"32117:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5427,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:28","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5426,"id":5435,"nodeType":"Return","src":"32104:31:28"}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"31902:113:28","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5437,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:28","nodeType":"FunctionDefinition","parameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:28","nodeType":"VariableDeclaration","scope":5437,"src":"32046:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"},"typeName":{"id":5421,"nodeType":"UserDefinedTypeName","pathNode":{"id":5420,"name":"Rounding","nameLocations":["32046:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"32046:8:28"},"referencedDeclaration":3829,"src":"32046:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3829","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:28"},"returnParameters":{"id":5426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5437,"src":"32088:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5424,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:28"},"scope":5438,"src":"32020:122:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5439,"src":"281:31863:28","usedErrors":[],"usedEvents":[]}],"src":"103:32042:28"},"id":28},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7203]},"id":7204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5440,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"218:550:29","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7203,"linearizedBaseContracts":[7203],"name":"SafeCast","nameLocation":"777:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5442,"nodeType":"StructuredDocumentation","src":"792:68:29","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5448,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:29","nodeType":"ErrorDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"bits","nameLocation":"908:4:29","nodeType":"VariableDeclaration","scope":5448,"src":"902:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5443,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5446,"mutability":"mutable","name":"value","nameLocation":"922:5:29","nodeType":"VariableDeclaration","scope":5448,"src":"914:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:29"},"src":"865:64:29"},{"documentation":{"id":5449,"nodeType":"StructuredDocumentation","src":"935:75:29","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5453,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:29","nodeType":"ErrorDefinition","parameters":{"id":5452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5451,"mutability":"mutable","name":"value","nameLocation":"1056:5:29","nodeType":"VariableDeclaration","scope":5453,"src":"1049:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5450,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:29"},"src":"1015:48:29"},{"documentation":{"id":5454,"nodeType":"StructuredDocumentation","src":"1069:67:29","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5460,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:29","nodeType":"ErrorDefinition","parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5456,"mutability":"mutable","name":"bits","nameLocation":"1183:4:29","nodeType":"VariableDeclaration","scope":5460,"src":"1177:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5455,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5458,"mutability":"mutable","name":"value","nameLocation":"1196:5:29","nodeType":"VariableDeclaration","scope":5460,"src":"1189:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5457,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:29"},"src":"1141:62:29"},{"documentation":{"id":5461,"nodeType":"StructuredDocumentation","src":"1209:75:29","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5465,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:29","nodeType":"ErrorDefinition","parameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"value","nameLocation":"1331:5:29","nodeType":"VariableDeclaration","scope":5465,"src":"1323:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:29"},"src":"1289:49:29"},{"body":{"id":5492,"nodeType":"Block","src":"1695:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"1709:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5475,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5474,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:29","memberName":"max","nodeType":"MemberAccess","src":"1717:17:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5486,"nodeType":"IfStatement","src":"1705:105:29","trueBody":{"id":5485,"nodeType":"Block","src":"1736:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"1793:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5480,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"1757:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5484,"nodeType":"RevertStatement","src":"1750:49:29"}]}},{"expression":{"arguments":[{"id":5489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"1834:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5487,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:29","typeDescriptions":{}}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5472,"id":5491,"nodeType":"Return","src":"1819:21:29"}]},"documentation":{"id":5466,"nodeType":"StructuredDocumentation","src":"1344:280:29","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5493,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:29","nodeType":"FunctionDefinition","parameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"value","nameLocation":"1656:5:29","nodeType":"VariableDeclaration","scope":5493,"src":"1648:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:29"},"returnParameters":{"id":5472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5493,"src":"1686:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5470,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:29"},"scope":7203,"src":"1629:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5520,"nodeType":"Block","src":"2204:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"2218:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5503,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5502,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:29","memberName":"max","nodeType":"MemberAccess","src":"2226:17:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5514,"nodeType":"IfStatement","src":"2214:105:29","trueBody":{"id":5513,"nodeType":"Block","src":"2245:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"2302:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5508,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"2266:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5512,"nodeType":"RevertStatement","src":"2259:49:29"}]}},{"expression":{"arguments":[{"id":5517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"2343:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5515,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:29","typeDescriptions":{}}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5500,"id":5519,"nodeType":"Return","src":"2328:21:29"}]},"documentation":{"id":5494,"nodeType":"StructuredDocumentation","src":"1853:280:29","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5521,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:29","nodeType":"FunctionDefinition","parameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5496,"mutability":"mutable","name":"value","nameLocation":"2165:5:29","nodeType":"VariableDeclaration","scope":5521,"src":"2157:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:29"},"returnParameters":{"id":5500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5521,"src":"2195:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5498,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:29"},"scope":7203,"src":"2138:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5548,"nodeType":"Block","src":"2713:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"2727:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5531,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5530,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:29","memberName":"max","nodeType":"MemberAccess","src":"2735:17:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5542,"nodeType":"IfStatement","src":"2723:105:29","trueBody":{"id":5541,"nodeType":"Block","src":"2754:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"2811:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5536,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"2775:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5540,"nodeType":"RevertStatement","src":"2768:49:29"}]}},{"expression":{"arguments":[{"id":5545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"2852:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5543,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:29","typeDescriptions":{}}},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5528,"id":5547,"nodeType":"Return","src":"2837:21:29"}]},"documentation":{"id":5522,"nodeType":"StructuredDocumentation","src":"2362:280:29","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5549,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:29","nodeType":"FunctionDefinition","parameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"value","nameLocation":"2674:5:29","nodeType":"VariableDeclaration","scope":5549,"src":"2666:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:29"},"returnParameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5549,"src":"2704:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5526,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:29"},"scope":7203,"src":"2647:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5576,"nodeType":"Block","src":"3222:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"3236:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5559,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:29","memberName":"max","nodeType":"MemberAccess","src":"3244:17:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5570,"nodeType":"IfStatement","src":"3232:105:29","trueBody":{"id":5569,"nodeType":"Block","src":"3263:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"3320:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5564,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"3284:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5568,"nodeType":"RevertStatement","src":"3277:49:29"}]}},{"expression":{"arguments":[{"id":5573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"3361:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5571,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:29","typeDescriptions":{}}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5556,"id":5575,"nodeType":"Return","src":"3346:21:29"}]},"documentation":{"id":5550,"nodeType":"StructuredDocumentation","src":"2871:280:29","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5577,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:29","nodeType":"FunctionDefinition","parameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"value","nameLocation":"3183:5:29","nodeType":"VariableDeclaration","scope":5577,"src":"3175:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:29"},"returnParameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5577,"src":"3213:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5554,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:29"},"scope":7203,"src":"3156:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5604,"nodeType":"Block","src":"3731:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"3745:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5587,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5586,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:29","memberName":"max","nodeType":"MemberAccess","src":"3753:17:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5598,"nodeType":"IfStatement","src":"3741:105:29","trueBody":{"id":5597,"nodeType":"Block","src":"3772:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"3829:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5592,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"3793:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5596,"nodeType":"RevertStatement","src":"3786:49:29"}]}},{"expression":{"arguments":[{"id":5601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"3870:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5599,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:29","typeDescriptions":{}}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5584,"id":5603,"nodeType":"Return","src":"3855:21:29"}]},"documentation":{"id":5578,"nodeType":"StructuredDocumentation","src":"3380:280:29","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5605,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:29","nodeType":"FunctionDefinition","parameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"value","nameLocation":"3692:5:29","nodeType":"VariableDeclaration","scope":5605,"src":"3684:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:29"},"returnParameters":{"id":5584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5605,"src":"3722:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5582,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:29"},"scope":7203,"src":"3665:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5632,"nodeType":"Block","src":"4240:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"4254:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5615,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5614,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:29","memberName":"max","nodeType":"MemberAccess","src":"4262:17:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5626,"nodeType":"IfStatement","src":"4250:105:29","trueBody":{"id":5625,"nodeType":"Block","src":"4281:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"4338:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5620,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"4302:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5624,"nodeType":"RevertStatement","src":"4295:49:29"}]}},{"expression":{"arguments":[{"id":5629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"4379:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5627,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:29","typeDescriptions":{}}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5612,"id":5631,"nodeType":"Return","src":"4364:21:29"}]},"documentation":{"id":5606,"nodeType":"StructuredDocumentation","src":"3889:280:29","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5633,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:29","nodeType":"FunctionDefinition","parameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"value","nameLocation":"4201:5:29","nodeType":"VariableDeclaration","scope":5633,"src":"4193:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:29"},"returnParameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5633,"src":"4231:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5610,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:29"},"scope":7203,"src":"4174:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5660,"nodeType":"Block","src":"4749:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4763:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5643,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5642,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:29","memberName":"max","nodeType":"MemberAccess","src":"4771:17:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5654,"nodeType":"IfStatement","src":"4759:105:29","trueBody":{"id":5653,"nodeType":"Block","src":"4790:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4847:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5648,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"4811:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5652,"nodeType":"RevertStatement","src":"4804:49:29"}]}},{"expression":{"arguments":[{"id":5657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4888:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5655,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:29","typeDescriptions":{}}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5640,"id":5659,"nodeType":"Return","src":"4873:21:29"}]},"documentation":{"id":5634,"nodeType":"StructuredDocumentation","src":"4398:280:29","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5661,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:29","nodeType":"FunctionDefinition","parameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"value","nameLocation":"4710:5:29","nodeType":"VariableDeclaration","scope":5661,"src":"4702:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:29"},"returnParameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5661,"src":"4740:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5638,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:29"},"scope":7203,"src":"4683:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5688,"nodeType":"Block","src":"5258:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"5272:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5671,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5670,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:29","memberName":"max","nodeType":"MemberAccess","src":"5280:17:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5682,"nodeType":"IfStatement","src":"5268:105:29","trueBody":{"id":5681,"nodeType":"Block","src":"5299:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"5356:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5676,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"5320:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5680,"nodeType":"RevertStatement","src":"5313:49:29"}]}},{"expression":{"arguments":[{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"5397:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5683,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:29","typeDescriptions":{}}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5668,"id":5687,"nodeType":"Return","src":"5382:21:29"}]},"documentation":{"id":5662,"nodeType":"StructuredDocumentation","src":"4907:280:29","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5689,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:29","nodeType":"FunctionDefinition","parameters":{"id":5665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"value","nameLocation":"5219:5:29","nodeType":"VariableDeclaration","scope":5689,"src":"5211:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5663,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:29"},"returnParameters":{"id":5668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5689,"src":"5249:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5666,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:29"},"scope":7203,"src":"5192:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5716,"nodeType":"Block","src":"5767:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"5781:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5699,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5698,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:29","memberName":"max","nodeType":"MemberAccess","src":"5789:17:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5710,"nodeType":"IfStatement","src":"5777:105:29","trueBody":{"id":5709,"nodeType":"Block","src":"5808:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"5865:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5704,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"5829:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5708,"nodeType":"RevertStatement","src":"5822:49:29"}]}},{"expression":{"arguments":[{"id":5713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"5906:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5711,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:29","typeDescriptions":{}}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5696,"id":5715,"nodeType":"Return","src":"5891:21:29"}]},"documentation":{"id":5690,"nodeType":"StructuredDocumentation","src":"5416:280:29","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5717,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:29","nodeType":"FunctionDefinition","parameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"value","nameLocation":"5728:5:29","nodeType":"VariableDeclaration","scope":5717,"src":"5720:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:29"},"returnParameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5717,"src":"5758:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5694,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:29"},"scope":7203,"src":"5701:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5744,"nodeType":"Block","src":"6276:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"6290:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5727,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5726,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:29","memberName":"max","nodeType":"MemberAccess","src":"6298:17:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5738,"nodeType":"IfStatement","src":"6286:105:29","trueBody":{"id":5737,"nodeType":"Block","src":"6317:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"6374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5732,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"6338:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5736,"nodeType":"RevertStatement","src":"6331:49:29"}]}},{"expression":{"arguments":[{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"6415:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5739,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:29","typeDescriptions":{}}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5724,"id":5743,"nodeType":"Return","src":"6400:21:29"}]},"documentation":{"id":5718,"nodeType":"StructuredDocumentation","src":"5925:280:29","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5745,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:29","nodeType":"FunctionDefinition","parameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"value","nameLocation":"6237:5:29","nodeType":"VariableDeclaration","scope":5745,"src":"6229:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5719,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:29"},"returnParameters":{"id":5724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5745,"src":"6267:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5722,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:29"},"scope":7203,"src":"6210:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"6785:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"6799:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5755,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5754,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:29","memberName":"max","nodeType":"MemberAccess","src":"6807:17:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5766,"nodeType":"IfStatement","src":"6795:105:29","trueBody":{"id":5765,"nodeType":"Block","src":"6826:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"6883:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5760,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"6847:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5764,"nodeType":"RevertStatement","src":"6840:49:29"}]}},{"expression":{"arguments":[{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"6924:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5767,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:29","typeDescriptions":{}}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5752,"id":5771,"nodeType":"Return","src":"6909:21:29"}]},"documentation":{"id":5746,"nodeType":"StructuredDocumentation","src":"6434:280:29","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:29","nodeType":"FunctionDefinition","parameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"value","nameLocation":"6746:5:29","nodeType":"VariableDeclaration","scope":5773,"src":"6738:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:29"},"returnParameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5773,"src":"6776:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5750,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:29"},"scope":7203,"src":"6719:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5800,"nodeType":"Block","src":"7294:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"7308:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5783,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5782,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:29","memberName":"max","nodeType":"MemberAccess","src":"7316:17:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5794,"nodeType":"IfStatement","src":"7304:105:29","trueBody":{"id":5793,"nodeType":"Block","src":"7335:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"7392:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5788,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"7356:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5792,"nodeType":"RevertStatement","src":"7349:49:29"}]}},{"expression":{"arguments":[{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"7433:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5795,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:29","typeDescriptions":{}}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5780,"id":5799,"nodeType":"Return","src":"7418:21:29"}]},"documentation":{"id":5774,"nodeType":"StructuredDocumentation","src":"6943:280:29","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5801,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:29","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"value","nameLocation":"7255:5:29","nodeType":"VariableDeclaration","scope":5801,"src":"7247:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5775,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:29"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5801,"src":"7285:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5778,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:29"},"scope":7203,"src":"7228:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5828,"nodeType":"Block","src":"7803:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"7817:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5811,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5810,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:29","memberName":"max","nodeType":"MemberAccess","src":"7825:17:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5822,"nodeType":"IfStatement","src":"7813:105:29","trueBody":{"id":5821,"nodeType":"Block","src":"7844:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"7901:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5816,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"7865:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5820,"nodeType":"RevertStatement","src":"7858:49:29"}]}},{"expression":{"arguments":[{"id":5825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"7942:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5823,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:29","typeDescriptions":{}}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5808,"id":5827,"nodeType":"Return","src":"7927:21:29"}]},"documentation":{"id":5802,"nodeType":"StructuredDocumentation","src":"7452:280:29","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:29","nodeType":"FunctionDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"value","nameLocation":"7764:5:29","nodeType":"VariableDeclaration","scope":5829,"src":"7756:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5803,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:29"},"returnParameters":{"id":5808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5829,"src":"7794:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5806,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:29"},"scope":7203,"src":"7737:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5856,"nodeType":"Block","src":"8312:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"8326:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5839,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5838,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:29","memberName":"max","nodeType":"MemberAccess","src":"8334:17:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5850,"nodeType":"IfStatement","src":"8322:105:29","trueBody":{"id":5849,"nodeType":"Block","src":"8353:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"8410:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5844,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"8374:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5848,"nodeType":"RevertStatement","src":"8367:49:29"}]}},{"expression":{"arguments":[{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"8451:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5851,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:29","typeDescriptions":{}}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5836,"id":5855,"nodeType":"Return","src":"8436:21:29"}]},"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"7961:280:29","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5857,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:29","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"value","nameLocation":"8273:5:29","nodeType":"VariableDeclaration","scope":5857,"src":"8265:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5831,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:29"},"returnParameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5857,"src":"8303:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5834,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:29"},"scope":7203,"src":"8246:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5884,"nodeType":"Block","src":"8821:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"8835:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5867,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5866,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:29","memberName":"max","nodeType":"MemberAccess","src":"8843:17:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5878,"nodeType":"IfStatement","src":"8831:105:29","trueBody":{"id":5877,"nodeType":"Block","src":"8862:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"8919:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5872,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"8883:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5876,"nodeType":"RevertStatement","src":"8876:49:29"}]}},{"expression":{"arguments":[{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"8960:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5879,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:29","typeDescriptions":{}}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5864,"id":5883,"nodeType":"Return","src":"8945:21:29"}]},"documentation":{"id":5858,"nodeType":"StructuredDocumentation","src":"8470:280:29","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5885,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:29","nodeType":"FunctionDefinition","parameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"value","nameLocation":"8782:5:29","nodeType":"VariableDeclaration","scope":5885,"src":"8774:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5859,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:29"},"returnParameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5885,"src":"8812:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5862,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:29"},"scope":7203,"src":"8755:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5912,"nodeType":"Block","src":"9330:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"9344:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5895,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5894,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:29","memberName":"max","nodeType":"MemberAccess","src":"9352:17:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5906,"nodeType":"IfStatement","src":"9340:105:29","trueBody":{"id":5905,"nodeType":"Block","src":"9371:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"9428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5900,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"9392:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5904,"nodeType":"RevertStatement","src":"9385:49:29"}]}},{"expression":{"arguments":[{"id":5909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"9469:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5907,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:29","typeDescriptions":{}}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5892,"id":5911,"nodeType":"Return","src":"9454:21:29"}]},"documentation":{"id":5886,"nodeType":"StructuredDocumentation","src":"8979:280:29","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5913,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:29","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"value","nameLocation":"9291:5:29","nodeType":"VariableDeclaration","scope":5913,"src":"9283:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5887,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:29"},"returnParameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5913,"src":"9321:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5890,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:29"},"scope":7203,"src":"9264:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5940,"nodeType":"Block","src":"9839:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9853:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5923,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5922,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:29","memberName":"max","nodeType":"MemberAccess","src":"9861:17:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5934,"nodeType":"IfStatement","src":"9849:105:29","trueBody":{"id":5933,"nodeType":"Block","src":"9880:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9937:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5928,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"9901:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5932,"nodeType":"RevertStatement","src":"9894:49:29"}]}},{"expression":{"arguments":[{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9978:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5935,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:29","typeDescriptions":{}}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5920,"id":5939,"nodeType":"Return","src":"9963:21:29"}]},"documentation":{"id":5914,"nodeType":"StructuredDocumentation","src":"9488:280:29","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:29","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"value","nameLocation":"9800:5:29","nodeType":"VariableDeclaration","scope":5941,"src":"9792:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:29"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5941,"src":"9830:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5918,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:29"},"scope":7203,"src":"9773:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5968,"nodeType":"Block","src":"10348:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"10362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5951,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5950,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:29","memberName":"max","nodeType":"MemberAccess","src":"10370:17:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"nodeType":"IfStatement","src":"10358:105:29","trueBody":{"id":5961,"nodeType":"Block","src":"10389:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"10446:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5956,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"10410:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5960,"nodeType":"RevertStatement","src":"10403:49:29"}]}},{"expression":{"arguments":[{"id":5965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"10487:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5963,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:29","typeDescriptions":{}}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5948,"id":5967,"nodeType":"Return","src":"10472:21:29"}]},"documentation":{"id":5942,"nodeType":"StructuredDocumentation","src":"9997:280:29","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5969,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:29","nodeType":"FunctionDefinition","parameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"value","nameLocation":"10309:5:29","nodeType":"VariableDeclaration","scope":5969,"src":"10301:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5943,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:29"},"returnParameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5969,"src":"10339:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5946,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:29"},"scope":7203,"src":"10282:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5996,"nodeType":"Block","src":"10857:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"10871:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5979,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5978,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:29","memberName":"max","nodeType":"MemberAccess","src":"10879:17:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5990,"nodeType":"IfStatement","src":"10867:105:29","trueBody":{"id":5989,"nodeType":"Block","src":"10898:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"10955:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5984,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"10919:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5988,"nodeType":"RevertStatement","src":"10912:49:29"}]}},{"expression":{"arguments":[{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"10996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5991,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:29","typeDescriptions":{}}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5976,"id":5995,"nodeType":"Return","src":"10981:21:29"}]},"documentation":{"id":5970,"nodeType":"StructuredDocumentation","src":"10506:280:29","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5997,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:29","nodeType":"FunctionDefinition","parameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"value","nameLocation":"10818:5:29","nodeType":"VariableDeclaration","scope":5997,"src":"10810:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5971,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:29"},"returnParameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5997,"src":"10848:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5974,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:29"},"scope":7203,"src":"10791:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"11360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"11374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6007,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6006,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:29","memberName":"max","nodeType":"MemberAccess","src":"11382:16:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6018,"nodeType":"IfStatement","src":"11370:103:29","trueBody":{"id":6017,"nodeType":"Block","src":"11400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"11456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6012,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"11421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6016,"nodeType":"RevertStatement","src":"11414:48:29"}]}},{"expression":{"arguments":[{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"11496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6019,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:29","typeDescriptions":{}}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6004,"id":6023,"nodeType":"Return","src":"11482:20:29"}]},"documentation":{"id":5998,"nodeType":"StructuredDocumentation","src":"11015:276:29","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"value","nameLocation":"11322:5:29","nodeType":"VariableDeclaration","scope":6025,"src":"11314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5999,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:29"},"returnParameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6025,"src":"11352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6002,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:29"},"scope":7203,"src":"11296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6052,"nodeType":"Block","src":"11860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"11874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6035,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6034,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:29","memberName":"max","nodeType":"MemberAccess","src":"11882:16:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6046,"nodeType":"IfStatement","src":"11870:103:29","trueBody":{"id":6045,"nodeType":"Block","src":"11900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"11956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6040,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"11921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6044,"nodeType":"RevertStatement","src":"11914:48:29"}]}},{"expression":{"arguments":[{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"11996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6047,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:29","typeDescriptions":{}}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6032,"id":6051,"nodeType":"Return","src":"11982:20:29"}]},"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"11515:276:29","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"value","nameLocation":"11822:5:29","nodeType":"VariableDeclaration","scope":6053,"src":"11814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:29"},"returnParameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6053,"src":"11852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6030,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:29"},"scope":7203,"src":"11796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6080,"nodeType":"Block","src":"12360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"12374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6063,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6062,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:29","memberName":"max","nodeType":"MemberAccess","src":"12382:16:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6074,"nodeType":"IfStatement","src":"12370:103:29","trueBody":{"id":6073,"nodeType":"Block","src":"12400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"12456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6068,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"12421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6072,"nodeType":"RevertStatement","src":"12414:48:29"}]}},{"expression":{"arguments":[{"id":6077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"12496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6075,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:29","typeDescriptions":{}}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6060,"id":6079,"nodeType":"Return","src":"12482:20:29"}]},"documentation":{"id":6054,"nodeType":"StructuredDocumentation","src":"12015:276:29","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6081,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"value","nameLocation":"12322:5:29","nodeType":"VariableDeclaration","scope":6081,"src":"12314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6055,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:29"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6081,"src":"12352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6058,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:29"},"scope":7203,"src":"12296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6108,"nodeType":"Block","src":"12860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"12874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6091,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6090,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:29","memberName":"max","nodeType":"MemberAccess","src":"12882:16:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6102,"nodeType":"IfStatement","src":"12870:103:29","trueBody":{"id":6101,"nodeType":"Block","src":"12900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"12956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6096,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"12921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6100,"nodeType":"RevertStatement","src":"12914:48:29"}]}},{"expression":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"12996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6103,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:29","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6088,"id":6107,"nodeType":"Return","src":"12982:20:29"}]},"documentation":{"id":6082,"nodeType":"StructuredDocumentation","src":"12515:276:29","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"value","nameLocation":"12822:5:29","nodeType":"VariableDeclaration","scope":6109,"src":"12814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6083,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:29"},"returnParameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"12852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6086,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:29"},"scope":7203,"src":"12796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6136,"nodeType":"Block","src":"13360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"13374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6119,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6118,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:29","memberName":"max","nodeType":"MemberAccess","src":"13382:16:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6130,"nodeType":"IfStatement","src":"13370:103:29","trueBody":{"id":6129,"nodeType":"Block","src":"13400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"13456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6124,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"13421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6128,"nodeType":"RevertStatement","src":"13414:48:29"}]}},{"expression":{"arguments":[{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"13496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6131,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:29","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6116,"id":6135,"nodeType":"Return","src":"13482:20:29"}]},"documentation":{"id":6110,"nodeType":"StructuredDocumentation","src":"13015:276:29","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6137,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"value","nameLocation":"13322:5:29","nodeType":"VariableDeclaration","scope":6137,"src":"13314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6111,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:29"},"returnParameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6137,"src":"13352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6114,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:29"},"scope":7203,"src":"13296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6164,"nodeType":"Block","src":"13860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"13874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6147,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6146,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:29","memberName":"max","nodeType":"MemberAccess","src":"13882:16:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6158,"nodeType":"IfStatement","src":"13870:103:29","trueBody":{"id":6157,"nodeType":"Block","src":"13900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"13956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6152,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"13921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6156,"nodeType":"RevertStatement","src":"13914:48:29"}]}},{"expression":{"arguments":[{"id":6161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"13996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6159,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:29","typeDescriptions":{}}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6144,"id":6163,"nodeType":"Return","src":"13982:20:29"}]},"documentation":{"id":6138,"nodeType":"StructuredDocumentation","src":"13515:276:29","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6165,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"value","nameLocation":"13822:5:29","nodeType":"VariableDeclaration","scope":6165,"src":"13814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6139,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:29"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6165,"src":"13852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6142,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:29"},"scope":7203,"src":"13796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"14360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"14374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6175,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:29","memberName":"max","nodeType":"MemberAccess","src":"14382:16:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6186,"nodeType":"IfStatement","src":"14370:103:29","trueBody":{"id":6185,"nodeType":"Block","src":"14400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"14456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6180,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"14421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6184,"nodeType":"RevertStatement","src":"14414:48:29"}]}},{"expression":{"arguments":[{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"14496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6187,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:29","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6172,"id":6191,"nodeType":"Return","src":"14482:20:29"}]},"documentation":{"id":6166,"nodeType":"StructuredDocumentation","src":"14015:276:29","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"value","nameLocation":"14322:5:29","nodeType":"VariableDeclaration","scope":6193,"src":"14314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:29"},"returnParameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6193,"src":"14352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6170,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:29"},"scope":7203,"src":"14296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6220,"nodeType":"Block","src":"14860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"14874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6203,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:29","memberName":"max","nodeType":"MemberAccess","src":"14882:16:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6214,"nodeType":"IfStatement","src":"14870:103:29","trueBody":{"id":6213,"nodeType":"Block","src":"14900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"14956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6208,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"14921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6212,"nodeType":"RevertStatement","src":"14914:48:29"}]}},{"expression":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"14996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6215,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:29","typeDescriptions":{}}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6200,"id":6219,"nodeType":"Return","src":"14982:20:29"}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"14515:276:29","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6221,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"value","nameLocation":"14822:5:29","nodeType":"VariableDeclaration","scope":6221,"src":"14814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6195,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:29"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6221,"src":"14852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6198,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:29"},"scope":7203,"src":"14796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6248,"nodeType":"Block","src":"15360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"15374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6231,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6230,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:29","memberName":"max","nodeType":"MemberAccess","src":"15382:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6242,"nodeType":"IfStatement","src":"15370:103:29","trueBody":{"id":6241,"nodeType":"Block","src":"15400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"15456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6236,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"15421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6240,"nodeType":"RevertStatement","src":"15414:48:29"}]}},{"expression":{"arguments":[{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"15496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6243,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:29","typeDescriptions":{}}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6228,"id":6247,"nodeType":"Return","src":"15482:20:29"}]},"documentation":{"id":6222,"nodeType":"StructuredDocumentation","src":"15015:276:29","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6249,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"value","nameLocation":"15322:5:29","nodeType":"VariableDeclaration","scope":6249,"src":"15314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:29"},"returnParameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6249,"src":"15352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6226,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:29"},"scope":7203,"src":"15296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"15860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"15874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6259,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:29","memberName":"max","nodeType":"MemberAccess","src":"15882:16:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6270,"nodeType":"IfStatement","src":"15870:103:29","trueBody":{"id":6269,"nodeType":"Block","src":"15900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"15956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6264,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"15921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6268,"nodeType":"RevertStatement","src":"15914:48:29"}]}},{"expression":{"arguments":[{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"15996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6271,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:29","typeDescriptions":{}}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6256,"id":6275,"nodeType":"Return","src":"15982:20:29"}]},"documentation":{"id":6250,"nodeType":"StructuredDocumentation","src":"15515:276:29","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"value","nameLocation":"15822:5:29","nodeType":"VariableDeclaration","scope":6277,"src":"15814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6251,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:29"},"returnParameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6277,"src":"15852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6254,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:29"},"scope":7203,"src":"15796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6304,"nodeType":"Block","src":"16360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"16374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6287,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:29","memberName":"max","nodeType":"MemberAccess","src":"16382:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6298,"nodeType":"IfStatement","src":"16370:103:29","trueBody":{"id":6297,"nodeType":"Block","src":"16400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"16456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6292,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"16421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6296,"nodeType":"RevertStatement","src":"16414:48:29"}]}},{"expression":{"arguments":[{"id":6301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"16496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6299,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:29","typeDescriptions":{}}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6284,"id":6303,"nodeType":"Return","src":"16482:20:29"}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"16015:276:29","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6305,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"value","nameLocation":"16322:5:29","nodeType":"VariableDeclaration","scope":6305,"src":"16314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:29"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6305,"src":"16352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6282,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:29"},"scope":7203,"src":"16296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6332,"nodeType":"Block","src":"16854:146:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"16868:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6315,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6314,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:29","memberName":"max","nodeType":"MemberAccess","src":"16876:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6326,"nodeType":"IfStatement","src":"16864:101:29","trueBody":{"id":6325,"nodeType":"Block","src":"16893:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"16948:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6320,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"16914:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6324,"nodeType":"RevertStatement","src":"16907:47:29"}]}},{"expression":{"arguments":[{"id":6329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"16987:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6327,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:29","typeDescriptions":{}}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6312,"id":6331,"nodeType":"Return","src":"16974:19:29"}]},"documentation":{"id":6306,"nodeType":"StructuredDocumentation","src":"16515:272:29","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6333,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:29","nodeType":"FunctionDefinition","parameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"value","nameLocation":"16817:5:29","nodeType":"VariableDeclaration","scope":6333,"src":"16809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:29"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6333,"src":"16847:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6310,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:29"},"scope":7203,"src":"16792:208:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6355,"nodeType":"Block","src":"17236:128:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"17250:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6349,"nodeType":"IfStatement","src":"17246:81:29","trueBody":{"id":6348,"nodeType":"Block","src":"17261:66:29","statements":[{"errorCall":{"arguments":[{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"17310:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6344,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"17282:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6347,"nodeType":"RevertStatement","src":"17275:41:29"}]}},{"expression":{"arguments":[{"id":6352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"17351:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6350,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:29","typeDescriptions":{}}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6340,"id":6354,"nodeType":"Return","src":"17336:21:29"}]},"documentation":{"id":6334,"nodeType":"StructuredDocumentation","src":"17006:160:29","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6356,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:29","nodeType":"FunctionDefinition","parameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"value","nameLocation":"17197:5:29","nodeType":"VariableDeclaration","scope":6356,"src":"17190:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6335,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:29"},"returnParameters":{"id":6340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6356,"src":"17227:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6338,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:29"},"scope":7203,"src":"17171:193:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6381,"nodeType":"Block","src":"17761:150:29","statements":[{"expression":{"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6364,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"17771:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"17791:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6365,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:29","typeDescriptions":{}}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6370,"nodeType":"ExpressionStatement","src":"17771:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"17811:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"17825:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6380,"nodeType":"IfStatement","src":"17807:98:29","trueBody":{"id":6379,"nodeType":"Block","src":"17832:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"17888:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6374,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"17853:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6378,"nodeType":"RevertStatement","src":"17846:48:29"}]}}]},"documentation":{"id":6357,"nodeType":"StructuredDocumentation","src":"17370:312:29","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6382,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:29","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"value","nameLocation":"17712:5:29","nodeType":"VariableDeclaration","scope":6382,"src":"17705:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6358,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:29"},"returnParameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:29","nodeType":"VariableDeclaration","scope":6382,"src":"17742:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6361,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:29"},"scope":7203,"src":"17687:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6407,"nodeType":"Block","src":"18308:150:29","statements":[{"expression":{"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6390,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"18318:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"18338:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6391,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:29","typeDescriptions":{}}},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6396,"nodeType":"ExpressionStatement","src":"18318:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"18358:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"18372:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6406,"nodeType":"IfStatement","src":"18354:98:29","trueBody":{"id":6405,"nodeType":"Block","src":"18379:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"18435:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6400,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"18400:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6404,"nodeType":"RevertStatement","src":"18393:48:29"}]}}]},"documentation":{"id":6383,"nodeType":"StructuredDocumentation","src":"17917:312:29","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6408,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:29","nodeType":"FunctionDefinition","parameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"value","nameLocation":"18259:5:29","nodeType":"VariableDeclaration","scope":6408,"src":"18252:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6384,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:29"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:29","nodeType":"VariableDeclaration","scope":6408,"src":"18289:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6387,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:29"},"scope":7203,"src":"18234:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6433,"nodeType":"Block","src":"18855:150:29","statements":[{"expression":{"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6416,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"18865:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"18885:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6417,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:29","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6422,"nodeType":"ExpressionStatement","src":"18865:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"18905:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"18919:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6432,"nodeType":"IfStatement","src":"18901:98:29","trueBody":{"id":6431,"nodeType":"Block","src":"18926:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"18982:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6426,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"18947:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6430,"nodeType":"RevertStatement","src":"18940:48:29"}]}}]},"documentation":{"id":6409,"nodeType":"StructuredDocumentation","src":"18464:312:29","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6434,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:29","nodeType":"FunctionDefinition","parameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"value","nameLocation":"18806:5:29","nodeType":"VariableDeclaration","scope":6434,"src":"18799:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6410,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:29"},"returnParameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:29","nodeType":"VariableDeclaration","scope":6434,"src":"18836:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6413,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:29"},"scope":7203,"src":"18781:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6459,"nodeType":"Block","src":"19402:150:29","statements":[{"expression":{"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"19412:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"19432:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6443,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:29","typeDescriptions":{}}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6448,"nodeType":"ExpressionStatement","src":"19412:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"19452:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"19466:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6458,"nodeType":"IfStatement","src":"19448:98:29","trueBody":{"id":6457,"nodeType":"Block","src":"19473:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"19529:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6452,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"19494:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6456,"nodeType":"RevertStatement","src":"19487:48:29"}]}}]},"documentation":{"id":6435,"nodeType":"StructuredDocumentation","src":"19011:312:29","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6460,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:29","nodeType":"FunctionDefinition","parameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"value","nameLocation":"19353:5:29","nodeType":"VariableDeclaration","scope":6460,"src":"19346:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6436,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:29"},"returnParameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:29","nodeType":"VariableDeclaration","scope":6460,"src":"19383:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6439,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:29"},"scope":7203,"src":"19328:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6485,"nodeType":"Block","src":"19949:150:29","statements":[{"expression":{"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"19959:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"19979:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6469,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:29","typeDescriptions":{}}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6474,"nodeType":"ExpressionStatement","src":"19959:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"19999:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"20013:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6484,"nodeType":"IfStatement","src":"19995:98:29","trueBody":{"id":6483,"nodeType":"Block","src":"20020:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"20076:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6478,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"20041:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6482,"nodeType":"RevertStatement","src":"20034:48:29"}]}}]},"documentation":{"id":6461,"nodeType":"StructuredDocumentation","src":"19558:312:29","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6486,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:29","nodeType":"FunctionDefinition","parameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"value","nameLocation":"19900:5:29","nodeType":"VariableDeclaration","scope":6486,"src":"19893:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6462,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:29"},"returnParameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:29","nodeType":"VariableDeclaration","scope":6486,"src":"19930:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6465,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:29"},"scope":7203,"src":"19875:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6511,"nodeType":"Block","src":"20496:150:29","statements":[{"expression":{"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"20506:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"20526:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6495,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:29","typeDescriptions":{}}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6500,"nodeType":"ExpressionStatement","src":"20506:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"20546:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"20560:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6510,"nodeType":"IfStatement","src":"20542:98:29","trueBody":{"id":6509,"nodeType":"Block","src":"20567:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"20623:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6504,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"20588:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6508,"nodeType":"RevertStatement","src":"20581:48:29"}]}}]},"documentation":{"id":6487,"nodeType":"StructuredDocumentation","src":"20105:312:29","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6512,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:29","nodeType":"FunctionDefinition","parameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"value","nameLocation":"20447:5:29","nodeType":"VariableDeclaration","scope":6512,"src":"20440:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6488,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:29"},"returnParameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:29","nodeType":"VariableDeclaration","scope":6512,"src":"20477:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6491,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:29"},"scope":7203,"src":"20422:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6537,"nodeType":"Block","src":"21043:150:29","statements":[{"expression":{"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"21053:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"21073:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6521,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:29","typeDescriptions":{}}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6526,"nodeType":"ExpressionStatement","src":"21053:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"21093:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"21107:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6536,"nodeType":"IfStatement","src":"21089:98:29","trueBody":{"id":6535,"nodeType":"Block","src":"21114:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"21170:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6530,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"21135:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6534,"nodeType":"RevertStatement","src":"21128:48:29"}]}}]},"documentation":{"id":6513,"nodeType":"StructuredDocumentation","src":"20652:312:29","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6538,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:29","nodeType":"FunctionDefinition","parameters":{"id":6516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"value","nameLocation":"20994:5:29","nodeType":"VariableDeclaration","scope":6538,"src":"20987:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6514,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:29"},"returnParameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6518,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:29","nodeType":"VariableDeclaration","scope":6538,"src":"21024:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6517,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:29"},"scope":7203,"src":"20969:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6563,"nodeType":"Block","src":"21590:150:29","statements":[{"expression":{"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"21600:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"21620:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6547,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:29","typeDescriptions":{}}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6552,"nodeType":"ExpressionStatement","src":"21600:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"21640:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"21654:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6562,"nodeType":"IfStatement","src":"21636:98:29","trueBody":{"id":6561,"nodeType":"Block","src":"21661:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"21717:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6556,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"21682:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6560,"nodeType":"RevertStatement","src":"21675:48:29"}]}}]},"documentation":{"id":6539,"nodeType":"StructuredDocumentation","src":"21199:312:29","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6564,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:29","nodeType":"FunctionDefinition","parameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"value","nameLocation":"21541:5:29","nodeType":"VariableDeclaration","scope":6564,"src":"21534:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6540,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:29"},"returnParameters":{"id":6545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:29","nodeType":"VariableDeclaration","scope":6564,"src":"21571:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6543,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:29"},"scope":7203,"src":"21516:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6589,"nodeType":"Block","src":"22137:150:29","statements":[{"expression":{"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"22147:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22167:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6573,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:29","typeDescriptions":{}}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6578,"nodeType":"ExpressionStatement","src":"22147:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"22187:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22201:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6588,"nodeType":"IfStatement","src":"22183:98:29","trueBody":{"id":6587,"nodeType":"Block","src":"22208:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"22264:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6582,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"22229:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6586,"nodeType":"RevertStatement","src":"22222:48:29"}]}}]},"documentation":{"id":6565,"nodeType":"StructuredDocumentation","src":"21746:312:29","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6590,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:29","nodeType":"FunctionDefinition","parameters":{"id":6568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"mutability":"mutable","name":"value","nameLocation":"22088:5:29","nodeType":"VariableDeclaration","scope":6590,"src":"22081:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6566,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:29"},"returnParameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:29","nodeType":"VariableDeclaration","scope":6590,"src":"22118:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6569,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:29"},"scope":7203,"src":"22063:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6615,"nodeType":"Block","src":"22684:150:29","statements":[{"expression":{"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"22694:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"22714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6599,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:29","typeDescriptions":{}}},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6604,"nodeType":"ExpressionStatement","src":"22694:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"22734:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"22748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6614,"nodeType":"IfStatement","src":"22730:98:29","trueBody":{"id":6613,"nodeType":"Block","src":"22755:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"22811:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6608,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"22776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6612,"nodeType":"RevertStatement","src":"22769:48:29"}]}}]},"documentation":{"id":6591,"nodeType":"StructuredDocumentation","src":"22293:312:29","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6616,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:29","nodeType":"FunctionDefinition","parameters":{"id":6594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6593,"mutability":"mutable","name":"value","nameLocation":"22635:5:29","nodeType":"VariableDeclaration","scope":6616,"src":"22628:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6592,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:29"},"returnParameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6596,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:29","nodeType":"VariableDeclaration","scope":6616,"src":"22665:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6595,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:29"},"scope":7203,"src":"22610:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6641,"nodeType":"Block","src":"23231:150:29","statements":[{"expression":{"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"23241:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"23261:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6625,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:29","typeDescriptions":{}}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6630,"nodeType":"ExpressionStatement","src":"23241:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"23281:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"23295:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6640,"nodeType":"IfStatement","src":"23277:98:29","trueBody":{"id":6639,"nodeType":"Block","src":"23302:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"23358:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6634,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"23323:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6638,"nodeType":"RevertStatement","src":"23316:48:29"}]}}]},"documentation":{"id":6617,"nodeType":"StructuredDocumentation","src":"22840:312:29","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6642,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:29","nodeType":"FunctionDefinition","parameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"value","nameLocation":"23182:5:29","nodeType":"VariableDeclaration","scope":6642,"src":"23175:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6618,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:29"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:29","nodeType":"VariableDeclaration","scope":6642,"src":"23212:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6621,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:29"},"scope":7203,"src":"23157:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6667,"nodeType":"Block","src":"23778:150:29","statements":[{"expression":{"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"23788:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"23808:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6651,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:29","typeDescriptions":{}}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6656,"nodeType":"ExpressionStatement","src":"23788:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"23828:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"23842:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6666,"nodeType":"IfStatement","src":"23824:98:29","trueBody":{"id":6665,"nodeType":"Block","src":"23849:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"23905:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6660,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"23870:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6664,"nodeType":"RevertStatement","src":"23863:48:29"}]}}]},"documentation":{"id":6643,"nodeType":"StructuredDocumentation","src":"23387:312:29","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6668,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:29","nodeType":"FunctionDefinition","parameters":{"id":6646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6645,"mutability":"mutable","name":"value","nameLocation":"23729:5:29","nodeType":"VariableDeclaration","scope":6668,"src":"23722:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6644,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:29"},"returnParameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:29","nodeType":"VariableDeclaration","scope":6668,"src":"23759:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6647,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:29"},"scope":7203,"src":"23704:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6693,"nodeType":"Block","src":"24325:150:29","statements":[{"expression":{"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"24335:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"24355:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6677,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:29","typeDescriptions":{}}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6682,"nodeType":"ExpressionStatement","src":"24335:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"24375:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"24389:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6692,"nodeType":"IfStatement","src":"24371:98:29","trueBody":{"id":6691,"nodeType":"Block","src":"24396:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"24452:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6686,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"24417:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6690,"nodeType":"RevertStatement","src":"24410:48:29"}]}}]},"documentation":{"id":6669,"nodeType":"StructuredDocumentation","src":"23934:312:29","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6694,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:29","nodeType":"FunctionDefinition","parameters":{"id":6672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6671,"mutability":"mutable","name":"value","nameLocation":"24276:5:29","nodeType":"VariableDeclaration","scope":6694,"src":"24269:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6670,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:29"},"returnParameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:29","nodeType":"VariableDeclaration","scope":6694,"src":"24306:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6673,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:29"},"scope":7203,"src":"24251:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6719,"nodeType":"Block","src":"24872:150:29","statements":[{"expression":{"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"24882:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"24902:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6703,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:29","typeDescriptions":{}}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6708,"nodeType":"ExpressionStatement","src":"24882:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"24922:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"24936:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6718,"nodeType":"IfStatement","src":"24918:98:29","trueBody":{"id":6717,"nodeType":"Block","src":"24943:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"24999:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6712,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"24964:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6716,"nodeType":"RevertStatement","src":"24957:48:29"}]}}]},"documentation":{"id":6695,"nodeType":"StructuredDocumentation","src":"24481:312:29","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6720,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:29","nodeType":"FunctionDefinition","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6697,"mutability":"mutable","name":"value","nameLocation":"24823:5:29","nodeType":"VariableDeclaration","scope":6720,"src":"24816:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6696,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:29"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:29","nodeType":"VariableDeclaration","scope":6720,"src":"24853:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6699,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:29"},"scope":7203,"src":"24798:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6745,"nodeType":"Block","src":"25419:150:29","statements":[{"expression":{"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"25429:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"25449:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6729,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:29","typeDescriptions":{}}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6734,"nodeType":"ExpressionStatement","src":"25429:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"25469:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"25483:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6744,"nodeType":"IfStatement","src":"25465:98:29","trueBody":{"id":6743,"nodeType":"Block","src":"25490:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"25546:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6738,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"25511:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6742,"nodeType":"RevertStatement","src":"25504:48:29"}]}}]},"documentation":{"id":6721,"nodeType":"StructuredDocumentation","src":"25028:312:29","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6746,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:29","nodeType":"FunctionDefinition","parameters":{"id":6724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6723,"mutability":"mutable","name":"value","nameLocation":"25370:5:29","nodeType":"VariableDeclaration","scope":6746,"src":"25363:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6722,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:29"},"returnParameters":{"id":6727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6726,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:29","nodeType":"VariableDeclaration","scope":6746,"src":"25400:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6725,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:29"},"scope":7203,"src":"25345:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6771,"nodeType":"Block","src":"25966:150:29","statements":[{"expression":{"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"25976:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"25996:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6755,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:29","typeDescriptions":{}}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6760,"nodeType":"ExpressionStatement","src":"25976:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"26016:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"26030:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6770,"nodeType":"IfStatement","src":"26012:98:29","trueBody":{"id":6769,"nodeType":"Block","src":"26037:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"26093:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6764,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"26058:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6768,"nodeType":"RevertStatement","src":"26051:48:29"}]}}]},"documentation":{"id":6747,"nodeType":"StructuredDocumentation","src":"25575:312:29","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6772,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:29","nodeType":"FunctionDefinition","parameters":{"id":6750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"value","nameLocation":"25917:5:29","nodeType":"VariableDeclaration","scope":6772,"src":"25910:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6748,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:29"},"returnParameters":{"id":6753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:29","nodeType":"VariableDeclaration","scope":6772,"src":"25947:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6751,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:29"},"scope":7203,"src":"25892:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6797,"nodeType":"Block","src":"26513:150:29","statements":[{"expression":{"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"26523:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"26543:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6781,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:29","typeDescriptions":{}}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6786,"nodeType":"ExpressionStatement","src":"26523:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"26563:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"26577:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6796,"nodeType":"IfStatement","src":"26559:98:29","trueBody":{"id":6795,"nodeType":"Block","src":"26584:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"26640:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6790,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"26605:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6794,"nodeType":"RevertStatement","src":"26598:48:29"}]}}]},"documentation":{"id":6773,"nodeType":"StructuredDocumentation","src":"26122:312:29","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6798,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:29","nodeType":"FunctionDefinition","parameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"value","nameLocation":"26464:5:29","nodeType":"VariableDeclaration","scope":6798,"src":"26457:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6774,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:29"},"returnParameters":{"id":6779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6778,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:29","nodeType":"VariableDeclaration","scope":6798,"src":"26494:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6777,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:29"},"scope":7203,"src":"26439:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6823,"nodeType":"Block","src":"27060:150:29","statements":[{"expression":{"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"27070:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"27090:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6807,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:29","typeDescriptions":{}}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6812,"nodeType":"ExpressionStatement","src":"27070:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"27110:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"27124:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6822,"nodeType":"IfStatement","src":"27106:98:29","trueBody":{"id":6821,"nodeType":"Block","src":"27131:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"27187:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6816,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"27152:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6820,"nodeType":"RevertStatement","src":"27145:48:29"}]}}]},"documentation":{"id":6799,"nodeType":"StructuredDocumentation","src":"26669:312:29","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6824,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:29","nodeType":"FunctionDefinition","parameters":{"id":6802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6801,"mutability":"mutable","name":"value","nameLocation":"27011:5:29","nodeType":"VariableDeclaration","scope":6824,"src":"27004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6800,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:29"},"returnParameters":{"id":6805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6804,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:29","nodeType":"VariableDeclaration","scope":6824,"src":"27041:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6803,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:29"},"scope":7203,"src":"26986:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6849,"nodeType":"Block","src":"27607:150:29","statements":[{"expression":{"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"27617:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"27637:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6833,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:29","typeDescriptions":{}}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6838,"nodeType":"ExpressionStatement","src":"27617:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"27657:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"27671:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6848,"nodeType":"IfStatement","src":"27653:98:29","trueBody":{"id":6847,"nodeType":"Block","src":"27678:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"27734:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6842,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"27699:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6846,"nodeType":"RevertStatement","src":"27692:48:29"}]}}]},"documentation":{"id":6825,"nodeType":"StructuredDocumentation","src":"27216:312:29","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6850,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:29","nodeType":"FunctionDefinition","parameters":{"id":6828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6827,"mutability":"mutable","name":"value","nameLocation":"27558:5:29","nodeType":"VariableDeclaration","scope":6850,"src":"27551:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6826,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:29"},"returnParameters":{"id":6831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6830,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:29","nodeType":"VariableDeclaration","scope":6850,"src":"27588:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6829,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:29"},"scope":7203,"src":"27533:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6875,"nodeType":"Block","src":"28147:148:29","statements":[{"expression":{"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"28157:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"28176:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6859,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:29","typeDescriptions":{}}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6864,"nodeType":"ExpressionStatement","src":"28157:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"28196:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"28210:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6874,"nodeType":"IfStatement","src":"28192:97:29","trueBody":{"id":6873,"nodeType":"Block","src":"28217:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"28272:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6868,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"28238:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6872,"nodeType":"RevertStatement","src":"28231:47:29"}]}}]},"documentation":{"id":6851,"nodeType":"StructuredDocumentation","src":"27763:307:29","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6876,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:29","nodeType":"FunctionDefinition","parameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"value","nameLocation":"28099:5:29","nodeType":"VariableDeclaration","scope":6876,"src":"28092:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6852,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:29"},"returnParameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:29","nodeType":"VariableDeclaration","scope":6876,"src":"28129:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6855,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:29"},"scope":7203,"src":"28075:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6901,"nodeType":"Block","src":"28685:148:29","statements":[{"expression":{"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"28695:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"28714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6885,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:29","typeDescriptions":{}}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6890,"nodeType":"ExpressionStatement","src":"28695:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"28734:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"28748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6900,"nodeType":"IfStatement","src":"28730:97:29","trueBody":{"id":6899,"nodeType":"Block","src":"28755:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"28810:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6894,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"28776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6898,"nodeType":"RevertStatement","src":"28769:47:29"}]}}]},"documentation":{"id":6877,"nodeType":"StructuredDocumentation","src":"28301:307:29","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6902,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:29","nodeType":"FunctionDefinition","parameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"value","nameLocation":"28637:5:29","nodeType":"VariableDeclaration","scope":6902,"src":"28630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6878,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:29"},"returnParameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:29","nodeType":"VariableDeclaration","scope":6902,"src":"28667:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6881,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:29"},"scope":7203,"src":"28613:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6927,"nodeType":"Block","src":"29223:148:29","statements":[{"expression":{"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"29233:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"29252:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6911,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:29","typeDescriptions":{}}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6916,"nodeType":"ExpressionStatement","src":"29233:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"29272:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"29286:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6926,"nodeType":"IfStatement","src":"29268:97:29","trueBody":{"id":6925,"nodeType":"Block","src":"29293:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"29348:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6920,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"29314:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6924,"nodeType":"RevertStatement","src":"29307:47:29"}]}}]},"documentation":{"id":6903,"nodeType":"StructuredDocumentation","src":"28839:307:29","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6928,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:29","nodeType":"FunctionDefinition","parameters":{"id":6906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"value","nameLocation":"29175:5:29","nodeType":"VariableDeclaration","scope":6928,"src":"29168:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6904,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:29"},"returnParameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:29","nodeType":"VariableDeclaration","scope":6928,"src":"29205:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6907,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:29"},"scope":7203,"src":"29151:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6953,"nodeType":"Block","src":"29761:148:29","statements":[{"expression":{"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"29771:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"29790:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6937,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:29","typeDescriptions":{}}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6942,"nodeType":"ExpressionStatement","src":"29771:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"29810:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"29824:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6952,"nodeType":"IfStatement","src":"29806:97:29","trueBody":{"id":6951,"nodeType":"Block","src":"29831:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"29886:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6946,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"29852:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6950,"nodeType":"RevertStatement","src":"29845:47:29"}]}}]},"documentation":{"id":6929,"nodeType":"StructuredDocumentation","src":"29377:307:29","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6954,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:29","nodeType":"FunctionDefinition","parameters":{"id":6932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6931,"mutability":"mutable","name":"value","nameLocation":"29713:5:29","nodeType":"VariableDeclaration","scope":6954,"src":"29706:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6930,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:29"},"returnParameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:29","nodeType":"VariableDeclaration","scope":6954,"src":"29743:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6933,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:29"},"scope":7203,"src":"29689:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6979,"nodeType":"Block","src":"30299:148:29","statements":[{"expression":{"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"30309:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"30328:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6963,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:29","typeDescriptions":{}}},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6968,"nodeType":"ExpressionStatement","src":"30309:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"30348:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"30362:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6978,"nodeType":"IfStatement","src":"30344:97:29","trueBody":{"id":6977,"nodeType":"Block","src":"30369:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"30424:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6972,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"30390:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6976,"nodeType":"RevertStatement","src":"30383:47:29"}]}}]},"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"29915:307:29","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6980,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:29","nodeType":"FunctionDefinition","parameters":{"id":6958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"value","nameLocation":"30251:5:29","nodeType":"VariableDeclaration","scope":6980,"src":"30244:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6956,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:29"},"returnParameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:29","nodeType":"VariableDeclaration","scope":6980,"src":"30281:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6959,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:29"},"scope":7203,"src":"30227:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7005,"nodeType":"Block","src":"30837:148:29","statements":[{"expression":{"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"30847:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"30866:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6989,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:29","typeDescriptions":{}}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6994,"nodeType":"ExpressionStatement","src":"30847:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"30886:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"30900:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7004,"nodeType":"IfStatement","src":"30882:97:29","trueBody":{"id":7003,"nodeType":"Block","src":"30907:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"30962:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6998,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"30928:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7002,"nodeType":"RevertStatement","src":"30921:47:29"}]}}]},"documentation":{"id":6981,"nodeType":"StructuredDocumentation","src":"30453:307:29","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:29","nodeType":"FunctionDefinition","parameters":{"id":6984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6983,"mutability":"mutable","name":"value","nameLocation":"30789:5:29","nodeType":"VariableDeclaration","scope":7006,"src":"30782:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6982,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:29"},"returnParameters":{"id":6987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6986,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:29","nodeType":"VariableDeclaration","scope":7006,"src":"30819:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6985,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:29"},"scope":7203,"src":"30765:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7031,"nodeType":"Block","src":"31375:148:29","statements":[{"expression":{"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"31385:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"31404:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7015,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:29","typeDescriptions":{}}},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7020,"nodeType":"ExpressionStatement","src":"31385:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"31424:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"31438:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7030,"nodeType":"IfStatement","src":"31420:97:29","trueBody":{"id":7029,"nodeType":"Block","src":"31445:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"31500:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"31466:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7028,"nodeType":"RevertStatement","src":"31459:47:29"}]}}]},"documentation":{"id":7007,"nodeType":"StructuredDocumentation","src":"30991:307:29","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:29","nodeType":"FunctionDefinition","parameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"value","nameLocation":"31327:5:29","nodeType":"VariableDeclaration","scope":7032,"src":"31320:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7008,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:29"},"returnParameters":{"id":7013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7012,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:29","nodeType":"VariableDeclaration","scope":7032,"src":"31357:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7011,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:29"},"scope":7203,"src":"31303:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7057,"nodeType":"Block","src":"31913:148:29","statements":[{"expression":{"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"31923:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"31942:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7041,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:29","typeDescriptions":{}}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7046,"nodeType":"ExpressionStatement","src":"31923:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"31962:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"31976:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7056,"nodeType":"IfStatement","src":"31958:97:29","trueBody":{"id":7055,"nodeType":"Block","src":"31983:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"32038:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"32004:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7054,"nodeType":"RevertStatement","src":"31997:47:29"}]}}]},"documentation":{"id":7033,"nodeType":"StructuredDocumentation","src":"31529:307:29","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:29","nodeType":"FunctionDefinition","parameters":{"id":7036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"value","nameLocation":"31865:5:29","nodeType":"VariableDeclaration","scope":7058,"src":"31858:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7034,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:29"},"returnParameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:29","nodeType":"VariableDeclaration","scope":7058,"src":"31895:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7037,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:29"},"scope":7203,"src":"31841:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7083,"nodeType":"Block","src":"32451:148:29","statements":[{"expression":{"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"32461:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"32480:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7067,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:29","typeDescriptions":{}}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7072,"nodeType":"ExpressionStatement","src":"32461:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"32500:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"32514:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7082,"nodeType":"IfStatement","src":"32496:97:29","trueBody":{"id":7081,"nodeType":"Block","src":"32521:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"32576:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"32542:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7080,"nodeType":"RevertStatement","src":"32535:47:29"}]}}]},"documentation":{"id":7059,"nodeType":"StructuredDocumentation","src":"32067:307:29","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:29","nodeType":"FunctionDefinition","parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7061,"mutability":"mutable","name":"value","nameLocation":"32403:5:29","nodeType":"VariableDeclaration","scope":7084,"src":"32396:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7060,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:29"},"returnParameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:29","nodeType":"VariableDeclaration","scope":7084,"src":"32433:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7063,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:29"},"scope":7203,"src":"32379:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7109,"nodeType":"Block","src":"32989:148:29","statements":[{"expression":{"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"32999:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"33018:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7093,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:29","typeDescriptions":{}}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7098,"nodeType":"ExpressionStatement","src":"32999:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"33038:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"33052:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7108,"nodeType":"IfStatement","src":"33034:97:29","trueBody":{"id":7107,"nodeType":"Block","src":"33059:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"33114:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"33080:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7106,"nodeType":"RevertStatement","src":"33073:47:29"}]}}]},"documentation":{"id":7085,"nodeType":"StructuredDocumentation","src":"32605:307:29","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:29","nodeType":"FunctionDefinition","parameters":{"id":7088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7087,"mutability":"mutable","name":"value","nameLocation":"32941:5:29","nodeType":"VariableDeclaration","scope":7110,"src":"32934:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7086,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:29"},"returnParameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:29","nodeType":"VariableDeclaration","scope":7110,"src":"32971:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7089,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:29"},"scope":7203,"src":"32917:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7135,"nodeType":"Block","src":"33527:148:29","statements":[{"expression":{"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"33537:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"33556:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7119,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:29","typeDescriptions":{}}},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7124,"nodeType":"ExpressionStatement","src":"33537:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"33576:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"33590:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7134,"nodeType":"IfStatement","src":"33572:97:29","trueBody":{"id":7133,"nodeType":"Block","src":"33597:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"33652:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"33618:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7132,"nodeType":"RevertStatement","src":"33611:47:29"}]}}]},"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"33143:307:29","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:29","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"value","nameLocation":"33479:5:29","nodeType":"VariableDeclaration","scope":7136,"src":"33472:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7112,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:29"},"returnParameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:29","nodeType":"VariableDeclaration","scope":7136,"src":"33509:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7115,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:29"},"scope":7203,"src":"33455:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7161,"nodeType":"Block","src":"34058:146:29","statements":[{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"34068:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"34086:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7145,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:29","typeDescriptions":{}}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7150,"nodeType":"ExpressionStatement","src":"34068:24:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"34106:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"34120:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7160,"nodeType":"IfStatement","src":"34102:96:29","trueBody":{"id":7159,"nodeType":"Block","src":"34127:71:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"34181:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"34148:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7158,"nodeType":"RevertStatement","src":"34141:46:29"}]}}]},"documentation":{"id":7137,"nodeType":"StructuredDocumentation","src":"33681:302:29","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:29","nodeType":"FunctionDefinition","parameters":{"id":7140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7139,"mutability":"mutable","name":"value","nameLocation":"34011:5:29","nodeType":"VariableDeclaration","scope":7162,"src":"34004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7138,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:29"},"returnParameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7142,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:29","nodeType":"VariableDeclaration","scope":7162,"src":"34041:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7141,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:29"},"scope":7203,"src":"33988:216:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7191,"nodeType":"Block","src":"34444:250:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"34557:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7174,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7173,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:29","memberName":"max","nodeType":"MemberAccess","src":"34573:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:29","typeDescriptions":{}}},"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7185,"nodeType":"IfStatement","src":"34553:105:29","trueBody":{"id":7184,"nodeType":"Block","src":"34592:66:29","statements":[{"errorCall":{"arguments":[{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"34641:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7180,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"34613:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7183,"nodeType":"RevertStatement","src":"34606:41:29"}]}},{"expression":{"arguments":[{"id":7188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"34681:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7186,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:29","typeDescriptions":{}}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7169,"id":7190,"nodeType":"Return","src":"34667:20:29"}]},"documentation":{"id":7163,"nodeType":"StructuredDocumentation","src":"34210:165:29","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:29","nodeType":"FunctionDefinition","parameters":{"id":7166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"mutability":"mutable","name":"value","nameLocation":"34406:5:29","nodeType":"VariableDeclaration","scope":7192,"src":"34398:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7164,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:29"},"returnParameters":{"id":7169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7192,"src":"34436:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7167,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:29"},"scope":7203,"src":"34380:314:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7201,"nodeType":"Block","src":"34853:87:29","statements":[{"AST":{"nativeSrc":"34888:46:29","nodeType":"YulBlock","src":"34888:46:29","statements":[{"nativeSrc":"34902:22:29","nodeType":"YulAssignment","src":"34902:22:29","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:29","nodeType":"YulIdentifier","src":"34921:1:29"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:29","nodeType":"YulIdentifier","src":"34914:6:29"},"nativeSrc":"34914:9:29","nodeType":"YulFunctionCall","src":"34914:9:29"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:29","nodeType":"YulIdentifier","src":"34907:6:29"},"nativeSrc":"34907:17:29","nodeType":"YulFunctionCall","src":"34907:17:29"},"variableNames":[{"name":"u","nativeSrc":"34902:1:29","nodeType":"YulIdentifier","src":"34902:1:29"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":7195,"isOffset":false,"isSlot":false,"src":"34921:1:29","valueSize":1},{"declaration":7198,"isOffset":false,"isSlot":false,"src":"34902:1:29","valueSize":1}],"flags":["memory-safe"],"id":7200,"nodeType":"InlineAssembly","src":"34863:71:29"}]},"documentation":{"id":7193,"nodeType":"StructuredDocumentation","src":"34700:90:29","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:29","nodeType":"FunctionDefinition","parameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"b","nameLocation":"34816:1:29","nodeType":"VariableDeclaration","scope":7202,"src":"34811:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7194,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:29"},"returnParameters":{"id":7199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"u","nameLocation":"34850:1:29","nodeType":"VariableDeclaration","scope":7202,"src":"34842:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7197,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:29"},"scope":7203,"src":"34795:145:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7204,"src":"769:34173:29","usedErrors":[5448,5453,5460,5465],"usedEvents":[]}],"src":"192:34751:29"},"id":29},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"Arrays":[3115],"EnumerableSet":[7900]},"id":7901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7205,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../Arrays.sol","id":7207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7901,"sourceUnit":3116,"src":"231:37:30","symbolAliases":[{"foreign":{"id":7206,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"239:6:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":7208,"nodeType":"StructuredDocumentation","src":"270:1154:30","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n - Set can be cleared (all elements removed) in O(n).\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":7900,"linearizedBaseContracts":[7900],"name":"EnumerableSet","nameLocation":"1433:13:30","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":7216,"members":[{"constant":false,"id":7211,"mutability":"mutable","name":"_values","nameLocation":"1957:7:30","nodeType":"VariableDeclaration","scope":7216,"src":"1947:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7210,"nodeType":"ArrayTypeName","src":"1947:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":7215,"mutability":"mutable","name":"_positions","nameLocation":"2149:10:30","nodeType":"VariableDeclaration","scope":7216,"src":"2115:44:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":7214,"keyName":"value","keyNameLocation":"2131:5:30","keyType":{"id":7212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2123:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2115:33:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1900:3:30","nodeType":"StructDefinition","scope":7900,"src":"1893:273:30","visibility":"public"},{"body":{"id":7257,"nodeType":"Block","src":"2405:337:30","statements":[{"condition":{"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2419:22:30","subExpression":{"arguments":[{"id":7228,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"2430:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":7229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"2435:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7227,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"2420:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7255,"nodeType":"Block","src":"2699:37:30","statements":[{"expression":{"hexValue":"66616c7365","id":7253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2720:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7226,"id":7254,"nodeType":"Return","src":"2713:12:30"}]},"id":7256,"nodeType":"IfStatement","src":"2415:321:30","trueBody":{"id":7252,"nodeType":"Block","src":"2443:250:30","statements":[{"expression":{"arguments":[{"id":7237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"2474:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":7232,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"2457:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2461:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"2457:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:4:30","memberName":"push","nodeType":"MemberAccess","src":"2457:16:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7239,"nodeType":"ExpressionStatement","src":"2457:23:30"},{"expression":{"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7240,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"2615:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2619:10:30","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":7215,"src":"2615:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7244,"indexExpression":{"id":7242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"2630:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2615:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":7245,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"2639:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"2639:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2651:6:30","memberName":"length","nodeType":"MemberAccess","src":"2639:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2615:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7249,"nodeType":"ExpressionStatement","src":"2615:42:30"},{"expression":{"hexValue":"74727565","id":7250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2678:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7226,"id":7251,"nodeType":"Return","src":"2671:11:30"}]}}]},"documentation":{"id":7217,"nodeType":"StructuredDocumentation","src":"2172:159:30","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7258,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2345:4:30","nodeType":"FunctionDefinition","parameters":{"id":7223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"set","nameLocation":"2362:3:30","nodeType":"VariableDeclaration","scope":7258,"src":"2350:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7219,"nodeType":"UserDefinedTypeName","pathNode":{"id":7218,"name":"Set","nameLocations":["2350:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"2350:3:30"},"referencedDeclaration":7216,"src":"2350:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7222,"mutability":"mutable","name":"value","nameLocation":"2375:5:30","nodeType":"VariableDeclaration","scope":7258,"src":"2367:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2349:32:30"},"returnParameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7258,"src":"2399:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7224,"name":"bool","nodeType":"ElementaryTypeName","src":"2399:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:6:30"},"scope":7900,"src":"2336:406:30","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7341,"nodeType":"Block","src":"2982:1296:30","statements":[{"assignments":[7270],"declarations":[{"constant":false,"id":7270,"mutability":"mutable","name":"position","nameLocation":"3094:8:30","nodeType":"VariableDeclaration","scope":7341,"src":"3086:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7275,"initialValue":{"baseExpression":{"expression":{"id":7271,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"3105:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3109:10:30","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":7215,"src":"3105:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7274,"indexExpression":{"id":7273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"3120:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3105:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3086:40:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7276,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"3141:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3141:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7339,"nodeType":"Block","src":"4235:37:30","statements":[{"expression":{"hexValue":"66616c7365","id":7337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4256:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7268,"id":7338,"nodeType":"Return","src":"4249:12:30"}]},"id":7340,"nodeType":"IfStatement","src":"3137:1135:30","trueBody":{"id":7336,"nodeType":"Block","src":"3156:1073:30","statements":[{"assignments":[7280],"declarations":[{"constant":false,"id":7280,"mutability":"mutable","name":"valueIndex","nameLocation":"3516:10:30","nodeType":"VariableDeclaration","scope":7336,"src":"3508:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7284,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7281,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"3529:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3529:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3508:33:30"},{"assignments":[7286],"declarations":[{"constant":false,"id":7286,"mutability":"mutable","name":"lastIndex","nameLocation":"3563:9:30","nodeType":"VariableDeclaration","scope":7336,"src":"3555:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3555:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7292,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7287,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"3575:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3579:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"3575:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:30","memberName":"length","nodeType":"MemberAccess","src":"3575:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3596:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3575:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3555:42:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7293,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"3616:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7294,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"3630:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3616:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7320,"nodeType":"IfStatement","src":"3612:378:30","trueBody":{"id":7319,"nodeType":"Block","src":"3641:349:30","statements":[{"assignments":[7297],"declarations":[{"constant":false,"id":7297,"mutability":"mutable","name":"lastValue","nameLocation":"3667:9:30","nodeType":"VariableDeclaration","scope":7319,"src":"3659:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3659:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7302,"initialValue":{"baseExpression":{"expression":{"id":7298,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"3679:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3683:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"3679:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7301,"indexExpression":{"id":7300,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"3691:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3679:22:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3659:42:30"},{"expression":{"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7303,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"3800:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3804:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"3800:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7307,"indexExpression":{"id":7305,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"3812:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3800:23:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7308,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"3826:9:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3800:35:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7310,"nodeType":"ExpressionStatement","src":"3800:35:30"},{"expression":{"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7311,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"3939:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3943:10:30","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":7215,"src":"3939:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7315,"indexExpression":{"id":7313,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"3954:9:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3939:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7316,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"3967:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3939:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7318,"nodeType":"ExpressionStatement","src":"3939:36:30"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":7321,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"4068:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4072:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"4068:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4080:3:30","memberName":"pop","nodeType":"MemberAccess","src":"4068:15:30","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7327,"nodeType":"ExpressionStatement","src":"4068:17:30"},{"expression":{"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4164:28:30","subExpression":{"baseExpression":{"expression":{"id":7328,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"4171:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4175:10:30","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":7215,"src":"4171:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7331,"indexExpression":{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"4186:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4171:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7333,"nodeType":"ExpressionStatement","src":"4164:28:30"},{"expression":{"hexValue":"74727565","id":7334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4214:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7268,"id":7335,"nodeType":"Return","src":"4207:11:30"}]}}]},"documentation":{"id":7259,"nodeType":"StructuredDocumentation","src":"2748:157:30","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7342,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2919:7:30","nodeType":"FunctionDefinition","parameters":{"id":7265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7262,"mutability":"mutable","name":"set","nameLocation":"2939:3:30","nodeType":"VariableDeclaration","scope":7342,"src":"2927:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7261,"nodeType":"UserDefinedTypeName","pathNode":{"id":7260,"name":"Set","nameLocations":["2927:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"2927:3:30"},"referencedDeclaration":7216,"src":"2927:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7264,"mutability":"mutable","name":"value","nameLocation":"2952:5:30","nodeType":"VariableDeclaration","scope":7342,"src":"2944:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2944:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:32:30"},"returnParameters":{"id":7268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7342,"src":"2976:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7266,"name":"bool","nodeType":"ElementaryTypeName","src":"2976:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2975:6:30"},"scope":7900,"src":"2910:1368:30","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7384,"nodeType":"Block","src":"4633:196:30","statements":[{"assignments":[7350],"declarations":[{"constant":false,"id":7350,"mutability":"mutable","name":"len","nameLocation":"4651:3:30","nodeType":"VariableDeclaration","scope":7384,"src":"4643:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7349,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7354,"initialValue":{"arguments":[{"id":7352,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"4665:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}],"id":7351,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"4657:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4643:26:30"},{"body":{"id":7374,"nodeType":"Block","src":"4713:62:30","statements":[{"expression":{"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4727:37:30","subExpression":{"baseExpression":{"expression":{"id":7365,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"4734:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4738:10:30","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":7215,"src":"4734:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7371,"indexExpression":{"baseExpression":{"expression":{"id":7367,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"4749:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4753:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"4749:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7370,"indexExpression":{"id":7369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"4761:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4749:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4734:30:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7373,"nodeType":"ExpressionStatement","src":"4727:37:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"4699:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7360,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"4703:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4699:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7375,"initializationExpression":{"assignments":[7356],"declarations":[{"constant":false,"id":7356,"mutability":"mutable","name":"i","nameLocation":"4692:1:30","nodeType":"VariableDeclaration","scope":7375,"src":"4684:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7355,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7358,"initialValue":{"hexValue":"30","id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4696:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4684:13:30"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4708:3:30","subExpression":{"id":7362,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"4710:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7364,"nodeType":"ExpressionStatement","src":"4708:3:30"},"nodeType":"ForStatement","src":"4679:96:30"},{"expression":{"arguments":[{"expression":{"id":7379,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"4807:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4811:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"4807:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},{"hexValue":"30","id":7381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4820:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":7376,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"4784:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$3115_$","typeString":"type(library Arrays)"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4791:15:30","memberName":"unsafeSetLength","nodeType":"MemberAccess","referencedDeclaration":3103,"src":"4784:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32[] storage pointer,uint256)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7383,"nodeType":"ExpressionStatement","src":"4784:38:30"}]},"documentation":{"id":7343,"nodeType":"StructuredDocumentation","src":"4284:303:30","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":7385,"implemented":true,"kind":"function","modifiers":[],"name":"_clear","nameLocation":"4601:6:30","nodeType":"FunctionDefinition","parameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"mutability":"mutable","name":"set","nameLocation":"4620:3:30","nodeType":"VariableDeclaration","scope":7385,"src":"4608:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7345,"nodeType":"UserDefinedTypeName","pathNode":{"id":7344,"name":"Set","nameLocations":["4608:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"4608:3:30"},"referencedDeclaration":7216,"src":"4608:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4607:17:30"},"returnParameters":{"id":7348,"nodeType":"ParameterList","parameters":[],"src":"4633:0:30"},"scope":7900,"src":"4592:237:30","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7403,"nodeType":"Block","src":"4989:50:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7396,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"5006:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5010:10:30","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":7215,"src":"5006:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7399,"indexExpression":{"id":7398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"5021:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5006:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5031:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5006:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7395,"id":7402,"nodeType":"Return","src":"4999:33:30"}]},"documentation":{"id":7386,"nodeType":"StructuredDocumentation","src":"4835:70:30","text":" @dev Returns true if the value is in the set. O(1)."},"id":7404,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4919:9:30","nodeType":"FunctionDefinition","parameters":{"id":7392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7389,"mutability":"mutable","name":"set","nameLocation":"4941:3:30","nodeType":"VariableDeclaration","scope":7404,"src":"4929:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7388,"nodeType":"UserDefinedTypeName","pathNode":{"id":7387,"name":"Set","nameLocations":["4929:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"4929:3:30"},"referencedDeclaration":7216,"src":"4929:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7391,"mutability":"mutable","name":"value","nameLocation":"4954:5:30","nodeType":"VariableDeclaration","scope":7404,"src":"4946:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4946:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4928:32:30"},"returnParameters":{"id":7395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7404,"src":"4983:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7393,"name":"bool","nodeType":"ElementaryTypeName","src":"4983:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4982:6:30"},"scope":7900,"src":"4910:129:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7417,"nodeType":"Block","src":"5185:42:30","statements":[{"expression":{"expression":{"expression":{"id":7413,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"5202:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5206:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"5202:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5214:6:30","memberName":"length","nodeType":"MemberAccess","src":"5202:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7412,"id":7416,"nodeType":"Return","src":"5195:25:30"}]},"documentation":{"id":7405,"nodeType":"StructuredDocumentation","src":"5045:70:30","text":" @dev Returns the number of values on the set. O(1)."},"id":7418,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"5129:7:30","nodeType":"FunctionDefinition","parameters":{"id":7409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7408,"mutability":"mutable","name":"set","nameLocation":"5149:3:30","nodeType":"VariableDeclaration","scope":7418,"src":"5137:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7407,"nodeType":"UserDefinedTypeName","pathNode":{"id":7406,"name":"Set","nameLocations":["5137:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"5137:3:30"},"referencedDeclaration":7216,"src":"5137:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5136:17:30"},"returnParameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7418,"src":"5176:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7410,"name":"uint256","nodeType":"ElementaryTypeName","src":"5176:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5175:9:30"},"scope":7900,"src":"5120:107:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7434,"nodeType":"Block","src":"5645:42:30","statements":[{"expression":{"baseExpression":{"expression":{"id":7429,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"5662:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5666:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"5662:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7432,"indexExpression":{"id":7431,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"5674:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5662:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7428,"id":7433,"nodeType":"Return","src":"5655:25:30"}]},"documentation":{"id":7419,"nodeType":"StructuredDocumentation","src":"5233:331:30","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7435,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"5578:3:30","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7422,"mutability":"mutable","name":"set","nameLocation":"5594:3:30","nodeType":"VariableDeclaration","scope":7435,"src":"5582:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7421,"nodeType":"UserDefinedTypeName","pathNode":{"id":7420,"name":"Set","nameLocations":["5582:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"5582:3:30"},"referencedDeclaration":7216,"src":"5582:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7424,"mutability":"mutable","name":"index","nameLocation":"5607:5:30","nodeType":"VariableDeclaration","scope":7435,"src":"5599:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7423,"name":"uint256","nodeType":"ElementaryTypeName","src":"5599:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5581:32:30"},"returnParameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7435,"src":"5636:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5636:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5635:9:30"},"scope":7900,"src":"5569:118:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7448,"nodeType":"Block","src":"6301:35:30","statements":[{"expression":{"expression":{"id":7445,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"6318:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6322:7:30","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"6318:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":7444,"id":7447,"nodeType":"Return","src":"6311:18:30"}]},"documentation":{"id":7436,"nodeType":"StructuredDocumentation","src":"5693:529:30","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7449,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"6236:7:30","nodeType":"FunctionDefinition","parameters":{"id":7440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7439,"mutability":"mutable","name":"set","nameLocation":"6256:3:30","nodeType":"VariableDeclaration","scope":7449,"src":"6244:15:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7438,"nodeType":"UserDefinedTypeName","pathNode":{"id":7437,"name":"Set","nameLocations":["6244:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"6244:3:30"},"referencedDeclaration":7216,"src":"6244:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"6243:17:30"},"returnParameters":{"id":7444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7449,"src":"6283:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6283:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7442,"nodeType":"ArrayTypeName","src":"6283:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6282:18:30"},"scope":7900,"src":"6227:109:30","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":7453,"members":[{"constant":false,"id":7452,"mutability":"mutable","name":"_inner","nameLocation":"6393:6:30","nodeType":"VariableDeclaration","scope":7453,"src":"6389:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7451,"nodeType":"UserDefinedTypeName","pathNode":{"id":7450,"name":"Set","nameLocations":["6389:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"6389:3:30"},"referencedDeclaration":7216,"src":"6389:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"6368:10:30","nodeType":"StructDefinition","scope":7900,"src":"6361:45:30","visibility":"public"},{"body":{"id":7470,"nodeType":"Block","src":"6652:47:30","statements":[{"expression":{"arguments":[{"expression":{"id":7465,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"6674:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6678:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7452,"src":"6674:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"6686:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7464,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"6669:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6669:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7463,"id":7469,"nodeType":"Return","src":"6662:30:30"}]},"documentation":{"id":7454,"nodeType":"StructuredDocumentation","src":"6412:159:30","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7471,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6585:3:30","nodeType":"FunctionDefinition","parameters":{"id":7460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"set","nameLocation":"6608:3:30","nodeType":"VariableDeclaration","scope":7471,"src":"6589:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7456,"nodeType":"UserDefinedTypeName","pathNode":{"id":7455,"name":"Bytes32Set","nameLocations":["6589:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7453,"src":"6589:10:30"},"referencedDeclaration":7453,"src":"6589:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7459,"mutability":"mutable","name":"value","nameLocation":"6621:5:30","nodeType":"VariableDeclaration","scope":7471,"src":"6613:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6613:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6588:39:30"},"returnParameters":{"id":7463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7471,"src":"6646:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7461,"name":"bool","nodeType":"ElementaryTypeName","src":"6646:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6645:6:30"},"scope":7900,"src":"6576:123:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7488,"nodeType":"Block","src":"6946:50:30","statements":[{"expression":{"arguments":[{"expression":{"id":7483,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"6971:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6975:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7452,"src":"6971:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"6983:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7482,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"6963:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6963:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7481,"id":7487,"nodeType":"Return","src":"6956:33:30"}]},"documentation":{"id":7472,"nodeType":"StructuredDocumentation","src":"6705:157:30","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7489,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6876:6:30","nodeType":"FunctionDefinition","parameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7475,"mutability":"mutable","name":"set","nameLocation":"6902:3:30","nodeType":"VariableDeclaration","scope":7489,"src":"6883:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7474,"nodeType":"UserDefinedTypeName","pathNode":{"id":7473,"name":"Bytes32Set","nameLocations":["6883:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7453,"src":"6883:10:30"},"referencedDeclaration":7453,"src":"6883:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7477,"mutability":"mutable","name":"value","nameLocation":"6915:5:30","nodeType":"VariableDeclaration","scope":7489,"src":"6907:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6907:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6882:39:30"},"returnParameters":{"id":7481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7489,"src":"6940:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7479,"name":"bool","nodeType":"ElementaryTypeName","src":"6940:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6939:6:30"},"scope":7900,"src":"6867:129:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7501,"nodeType":"Block","src":"7358:35:30","statements":[{"expression":{"arguments":[{"expression":{"id":7497,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"7375:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7379:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7452,"src":"7375:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7496,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"7368:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7368:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7500,"nodeType":"ExpressionStatement","src":"7368:18:30"}]},"documentation":{"id":7490,"nodeType":"StructuredDocumentation","src":"7002:303:30","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":7502,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"7319:5:30","nodeType":"FunctionDefinition","parameters":{"id":7494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7493,"mutability":"mutable","name":"set","nameLocation":"7344:3:30","nodeType":"VariableDeclaration","scope":7502,"src":"7325:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7492,"nodeType":"UserDefinedTypeName","pathNode":{"id":7491,"name":"Bytes32Set","nameLocations":["7325:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7453,"src":"7325:10:30"},"referencedDeclaration":7453,"src":"7325:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7324:24:30"},"returnParameters":{"id":7495,"nodeType":"ParameterList","parameters":[],"src":"7358:0:30"},"scope":7900,"src":"7310:83:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7519,"nodeType":"Block","src":"7560:52:30","statements":[{"expression":{"arguments":[{"expression":{"id":7514,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"7587:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7591:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7452,"src":"7587:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"7599:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7513,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"7577:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7577:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7512,"id":7518,"nodeType":"Return","src":"7570:35:30"}]},"documentation":{"id":7503,"nodeType":"StructuredDocumentation","src":"7399:70:30","text":" @dev Returns true if the value is in the set. O(1)."},"id":7520,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"7483:8:30","nodeType":"FunctionDefinition","parameters":{"id":7509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7506,"mutability":"mutable","name":"set","nameLocation":"7511:3:30","nodeType":"VariableDeclaration","scope":7520,"src":"7492:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7505,"nodeType":"UserDefinedTypeName","pathNode":{"id":7504,"name":"Bytes32Set","nameLocations":["7492:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7453,"src":"7492:10:30"},"referencedDeclaration":7453,"src":"7492:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7508,"mutability":"mutable","name":"value","nameLocation":"7524:5:30","nodeType":"VariableDeclaration","scope":7520,"src":"7516:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7516:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7491:39:30"},"returnParameters":{"id":7512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7520,"src":"7554:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7510,"name":"bool","nodeType":"ElementaryTypeName","src":"7554:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7553:6:30"},"scope":7900,"src":"7474:138:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7534,"nodeType":"Block","src":"7765:43:30","statements":[{"expression":{"arguments":[{"expression":{"id":7530,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"7790:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7794:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7452,"src":"7790:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7529,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"7782:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7782:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7528,"id":7533,"nodeType":"Return","src":"7775:26:30"}]},"documentation":{"id":7521,"nodeType":"StructuredDocumentation","src":"7618:70:30","text":" @dev Returns the number of values in the set. O(1)."},"id":7535,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"7702:6:30","nodeType":"FunctionDefinition","parameters":{"id":7525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7524,"mutability":"mutable","name":"set","nameLocation":"7728:3:30","nodeType":"VariableDeclaration","scope":7535,"src":"7709:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7523,"nodeType":"UserDefinedTypeName","pathNode":{"id":7522,"name":"Bytes32Set","nameLocations":["7709:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7453,"src":"7709:10:30"},"referencedDeclaration":7453,"src":"7709:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7708:24:30"},"returnParameters":{"id":7528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7535,"src":"7756:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7526,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:9:30"},"scope":7900,"src":"7693:115:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7552,"nodeType":"Block","src":"8233:46:30","statements":[{"expression":{"arguments":[{"expression":{"id":7547,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"8254:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8258:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7452,"src":"8254:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7549,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"8266:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7546,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"8250:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8250:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7545,"id":7551,"nodeType":"Return","src":"8243:29:30"}]},"documentation":{"id":7536,"nodeType":"StructuredDocumentation","src":"7814:331:30","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7553,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"8159:2:30","nodeType":"FunctionDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7539,"mutability":"mutable","name":"set","nameLocation":"8181:3:30","nodeType":"VariableDeclaration","scope":7553,"src":"8162:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7538,"nodeType":"UserDefinedTypeName","pathNode":{"id":7537,"name":"Bytes32Set","nameLocations":["8162:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7453,"src":"8162:10:30"},"referencedDeclaration":7453,"src":"8162:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7541,"mutability":"mutable","name":"index","nameLocation":"8194:5:30","nodeType":"VariableDeclaration","scope":7553,"src":"8186:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7540,"name":"uint256","nodeType":"ElementaryTypeName","src":"8186:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8161:39:30"},"returnParameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7553,"src":"8224:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8224:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8223:9:30"},"scope":7900,"src":"8150:129:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7582,"nodeType":"Block","src":"8900:192:30","statements":[{"assignments":[7567],"declarations":[{"constant":false,"id":7567,"mutability":"mutable","name":"store","nameLocation":"8927:5:30","nodeType":"VariableDeclaration","scope":7582,"src":"8910:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8910:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7566,"nodeType":"ArrayTypeName","src":"8910:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7572,"initialValue":{"arguments":[{"expression":{"id":7569,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"8943:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8947:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7452,"src":"8943:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7568,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"8935:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8935:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8910:44:30"},{"assignments":[7577],"declarations":[{"constant":false,"id":7577,"mutability":"mutable","name":"result","nameLocation":"8981:6:30","nodeType":"VariableDeclaration","scope":7582,"src":"8964:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8964:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7576,"nodeType":"ArrayTypeName","src":"8964:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7578,"nodeType":"VariableDeclarationStatement","src":"8964:23:30"},{"AST":{"nativeSrc":"9023:39:30","nodeType":"YulBlock","src":"9023:39:30","statements":[{"nativeSrc":"9037:15:30","nodeType":"YulAssignment","src":"9037:15:30","value":{"name":"store","nativeSrc":"9047:5:30","nodeType":"YulIdentifier","src":"9047:5:30"},"variableNames":[{"name":"result","nativeSrc":"9037:6:30","nodeType":"YulIdentifier","src":"9037:6:30"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":7577,"isOffset":false,"isSlot":false,"src":"9037:6:30","valueSize":1},{"declaration":7567,"isOffset":false,"isSlot":false,"src":"9047:5:30","valueSize":1}],"flags":["memory-safe"],"id":7579,"nodeType":"InlineAssembly","src":"8998:64:30"},{"expression":{"id":7580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"9079:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":7562,"id":7581,"nodeType":"Return","src":"9072:13:30"}]},"documentation":{"id":7554,"nodeType":"StructuredDocumentation","src":"8285:529:30","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7583,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"8828:6:30","nodeType":"FunctionDefinition","parameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7557,"mutability":"mutable","name":"set","nameLocation":"8854:3:30","nodeType":"VariableDeclaration","scope":7583,"src":"8835:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7556,"nodeType":"UserDefinedTypeName","pathNode":{"id":7555,"name":"Bytes32Set","nameLocations":["8835:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7453,"src":"8835:10:30"},"referencedDeclaration":7453,"src":"8835:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7453_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"8834:24:30"},"returnParameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7583,"src":"8882:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8882:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7560,"nodeType":"ArrayTypeName","src":"8882:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8881:18:30"},"scope":7900,"src":"8819:273:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":7587,"members":[{"constant":false,"id":7586,"mutability":"mutable","name":"_inner","nameLocation":"9149:6:30","nodeType":"VariableDeclaration","scope":7587,"src":"9145:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7585,"nodeType":"UserDefinedTypeName","pathNode":{"id":7584,"name":"Set","nameLocations":["9145:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"9145:3:30"},"referencedDeclaration":7216,"src":"9145:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"9124:10:30","nodeType":"StructDefinition","scope":7900,"src":"9117:45:30","visibility":"public"},{"body":{"id":7613,"nodeType":"Block","src":"9408:74:30","statements":[{"expression":{"arguments":[{"expression":{"id":7599,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7591,"src":"9430:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9434:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7586,"src":"9430:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"9466:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9458:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7605,"name":"uint160","nodeType":"ElementaryTypeName","src":"9458:7:30","typeDescriptions":{}}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9450:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7603,"name":"uint256","nodeType":"ElementaryTypeName","src":"9450:7:30","typeDescriptions":{}}},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9442:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9442:7:30","typeDescriptions":{}}},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9442:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7598,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"9425:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9425:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7597,"id":7612,"nodeType":"Return","src":"9418:57:30"}]},"documentation":{"id":7588,"nodeType":"StructuredDocumentation","src":"9168:159:30","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7614,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"9341:3:30","nodeType":"FunctionDefinition","parameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7591,"mutability":"mutable","name":"set","nameLocation":"9364:3:30","nodeType":"VariableDeclaration","scope":7614,"src":"9345:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7590,"nodeType":"UserDefinedTypeName","pathNode":{"id":7589,"name":"AddressSet","nameLocations":["9345:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"9345:10:30"},"referencedDeclaration":7587,"src":"9345:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7593,"mutability":"mutable","name":"value","nameLocation":"9377:5:30","nodeType":"VariableDeclaration","scope":7614,"src":"9369:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7592,"name":"address","nodeType":"ElementaryTypeName","src":"9369:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9344:39:30"},"returnParameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7614,"src":"9402:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7595,"name":"bool","nodeType":"ElementaryTypeName","src":"9402:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9401:6:30"},"scope":7900,"src":"9332:150:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7640,"nodeType":"Block","src":"9729:77:30","statements":[{"expression":{"arguments":[{"expression":{"id":7626,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"9754:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9758:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7586,"src":"9754:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"9790:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9782:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7632,"name":"uint160","nodeType":"ElementaryTypeName","src":"9782:7:30","typeDescriptions":{}}},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9782:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9774:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7630,"name":"uint256","nodeType":"ElementaryTypeName","src":"9774:7:30","typeDescriptions":{}}},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9774:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9766:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9766:7:30","typeDescriptions":{}}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9766:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7625,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"9746:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9746:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7624,"id":7639,"nodeType":"Return","src":"9739:60:30"}]},"documentation":{"id":7615,"nodeType":"StructuredDocumentation","src":"9488:157:30","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7641,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"9659:6:30","nodeType":"FunctionDefinition","parameters":{"id":7621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7618,"mutability":"mutable","name":"set","nameLocation":"9685:3:30","nodeType":"VariableDeclaration","scope":7641,"src":"9666:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7617,"nodeType":"UserDefinedTypeName","pathNode":{"id":7616,"name":"AddressSet","nameLocations":["9666:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"9666:10:30"},"referencedDeclaration":7587,"src":"9666:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7620,"mutability":"mutable","name":"value","nameLocation":"9698:5:30","nodeType":"VariableDeclaration","scope":7641,"src":"9690:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7619,"name":"address","nodeType":"ElementaryTypeName","src":"9690:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9665:39:30"},"returnParameters":{"id":7624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7641,"src":"9723:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7622,"name":"bool","nodeType":"ElementaryTypeName","src":"9723:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9722:6:30"},"scope":7900,"src":"9650:156:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7653,"nodeType":"Block","src":"10168:35:30","statements":[{"expression":{"arguments":[{"expression":{"id":7649,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"10185:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10189:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7586,"src":"10185:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7648,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"10178:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10178:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7652,"nodeType":"ExpressionStatement","src":"10178:18:30"}]},"documentation":{"id":7642,"nodeType":"StructuredDocumentation","src":"9812:303:30","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":7654,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"10129:5:30","nodeType":"FunctionDefinition","parameters":{"id":7646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7645,"mutability":"mutable","name":"set","nameLocation":"10154:3:30","nodeType":"VariableDeclaration","scope":7654,"src":"10135:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7644,"nodeType":"UserDefinedTypeName","pathNode":{"id":7643,"name":"AddressSet","nameLocations":["10135:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"10135:10:30"},"referencedDeclaration":7587,"src":"10135:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10134:24:30"},"returnParameters":{"id":7647,"nodeType":"ParameterList","parameters":[],"src":"10168:0:30"},"scope":7900,"src":"10120:83:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7680,"nodeType":"Block","src":"10370:79:30","statements":[{"expression":{"arguments":[{"expression":{"id":7666,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"10397:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10401:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7586,"src":"10397:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7660,"src":"10433:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10425:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7672,"name":"uint160","nodeType":"ElementaryTypeName","src":"10425:7:30","typeDescriptions":{}}},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10425:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10417:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7670,"name":"uint256","nodeType":"ElementaryTypeName","src":"10417:7:30","typeDescriptions":{}}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10417:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10409:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10409:7:30","typeDescriptions":{}}},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10409:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7665,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"10387:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10387:55:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7664,"id":7679,"nodeType":"Return","src":"10380:62:30"}]},"documentation":{"id":7655,"nodeType":"StructuredDocumentation","src":"10209:70:30","text":" @dev Returns true if the value is in the set. O(1)."},"id":7681,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10293:8:30","nodeType":"FunctionDefinition","parameters":{"id":7661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7658,"mutability":"mutable","name":"set","nameLocation":"10321:3:30","nodeType":"VariableDeclaration","scope":7681,"src":"10302:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7657,"nodeType":"UserDefinedTypeName","pathNode":{"id":7656,"name":"AddressSet","nameLocations":["10302:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"10302:10:30"},"referencedDeclaration":7587,"src":"10302:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7660,"mutability":"mutable","name":"value","nameLocation":"10334:5:30","nodeType":"VariableDeclaration","scope":7681,"src":"10326:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7659,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10301:39:30"},"returnParameters":{"id":7664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7681,"src":"10364:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7662,"name":"bool","nodeType":"ElementaryTypeName","src":"10364:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10363:6:30"},"scope":7900,"src":"10284:165:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7695,"nodeType":"Block","src":"10602:43:30","statements":[{"expression":{"arguments":[{"expression":{"id":7691,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"10627:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10631:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7586,"src":"10627:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7690,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"10619:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10619:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7689,"id":7694,"nodeType":"Return","src":"10612:26:30"}]},"documentation":{"id":7682,"nodeType":"StructuredDocumentation","src":"10455:70:30","text":" @dev Returns the number of values in the set. O(1)."},"id":7696,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10539:6:30","nodeType":"FunctionDefinition","parameters":{"id":7686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7685,"mutability":"mutable","name":"set","nameLocation":"10565:3:30","nodeType":"VariableDeclaration","scope":7696,"src":"10546:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7684,"nodeType":"UserDefinedTypeName","pathNode":{"id":7683,"name":"AddressSet","nameLocations":["10546:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"10546:10:30"},"referencedDeclaration":7587,"src":"10546:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10545:24:30"},"returnParameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7696,"src":"10593:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7687,"name":"uint256","nodeType":"ElementaryTypeName","src":"10593:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10592:9:30"},"scope":7900,"src":"10530:115:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7722,"nodeType":"Block","src":"11070:73:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":7714,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"11115:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11119:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7586,"src":"11115:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7716,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"11127:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7713,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"11111:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11111:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11103:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7711,"name":"uint256","nodeType":"ElementaryTypeName","src":"11103:7:30","typeDescriptions":{}}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11103:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11095:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7709,"name":"uint160","nodeType":"ElementaryTypeName","src":"11095:7:30","typeDescriptions":{}}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11087:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7707,"name":"address","nodeType":"ElementaryTypeName","src":"11087:7:30","typeDescriptions":{}}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11087:49:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7706,"id":7721,"nodeType":"Return","src":"11080:56:30"}]},"documentation":{"id":7697,"nodeType":"StructuredDocumentation","src":"10651:331:30","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7723,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"10996:2:30","nodeType":"FunctionDefinition","parameters":{"id":7703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"set","nameLocation":"11018:3:30","nodeType":"VariableDeclaration","scope":7723,"src":"10999:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7699,"nodeType":"UserDefinedTypeName","pathNode":{"id":7698,"name":"AddressSet","nameLocations":["10999:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"10999:10:30"},"referencedDeclaration":7587,"src":"10999:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7702,"mutability":"mutable","name":"index","nameLocation":"11031:5:30","nodeType":"VariableDeclaration","scope":7723,"src":"11023:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7701,"name":"uint256","nodeType":"ElementaryTypeName","src":"11023:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10998:39:30"},"returnParameters":{"id":7706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7723,"src":"11061:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7704,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11060:9:30"},"scope":7900,"src":"10987:156:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7752,"nodeType":"Block","src":"11764:192:30","statements":[{"assignments":[7737],"declarations":[{"constant":false,"id":7737,"mutability":"mutable","name":"store","nameLocation":"11791:5:30","nodeType":"VariableDeclaration","scope":7752,"src":"11774:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11774:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7736,"nodeType":"ArrayTypeName","src":"11774:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7742,"initialValue":{"arguments":[{"expression":{"id":7739,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"11807:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11811:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7586,"src":"11807:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7738,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"11799:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11774:44:30"},{"assignments":[7747],"declarations":[{"constant":false,"id":7747,"mutability":"mutable","name":"result","nameLocation":"11845:6:30","nodeType":"VariableDeclaration","scope":7752,"src":"11828:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7745,"name":"address","nodeType":"ElementaryTypeName","src":"11828:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7746,"nodeType":"ArrayTypeName","src":"11828:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7748,"nodeType":"VariableDeclarationStatement","src":"11828:23:30"},{"AST":{"nativeSrc":"11887:39:30","nodeType":"YulBlock","src":"11887:39:30","statements":[{"nativeSrc":"11901:15:30","nodeType":"YulAssignment","src":"11901:15:30","value":{"name":"store","nativeSrc":"11911:5:30","nodeType":"YulIdentifier","src":"11911:5:30"},"variableNames":[{"name":"result","nativeSrc":"11901:6:30","nodeType":"YulIdentifier","src":"11901:6:30"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":7747,"isOffset":false,"isSlot":false,"src":"11901:6:30","valueSize":1},{"declaration":7737,"isOffset":false,"isSlot":false,"src":"11911:5:30","valueSize":1}],"flags":["memory-safe"],"id":7749,"nodeType":"InlineAssembly","src":"11862:64:30"},{"expression":{"id":7750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"11943:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":7732,"id":7751,"nodeType":"Return","src":"11936:13:30"}]},"documentation":{"id":7724,"nodeType":"StructuredDocumentation","src":"11149:529:30","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7753,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"11692:6:30","nodeType":"FunctionDefinition","parameters":{"id":7728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7727,"mutability":"mutable","name":"set","nameLocation":"11718:3:30","nodeType":"VariableDeclaration","scope":7753,"src":"11699:22:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7726,"nodeType":"UserDefinedTypeName","pathNode":{"id":7725,"name":"AddressSet","nameLocations":["11699:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"11699:10:30"},"referencedDeclaration":7587,"src":"11699:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"11698:24:30"},"returnParameters":{"id":7732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7753,"src":"11746:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7729,"name":"address","nodeType":"ElementaryTypeName","src":"11746:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7730,"nodeType":"ArrayTypeName","src":"11746:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11745:18:30"},"scope":7900,"src":"11683:273:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":7757,"members":[{"constant":false,"id":7756,"mutability":"mutable","name":"_inner","nameLocation":"12007:6:30","nodeType":"VariableDeclaration","scope":7757,"src":"12003:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7755,"nodeType":"UserDefinedTypeName","pathNode":{"id":7754,"name":"Set","nameLocations":["12003:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":7216,"src":"12003:3:30"},"referencedDeclaration":7216,"src":"12003:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"11985:7:30","nodeType":"StructDefinition","scope":7900,"src":"11978:42:30","visibility":"public"},{"body":{"id":7777,"nodeType":"Block","src":"12263:56:30","statements":[{"expression":{"arguments":[{"expression":{"id":7769,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"12285:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12289:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"12285:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"12305:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12297:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12297:7:30","typeDescriptions":{}}},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12297:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7768,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"12280:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7767,"id":7776,"nodeType":"Return","src":"12273:39:30"}]},"documentation":{"id":7758,"nodeType":"StructuredDocumentation","src":"12026:159:30","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7778,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"12199:3:30","nodeType":"FunctionDefinition","parameters":{"id":7764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"set","nameLocation":"12219:3:30","nodeType":"VariableDeclaration","scope":7778,"src":"12203:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7760,"nodeType":"UserDefinedTypeName","pathNode":{"id":7759,"name":"UintSet","nameLocations":["12203:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":7757,"src":"12203:7:30"},"referencedDeclaration":7757,"src":"12203:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7763,"mutability":"mutable","name":"value","nameLocation":"12232:5:30","nodeType":"VariableDeclaration","scope":7778,"src":"12224:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7762,"name":"uint256","nodeType":"ElementaryTypeName","src":"12224:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:36:30"},"returnParameters":{"id":7767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7778,"src":"12257:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7765,"name":"bool","nodeType":"ElementaryTypeName","src":"12257:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12256:6:30"},"scope":7900,"src":"12190:129:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7798,"nodeType":"Block","src":"12563:59:30","statements":[{"expression":{"arguments":[{"expression":{"id":7790,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"12588:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12592:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"12588:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"12608:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12600:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12600:7:30","typeDescriptions":{}}},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12600:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7789,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"12580:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12580:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7788,"id":7797,"nodeType":"Return","src":"12573:42:30"}]},"documentation":{"id":7779,"nodeType":"StructuredDocumentation","src":"12325:157:30","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7799,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"12496:6:30","nodeType":"FunctionDefinition","parameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7782,"mutability":"mutable","name":"set","nameLocation":"12519:3:30","nodeType":"VariableDeclaration","scope":7799,"src":"12503:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7781,"nodeType":"UserDefinedTypeName","pathNode":{"id":7780,"name":"UintSet","nameLocations":["12503:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":7757,"src":"12503:7:30"},"referencedDeclaration":7757,"src":"12503:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7784,"mutability":"mutable","name":"value","nameLocation":"12532:5:30","nodeType":"VariableDeclaration","scope":7799,"src":"12524:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7783,"name":"uint256","nodeType":"ElementaryTypeName","src":"12524:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12502:36:30"},"returnParameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7799,"src":"12557:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7786,"name":"bool","nodeType":"ElementaryTypeName","src":"12557:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12556:6:30"},"scope":7900,"src":"12487:135:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7811,"nodeType":"Block","src":"12981:35:30","statements":[{"expression":{"arguments":[{"expression":{"id":7807,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"12998:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13002:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"12998:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7806,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"12991:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$7216_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12991:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7810,"nodeType":"ExpressionStatement","src":"12991:18:30"}]},"documentation":{"id":7800,"nodeType":"StructuredDocumentation","src":"12628:303:30","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":7812,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"12945:5:30","nodeType":"FunctionDefinition","parameters":{"id":7804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7803,"mutability":"mutable","name":"set","nameLocation":"12967:3:30","nodeType":"VariableDeclaration","scope":7812,"src":"12951:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7802,"nodeType":"UserDefinedTypeName","pathNode":{"id":7801,"name":"UintSet","nameLocations":["12951:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":7757,"src":"12951:7:30"},"referencedDeclaration":7757,"src":"12951:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12950:21:30"},"returnParameters":{"id":7805,"nodeType":"ParameterList","parameters":[],"src":"12981:0:30"},"scope":7900,"src":"12936:80:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7832,"nodeType":"Block","src":"13180:61:30","statements":[{"expression":{"arguments":[{"expression":{"id":7824,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"13207:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13211:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"13207:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"13227:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13219:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13219:7:30","typeDescriptions":{}}},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13219:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7823,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"13197:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13197:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7822,"id":7831,"nodeType":"Return","src":"13190:44:30"}]},"documentation":{"id":7813,"nodeType":"StructuredDocumentation","src":"13022:70:30","text":" @dev Returns true if the value is in the set. O(1)."},"id":7833,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"13106:8:30","nodeType":"FunctionDefinition","parameters":{"id":7819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7816,"mutability":"mutable","name":"set","nameLocation":"13131:3:30","nodeType":"VariableDeclaration","scope":7833,"src":"13115:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7815,"nodeType":"UserDefinedTypeName","pathNode":{"id":7814,"name":"UintSet","nameLocations":["13115:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":7757,"src":"13115:7:30"},"referencedDeclaration":7757,"src":"13115:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7818,"mutability":"mutable","name":"value","nameLocation":"13144:5:30","nodeType":"VariableDeclaration","scope":7833,"src":"13136:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7817,"name":"uint256","nodeType":"ElementaryTypeName","src":"13136:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13114:36:30"},"returnParameters":{"id":7822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7833,"src":"13174:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7820,"name":"bool","nodeType":"ElementaryTypeName","src":"13174:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13173:6:30"},"scope":7900,"src":"13097:144:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7847,"nodeType":"Block","src":"13391:43:30","statements":[{"expression":{"arguments":[{"expression":{"id":7843,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"13416:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13420:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"13416:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7842,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"13408:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13408:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7841,"id":7846,"nodeType":"Return","src":"13401:26:30"}]},"documentation":{"id":7834,"nodeType":"StructuredDocumentation","src":"13247:70:30","text":" @dev Returns the number of values in the set. O(1)."},"id":7848,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"13331:6:30","nodeType":"FunctionDefinition","parameters":{"id":7838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7837,"mutability":"mutable","name":"set","nameLocation":"13354:3:30","nodeType":"VariableDeclaration","scope":7848,"src":"13338:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7836,"nodeType":"UserDefinedTypeName","pathNode":{"id":7835,"name":"UintSet","nameLocations":["13338:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":7757,"src":"13338:7:30"},"referencedDeclaration":7757,"src":"13338:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"13337:21:30"},"returnParameters":{"id":7841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7848,"src":"13382:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7839,"name":"uint256","nodeType":"ElementaryTypeName","src":"13382:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13381:9:30"},"scope":7900,"src":"13322:112:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7868,"nodeType":"Block","src":"13856:55:30","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7862,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"13885:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13889:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"13885:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7864,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7854,"src":"13897:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7861,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"13881:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13881:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13873:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7859,"name":"uint256","nodeType":"ElementaryTypeName","src":"13873:7:30","typeDescriptions":{}}},"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13873:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7858,"id":7867,"nodeType":"Return","src":"13866:38:30"}]},"documentation":{"id":7849,"nodeType":"StructuredDocumentation","src":"13440:331:30","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7869,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"13785:2:30","nodeType":"FunctionDefinition","parameters":{"id":7855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7852,"mutability":"mutable","name":"set","nameLocation":"13804:3:30","nodeType":"VariableDeclaration","scope":7869,"src":"13788:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7851,"nodeType":"UserDefinedTypeName","pathNode":{"id":7850,"name":"UintSet","nameLocations":["13788:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":7757,"src":"13788:7:30"},"referencedDeclaration":7757,"src":"13788:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7854,"mutability":"mutable","name":"index","nameLocation":"13817:5:30","nodeType":"VariableDeclaration","scope":7869,"src":"13809:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7853,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13787:36:30"},"returnParameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7869,"src":"13847:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7856,"name":"uint256","nodeType":"ElementaryTypeName","src":"13847:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13846:9:30"},"scope":7900,"src":"13776:135:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7898,"nodeType":"Block","src":"14529:192:30","statements":[{"assignments":[7883],"declarations":[{"constant":false,"id":7883,"mutability":"mutable","name":"store","nameLocation":"14556:5:30","nodeType":"VariableDeclaration","scope":7898,"src":"14539:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14539:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7882,"nodeType":"ArrayTypeName","src":"14539:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7888,"initialValue":{"arguments":[{"expression":{"id":7885,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"14572:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14576:6:30","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"14572:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$7216_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7884,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"14564:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$7216_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14564:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14539:44:30"},{"assignments":[7893],"declarations":[{"constant":false,"id":7893,"mutability":"mutable","name":"result","nameLocation":"14610:6:30","nodeType":"VariableDeclaration","scope":7898,"src":"14593:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7891,"name":"uint256","nodeType":"ElementaryTypeName","src":"14593:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7892,"nodeType":"ArrayTypeName","src":"14593:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7894,"nodeType":"VariableDeclarationStatement","src":"14593:23:30"},{"AST":{"nativeSrc":"14652:39:30","nodeType":"YulBlock","src":"14652:39:30","statements":[{"nativeSrc":"14666:15:30","nodeType":"YulAssignment","src":"14666:15:30","value":{"name":"store","nativeSrc":"14676:5:30","nodeType":"YulIdentifier","src":"14676:5:30"},"variableNames":[{"name":"result","nativeSrc":"14666:6:30","nodeType":"YulIdentifier","src":"14666:6:30"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":7893,"isOffset":false,"isSlot":false,"src":"14666:6:30","valueSize":1},{"declaration":7883,"isOffset":false,"isSlot":false,"src":"14676:5:30","valueSize":1}],"flags":["memory-safe"],"id":7895,"nodeType":"InlineAssembly","src":"14627:64:30"},{"expression":{"id":7896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"14708:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":7878,"id":7897,"nodeType":"Return","src":"14701:13:30"}]},"documentation":{"id":7870,"nodeType":"StructuredDocumentation","src":"13917:529:30","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7899,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"14460:6:30","nodeType":"FunctionDefinition","parameters":{"id":7874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"set","nameLocation":"14483:3:30","nodeType":"VariableDeclaration","scope":7899,"src":"14467:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7872,"nodeType":"UserDefinedTypeName","pathNode":{"id":7871,"name":"UintSet","nameLocations":["14467:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":7757,"src":"14467:7:30"},"referencedDeclaration":7757,"src":"14467:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7757_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"14466:21:30"},"returnParameters":{"id":7878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7899,"src":"14511:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7875,"name":"uint256","nodeType":"ElementaryTypeName","src":"14511:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7876,"nodeType":"ArrayTypeName","src":"14511:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14510:18:30"},"scope":7900,"src":"14451:270:30","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7901,"src":"1425:13298:30","usedErrors":[],"usedEvents":[]}],"src":"205:14519:30"},"id":30},"contracts/addons/vault/ATKVault.sol":{"ast":{"absolutePath":"contracts/addons/vault/ATKVault.sol","exportedSymbols":{"ATKVault":[9481],"AccessControlEnumerable":[1400],"Context":[3177],"ERC2771Context":[1659],"EnumerableSet":[7900],"IERC20":[1773],"Pausable":[3458],"ReentrancyGuard":[3527],"SafeERC20":[2237]},"id":9482,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":7902,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"40:24:31"},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":7904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9482,"sourceUnit":1401,"src":"66:112:31","symbolAliases":[{"foreign":{"id":7903,"name":"AccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"75:23:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","file":"@openzeppelin/contracts/metatx/ERC2771Context.sol","id":7906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9482,"sourceUnit":1660,"src":"179:83:31","symbolAliases":[{"foreign":{"id":7905,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"188:14:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":7908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9482,"sourceUnit":3459,"src":"263:70:31","symbolAliases":[{"foreign":{"id":7907,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"272:8:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9482,"sourceUnit":3528,"src":"334:84:31","symbolAliases":[{"foreign":{"id":7909,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"343:15:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9482,"sourceUnit":1774,"src":"419:72:31","symbolAliases":[{"foreign":{"id":7911,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"428:6:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":7914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9482,"sourceUnit":2238,"src":"492:84:31","symbolAliases":[{"foreign":{"id":7913,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"501:9:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":7916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9482,"sourceUnit":3178,"src":"577:68:31","symbolAliases":[{"foreign":{"id":7915,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"586:7:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":7918,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9482,"sourceUnit":7901,"src":"646:88:31","symbolAliases":[{"foreign":{"id":7917,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"655:13:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7920,"name":"ERC2771Context","nameLocations":["1079:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"1079:14:31"},"id":7921,"nodeType":"InheritanceSpecifier","src":"1079:14:31"},{"baseName":{"id":7922,"name":"AccessControlEnumerable","nameLocations":["1095:23:31"],"nodeType":"IdentifierPath","referencedDeclaration":1400,"src":"1095:23:31"},"id":7923,"nodeType":"InheritanceSpecifier","src":"1095:23:31"},{"baseName":{"id":7924,"name":"Pausable","nameLocations":["1120:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":3458,"src":"1120:8:31"},"id":7925,"nodeType":"InheritanceSpecifier","src":"1120:8:31"},{"baseName":{"id":7926,"name":"ReentrancyGuard","nameLocations":["1130:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":3527,"src":"1130:15:31"},"id":7927,"nodeType":"InheritanceSpecifier","src":"1130:15:31"}],"canonicalName":"ATKVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":7919,"nodeType":"StructuredDocumentation","src":"736:322:31","text":"@title ATKVault - A multi-signature wallet with role-based access control\n @notice This contract allows multiple signers to propose, confirm, and execute transactions\n @dev Implements OpenZeppelin's AccessControl, ERC2771Context, Pausable, and ReentrancyGuard\n @custom:security-contact support@settlemint.com"},"fullyImplemented":true,"id":9481,"linearizedBaseContracts":[9481,3527,3458,1400,1159,3805,3817,1426,1242,1659,3177],"name":"ATKVault","nameLocation":"1067:8:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7931,"libraryName":{"id":7928,"name":"SafeERC20","nameLocations":["1158:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":2237,"src":"1158:9:31"},"nodeType":"UsingForDirective","src":"1152:27:31","typeName":{"id":7930,"nodeType":"UserDefinedTypeName","pathNode":{"id":7929,"name":"IERC20","nameLocations":["1172:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1773,"src":"1172:6:31"},"referencedDeclaration":1773,"src":"1172:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1773","typeString":"contract IERC20"}}},{"global":false,"id":7935,"libraryName":{"id":7932,"name":"EnumerableSet","nameLocations":["1190:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7900,"src":"1190:13:31"},"nodeType":"UsingForDirective","src":"1184:49:31","typeName":{"id":7934,"nodeType":"UserDefinedTypeName","pathNode":{"id":7933,"name":"EnumerableSet.AddressSet","nameLocations":["1208:13:31","1222:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"1208:24:31"},"referencedDeclaration":7587,"src":"1208:24:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":true,"documentation":{"id":7936,"nodeType":"StructuredDocumentation","src":"1239:79:31","text":"@notice Role identifier for signers who can submit and confirm transactions"},"functionSelector":"a1ebf35d","id":7941,"mutability":"constant","name":"SIGNER_ROLE","nameLocation":"1347:11:31","nodeType":"VariableDeclaration","scope":9481,"src":"1323:62:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5349474e45525f524f4c45","id":7939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1371:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70","typeString":"literal_string \"SIGNER_ROLE\""},"value":"SIGNER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70","typeString":"literal_string \"SIGNER_ROLE\""}],"id":7938,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1361:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1361:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":7942,"nodeType":"StructuredDocumentation","src":"1392:201:31","text":"@notice Emitted when ETH is deposited to the vault\n @param sender Address that sent the ETH\n @param value Amount of ETH deposited\n @param balance New total balance of the vault"},"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":7950,"name":"Deposit","nameLocation":"1604:7:31","nodeType":"EventDefinition","parameters":{"id":7949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7944,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1628:6:31","nodeType":"VariableDeclaration","scope":7950,"src":"1612:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7943,"name":"address","nodeType":"ElementaryTypeName","src":"1612:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7946,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1644:5:31","nodeType":"VariableDeclaration","scope":7950,"src":"1636:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1636:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7948,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1659:7:31","nodeType":"VariableDeclaration","scope":7950,"src":"1651:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1651:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:56:31"},"src":"1598:70:31"},{"anonymous":false,"documentation":{"id":7951,"nodeType":"StructuredDocumentation","src":"1674:422:31","text":"@notice Emitted when a general transaction is submitted\n @param signer Address of the signer who submitted the transaction\n @param txIndex Index of the transaction in the transactions array\n @param to Destination address for the transaction\n @param value Amount of ETH to send with the transaction\n @param data Function call data\n @param comment Description of the transaction"},"eventSelector":"a48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd","id":7965,"name":"SubmitTransaction","nameLocation":"2107:17:31","nodeType":"EventDefinition","parameters":{"id":7964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7953,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"2150:6:31","nodeType":"VariableDeclaration","scope":7965,"src":"2134:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7952,"name":"address","nodeType":"ElementaryTypeName","src":"2134:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7955,"indexed":true,"mutability":"mutable","name":"txIndex","nameLocation":"2174:7:31","nodeType":"VariableDeclaration","scope":7965,"src":"2158:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7957,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2199:2:31","nodeType":"VariableDeclaration","scope":7965,"src":"2183:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7956,"name":"address","nodeType":"ElementaryTypeName","src":"2183:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7959,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2211:5:31","nodeType":"VariableDeclaration","scope":7965,"src":"2203:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2203:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7961,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"2224:4:31","nodeType":"VariableDeclaration","scope":7965,"src":"2218:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7960,"name":"bytes","nodeType":"ElementaryTypeName","src":"2218:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7963,"indexed":false,"mutability":"mutable","name":"comment","nameLocation":"2237:7:31","nodeType":"VariableDeclaration","scope":7965,"src":"2230:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7962,"name":"string","nodeType":"ElementaryTypeName","src":"2230:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2124:126:31"},"src":"2101:150:31"},{"anonymous":false,"documentation":{"id":7966,"nodeType":"StructuredDocumentation","src":"2257:439:31","text":"@notice Emitted when an ERC20 transfer transaction is submitted\n @param signer Address of the signer who submitted the transaction\n @param txIndex Index of the transaction in the transactions array\n @param token Address of the ERC20 token to transfer\n @param to Recipient address for the token transfer\n @param amount Amount of tokens to transfer\n @param comment Description of the transaction"},"eventSelector":"97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b933","id":7980,"name":"SubmitERC20TransferTransaction","nameLocation":"2707:30:31","nodeType":"EventDefinition","parameters":{"id":7979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7968,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"2763:6:31","nodeType":"VariableDeclaration","scope":7980,"src":"2747:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7967,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7970,"indexed":true,"mutability":"mutable","name":"txIndex","nameLocation":"2795:7:31","nodeType":"VariableDeclaration","scope":7980,"src":"2779:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7972,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"2828:5:31","nodeType":"VariableDeclaration","scope":7980,"src":"2812:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7971,"name":"address","nodeType":"ElementaryTypeName","src":"2812:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7974,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"2851:2:31","nodeType":"VariableDeclaration","scope":7980,"src":"2843:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7973,"name":"address","nodeType":"ElementaryTypeName","src":"2843:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7976,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2871:6:31","nodeType":"VariableDeclaration","scope":7980,"src":"2863:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2863:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7978,"indexed":false,"mutability":"mutable","name":"comment","nameLocation":"2894:7:31","nodeType":"VariableDeclaration","scope":7980,"src":"2887:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7977,"name":"string","nodeType":"ElementaryTypeName","src":"2887:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2737:170:31"},"src":"2701:207:31"},{"anonymous":false,"documentation":{"id":7981,"nodeType":"StructuredDocumentation","src":"2914:534:31","text":"@notice Emitted when a contract call transaction is submitted\n @param signer Address of the signer who submitted the transaction\n @param txIndex Index of the transaction in the transactions array\n @param target Contract address to call\n @param value Amount of ETH to send with the call\n @param selector Function selector (first 4 bytes of the function signature)\n @param abiEncodedArguments ABI-encoded arguments for the function call\n @param comment Description of the transaction"},"eventSelector":"d1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd16","id":7997,"name":"SubmitContractCallTransaction","nameLocation":"3459:29:31","nodeType":"EventDefinition","parameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"3514:6:31","nodeType":"VariableDeclaration","scope":7997,"src":"3498:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7982,"name":"address","nodeType":"ElementaryTypeName","src":"3498:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7985,"indexed":true,"mutability":"mutable","name":"txIndex","nameLocation":"3546:7:31","nodeType":"VariableDeclaration","scope":7997,"src":"3530:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7984,"name":"uint256","nodeType":"ElementaryTypeName","src":"3530:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7987,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"3579:6:31","nodeType":"VariableDeclaration","scope":7997,"src":"3563:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7986,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7989,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3603:5:31","nodeType":"VariableDeclaration","scope":7997,"src":"3595:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7988,"name":"uint256","nodeType":"ElementaryTypeName","src":"3595:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7991,"indexed":false,"mutability":"mutable","name":"selector","nameLocation":"3625:8:31","nodeType":"VariableDeclaration","scope":7997,"src":"3618:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7990,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3618:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":7993,"indexed":false,"mutability":"mutable","name":"abiEncodedArguments","nameLocation":"3649:19:31","nodeType":"VariableDeclaration","scope":7997,"src":"3643:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7992,"name":"bytes","nodeType":"ElementaryTypeName","src":"3643:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7995,"indexed":false,"mutability":"mutable","name":"comment","nameLocation":"3685:7:31","nodeType":"VariableDeclaration","scope":7997,"src":"3678:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7994,"name":"string","nodeType":"ElementaryTypeName","src":"3678:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3488:210:31"},"src":"3453:246:31"},{"anonymous":false,"documentation":{"id":7998,"nodeType":"StructuredDocumentation","src":"3705:195:31","text":"@notice Emitted when a transaction is confirmed by a signer\n @param signer Address of the signer who confirmed the transaction\n @param txIndex Index of the confirmed transaction"},"eventSelector":"5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb63390041","id":8004,"name":"ConfirmTransaction","nameLocation":"3911:18:31","nodeType":"EventDefinition","parameters":{"id":8003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8000,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"3946:6:31","nodeType":"VariableDeclaration","scope":8004,"src":"3930:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7999,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8002,"indexed":true,"mutability":"mutable","name":"txIndex","nameLocation":"3970:7:31","nodeType":"VariableDeclaration","scope":8004,"src":"3954:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8001,"name":"uint256","nodeType":"ElementaryTypeName","src":"3954:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3929:49:31"},"src":"3905:74:31"},{"anonymous":false,"documentation":{"id":8005,"nodeType":"StructuredDocumentation","src":"3985:177:31","text":"@notice Emitted when a signer revokes their confirmation\n @param signer Address of the signer who revoked confirmation\n @param txIndex Index of the transaction"},"eventSelector":"f0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd55","id":8011,"name":"RevokeConfirmation","nameLocation":"4173:18:31","nodeType":"EventDefinition","parameters":{"id":8010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8007,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"4208:6:31","nodeType":"VariableDeclaration","scope":8011,"src":"4192:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8006,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8009,"indexed":true,"mutability":"mutable","name":"txIndex","nameLocation":"4232:7:31","nodeType":"VariableDeclaration","scope":8011,"src":"4216:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8008,"name":"uint256","nodeType":"ElementaryTypeName","src":"4216:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4191:49:31"},"src":"4167:74:31"},{"anonymous":false,"documentation":{"id":8012,"nodeType":"StructuredDocumentation","src":"4247:175:31","text":"@notice Emitted when a transaction is executed\n @param signer Address of the signer who triggered execution\n @param txIndex Index of the executed transaction"},"eventSelector":"5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac","id":8018,"name":"ExecuteTransaction","nameLocation":"4433:18:31","nodeType":"EventDefinition","parameters":{"id":8017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8014,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"4468:6:31","nodeType":"VariableDeclaration","scope":8018,"src":"4452:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8013,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8016,"indexed":true,"mutability":"mutable","name":"txIndex","nameLocation":"4492:7:31","nodeType":"VariableDeclaration","scope":8018,"src":"4476:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8015,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4451:49:31"},"src":"4427:74:31"},{"anonymous":false,"documentation":{"id":8019,"nodeType":"StructuredDocumentation","src":"4507:197:31","text":"@notice Emitted when the confirmation requirement changes\n @param account Address of the account that changed the requirement\n @param required New number of required confirmations"},"eventSelector":"9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d5","id":8025,"name":"RequirementChanged","nameLocation":"4715:18:31","nodeType":"EventDefinition","parameters":{"id":8024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8021,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"4750:7:31","nodeType":"VariableDeclaration","scope":8025,"src":"4734:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8020,"name":"address","nodeType":"ElementaryTypeName","src":"4734:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8023,"indexed":false,"mutability":"mutable","name":"required","nameLocation":"4767:8:31","nodeType":"VariableDeclaration","scope":8025,"src":"4759:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4733:43:31"},"src":"4709:68:31"},{"anonymous":false,"documentation":{"id":8026,"nodeType":"StructuredDocumentation","src":"4783:255:31","text":"@notice Emitted when transaction execution fails after reaching the required confirmations\n @param txIndex Index of the failed transaction\n @param to Destination address of the failed call\n @param data Call data of the failed call"},"eventSelector":"0b8662943b4c344e6c026111662f383d03d3207ecc911c15d44e7a5ba9e10c9b","id":8034,"name":"TransactionExecutionFailed","nameLocation":"5049:26:31","nodeType":"EventDefinition","parameters":{"id":8033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8028,"indexed":true,"mutability":"mutable","name":"txIndex","nameLocation":"5092:7:31","nodeType":"VariableDeclaration","scope":8034,"src":"5076:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8027,"name":"uint256","nodeType":"ElementaryTypeName","src":"5076:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8030,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5109:2:31","nodeType":"VariableDeclaration","scope":8034,"src":"5101:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8029,"name":"address","nodeType":"ElementaryTypeName","src":"5101:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8032,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"5119:4:31","nodeType":"VariableDeclaration","scope":8034,"src":"5113:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8031,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5075:49:31"},"src":"5043:82:31"},{"canonicalName":"ATKVault.Transaction","documentation":{"id":8035,"nodeType":"StructuredDocumentation","src":"5131:116:31","text":"@notice Structure to store transaction details\n @dev Each transaction is stored in the transactions array"},"id":8048,"members":[{"constant":false,"id":8037,"mutability":"mutable","name":"to","nameLocation":"5289:2:31","nodeType":"VariableDeclaration","scope":8048,"src":"5281:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8036,"name":"address","nodeType":"ElementaryTypeName","src":"5281:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8039,"mutability":"mutable","name":"value","nameLocation":"5332:5:31","nodeType":"VariableDeclaration","scope":8048,"src":"5324:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8038,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8041,"mutability":"mutable","name":"data","nameLocation":"5374:4:31","nodeType":"VariableDeclaration","scope":8048,"src":"5368:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8040,"name":"bytes","nodeType":"ElementaryTypeName","src":"5368:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8043,"mutability":"mutable","name":"executed","nameLocation":"5426:8:31","nodeType":"VariableDeclaration","scope":8048,"src":"5421:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8042,"name":"bool","nodeType":"ElementaryTypeName","src":"5421:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8045,"mutability":"mutable","name":"numConfirmations","nameLocation":"5497:16:31","nodeType":"VariableDeclaration","scope":8048,"src":"5489:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8044,"name":"uint256","nodeType":"ElementaryTypeName","src":"5489:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8047,"mutability":"mutable","name":"comment","nameLocation":"5566:7:31","nodeType":"VariableDeclaration","scope":8048,"src":"5559:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8046,"name":"string","nodeType":"ElementaryTypeName","src":"5559:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Transaction","nameLocation":"5259:11:31","nodeType":"StructDefinition","scope":9481,"src":"5252:362:31","visibility":"public"},{"constant":false,"id":8053,"mutability":"mutable","name":"_txConfirmers","nameLocation":"5755:13:31","nodeType":"VariableDeclaration","scope":9481,"src":"5702:66:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet)"},"typeName":{"id":8052,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8049,"name":"uint256","nodeType":"ElementaryTypeName","src":"5710:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5702:44:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8051,"nodeType":"UserDefinedTypeName","pathNode":{"id":8050,"name":"EnumerableSet.AddressSet","nameLocations":["5721:13:31","5735:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":7587,"src":"5721:24:31"},"referencedDeclaration":7587,"src":"5721:24:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"constant":false,"documentation":{"id":8054,"nodeType":"StructuredDocumentation","src":"5775:129:31","text":"@notice Quick lookup to check if a signer has confirmed a transaction\n @dev txIndex => signer address => has confirmed"},"functionSelector":"3411c81c","id":8060,"mutability":"mutable","name":"confirmations","nameLocation":"5961:13:31","nodeType":"VariableDeclaration","scope":9481,"src":"5909:65:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":8059,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8055,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5909:44:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8058,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8056,"name":"address","nodeType":"ElementaryTypeName","src":"5936:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5928:24:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8057,"name":"bool","nodeType":"ElementaryTypeName","src":"5947:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"documentation":{"id":8061,"nodeType":"StructuredDocumentation","src":"5981:60:31","text":"@notice Array of all transactions (pending and executed)"},"functionSelector":"9ace38c2","id":8065,"mutability":"mutable","name":"transactions","nameLocation":"6067:12:31","nodeType":"VariableDeclaration","scope":9481,"src":"6046:33:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction[]"},"typeName":{"baseType":{"id":8063,"nodeType":"UserDefinedTypeName","pathNode":{"id":8062,"name":"Transaction","nameLocations":["6046:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":8048,"src":"6046:11:31"},"referencedDeclaration":8048,"src":"6046:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"}},"id":8064,"nodeType":"ArrayTypeName","src":"6046:13:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage_ptr","typeString":"struct ATKVault.Transaction[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":8066,"nodeType":"StructuredDocumentation","src":"6086:69:31","text":"@notice Number of confirmations required to execute a transaction"},"functionSelector":"dc8452cd","id":8068,"mutability":"mutable","name":"required","nameLocation":"6175:8:31","nodeType":"VariableDeclaration","scope":9481,"src":"6160:23:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6160:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"documentation":{"id":8069,"nodeType":"StructuredDocumentation","src":"6190:177:31","text":"@notice Error thrown when an invalid requirement is set\n @param requested The requested number of confirmations\n @param signerCount The total number of signers"},"errorSelector":"35077188","id":8075,"name":"InvalidRequirement","nameLocation":"6378:18:31","nodeType":"ErrorDefinition","parameters":{"id":8074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8071,"mutability":"mutable","name":"requested","nameLocation":"6405:9:31","nodeType":"VariableDeclaration","scope":8075,"src":"6397:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8070,"name":"uint256","nodeType":"ElementaryTypeName","src":"6397:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8073,"mutability":"mutable","name":"signerCount","nameLocation":"6424:11:31","nodeType":"VariableDeclaration","scope":8075,"src":"6416:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8072,"name":"uint256","nodeType":"ElementaryTypeName","src":"6416:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6396:40:31"},"src":"6372:65:31"},{"documentation":{"id":8076,"nodeType":"StructuredDocumentation","src":"6443:169:31","text":"@notice Error thrown when accessing a non-existent transaction\n @param txIndex The requested transaction index\n @param maxIndex The maximum valid index"},"errorSelector":"5ae272e6","id":8082,"name":"TxDoesNotExist","nameLocation":"6623:14:31","nodeType":"ErrorDefinition","parameters":{"id":8081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8078,"mutability":"mutable","name":"txIndex","nameLocation":"6646:7:31","nodeType":"VariableDeclaration","scope":8082,"src":"6638:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8077,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8080,"mutability":"mutable","name":"maxIndex","nameLocation":"6663:8:31","nodeType":"VariableDeclaration","scope":8082,"src":"6655:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8079,"name":"uint256","nodeType":"ElementaryTypeName","src":"6655:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6637:35:31"},"src":"6617:56:31"},{"documentation":{"id":8083,"nodeType":"StructuredDocumentation","src":"6679:124:31","text":"@notice Error thrown when trying to confirm an already executed transaction\n @param txIndex The transaction index"},"errorSelector":"93fbc709","id":8087,"name":"TxExecuted","nameLocation":"6814:10:31","nodeType":"ErrorDefinition","parameters":{"id":8086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8085,"mutability":"mutable","name":"txIndex","nameLocation":"6833:7:31","nodeType":"VariableDeclaration","scope":8087,"src":"6825:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8084,"name":"uint256","nodeType":"ElementaryTypeName","src":"6825:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6824:17:31"},"src":"6808:34:31"},{"documentation":{"id":8088,"nodeType":"StructuredDocumentation","src":"6848:180:31","text":"@notice Error thrown when a signer tries to confirm a transaction they already confirmed\n @param txIndex The transaction index\n @param signer The signer's address"},"errorSelector":"8f68cf72","id":8094,"name":"AlreadyConfirmed","nameLocation":"7039:16:31","nodeType":"ErrorDefinition","parameters":{"id":8093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8090,"mutability":"mutable","name":"txIndex","nameLocation":"7064:7:31","nodeType":"VariableDeclaration","scope":8094,"src":"7056:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8089,"name":"uint256","nodeType":"ElementaryTypeName","src":"7056:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8092,"mutability":"mutable","name":"signer","nameLocation":"7081:6:31","nodeType":"VariableDeclaration","scope":8094,"src":"7073:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8091,"name":"address","nodeType":"ElementaryTypeName","src":"7073:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7055:33:31"},"src":"7033:56:31"},{"documentation":{"id":8095,"nodeType":"StructuredDocumentation","src":"7095:174:31","text":"@notice Error thrown when a signer tries to revoke a confirmation they didn't make\n @param txIndex The transaction index\n @param signer The signer's address"},"errorSelector":"b29436e9","id":8101,"name":"NotConfirmed","nameLocation":"7280:12:31","nodeType":"ErrorDefinition","parameters":{"id":8100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8097,"mutability":"mutable","name":"txIndex","nameLocation":"7301:7:31","nodeType":"VariableDeclaration","scope":8101,"src":"7293:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8096,"name":"uint256","nodeType":"ElementaryTypeName","src":"7293:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8099,"mutability":"mutable","name":"signer","nameLocation":"7318:6:31","nodeType":"VariableDeclaration","scope":8101,"src":"7310:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8098,"name":"address","nodeType":"ElementaryTypeName","src":"7310:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7292:33:31"},"src":"7274:52:31"},{"documentation":{"id":8102,"nodeType":"StructuredDocumentation","src":"7332:178:31","text":"@notice Error thrown when transaction execution fails\n @param txIndex The transaction index\n @param to The destination address\n @param data The call data"},"errorSelector":"be44d5fa","id":8110,"name":"ExecutionFailed","nameLocation":"7521:15:31","nodeType":"ErrorDefinition","parameters":{"id":8109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8104,"mutability":"mutable","name":"txIndex","nameLocation":"7545:7:31","nodeType":"VariableDeclaration","scope":8110,"src":"7537:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8103,"name":"uint256","nodeType":"ElementaryTypeName","src":"7537:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8106,"mutability":"mutable","name":"to","nameLocation":"7562:2:31","nodeType":"VariableDeclaration","scope":8110,"src":"7554:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8105,"name":"address","nodeType":"ElementaryTypeName","src":"7554:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8108,"mutability":"mutable","name":"data","nameLocation":"7572:4:31","nodeType":"VariableDeclaration","scope":8110,"src":"7566:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8107,"name":"bytes","nodeType":"ElementaryTypeName","src":"7566:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7536:41:31"},"src":"7515:63:31"},{"documentation":{"id":8111,"nodeType":"StructuredDocumentation","src":"7584:77:31","text":"@notice Error thrown when an empty array is provided for batch operations"},"errorSelector":"7dc57e7b","id":8113,"name":"EmptyBatchArray","nameLocation":"7672:15:31","nodeType":"ErrorDefinition","parameters":{"id":8112,"nodeType":"ParameterList","parameters":[],"src":"7687:2:31"},"src":"7666:24:31"},{"documentation":{"id":8114,"nodeType":"StructuredDocumentation","src":"7696:75:31","text":"@notice Error thrown when array lengths don't match in batch operations"},"errorSelector":"a24a13a6","id":8116,"name":"ArrayLengthMismatch","nameLocation":"7782:19:31","nodeType":"ErrorDefinition","parameters":{"id":8115,"nodeType":"ParameterList","parameters":[],"src":"7801:2:31"},"src":"7776:28:31"},{"body":{"id":8190,"nodeType":"Block","src":"8389:570:31","statements":[{"assignments":[8135],"declarations":[{"constant":false,"id":8135,"mutability":"mutable","name":"len","nameLocation":"8407:3:31","nodeType":"VariableDeclaration","scope":8190,"src":"8399:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8134,"name":"uint256","nodeType":"ElementaryTypeName","src":"8399:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8138,"initialValue":{"expression":{"id":8136,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"8413:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8422:6:31","memberName":"length","nodeType":"MemberAccess","src":"8413:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8399:29:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8139,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"8515:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8522:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8515:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8142,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"8527:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8540:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8527:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8515:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8146,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"8545:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8147,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"8557:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8545:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8515:45:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8155,"nodeType":"IfStatement","src":"8511:92:31","trueBody":{"errorCall":{"arguments":[{"id":8151,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"8588:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8152,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"8599:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8150,"name":"InvalidRequirement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"8569:18:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8569:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8154,"nodeType":"RevertStatement","src":"8562:41:31"}},{"expression":{"arguments":[{"id":8157,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"8674:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8158,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8124,"src":"8694:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8156,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[1367],"referencedDeclaration":1367,"src":"8663:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8663:44:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8160,"nodeType":"ExpressionStatement","src":"8663:44:31"},{"body":{"id":8178,"nodeType":"Block","src":"8804:61:31","statements":[{"expression":{"arguments":[{"id":8172,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"8829:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":8173,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"8842:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8175,"indexExpression":{"id":8174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"8851:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8842:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8171,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[1367],"referencedDeclaration":1367,"src":"8818:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8818:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8177,"nodeType":"ExpressionStatement","src":"8818:36:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"8790:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8166,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"8794:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8790:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8179,"initializationExpression":{"assignments":[8162],"declarations":[{"constant":false,"id":8162,"mutability":"mutable","name":"i","nameLocation":"8783:1:31","nodeType":"VariableDeclaration","scope":8179,"src":"8775:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8161,"name":"uint256","nodeType":"ElementaryTypeName","src":"8775:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8164,"initialValue":{"hexValue":"30","id":8163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8787:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8775:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8799:3:31","subExpression":{"id":8168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"8801:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8170,"nodeType":"ExpressionStatement","src":"8799:3:31"},"nodeType":"ForStatement","src":"8770:95:31"},{"expression":{"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8180,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"8874:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8181,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"8885:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8874:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8183,"nodeType":"ExpressionStatement","src":"8874:20:31"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8185,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"8928:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8928:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8187,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"8942:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8184,"name":"RequirementChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"8909:18:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8909:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8189,"nodeType":"EmitStatement","src":"8904:48:31"}]},"documentation":{"id":8117,"nodeType":"StructuredDocumentation","src":"7810:365:31","text":"@notice Initializes the Vault with a set of signers and confirmation threshold\n @param _signers Array of initial signer addresses\n @param _required Number of confirmations required to execute a transaction\n @param initialOwner Address that will have admin role\n @param forwarder Address of the ERC2771 forwarder for meta-transactions"},"id":8191,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8129,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"8340:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8130,"kind":"baseConstructorSpecifier","modifierName":{"id":8128,"name":"ERC2771Context","nameLocations":["8325:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"8325:14:31"},"nodeType":"ModifierInvocation","src":"8325:25:31"},{"arguments":[],"id":8132,"kind":"baseConstructorSpecifier","modifierName":{"id":8131,"name":"AccessControlEnumerable","nameLocations":["8359:23:31"],"nodeType":"IdentifierPath","referencedDeclaration":1400,"src":"8359:23:31"},"nodeType":"ModifierInvocation","src":"8359:25:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8120,"mutability":"mutable","name":"_signers","nameLocation":"8218:8:31","nodeType":"VariableDeclaration","scope":8191,"src":"8201:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8118,"name":"address","nodeType":"ElementaryTypeName","src":"8201:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8119,"nodeType":"ArrayTypeName","src":"8201:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8122,"mutability":"mutable","name":"_required","nameLocation":"8244:9:31","nodeType":"VariableDeclaration","scope":8191,"src":"8236:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8121,"name":"uint256","nodeType":"ElementaryTypeName","src":"8236:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8124,"mutability":"mutable","name":"initialOwner","nameLocation":"8271:12:31","nodeType":"VariableDeclaration","scope":8191,"src":"8263:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8123,"name":"address","nodeType":"ElementaryTypeName","src":"8263:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8126,"mutability":"mutable","name":"forwarder","nameLocation":"8301:9:31","nodeType":"VariableDeclaration","scope":8191,"src":"8293:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8125,"name":"address","nodeType":"ElementaryTypeName","src":"8293:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8191:125:31"},"returnParameters":{"id":8133,"nodeType":"ParameterList","parameters":[],"src":"8389:0:31"},"scope":9481,"src":"8180:779:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8209,"nodeType":"Block","src":"9113:77:31","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8198,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"9136:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9136:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8200,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9150:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9154:5:31","memberName":"value","nodeType":"MemberAccess","src":"9150:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":8204,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9169:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_ATKVault_$9481","typeString":"contract ATKVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ATKVault_$9481","typeString":"contract ATKVault"}],"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9161:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8202,"name":"address","nodeType":"ElementaryTypeName","src":"9161:7:31","typeDescriptions":{}}},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9161:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9175:7:31","memberName":"balance","nodeType":"MemberAccess","src":"9161:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8197,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"9128:7:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9128:55:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8208,"nodeType":"EmitStatement","src":"9123:60:31"}]},"documentation":{"id":8192,"nodeType":"StructuredDocumentation","src":"8965:102:31","text":"@notice Allows the contract to receive ETH\n @dev Only works when the contract is not paused"},"id":8210,"implemented":true,"kind":"receive","modifiers":[{"id":8195,"kind":"modifierInvocation","modifierName":{"id":8194,"name":"whenNotPaused","nameLocations":["9099:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"9099:13:31"},"nodeType":"ModifierInvocation","src":"9099:13:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8193,"nodeType":"ParameterList","parameters":[],"src":"9079:2:31"},"returnParameters":{"id":8196,"nodeType":"ParameterList","parameters":[],"src":"9113:0:31"},"scope":9481,"src":"9072:118:31","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8220,"nodeType":"Block","src":"9356:25:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8217,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"9366:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9366:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8219,"nodeType":"ExpressionStatement","src":"9366:8:31"}]},"documentation":{"id":8211,"nodeType":"StructuredDocumentation","src":"9196:100:31","text":"@notice Pauses the contract, preventing most operations\n @dev Can only be called by admin"},"functionSelector":"8456cb59","id":8221,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8214,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"9336:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8215,"kind":"modifierInvocation","modifierName":{"id":8213,"name":"onlyRole","nameLocations":["9327:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"9327:8:31"},"nodeType":"ModifierInvocation","src":"9327:28:31"}],"name":"pause","nameLocation":"9310:5:31","nodeType":"FunctionDefinition","parameters":{"id":8212,"nodeType":"ParameterList","parameters":[],"src":"9315:2:31"},"returnParameters":{"id":8216,"nodeType":"ParameterList","parameters":[],"src":"9356:0:31"},"scope":9481,"src":"9301:80:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8231,"nodeType":"Block","src":"9554:27:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8228,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"9564:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9564:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8230,"nodeType":"ExpressionStatement","src":"9564:10:31"}]},"documentation":{"id":8222,"nodeType":"StructuredDocumentation","src":"9387:105:31","text":"@notice Unpauses the contract, allowing operations to resume\n @dev Can only be called by admin"},"functionSelector":"3f4ba83a","id":8232,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8225,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"9534:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8226,"kind":"modifierInvocation","modifierName":{"id":8224,"name":"onlyRole","nameLocations":["9525:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"9525:8:31"},"nodeType":"ModifierInvocation","src":"9525:28:31"}],"name":"unpause","nameLocation":"9506:7:31","nodeType":"FunctionDefinition","parameters":{"id":8223,"nodeType":"ParameterList","parameters":[],"src":"9513:2:31"},"returnParameters":{"id":8227,"nodeType":"ParameterList","parameters":[],"src":"9554:0:31"},"scope":9481,"src":"9497:84:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8240,"nodeType":"Block","src":"9778:32:31","statements":[{"expression":{"id":8238,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"9795:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8237,"id":8239,"nodeType":"Return","src":"9788:15:31"}]},"documentation":{"id":8233,"nodeType":"StructuredDocumentation","src":"9587:131:31","text":"@notice Gets the number of confirmations required to execute a transaction\n @return The number of required confirmations"},"functionSelector":"b7563930","id":8241,"implemented":true,"kind":"function","modifiers":[],"name":"requirement","nameLocation":"9732:11:31","nodeType":"FunctionDefinition","parameters":{"id":8234,"nodeType":"ParameterList","parameters":[],"src":"9743:2:31"},"returnParameters":{"id":8237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8241,"src":"9769:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8235,"name":"uint256","nodeType":"ElementaryTypeName","src":"9769:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9768:9:31"},"scope":9481,"src":"9723:87:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8279,"nodeType":"Block","src":"10061:338:31","statements":[{"assignments":[8251],"declarations":[{"constant":false,"id":8251,"mutability":"mutable","name":"ownerCount","nameLocation":"10079:10:31","nodeType":"VariableDeclaration","scope":8279,"src":"10071:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8250,"name":"uint256","nodeType":"ElementaryTypeName","src":"10071:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8255,"initialValue":{"arguments":[{"id":8253,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"10111:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8252,"name":"getRoleMemberCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"10092:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) view returns (uint256)"}},"id":8254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10092:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10071:52:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8256,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"10214:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10227:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10214:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8259,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"10232:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8260,"name":"ownerCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"10244:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10232:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10214:40:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8268,"nodeType":"IfStatement","src":"10210:94:31","trueBody":{"errorCall":{"arguments":[{"id":8264,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"10282:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8265,"name":"ownerCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"10293:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8263,"name":"InvalidRequirement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"10263:18:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10263:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8267,"nodeType":"RevertStatement","src":"10256:48:31"}},{"expression":{"id":8271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8269,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"10314:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8270,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"10325:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10314:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8272,"nodeType":"ExpressionStatement","src":"10314:20:31"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8274,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"10368:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10368:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8276,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"10382:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8273,"name":"RequirementChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"10349:18:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10349:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8278,"nodeType":"EmitStatement","src":"10344:48:31"}]},"documentation":{"id":8242,"nodeType":"StructuredDocumentation","src":"9816:159:31","text":"@notice Changes the number of confirmations required\n @param _required New number of required confirmations\n @dev Can only be called by admin"},"functionSelector":"8f56015f","id":8280,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8247,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10041:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8248,"kind":"modifierInvocation","modifierName":{"id":8246,"name":"onlyRole","nameLocations":["10032:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"10032:8:31"},"nodeType":"ModifierInvocation","src":"10032:28:31"}],"name":"setRequirement","nameLocation":"9989:14:31","nodeType":"FunctionDefinition","parameters":{"id":8245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8244,"mutability":"mutable","name":"_required","nameLocation":"10012:9:31","nodeType":"VariableDeclaration","scope":8280,"src":"10004:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8243,"name":"uint256","nodeType":"ElementaryTypeName","src":"10004:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10003:19:31"},"returnParameters":{"id":8249,"nodeType":"ParameterList","parameters":[],"src":"10061:0:31"},"scope":9481,"src":"9980:419:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8329,"nodeType":"Block","src":"11025:328:31","statements":[{"assignments":[8302],"declarations":[{"constant":false,"id":8302,"mutability":"mutable","name":"sender","nameLocation":"11043:6:31","nodeType":"VariableDeclaration","scope":8329,"src":"11035:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8301,"name":"address","nodeType":"ElementaryTypeName","src":"11035:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8305,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"11052:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11035:29:31"},{"expression":{"id":8313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8306,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"11115:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8308,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"11143:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"11147:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8310,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"11154:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":8311,"name":"comment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"11160:7:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8307,"name":"_storeTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"11125:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory,string memory) returns (uint256)"}},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11125:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11115:53:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8314,"nodeType":"ExpressionStatement","src":"11115:53:31"},{"eventCall":{"arguments":[{"id":8316,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"11201:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8317,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"11209:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"11218:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"11222:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8320,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"11229:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":8321,"name":"comment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"11235:7:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8315,"name":"SubmitTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"11183:17:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,uint256,bytes memory,string memory)"}},"id":8322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:60:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8323,"nodeType":"EmitStatement","src":"11178:65:31"},{"expression":{"arguments":[{"id":8325,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"11330:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8326,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"11339:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8324,"name":"_confirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"11321:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11321:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8328,"nodeType":"ExpressionStatement","src":"11321:25:31"}]},"documentation":{"id":8281,"nodeType":"StructuredDocumentation","src":"10405:292:31","text":"@notice Submits a new transaction to the vault\n @param to Destination address\n @param value Amount of ETH to send\n @param data Call data for the transaction\n @param comment Description of the transaction\n @return txIndex Index of the created transaction"},"functionSelector":"46e24b08","id":8330,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8292,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"10874:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8293,"kind":"modifierInvocation","modifierName":{"id":8291,"name":"onlyRole","nameLocations":["10865:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"10865:8:31"},"nodeType":"ModifierInvocation","src":"10865:21:31"},{"id":8295,"kind":"modifierInvocation","modifierName":{"id":8294,"name":"whenNotPaused","nameLocations":["10895:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"10895:13:31"},"nodeType":"ModifierInvocation","src":"10895:13:31"},{"id":8297,"kind":"modifierInvocation","modifierName":{"id":8296,"name":"nonReentrant","nameLocations":["10917:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"10917:12:31"},"nodeType":"ModifierInvocation","src":"10917:12:31"}],"name":"submitTransaction","nameLocation":"10711:17:31","nodeType":"FunctionDefinition","parameters":{"id":8290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8283,"mutability":"mutable","name":"to","nameLocation":"10746:2:31","nodeType":"VariableDeclaration","scope":8330,"src":"10738:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8282,"name":"address","nodeType":"ElementaryTypeName","src":"10738:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8285,"mutability":"mutable","name":"value","nameLocation":"10766:5:31","nodeType":"VariableDeclaration","scope":8330,"src":"10758:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8284,"name":"uint256","nodeType":"ElementaryTypeName","src":"10758:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8287,"mutability":"mutable","name":"data","nameLocation":"10796:4:31","nodeType":"VariableDeclaration","scope":8330,"src":"10781:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8286,"name":"bytes","nodeType":"ElementaryTypeName","src":"10781:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8289,"mutability":"mutable","name":"comment","nameLocation":"10826:7:31","nodeType":"VariableDeclaration","scope":8330,"src":"10810:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8288,"name":"string","nodeType":"ElementaryTypeName","src":"10810:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10728:111:31"},"returnParameters":{"id":8300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8299,"mutability":"mutable","name":"txIndex","nameLocation":"11012:7:31","nodeType":"VariableDeclaration","scope":8330,"src":"11004:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8298,"name":"uint256","nodeType":"ElementaryTypeName","src":"11004:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11003:17:31"},"scope":9481,"src":"10702:651:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8457,"nodeType":"Block","src":"11983:780:31","statements":[{"assignments":[8357],"declarations":[{"constant":false,"id":8357,"mutability":"mutable","name":"batchSize","nameLocation":"12001:9:31","nodeType":"VariableDeclaration","scope":8457,"src":"11993:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8356,"name":"uint256","nodeType":"ElementaryTypeName","src":"11993:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8360,"initialValue":{"expression":{"id":8358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"12013:2:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12016:6:31","memberName":"length","nodeType":"MemberAccess","src":"12013:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11993:29:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8361,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"12036:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12049:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12036:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8367,"nodeType":"IfStatement","src":"12032:44:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8364,"name":"EmptyBatchArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"12059:15:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12059:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8366,"nodeType":"RevertStatement","src":"12052:24:31"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8368,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"12140:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"12153:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12159:6:31","memberName":"length","nodeType":"MemberAccess","src":"12153:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12140:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8372,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"12169:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8373,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"12182:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":8374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12187:6:31","memberName":"length","nodeType":"MemberAccess","src":"12182:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12169:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12140:53:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8377,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"12197:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8378,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"12210:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12219:6:31","memberName":"length","nodeType":"MemberAccess","src":"12210:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12197:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12140:85:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8386,"nodeType":"IfStatement","src":"12136:144:31","trueBody":{"id":8385,"nodeType":"Block","src":"12227:53:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8382,"name":"ArrayLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"12248:19:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8384,"nodeType":"RevertStatement","src":"12241:28:31"}]}},{"assignments":[8388],"declarations":[{"constant":false,"id":8388,"mutability":"mutable","name":"sender","nameLocation":"12298:6:31","nodeType":"VariableDeclaration","scope":8457,"src":"12290:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8387,"name":"address","nodeType":"ElementaryTypeName","src":"12290:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8391,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8389,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"12307:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12307:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12290:29:31"},{"expression":{"id":8398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8392,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"12329:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8396,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"12355:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12341:13:31","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":8393,"name":"uint256","nodeType":"ElementaryTypeName","src":"12345:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8394,"nodeType":"ArrayTypeName","src":"12345:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12341:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"12329:36:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8399,"nodeType":"ExpressionStatement","src":"12329:36:31"},{"body":{"id":8455,"nodeType":"Block","src":"12465:292:31","statements":[{"expression":{"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8410,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"12479:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8412,"indexExpression":{"id":8411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12489:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12479:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":8414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"12512:2:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8416,"indexExpression":{"id":8415,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12515:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12512:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"12519:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8419,"indexExpression":{"id":8418,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12525:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12519:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8420,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"12529:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":8422,"indexExpression":{"id":8421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12534:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12529:7:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"baseExpression":{"id":8423,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"12538:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8425,"indexExpression":{"id":8424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12547:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12538:11:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8413,"name":"_storeTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"12494:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory,string memory) returns (uint256)"}},"id":8426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12494:56:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12479:71:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8428,"nodeType":"ExpressionStatement","src":"12479:71:31"},{"eventCall":{"arguments":[{"id":8430,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8388,"src":"12587:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8431,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"12595:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8433,"indexExpression":{"id":8432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12605:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12595:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"12609:2:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8436,"indexExpression":{"id":8435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12612:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12609:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"12616:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8439,"indexExpression":{"id":8438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12622:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12616:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8440,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"12626:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":8442,"indexExpression":{"id":8441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12631:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12626:7:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"baseExpression":{"id":8443,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"12635:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8445,"indexExpression":{"id":8444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12644:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12635:11:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8429,"name":"SubmitTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"12569:17:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,uint256,bytes memory,string memory)"}},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12569:78:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8447,"nodeType":"EmitStatement","src":"12564:83:31"},{"expression":{"arguments":[{"baseExpression":{"id":8449,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"12725:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8451,"indexExpression":{"id":8450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12735:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12725:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8452,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8388,"src":"12739:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8448,"name":"_confirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"12716:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12716:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8454,"nodeType":"ExpressionStatement","src":"12716:30:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12445:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8405,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"12449:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12445:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8456,"initializationExpression":{"assignments":[8401],"declarations":[{"constant":false,"id":8401,"mutability":"mutable","name":"i","nameLocation":"12438:1:31","nodeType":"VariableDeclaration","scope":8456,"src":"12430:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8400,"name":"uint256","nodeType":"ElementaryTypeName","src":"12430:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8403,"initialValue":{"hexValue":"30","id":8402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12442:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12430:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12460:3:31","subExpression":{"id":8407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"12460:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8409,"nodeType":"ExpressionStatement","src":"12460:3:31"},"nodeType":"ForStatement","src":"12425:332:31"}]},"documentation":{"id":8331,"nodeType":"StructuredDocumentation","src":"11359:309:31","text":"@notice Submits multiple transactions in a single call\n @param to Array of destination addresses\n @param value Array of ETH amounts\n @param data Array of call data\n @param comments Array of transaction descriptions\n @return txIndices Array of created transaction indices"},"functionSelector":"0f052056","id":8458,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8346,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"11878:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8347,"kind":"modifierInvocation","modifierName":{"id":8345,"name":"onlyRole","nameLocations":["11869:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"11869:8:31"},"nodeType":"ModifierInvocation","src":"11869:21:31"},{"id":8349,"kind":"modifierInvocation","modifierName":{"id":8348,"name":"whenNotPaused","nameLocations":["11899:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"11899:13:31"},"nodeType":"ModifierInvocation","src":"11899:13:31"},{"id":8351,"kind":"modifierInvocation","modifierName":{"id":8350,"name":"nonReentrant","nameLocations":["11921:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"11921:12:31"},"nodeType":"ModifierInvocation","src":"11921:12:31"}],"name":"batchSubmitTransactions","nameLocation":"11682:23:31","nodeType":"FunctionDefinition","parameters":{"id":8344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8334,"mutability":"mutable","name":"to","nameLocation":"11734:2:31","nodeType":"VariableDeclaration","scope":8458,"src":"11715:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8332,"name":"address","nodeType":"ElementaryTypeName","src":"11715:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8333,"nodeType":"ArrayTypeName","src":"11715:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8337,"mutability":"mutable","name":"value","nameLocation":"11765:5:31","nodeType":"VariableDeclaration","scope":8458,"src":"11746:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8335,"name":"uint256","nodeType":"ElementaryTypeName","src":"11746:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8336,"nodeType":"ArrayTypeName","src":"11746:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8340,"mutability":"mutable","name":"data","nameLocation":"11797:4:31","nodeType":"VariableDeclaration","scope":8458,"src":"11780:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":8338,"name":"bytes","nodeType":"ElementaryTypeName","src":"11780:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":8339,"nodeType":"ArrayTypeName","src":"11780:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":8343,"mutability":"mutable","name":"comments","nameLocation":"11829:8:31","nodeType":"VariableDeclaration","scope":8458,"src":"11811:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8341,"name":"string","nodeType":"ElementaryTypeName","src":"11811:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8342,"nodeType":"ArrayTypeName","src":"11811:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"11705:138:31"},"returnParameters":{"id":8355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8354,"mutability":"mutable","name":"txIndices","nameLocation":"11968:9:31","nodeType":"VariableDeclaration","scope":8458,"src":"11951:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8352,"name":"uint256","nodeType":"ElementaryTypeName","src":"11951:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8353,"nodeType":"ArrayTypeName","src":"11951:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11950:28:31"},"scope":9481,"src":"11673:1090:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8518,"nodeType":"Block","src":"13341:443:31","statements":[{"assignments":[8480],"declarations":[{"constant":false,"id":8480,"mutability":"mutable","name":"sender","nameLocation":"13359:6:31","nodeType":"VariableDeclaration","scope":8518,"src":"13351:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8479,"name":"address","nodeType":"ElementaryTypeName","src":"13351:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8483,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8481,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"13368:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13368:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13351:29:31"},{"assignments":[8485],"declarations":[{"constant":false,"id":8485,"mutability":"mutable","name":"data","nameLocation":"13448:4:31","nodeType":"VariableDeclaration","scope":8518,"src":"13435:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8484,"name":"bytes","nodeType":"ElementaryTypeName","src":"13435:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8494,"initialValue":{"arguments":[{"expression":{"expression":{"id":8488,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"13478:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1773_$","typeString":"type(contract IERC20)"}},"id":8489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13485:8:31","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1740,"src":"13478:15:31","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transfer(address,uint256) returns (bool)"}},"id":8490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13494:8:31","memberName":"selector","nodeType":"MemberAccess","src":"13478:24:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8463,"src":"13504:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"13508:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8486,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13455:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13459:18:31","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"13455:22:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13455:60:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13435:80:31"},{"expression":{"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8495,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"13525:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8497,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8461,"src":"13553:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":8498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13560:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8499,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"13563:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8500,"name":"comment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"13569:7:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8496,"name":"_storeTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"13535:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory,string memory) returns (uint256)"}},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13535:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13525:52:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8503,"nodeType":"ExpressionStatement","src":"13525:52:31"},{"eventCall":{"arguments":[{"id":8505,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"13648:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8506,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"13656:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8507,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8461,"src":"13665:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8508,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8463,"src":"13672:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8509,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"13676:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8510,"name":"comment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"13684:7:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8504,"name":"SubmitERC20TransferTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"13617:30:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,address,uint256,string memory)"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13617:75:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8512,"nodeType":"EmitStatement","src":"13612:80:31"},{"expression":{"arguments":[{"id":8514,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"13761:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8515,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"13770:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8513,"name":"_confirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"13752:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13752:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8517,"nodeType":"ExpressionStatement","src":"13752:25:31"}]},"documentation":{"id":8459,"nodeType":"StructuredDocumentation","src":"12769:304:31","text":"@notice Submits a new ERC20 token transfer transaction\n @param token Address of the ERC20 token\n @param to Recipient address\n @param amount Amount of tokens to transfer\n @param comment Description of the transaction\n @return txIndex Index of the created transaction"},"functionSelector":"ee0e6f65","id":8519,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8470,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"13247:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8471,"kind":"modifierInvocation","modifierName":{"id":8469,"name":"onlyRole","nameLocations":["13238:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"13238:8:31"},"nodeType":"ModifierInvocation","src":"13238:21:31"},{"id":8473,"kind":"modifierInvocation","modifierName":{"id":8472,"name":"whenNotPaused","nameLocations":["13268:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"13268:13:31"},"nodeType":"ModifierInvocation","src":"13268:13:31"},{"id":8475,"kind":"modifierInvocation","modifierName":{"id":8474,"name":"nonReentrant","nameLocations":["13290:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"13290:12:31"},"nodeType":"ModifierInvocation","src":"13290:12:31"}],"name":"submitERC20Transfer","nameLocation":"13087:19:31","nodeType":"FunctionDefinition","parameters":{"id":8468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8461,"mutability":"mutable","name":"token","nameLocation":"13124:5:31","nodeType":"VariableDeclaration","scope":8519,"src":"13116:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8460,"name":"address","nodeType":"ElementaryTypeName","src":"13116:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8463,"mutability":"mutable","name":"to","nameLocation":"13147:2:31","nodeType":"VariableDeclaration","scope":8519,"src":"13139:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8462,"name":"address","nodeType":"ElementaryTypeName","src":"13139:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8465,"mutability":"mutable","name":"amount","nameLocation":"13167:6:31","nodeType":"VariableDeclaration","scope":8519,"src":"13159:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8464,"name":"uint256","nodeType":"ElementaryTypeName","src":"13159:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8467,"mutability":"mutable","name":"comment","nameLocation":"13199:7:31","nodeType":"VariableDeclaration","scope":8519,"src":"13183:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8466,"name":"string","nodeType":"ElementaryTypeName","src":"13183:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13106:106:31"},"returnParameters":{"id":8478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8477,"mutability":"mutable","name":"txIndex","nameLocation":"13328:7:31","nodeType":"VariableDeclaration","scope":8519,"src":"13320:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8476,"name":"uint256","nodeType":"ElementaryTypeName","src":"13320:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13319:17:31"},"scope":9481,"src":"13078:706:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8657,"nodeType":"Block","src":"14459:899:31","statements":[{"assignments":[8546],"declarations":[{"constant":false,"id":8546,"mutability":"mutable","name":"batchSize","nameLocation":"14477:9:31","nodeType":"VariableDeclaration","scope":8657,"src":"14469:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8545,"name":"uint256","nodeType":"ElementaryTypeName","src":"14469:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8549,"initialValue":{"expression":{"id":8547,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"14489:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14496:6:31","memberName":"length","nodeType":"MemberAccess","src":"14489:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14469:33:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8550,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"14516:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14529:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14516:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8556,"nodeType":"IfStatement","src":"14512:44:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8553,"name":"EmptyBatchArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"14539:15:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14539:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8555,"nodeType":"RevertStatement","src":"14532:24:31"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8557,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"14620:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"14633:2:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14636:6:31","memberName":"length","nodeType":"MemberAccess","src":"14633:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14620:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8561,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"14646:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8562,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"14659:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14667:6:31","memberName":"length","nodeType":"MemberAccess","src":"14659:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14646:27:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14620:53:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8566,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"14677:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8567,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8532,"src":"14690:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14699:6:31","memberName":"length","nodeType":"MemberAccess","src":"14690:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14677:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14620:85:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8575,"nodeType":"IfStatement","src":"14616:144:31","trueBody":{"id":8574,"nodeType":"Block","src":"14707:53:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8571,"name":"ArrayLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"14728:19:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14728:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8573,"nodeType":"RevertStatement","src":"14721:28:31"}]}},{"assignments":[8577],"declarations":[{"constant":false,"id":8577,"mutability":"mutable","name":"sender","nameLocation":"14778:6:31","nodeType":"VariableDeclaration","scope":8657,"src":"14770:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8576,"name":"address","nodeType":"ElementaryTypeName","src":"14770:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8580,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8578,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"14787:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14770:29:31"},{"expression":{"id":8587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8581,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"14809:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8585,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"14835:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14821:13:31","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":8582,"name":"uint256","nodeType":"ElementaryTypeName","src":"14825:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8583,"nodeType":"ArrayTypeName","src":"14825:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"14809:36:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8588,"nodeType":"ExpressionStatement","src":"14809:36:31"},{"body":{"id":8655,"nodeType":"Block","src":"14948:404:31","statements":[{"assignments":[8600],"declarations":[{"constant":false,"id":8600,"mutability":"mutable","name":"data","nameLocation":"14975:4:31","nodeType":"VariableDeclaration","scope":8655,"src":"14962:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8599,"name":"bytes","nodeType":"ElementaryTypeName","src":"14962:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8613,"initialValue":{"arguments":[{"expression":{"expression":{"id":8603,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"15005:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1773_$","typeString":"type(contract IERC20)"}},"id":8604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15012:8:31","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1740,"src":"15005:15:31","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transfer(address,uint256) returns (bool)"}},"id":8605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15021:8:31","memberName":"selector","nodeType":"MemberAccess","src":"15005:24:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"baseExpression":{"id":8606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"15031:2:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8608,"indexExpression":{"id":8607,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15034:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15031:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8609,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"15038:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8611,"indexExpression":{"id":8610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15046:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15038:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8601,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14982:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14986:18:31","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"14982:22:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14982:67:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"14962:87:31"},{"expression":{"id":8627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8614,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"15063:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8616,"indexExpression":{"id":8615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15073:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15063:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":8618,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"15096:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8620,"indexExpression":{"id":8619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15103:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15096:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":8621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8622,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"15110:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"baseExpression":{"id":8623,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8532,"src":"15116:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8625,"indexExpression":{"id":8624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15125:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15116:11:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8617,"name":"_storeTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"15078:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory,string memory) returns (uint256)"}},"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15078:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15063:65:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8628,"nodeType":"ExpressionStatement","src":"15063:65:31"},{"eventCall":{"arguments":[{"id":8630,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"15178:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8631,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"15186:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8633,"indexExpression":{"id":8632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15196:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15186:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8634,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"15200:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8636,"indexExpression":{"id":8635,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15207:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15200:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"15211:2:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8639,"indexExpression":{"id":8638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15214:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15211:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8640,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"15218:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8642,"indexExpression":{"id":8641,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15226:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15218:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8643,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8532,"src":"15230:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8645,"indexExpression":{"id":8644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15239:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15230:11:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8629,"name":"SubmitERC20TransferTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"15147:30:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,address,uint256,string memory)"}},"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15147:95:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8647,"nodeType":"EmitStatement","src":"15142:100:31"},{"expression":{"arguments":[{"baseExpression":{"id":8649,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"15320:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8651,"indexExpression":{"id":8650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"15330:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15320:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8652,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"15334:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8648,"name":"_confirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"15311:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15311:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8654,"nodeType":"ExpressionStatement","src":"15311:30:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8593,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"14928:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8594,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"14932:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14928:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8656,"initializationExpression":{"assignments":[8590],"declarations":[{"constant":false,"id":8590,"mutability":"mutable","name":"i","nameLocation":"14921:1:31","nodeType":"VariableDeclaration","scope":8656,"src":"14913:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8589,"name":"uint256","nodeType":"ElementaryTypeName","src":"14913:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8592,"initialValue":{"hexValue":"30","id":8591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14925:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14913:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14943:3:31","subExpression":{"id":8596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"14943:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8598,"nodeType":"ExpressionStatement","src":"14943:3:31"},"nodeType":"ForStatement","src":"14908:444:31"}]},"documentation":{"id":8520,"nodeType":"StructuredDocumentation","src":"13790:346:31","text":"@notice Submits multiple ERC20 token transfer transactions in a single call\n @param tokens Array of ERC20 token addresses\n @param to Array of recipient addresses\n @param amounts Array of token amounts\n @param comments Array of transaction descriptions\n @return txIndices Array of created transaction indices"},"functionSelector":"205e7c06","id":8658,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8535,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"14354:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8536,"kind":"modifierInvocation","modifierName":{"id":8534,"name":"onlyRole","nameLocations":["14345:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"14345:8:31"},"nodeType":"ModifierInvocation","src":"14345:21:31"},{"id":8538,"kind":"modifierInvocation","modifierName":{"id":8537,"name":"whenNotPaused","nameLocations":["14375:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"14375:13:31"},"nodeType":"ModifierInvocation","src":"14375:13:31"},{"id":8540,"kind":"modifierInvocation","modifierName":{"id":8539,"name":"nonReentrant","nameLocations":["14397:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"14397:12:31"},"nodeType":"ModifierInvocation","src":"14397:12:31"}],"name":"batchSubmitERC20Transfers","nameLocation":"14150:25:31","nodeType":"FunctionDefinition","parameters":{"id":8533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8523,"mutability":"mutable","name":"tokens","nameLocation":"14204:6:31","nodeType":"VariableDeclaration","scope":8658,"src":"14185:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8521,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8522,"nodeType":"ArrayTypeName","src":"14185:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8526,"mutability":"mutable","name":"to","nameLocation":"14239:2:31","nodeType":"VariableDeclaration","scope":8658,"src":"14220:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8524,"name":"address","nodeType":"ElementaryTypeName","src":"14220:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8525,"nodeType":"ArrayTypeName","src":"14220:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8529,"mutability":"mutable","name":"amounts","nameLocation":"14270:7:31","nodeType":"VariableDeclaration","scope":8658,"src":"14251:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8527,"name":"uint256","nodeType":"ElementaryTypeName","src":"14251:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8528,"nodeType":"ArrayTypeName","src":"14251:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8532,"mutability":"mutable","name":"comments","nameLocation":"14305:8:31","nodeType":"VariableDeclaration","scope":8658,"src":"14287:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8530,"name":"string","nodeType":"ElementaryTypeName","src":"14287:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8531,"nodeType":"ArrayTypeName","src":"14287:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"14175:144:31"},"returnParameters":{"id":8544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8543,"mutability":"mutable","name":"txIndices","nameLocation":"14444:9:31","nodeType":"VariableDeclaration","scope":8658,"src":"14427:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8541,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8542,"nodeType":"ArrayTypeName","src":"14427:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14426:28:31"},"scope":9481,"src":"14141:1217:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8719,"nodeType":"Block","src":"16112:458:31","statements":[{"assignments":[8682],"declarations":[{"constant":false,"id":8682,"mutability":"mutable","name":"sender","nameLocation":"16130:6:31","nodeType":"VariableDeclaration","scope":8719,"src":"16122:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8681,"name":"address","nodeType":"ElementaryTypeName","src":"16122:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8685,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8683,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"16139:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16139:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16122:29:31"},{"assignments":[8687],"declarations":[{"constant":false,"id":8687,"mutability":"mutable","name":"data","nameLocation":"16244:4:31","nodeType":"VariableDeclaration","scope":8719,"src":"16231:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8686,"name":"bytes","nodeType":"ElementaryTypeName","src":"16231:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8694,"initialValue":{"arguments":[{"id":8691,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"16264:8:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8692,"name":"abiEncodedArguments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8667,"src":"16274:19:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":8689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16251:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8688,"name":"bytes","nodeType":"ElementaryTypeName","src":"16251:5:31","typeDescriptions":{}}},"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16257:6:31","memberName":"concat","nodeType":"MemberAccess","src":"16251:12:31","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16251:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"16231:63:31"},{"expression":{"id":8702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8695,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"16304:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8697,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"16332:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"16340:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8699,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"16347:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8700,"name":"comment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"16353:7:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8696,"name":"_storeTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"16314:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory,string memory) returns (uint256)"}},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16314:47:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16304:57:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8703,"nodeType":"ExpressionStatement","src":"16304:57:31"},{"eventCall":{"arguments":[{"id":8705,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8682,"src":"16407:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8706,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"16415:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8707,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"16424:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"16432:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8709,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"16439:8:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8710,"name":"abiEncodedArguments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8667,"src":"16449:19:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":8711,"name":"comment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"16470:7:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8704,"name":"SubmitContractCallTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"16377:29:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_bytes4_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,uint256,bytes4,bytes memory,string memory)"}},"id":8712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:101:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8713,"nodeType":"EmitStatement","src":"16372:106:31"},{"expression":{"arguments":[{"id":8715,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"16547:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8716,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8682,"src":"16556:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8714,"name":"_confirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"16538:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16538:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8718,"nodeType":"ExpressionStatement","src":"16538:25:31"}]},"documentation":{"id":8659,"nodeType":"StructuredDocumentation","src":"15364:432:31","text":"@notice Submits a contract call transaction\n @param target Address of the contract to call\n @param value Amount of ETH to send with the call\n @param selector Function selector (first 4 bytes of the function signature)\n @param abiEncodedArguments ABI-encoded arguments for the function call\n @param comment Description of the transaction\n @return txIndex Index of the created transaction"},"functionSelector":"aa787c1e","id":8720,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8672,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"16018:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8673,"kind":"modifierInvocation","modifierName":{"id":8671,"name":"onlyRole","nameLocations":["16009:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"16009:8:31"},"nodeType":"ModifierInvocation","src":"16009:21:31"},{"id":8675,"kind":"modifierInvocation","modifierName":{"id":8674,"name":"whenNotPaused","nameLocations":["16039:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"16039:13:31"},"nodeType":"ModifierInvocation","src":"16039:13:31"},{"id":8677,"kind":"modifierInvocation","modifierName":{"id":8676,"name":"nonReentrant","nameLocations":["16061:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"16061:12:31"},"nodeType":"ModifierInvocation","src":"16061:12:31"}],"name":"submitContractCall","nameLocation":"15810:18:31","nodeType":"FunctionDefinition","parameters":{"id":8670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8661,"mutability":"mutable","name":"target","nameLocation":"15846:6:31","nodeType":"VariableDeclaration","scope":8720,"src":"15838:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8660,"name":"address","nodeType":"ElementaryTypeName","src":"15838:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8663,"mutability":"mutable","name":"value","nameLocation":"15870:5:31","nodeType":"VariableDeclaration","scope":8720,"src":"15862:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8662,"name":"uint256","nodeType":"ElementaryTypeName","src":"15862:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8665,"mutability":"mutable","name":"selector","nameLocation":"15892:8:31","nodeType":"VariableDeclaration","scope":8720,"src":"15885:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8664,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15885:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":8667,"mutability":"mutable","name":"abiEncodedArguments","nameLocation":"15925:19:31","nodeType":"VariableDeclaration","scope":8720,"src":"15910:34:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8666,"name":"bytes","nodeType":"ElementaryTypeName","src":"15910:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8669,"mutability":"mutable","name":"comment","nameLocation":"15970:7:31","nodeType":"VariableDeclaration","scope":8720,"src":"15954:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8668,"name":"string","nodeType":"ElementaryTypeName","src":"15954:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15828:155:31"},"returnParameters":{"id":8680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8679,"mutability":"mutable","name":"txIndex","nameLocation":"16099:7:31","nodeType":"VariableDeclaration","scope":8720,"src":"16091:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8678,"name":"uint256","nodeType":"ElementaryTypeName","src":"16091:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16090:17:31"},"scope":9481,"src":"15801:769:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8868,"nodeType":"Block","src":"17356:1015:31","statements":[{"assignments":[8750],"declarations":[{"constant":false,"id":8750,"mutability":"mutable","name":"batchSize","nameLocation":"17374:9:31","nodeType":"VariableDeclaration","scope":8868,"src":"17366:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8749,"name":"uint256","nodeType":"ElementaryTypeName","src":"17366:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8753,"initialValue":{"expression":{"id":8751,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"17386:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17394:6:31","memberName":"length","nodeType":"MemberAccess","src":"17386:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17366:34:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8754,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"17414:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17427:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17414:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8760,"nodeType":"IfStatement","src":"17410:44:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8757,"name":"EmptyBatchArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"17437:15:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17437:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8759,"nodeType":"RevertStatement","src":"17430:24:31"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8761,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"17531:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8762,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"17544:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17551:6:31","memberName":"length","nodeType":"MemberAccess","src":"17544:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17531:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8765,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"17561:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8766,"name":"selectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"17574:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_calldata_ptr","typeString":"bytes4[] calldata"}},"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17584:6:31","memberName":"length","nodeType":"MemberAccess","src":"17574:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17561:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17531:59:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8770,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"17594:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8771,"name":"abiEncodedArguments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8733,"src":"17607:19:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":8772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17627:6:31","memberName":"length","nodeType":"MemberAccess","src":"17607:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17594:39:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17531:102:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8775,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"17653:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8776,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"17666:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17675:6:31","memberName":"length","nodeType":"MemberAccess","src":"17666:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17653:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17531:150:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8783,"nodeType":"IfStatement","src":"17514:206:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8780,"name":"ArrayLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"17699:19:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17699:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8782,"nodeType":"RevertStatement","src":"17692:28:31"}},{"assignments":[8785],"declarations":[{"constant":false,"id":8785,"mutability":"mutable","name":"sender","nameLocation":"17739:6:31","nodeType":"VariableDeclaration","scope":8868,"src":"17731:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8784,"name":"address","nodeType":"ElementaryTypeName","src":"17731:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8788,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8786,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"17748:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17748:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17731:29:31"},{"expression":{"id":8795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8789,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"17770:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8793,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"17796:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17782:13:31","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":8790,"name":"uint256","nodeType":"ElementaryTypeName","src":"17786:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8791,"nodeType":"ArrayTypeName","src":"17786:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17782:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"17770:36:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8796,"nodeType":"ExpressionStatement","src":"17770:36:31"},{"body":{"id":8866,"nodeType":"Block","src":"17908:457:31","statements":[{"assignments":[8808],"declarations":[{"constant":false,"id":8808,"mutability":"mutable","name":"data","nameLocation":"17935:4:31","nodeType":"VariableDeclaration","scope":8866,"src":"17922:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8807,"name":"bytes","nodeType":"ElementaryTypeName","src":"17922:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8819,"initialValue":{"arguments":[{"baseExpression":{"id":8812,"name":"selectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"17955:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_calldata_ptr","typeString":"bytes4[] calldata"}},"id":8814,"indexExpression":{"id":8813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"17965:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17955:12:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"baseExpression":{"id":8815,"name":"abiEncodedArguments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8733,"src":"17969:19:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":8817,"indexExpression":{"id":8816,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"17989:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17969:22:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":8810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17942:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8809,"name":"bytes","nodeType":"ElementaryTypeName","src":"17942:5:31","typeDescriptions":{}}},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17948:6:31","memberName":"concat","nodeType":"MemberAccess","src":"17942:12:31","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17942:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17922:70:31"},{"expression":{"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8820,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"18006:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8822,"indexExpression":{"id":8821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18016:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18006:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":8824,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"18039:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8826,"indexExpression":{"id":8825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18047:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18039:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8827,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"18051:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8829,"indexExpression":{"id":8828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18058:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18051:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8830,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"18062:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"baseExpression":{"id":8831,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"18068:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8833,"indexExpression":{"id":8832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18077:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18068:11:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8823,"name":"_storeTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"18021:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory,string memory) returns (uint256)"}},"id":8834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18021:59:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18006:74:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8836,"nodeType":"ExpressionStatement","src":"18006:74:31"},{"eventCall":{"arguments":[{"id":8838,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"18147:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8839,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"18155:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8841,"indexExpression":{"id":8840,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18165:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18155:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8842,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"18169:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8844,"indexExpression":{"id":8843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18177:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18169:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8845,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"18181:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8847,"indexExpression":{"id":8846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18188:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18181:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8848,"name":"selectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"18192:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_calldata_ptr","typeString":"bytes4[] calldata"}},"id":8850,"indexExpression":{"id":8849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18202:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18192:12:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"baseExpression":{"id":8851,"name":"abiEncodedArguments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8733,"src":"18206:19:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":8853,"indexExpression":{"id":8852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18226:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18206:22:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"baseExpression":{"id":8854,"name":"comments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"18230:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":8856,"indexExpression":{"id":8855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18239:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18230:11:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8837,"name":"SubmitContractCallTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"18100:29:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_bytes4_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,uint256,bytes4,bytes memory,string memory)"}},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18100:155:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8858,"nodeType":"EmitStatement","src":"18095:160:31"},{"expression":{"arguments":[{"baseExpression":{"id":8860,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"18333:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8862,"indexExpression":{"id":8861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"18343:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18333:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8863,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"18347:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8859,"name":"_confirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"18324:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18324:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8865,"nodeType":"ExpressionStatement","src":"18324:30:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8801,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"17888:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8802,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"17892:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17888:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8867,"initializationExpression":{"assignments":[8798],"declarations":[{"constant":false,"id":8798,"mutability":"mutable","name":"i","nameLocation":"17881:1:31","nodeType":"VariableDeclaration","scope":8867,"src":"17873:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8797,"name":"uint256","nodeType":"ElementaryTypeName","src":"17873:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8800,"initialValue":{"hexValue":"30","id":8799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17885:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17873:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17903:3:31","subExpression":{"id":8804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"17903:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8806,"nodeType":"ExpressionStatement","src":"17903:3:31"},"nodeType":"ForStatement","src":"17868:497:31"}]},"documentation":{"id":8721,"nodeType":"StructuredDocumentation","src":"16576:406:31","text":"@notice Submits multiple contract call transactions in a single call\n @param targets Array of contract addresses\n @param values Array of ETH amounts\n @param selectors Array of function selectors\n @param abiEncodedArguments Array of ABI-encoded arguments\n @param comments Array of transaction descriptions\n @return txIndices Array of created transaction indices"},"functionSelector":"c13138f1","id":8869,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8739,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"17251:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8740,"kind":"modifierInvocation","modifierName":{"id":8738,"name":"onlyRole","nameLocations":["17242:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"17242:8:31"},"nodeType":"ModifierInvocation","src":"17242:21:31"},{"id":8742,"kind":"modifierInvocation","modifierName":{"id":8741,"name":"whenNotPaused","nameLocations":["17272:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"17272:13:31"},"nodeType":"ModifierInvocation","src":"17272:13:31"},{"id":8744,"kind":"modifierInvocation","modifierName":{"id":8743,"name":"nonReentrant","nameLocations":["17294:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"17294:12:31"},"nodeType":"ModifierInvocation","src":"17294:12:31"}],"name":"batchSubmitContractCalls","nameLocation":"16996:24:31","nodeType":"FunctionDefinition","parameters":{"id":8737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8724,"mutability":"mutable","name":"targets","nameLocation":"17049:7:31","nodeType":"VariableDeclaration","scope":8869,"src":"17030:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8722,"name":"address","nodeType":"ElementaryTypeName","src":"17030:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8723,"nodeType":"ArrayTypeName","src":"17030:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8727,"mutability":"mutable","name":"values","nameLocation":"17085:6:31","nodeType":"VariableDeclaration","scope":8869,"src":"17066:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8725,"name":"uint256","nodeType":"ElementaryTypeName","src":"17066:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8726,"nodeType":"ArrayTypeName","src":"17066:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8730,"mutability":"mutable","name":"selectors","nameLocation":"17119:9:31","nodeType":"VariableDeclaration","scope":8869,"src":"17101:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_calldata_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":8728,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17101:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":8729,"nodeType":"ArrayTypeName","src":"17101:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"},{"constant":false,"id":8733,"mutability":"mutable","name":"abiEncodedArguments","nameLocation":"17155:19:31","nodeType":"VariableDeclaration","scope":8869,"src":"17138:36:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":8731,"name":"bytes","nodeType":"ElementaryTypeName","src":"17138:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":8732,"nodeType":"ArrayTypeName","src":"17138:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":8736,"mutability":"mutable","name":"comments","nameLocation":"17202:8:31","nodeType":"VariableDeclaration","scope":8869,"src":"17184:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8734,"name":"string","nodeType":"ElementaryTypeName","src":"17184:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8735,"nodeType":"ArrayTypeName","src":"17184:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"17020:196:31"},"returnParameters":{"id":8748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8747,"mutability":"mutable","name":"txIndices","nameLocation":"17341:9:31","nodeType":"VariableDeclaration","scope":8869,"src":"17324:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8745,"name":"uint256","nodeType":"ElementaryTypeName","src":"17324:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8746,"nodeType":"ArrayTypeName","src":"17324:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17323:28:31"},"scope":9481,"src":"16987:1384:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8888,"nodeType":"Block","src":"18575:48:31","statements":[{"expression":{"arguments":[{"id":8883,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"18594:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8884,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"18603:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18603:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8882,"name":"_confirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"18585:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18585:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8887,"nodeType":"ExpressionStatement","src":"18585:31:31"}]},"documentation":{"id":8870,"nodeType":"StructuredDocumentation","src":"18377:101:31","text":"@notice Confirms a pending transaction\n @param txIndex Index of the transaction to confirm"},"functionSelector":"ba0179b5","id":8889,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8875,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"18535:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8876,"kind":"modifierInvocation","modifierName":{"id":8874,"name":"onlyRole","nameLocations":["18526:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"18526:8:31"},"nodeType":"ModifierInvocation","src":"18526:21:31"},{"id":8878,"kind":"modifierInvocation","modifierName":{"id":8877,"name":"whenNotPaused","nameLocations":["18548:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"18548:13:31"},"nodeType":"ModifierInvocation","src":"18548:13:31"},{"id":8880,"kind":"modifierInvocation","modifierName":{"id":8879,"name":"nonReentrant","nameLocations":["18562:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"18562:12:31"},"nodeType":"ModifierInvocation","src":"18562:12:31"}],"name":"confirm","nameLocation":"18492:7:31","nodeType":"FunctionDefinition","parameters":{"id":8873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8872,"mutability":"mutable","name":"txIndex","nameLocation":"18508:7:31","nodeType":"VariableDeclaration","scope":8889,"src":"18500:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8871,"name":"uint256","nodeType":"ElementaryTypeName","src":"18500:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18499:17:31"},"returnParameters":{"id":8881,"nodeType":"ParameterList","parameters":[],"src":"18575:0:31"},"scope":9481,"src":"18483:140:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8936,"nodeType":"Block","src":"18876:268:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8903,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8893,"src":"18890:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18900:6:31","memberName":"length","nodeType":"MemberAccess","src":"18890:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18910:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18890:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8910,"nodeType":"IfStatement","src":"18886:51:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8907,"name":"EmptyBatchArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"18920:15:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18920:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8909,"nodeType":"RevertStatement","src":"18913:24:31"}},{"assignments":[8912],"declarations":[{"constant":false,"id":8912,"mutability":"mutable","name":"sender","nameLocation":"18956:6:31","nodeType":"VariableDeclaration","scope":8936,"src":"18948:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8911,"name":"address","nodeType":"ElementaryTypeName","src":"18948:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8915,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8913,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"18965:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18965:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18948:29:31"},{"body":{"id":8934,"nodeType":"Block","src":"19083:55:31","statements":[{"expression":{"arguments":[{"baseExpression":{"id":8928,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8893,"src":"19106:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8930,"indexExpression":{"id":8929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8917,"src":"19116:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19106:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8931,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"19120:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8927,"name":"_confirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"19097:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19097:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8933,"nodeType":"ExpressionStatement","src":"19097:30:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8917,"src":"19056:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8921,"name":"txIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8893,"src":"19060:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19070:6:31","memberName":"length","nodeType":"MemberAccess","src":"19060:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19056:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8935,"initializationExpression":{"assignments":[8917],"declarations":[{"constant":false,"id":8917,"mutability":"mutable","name":"i","nameLocation":"19049:1:31","nodeType":"VariableDeclaration","scope":8935,"src":"19041:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8916,"name":"uint256","nodeType":"ElementaryTypeName","src":"19041:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8919,"initialValue":{"hexValue":"30","id":8918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19053:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19041:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19078:3:31","subExpression":{"id":8924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8917,"src":"19078:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8926,"nodeType":"ExpressionStatement","src":"19078:3:31"},"nodeType":"ForStatement","src":"19036:102:31"}]},"documentation":{"id":8890,"nodeType":"StructuredDocumentation","src":"18629:132:31","text":"@notice Confirms multiple pending transactions in a single call\n @param txIndices Array of transaction indices to confirm"},"functionSelector":"62391520","id":8937,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8896,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"18836:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8897,"kind":"modifierInvocation","modifierName":{"id":8895,"name":"onlyRole","nameLocations":["18827:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"18827:8:31"},"nodeType":"ModifierInvocation","src":"18827:21:31"},{"id":8899,"kind":"modifierInvocation","modifierName":{"id":8898,"name":"whenNotPaused","nameLocations":["18849:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"18849:13:31"},"nodeType":"ModifierInvocation","src":"18849:13:31"},{"id":8901,"kind":"modifierInvocation","modifierName":{"id":8900,"name":"nonReentrant","nameLocations":["18863:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3491,"src":"18863:12:31"},"nodeType":"ModifierInvocation","src":"18863:12:31"}],"name":"batchConfirm","nameLocation":"18775:12:31","nodeType":"FunctionDefinition","parameters":{"id":8894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8893,"mutability":"mutable","name":"txIndices","nameLocation":"18807:9:31","nodeType":"VariableDeclaration","scope":8937,"src":"18788:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8891,"name":"uint256","nodeType":"ElementaryTypeName","src":"18788:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8892,"nodeType":"ArrayTypeName","src":"18788:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18787:30:31"},"returnParameters":{"id":8902,"nodeType":"ParameterList","parameters":[],"src":"18876:0:31"},"scope":9481,"src":"18766:378:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8998,"nodeType":"Block","src":"19342:644:31","statements":[{"assignments":[8950],"declarations":[{"constant":false,"id":8950,"mutability":"mutable","name":"txn","nameLocation":"19372:3:31","nodeType":"VariableDeclaration","scope":8998,"src":"19352:23:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"},"typeName":{"id":8949,"nodeType":"UserDefinedTypeName","pathNode":{"id":8948,"name":"Transaction","nameLocations":["19352:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":8048,"src":"19352:11:31"},"referencedDeclaration":8048,"src":"19352:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"}},"visibility":"internal"}],"id":8954,"initialValue":{"arguments":[{"id":8952,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"19395:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8951,"name":"_assertTxPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9246,"src":"19378:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Transaction_$8048_storage_ptr_$","typeString":"function (uint256) view returns (struct ATKVault.Transaction storage pointer)"}},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19378:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"19352:51:31"},{"assignments":[8956],"declarations":[{"constant":false,"id":8956,"mutability":"mutable","name":"sender","nameLocation":"19462:6:31","nodeType":"VariableDeclaration","scope":8998,"src":"19454:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8955,"name":"address","nodeType":"ElementaryTypeName","src":"19454:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8959,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8957,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[9452],"referencedDeclaration":9452,"src":"19471:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19471:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19454:29:31"},{"condition":{"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19573:40:31","subExpression":{"arguments":[{"id":8964,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8956,"src":"19606:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":8960,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"19574:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":8962,"indexExpression":{"id":8961,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"19588:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19574:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":8963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19597:8:31","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7681,"src":"19574:31:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":8965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19574:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8972,"nodeType":"IfStatement","src":"19569:82:31","trueBody":{"errorCall":{"arguments":[{"id":8968,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"19635:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8969,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8956,"src":"19644:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8967,"name":"NotConfirmed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"19622:12:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (uint256,address) pure returns (error)"}},"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19622:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8971,"nodeType":"RevertStatement","src":"19615:36:31"}},{"expression":{"arguments":[{"id":8977,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8956,"src":"19761:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":8973,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"19731:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":8975,"indexExpression":{"id":8974,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"19745:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19731:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":8976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19754:6:31","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7641,"src":"19731:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7587_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19731:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8979,"nodeType":"ExpressionStatement","src":"19731:37:31"},{"expression":{"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8980,"name":"confirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"19778:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":8983,"indexExpression":{"id":8981,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"19792:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19778:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8984,"indexExpression":{"id":8982,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8956,"src":"19801:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19778:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19811:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"19778:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8987,"nodeType":"ExpressionStatement","src":"19778:38:31"},{"id":8992,"nodeType":"UncheckedBlock","src":"19873:57:31","statements":[{"expression":{"id":8990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"19897:22:31","subExpression":{"expression":{"id":8988,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8950,"src":"19899:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":8989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19903:16:31","memberName":"numConfirmations","nodeType":"MemberAccess","referencedDeclaration":8045,"src":"19899:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8991,"nodeType":"ExpressionStatement","src":"19897:22:31"}]},{"eventCall":{"arguments":[{"id":8994,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8956,"src":"19963:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8995,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"19971:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8993,"name":"RevokeConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8011,"src":"19944:18:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19944:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8997,"nodeType":"EmitStatement","src":"19939:40:31"}]},"documentation":{"id":8938,"nodeType":"StructuredDocumentation","src":"19150:109:31","text":"@notice Revokes a confirmation from a pending transaction\n @param txIndex Index of the transaction"},"functionSelector":"20c5429b","id":8999,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8943,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"19315:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8944,"kind":"modifierInvocation","modifierName":{"id":8942,"name":"onlyRole","nameLocations":["19306:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"19306:8:31"},"nodeType":"ModifierInvocation","src":"19306:21:31"},{"id":8946,"kind":"modifierInvocation","modifierName":{"id":8945,"name":"whenNotPaused","nameLocations":["19328:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":3383,"src":"19328:13:31"},"nodeType":"ModifierInvocation","src":"19328:13:31"}],"name":"revoke","nameLocation":"19273:6:31","nodeType":"FunctionDefinition","parameters":{"id":8941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8940,"mutability":"mutable","name":"txIndex","nameLocation":"19288:7:31","nodeType":"VariableDeclaration","scope":8999,"src":"19280:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8939,"name":"uint256","nodeType":"ElementaryTypeName","src":"19280:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19279:17:31"},"returnParameters":{"id":8947,"nodeType":"ParameterList","parameters":[],"src":"19342:0:31"},"scope":9481,"src":"19264:722:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9043,"nodeType":"Block","src":"20166:305:31","statements":[{"assignments":[9007],"declarations":[{"constant":false,"id":9007,"mutability":"mutable","name":"count","nameLocation":"20184:5:31","nodeType":"VariableDeclaration","scope":9043,"src":"20176:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9006,"name":"uint256","nodeType":"ElementaryTypeName","src":"20176:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9011,"initialValue":{"arguments":[{"id":9009,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"20211:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9008,"name":"getRoleMemberCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"20192:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) view returns (uint256)"}},"id":9010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20192:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20176:47:31"},{"expression":{"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9012,"name":"signers_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9004,"src":"20233:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9016,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9007,"src":"20258:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20244:13:31","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":9013,"name":"address","nodeType":"ElementaryTypeName","src":"20248:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9014,"nodeType":"ArrayTypeName","src":"20248:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20244:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"20233:31:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9019,"nodeType":"ExpressionStatement","src":"20233:31:31"},{"body":{"id":9039,"nodeType":"Block","src":"20372:68:31","statements":[{"expression":{"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9030,"name":"signers_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9004,"src":"20386:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9032,"indexExpression":{"id":9031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"20395:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20386:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9034,"name":"SIGNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"20414:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"20427:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9033,"name":"getRoleMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"20400:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes32,uint256) view returns (address)"}},"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20400:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20386:43:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9038,"nodeType":"ExpressionStatement","src":"20386:43:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"20356:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9025,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9007,"src":"20360:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20356:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9040,"initializationExpression":{"assignments":[9021],"declarations":[{"constant":false,"id":9021,"mutability":"mutable","name":"i","nameLocation":"20349:1:31","nodeType":"VariableDeclaration","scope":9040,"src":"20341:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9020,"name":"uint256","nodeType":"ElementaryTypeName","src":"20341:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9023,"initialValue":{"hexValue":"30","id":9022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20353:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20341:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20367:3:31","subExpression":{"id":9027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"20369:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9029,"nodeType":"ExpressionStatement","src":"20367:3:31"},"nodeType":"ForStatement","src":"20336:104:31"},{"expression":{"id":9041,"name":"signers_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9004,"src":"20456:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":9005,"id":9042,"nodeType":"Return","src":"20449:15:31"}]},"documentation":{"id":9000,"nodeType":"StructuredDocumentation","src":"19992:100:31","text":"@notice Returns a list of all current signers\n @return signers_ Array of signer addresses"},"functionSelector":"46f0975a","id":9044,"implemented":true,"kind":"function","modifiers":[],"name":"signers","nameLocation":"20106:7:31","nodeType":"FunctionDefinition","parameters":{"id":9001,"nodeType":"ParameterList","parameters":[],"src":"20113:2:31"},"returnParameters":{"id":9005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9004,"mutability":"mutable","name":"signers_","nameLocation":"20156:8:31","nodeType":"VariableDeclaration","scope":9044,"src":"20139:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9002,"name":"address","nodeType":"ElementaryTypeName","src":"20139:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9003,"nodeType":"ArrayTypeName","src":"20139:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"20138:27:31"},"scope":9481,"src":"20097:374:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9077,"nodeType":"Block","src":"20741:200:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9053,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9047,"src":"20755:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9054,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"20766:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20779:6:31","memberName":"length","nodeType":"MemberAccess","src":"20766:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20755:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9072,"nodeType":"IfStatement","src":"20751:146:31","trueBody":{"id":9071,"nodeType":"Block","src":"20787:110:31","statements":[{"errorCall":{"arguments":[{"id":9058,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9047,"src":"20823:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9059,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"20832:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20845:6:31","memberName":"length","nodeType":"MemberAccess","src":"20832:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20854:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20832:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20884:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20832:53:31","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9063,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"20858:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20871:6:31","memberName":"length","nodeType":"MemberAccess","src":"20858:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20880:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20858:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9057,"name":"TxDoesNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"20808:14:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20808:78:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9070,"nodeType":"RevertStatement","src":"20801:85:31"}]}},{"expression":{"baseExpression":{"id":9073,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"20913:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9075,"indexExpression":{"id":9074,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9047,"src":"20926:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20913:21:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage","typeString":"struct ATKVault.Transaction storage ref"}},"functionReturnParameters":9052,"id":9076,"nodeType":"Return","src":"20906:28:31"}]},"documentation":{"id":9045,"nodeType":"StructuredDocumentation","src":"20477:178:31","text":"@notice Returns detailed information about a transaction\n @param txIndex Index of the transaction\n @return Transaction struct containing all transaction details"},"functionSelector":"46bd0841","id":9078,"implemented":true,"kind":"function","modifiers":[],"name":"transaction","nameLocation":"20669:11:31","nodeType":"FunctionDefinition","parameters":{"id":9048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9047,"mutability":"mutable","name":"txIndex","nameLocation":"20689:7:31","nodeType":"VariableDeclaration","scope":9078,"src":"20681:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9046,"name":"uint256","nodeType":"ElementaryTypeName","src":"20681:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20680:17:31"},"returnParameters":{"id":9052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9078,"src":"20721:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_memory_ptr","typeString":"struct ATKVault.Transaction"},"typeName":{"id":9050,"nodeType":"UserDefinedTypeName","pathNode":{"id":9049,"name":"Transaction","nameLocations":["20721:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":8048,"src":"20721:11:31"},"referencedDeclaration":8048,"src":"20721:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"}},"visibility":"internal"}],"src":"20720:20:31"},"scope":9481,"src":"20660:281:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9095,"nodeType":"Block","src":"21251:63:31","statements":[{"expression":{"arguments":[{"id":9092,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9083,"src":"21300:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":9088,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"21268:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":9090,"indexExpression":{"id":9089,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9081,"src":"21282:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21268:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21291:8:31","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7681,"src":"21268:31:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21268:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9087,"id":9094,"nodeType":"Return","src":"21261:46:31"}]},"documentation":{"id":9079,"nodeType":"StructuredDocumentation","src":"20947:215:31","text":"@notice Checks if a signer has confirmed a transaction\n @param txIndex Index of the transaction\n @param signer Address of the signer\n @return True if the signer has confirmed the transaction"},"functionSelector":"08aff933","id":9096,"implemented":true,"kind":"function","modifiers":[],"name":"hasConfirmed","nameLocation":"21176:12:31","nodeType":"FunctionDefinition","parameters":{"id":9084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9081,"mutability":"mutable","name":"txIndex","nameLocation":"21197:7:31","nodeType":"VariableDeclaration","scope":9096,"src":"21189:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9080,"name":"uint256","nodeType":"ElementaryTypeName","src":"21189:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9083,"mutability":"mutable","name":"signer","nameLocation":"21214:6:31","nodeType":"VariableDeclaration","scope":9096,"src":"21206:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9082,"name":"address","nodeType":"ElementaryTypeName","src":"21206:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21188:33:31"},"returnParameters":{"id":9087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9096,"src":"21245:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9085,"name":"bool","nodeType":"ElementaryTypeName","src":"21245:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21244:6:31"},"scope":9481,"src":"21167:147:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9169,"nodeType":"Block","src":"21595:464:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9105,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9099,"src":"21609:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9106,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"21620:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21633:6:31","memberName":"length","nodeType":"MemberAccess","src":"21620:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21609:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9124,"nodeType":"IfStatement","src":"21605:146:31","trueBody":{"id":9123,"nodeType":"Block","src":"21641:110:31","statements":[{"errorCall":{"arguments":[{"id":9110,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9099,"src":"21677:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9111,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"21686:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21699:6:31","memberName":"length","nodeType":"MemberAccess","src":"21686:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21708:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21686:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21738:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"21686:53:31","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9115,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"21712:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21725:6:31","memberName":"length","nodeType":"MemberAccess","src":"21712:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21734:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"21712:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9109,"name":"TxDoesNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"21662:14:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":9121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21662:78:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9122,"nodeType":"RevertStatement","src":"21655:85:31"}]}},{"assignments":[9126],"declarations":[{"constant":false,"id":9126,"mutability":"mutable","name":"count","nameLocation":"21769:5:31","nodeType":"VariableDeclaration","scope":9169,"src":"21761:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9125,"name":"uint256","nodeType":"ElementaryTypeName","src":"21761:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9132,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":9127,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"21777:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":9129,"indexExpression":{"id":9128,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9099,"src":"21791:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21777:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21800:6:31","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7696,"src":"21777:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":9131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21777:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21761:47:31"},{"assignments":[9137],"declarations":[{"constant":false,"id":9137,"mutability":"mutable","name":"result","nameLocation":"21835:6:31","nodeType":"VariableDeclaration","scope":9169,"src":"21818:23:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9135,"name":"address","nodeType":"ElementaryTypeName","src":"21818:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9136,"nodeType":"ArrayTypeName","src":"21818:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":9143,"initialValue":{"arguments":[{"id":9141,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"21858:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"21844:13:31","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":9138,"name":"address","nodeType":"ElementaryTypeName","src":"21848:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9139,"nodeType":"ArrayTypeName","src":"21848:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":9142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21844:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"21818:46:31"},{"body":{"id":9165,"nodeType":"Block","src":"21964:65:31","statements":[{"expression":{"id":9163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"21978:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9156,"indexExpression":{"id":9155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9145,"src":"21985:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21978:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9145,"src":"22016:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":9157,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"21990:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":9159,"indexExpression":{"id":9158,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9099,"src":"22004:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21990:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22013:2:31","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7723,"src":"21990:25:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":9162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21990:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21978:40:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9164,"nodeType":"ExpressionStatement","src":"21978:40:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9145,"src":"21948:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9149,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"21952:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21948:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9166,"initializationExpression":{"assignments":[9145],"declarations":[{"constant":false,"id":9145,"mutability":"mutable","name":"i","nameLocation":"21941:1:31","nodeType":"VariableDeclaration","scope":9166,"src":"21933:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9144,"name":"uint256","nodeType":"ElementaryTypeName","src":"21933:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9147,"initialValue":{"hexValue":"30","id":9146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21945:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21933:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21959:3:31","subExpression":{"id":9151,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9145,"src":"21959:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9153,"nodeType":"ExpressionStatement","src":"21959:3:31"},"nodeType":"ForStatement","src":"21928:101:31"},{"expression":{"id":9167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"22046:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":9104,"id":9168,"nodeType":"Return","src":"22039:13:31"}]},"documentation":{"id":9097,"nodeType":"StructuredDocumentation","src":"21320:189:31","text":"@notice Returns a list of all signers who confirmed a transaction\n @param txIndex Index of the transaction\n @return Array of signer addresses who confirmed the transaction"},"functionSelector":"b779e1c0","id":9170,"implemented":true,"kind":"function","modifiers":[],"name":"getConfirmers","nameLocation":"21523:13:31","nodeType":"FunctionDefinition","parameters":{"id":9100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9099,"mutability":"mutable","name":"txIndex","nameLocation":"21545:7:31","nodeType":"VariableDeclaration","scope":9170,"src":"21537:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9098,"name":"uint256","nodeType":"ElementaryTypeName","src":"21537:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21536:17:31"},"returnParameters":{"id":9104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9170,"src":"21577:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9101,"name":"address","nodeType":"ElementaryTypeName","src":"21577:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9102,"nodeType":"ArrayTypeName","src":"21577:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"21576:18:31"},"scope":9481,"src":"21514:545:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9202,"nodeType":"Block","src":"22527:325:31","statements":[{"expression":{"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9184,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"22537:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9185,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"22545:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22558:6:31","memberName":"length","nodeType":"MemberAccess","src":"22545:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22537:27:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9188,"nodeType":"ExpressionStatement","src":"22537:27:31"},{"expression":{"arguments":[{"arguments":[{"id":9193,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"22671:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"22682:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9195,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"22695:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":9196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22711:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":9197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22736:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9198,"name":"comment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9179,"src":"22748:7:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9192,"name":"Transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8048,"src":"22653:11:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Transaction_$8048_storage_ptr_$","typeString":"type(struct ATKVault.Transaction storage pointer)"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["22667:2:31","22675:5:31","22689:4:31","22701:8:31","22718:16:31","22739:7:31"],"names":["to","value","data","executed","numConfirmations","comment"],"nodeType":"FunctionCall","src":"22653:105:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_memory_ptr","typeString":"struct ATKVault.Transaction memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Transaction_$8048_memory_ptr","typeString":"struct ATKVault.Transaction memory"}],"expression":{"id":9189,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"22622:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22635:4:31","memberName":"push","nodeType":"MemberAccess","src":"22622:17:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage_ptr_$_t_struct$_Transaction_$8048_storage_$returns$__$attached_to$_t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage_ptr_$","typeString":"function (struct ATKVault.Transaction storage ref[] storage pointer,struct ATKVault.Transaction storage ref)"}},"id":9200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22622:146:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9201,"nodeType":"ExpressionStatement","src":"22622:146:31"}]},"documentation":{"id":9171,"nodeType":"StructuredDocumentation","src":"22065:270:31","text":"@notice Internal helper to store a new transaction\n @param to Destination address\n @param value ETH amount to send\n @param data Call data\n @param comment Transaction description\n @return index Index of the newly created transaction"},"id":9203,"implemented":true,"kind":"function","modifiers":[],"name":"_storeTransaction","nameLocation":"22349:17:31","nodeType":"FunctionDefinition","parameters":{"id":9180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9173,"mutability":"mutable","name":"to","nameLocation":"22384:2:31","nodeType":"VariableDeclaration","scope":9203,"src":"22376:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9172,"name":"address","nodeType":"ElementaryTypeName","src":"22376:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9175,"mutability":"mutable","name":"value","nameLocation":"22404:5:31","nodeType":"VariableDeclaration","scope":9203,"src":"22396:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9174,"name":"uint256","nodeType":"ElementaryTypeName","src":"22396:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9177,"mutability":"mutable","name":"data","nameLocation":"22432:4:31","nodeType":"VariableDeclaration","scope":9203,"src":"22419:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9176,"name":"bytes","nodeType":"ElementaryTypeName","src":"22419:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9179,"mutability":"mutable","name":"comment","nameLocation":"22460:7:31","nodeType":"VariableDeclaration","scope":9203,"src":"22446:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9178,"name":"string","nodeType":"ElementaryTypeName","src":"22446:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22366:107:31"},"returnParameters":{"id":9183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9182,"mutability":"mutable","name":"index","nameLocation":"22516:5:31","nodeType":"VariableDeclaration","scope":9203,"src":"22508:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9181,"name":"uint256","nodeType":"ElementaryTypeName","src":"22508:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22507:15:31"},"scope":9481,"src":"22340:512:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9245,"nodeType":"Block","src":"23126:253:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9212,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9206,"src":"23140:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9213,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"23151:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23164:6:31","memberName":"length","nodeType":"MemberAccess","src":"23151:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23140:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9231,"nodeType":"IfStatement","src":"23136:146:31","trueBody":{"id":9230,"nodeType":"Block","src":"23172:110:31","statements":[{"errorCall":{"arguments":[{"id":9217,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9206,"src":"23208:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9218,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"23217:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23230:6:31","memberName":"length","nodeType":"MemberAccess","src":"23217:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23239:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23217:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23269:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23217:53:31","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9222,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"23243:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23256:6:31","memberName":"length","nodeType":"MemberAccess","src":"23243:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23265:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23243:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9216,"name":"TxDoesNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"23193:14:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23193:78:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9229,"nodeType":"RevertStatement","src":"23186:85:31"}]}},{"expression":{"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9232,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9210,"src":"23291:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9233,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"23297:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9235,"indexExpression":{"id":9234,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9206,"src":"23310:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23297:21:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage","typeString":"struct ATKVault.Transaction storage ref"}},"src":"23291:27:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9237,"nodeType":"ExpressionStatement","src":"23291:27:31"},{"condition":{"expression":{"id":9238,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9210,"src":"23332:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23336:8:31","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":8043,"src":"23332:12:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9244,"nodeType":"IfStatement","src":"23328:44:31","trueBody":{"errorCall":{"arguments":[{"id":9241,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9206,"src":"23364:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9240,"name":"TxExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"23353:10:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23353:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9243,"nodeType":"RevertStatement","src":"23346:26:31"}}]},"documentation":{"id":9204,"nodeType":"StructuredDocumentation","src":"22858:172:31","text":"@notice Checks that a transaction exists and is not yet executed\n @param txIndex Index of the transaction\n @return txn Reference to the transaction struct"},"id":9246,"implemented":true,"kind":"function","modifiers":[],"name":"_assertTxPending","nameLocation":"23044:16:31","nodeType":"FunctionDefinition","parameters":{"id":9207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9206,"mutability":"mutable","name":"txIndex","nameLocation":"23069:7:31","nodeType":"VariableDeclaration","scope":9246,"src":"23061:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9205,"name":"uint256","nodeType":"ElementaryTypeName","src":"23061:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23060:17:31"},"returnParameters":{"id":9211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9210,"mutability":"mutable","name":"txn","nameLocation":"23121:3:31","nodeType":"VariableDeclaration","scope":9246,"src":"23101:23:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"},"typeName":{"id":9209,"nodeType":"UserDefinedTypeName","pathNode":{"id":9208,"name":"Transaction","nameLocations":["23101:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":8048,"src":"23101:11:31"},"referencedDeclaration":8048,"src":"23101:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"}},"visibility":"internal"}],"src":"23100:25:31"},"scope":9481,"src":"23035:344:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9327,"nodeType":"Block","src":"23627:1143:31","statements":[{"assignments":[9256],"declarations":[{"constant":false,"id":9256,"mutability":"mutable","name":"txn","nameLocation":"23657:3:31","nodeType":"VariableDeclaration","scope":9327,"src":"23637:23:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"},"typeName":{"id":9255,"nodeType":"UserDefinedTypeName","pathNode":{"id":9254,"name":"Transaction","nameLocations":["23637:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":8048,"src":"23637:11:31"},"referencedDeclaration":8048,"src":"23637:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"}},"visibility":"internal"}],"id":9260,"initialValue":{"arguments":[{"id":9258,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"23680:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9257,"name":"_assertTxPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9246,"src":"23663:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Transaction_$8048_storage_ptr_$","typeString":"function (uint256) view returns (struct ATKVault.Transaction storage pointer)"}},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23663:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"23637:51:31"},{"condition":{"arguments":[{"id":9265,"name":"confirmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9251,"src":"23828:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":9261,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"23796:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":9263,"indexExpression":{"id":9262,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"23810:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23796:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23819:8:31","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7681,"src":"23796:31:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":9266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9272,"nodeType":"IfStatement","src":"23792:91:31","trueBody":{"errorCall":{"arguments":[{"id":9268,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"23864:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9269,"name":"confirmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9251,"src":"23873:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9267,"name":"AlreadyConfirmed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8094,"src":"23847:16:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (uint256,address) pure returns (error)"}},"id":9270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23847:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9271,"nodeType":"RevertStatement","src":"23840:43:31"}},{"expression":{"arguments":[{"id":9277,"name":"confirmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9251,"src":"23985:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":9273,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"23958:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":9275,"indexExpression":{"id":9274,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"23972:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23958:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23981:3:31","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"23958:26:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7587_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":9278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23958:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9279,"nodeType":"ExpressionStatement","src":"23958:37:31"},{"expression":{"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9280,"name":"confirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"24005:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9283,"indexExpression":{"id":9281,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"24019:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24005:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9284,"indexExpression":{"id":9282,"name":"confirmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9251,"src":"24028:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24005:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24041:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"24005:40:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9287,"nodeType":"ExpressionStatement","src":"24005:40:31"},{"id":9292,"nodeType":"UncheckedBlock","src":"24103:57:31","statements":[{"expression":{"id":9290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"24127:22:31","subExpression":{"expression":{"id":9288,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"24129:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24133:16:31","memberName":"numConfirmations","nodeType":"MemberAccess","referencedDeclaration":8045,"src":"24129:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9291,"nodeType":"ExpressionStatement","src":"24127:22:31"}]},{"eventCall":{"arguments":[{"id":9294,"name":"confirmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9251,"src":"24193:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9295,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"24204:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9293,"name":"ConfirmTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"24174:18:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24174:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9297,"nodeType":"EmitStatement","src":"24169:43:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9298,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"24300:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24304:16:31","memberName":"numConfirmations","nodeType":"MemberAccess","referencedDeclaration":8045,"src":"24300:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9300,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"24324:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24300:32:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24336:13:31","subExpression":{"expression":{"id":9302,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"24337:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24341:8:31","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":8043,"src":"24337:12:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24300:49:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9326,"nodeType":"IfStatement","src":"24296:468:31","trueBody":{"id":9325,"nodeType":"Block","src":"24351:413:31","statements":[{"assignments":[9307],"declarations":[{"constant":false,"id":9307,"mutability":"mutable","name":"executedSuccessfully","nameLocation":"24370:20:31","nodeType":"VariableDeclaration","scope":9325,"src":"24365:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9306,"name":"bool","nodeType":"ElementaryTypeName","src":"24365:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9312,"initialValue":{"arguments":[{"id":9309,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"24413:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9310,"name":"confirmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9251,"src":"24422:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9308,"name":"_executeTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"24393:19:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) returns (bool)"}},"id":9311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24393:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"24365:67:31"},{"condition":{"id":9314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24450:21:31","subExpression":{"id":9313,"name":"executedSuccessfully","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9307,"src":"24451:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9324,"nodeType":"IfStatement","src":"24446:308:31","trueBody":{"id":9323,"nodeType":"Block","src":"24473:281:31","statements":[{"errorCall":{"arguments":[{"id":9316,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"24713:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9317,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"24722:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24726:2:31","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":8037,"src":"24722:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9319,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"24730:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24734:4:31","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":8041,"src":"24730:8:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":9315,"name":"ExecutionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"24697:15:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_error_$","typeString":"function (uint256,address,bytes memory) pure returns (error)"}},"id":9321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24697:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9322,"nodeType":"RevertStatement","src":"24690:49:31"}]}}]}}]},"documentation":{"id":9247,"nodeType":"StructuredDocumentation","src":"23385:174:31","text":"@notice Internal helper to confirm a transaction\n @param txIndex Index of the transaction\n @param confirmer Address of the signer confirming the transaction"},"id":9328,"implemented":true,"kind":"function","modifiers":[],"name":"_confirm","nameLocation":"23573:8:31","nodeType":"FunctionDefinition","parameters":{"id":9252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9249,"mutability":"mutable","name":"txIndex","nameLocation":"23590:7:31","nodeType":"VariableDeclaration","scope":9328,"src":"23582:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9248,"name":"uint256","nodeType":"ElementaryTypeName","src":"23582:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9251,"mutability":"mutable","name":"confirmer","nameLocation":"23607:9:31","nodeType":"VariableDeclaration","scope":9328,"src":"23599:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9250,"name":"address","nodeType":"ElementaryTypeName","src":"23599:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23581:36:31"},"returnParameters":{"id":9253,"nodeType":"ParameterList","parameters":[],"src":"23627:0:31"},"scope":9481,"src":"23564:1206:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9437,"nodeType":"Block","src":"25160:1288:31","statements":[{"assignments":[9340],"declarations":[{"constant":false,"id":9340,"mutability":"mutable","name":"txn","nameLocation":"25190:3:31","nodeType":"VariableDeclaration","scope":9437,"src":"25170:23:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"},"typeName":{"id":9339,"nodeType":"UserDefinedTypeName","pathNode":{"id":9338,"name":"Transaction","nameLocations":["25170:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":8048,"src":"25170:11:31"},"referencedDeclaration":8048,"src":"25170:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction"}},"visibility":"internal"}],"id":9344,"initialValue":{"baseExpression":{"id":9341,"name":"transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"25196:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Transaction_$8048_storage_$dyn_storage","typeString":"struct ATKVault.Transaction storage ref[] storage ref"}},"id":9343,"indexExpression":{"id":9342,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"25209:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25196:21:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage","typeString":"struct ATKVault.Transaction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25170:47:31"},{"condition":{"expression":{"id":9345,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"25309:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25313:8:31","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":8043,"src":"25309:12:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9349,"nodeType":"IfStatement","src":"25305:29:31","trueBody":{"expression":{"hexValue":"74727565","id":9347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25330:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9337,"id":9348,"nodeType":"Return","src":"25323:11:31"}},{"expression":{"id":9354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9350,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"25476:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25480:8:31","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":8043,"src":"25476:12:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25491:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"25476:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9355,"nodeType":"ExpressionStatement","src":"25476:19:31"},{"assignments":[9357,null],"declarations":[{"constant":false,"id":9357,"mutability":"mutable","name":"callSuccess","nameLocation":"25546:11:31","nodeType":"VariableDeclaration","scope":9437,"src":"25541:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9356,"name":"bool","nodeType":"ElementaryTypeName","src":"25541:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9367,"initialValue":{"arguments":[{"expression":{"id":9364,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"25594:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25598:4:31","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":8041,"src":"25594:8:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"expression":{"id":9358,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"25562:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25566:2:31","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":8037,"src":"25562:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25569:4:31","memberName":"call","nodeType":"MemberAccess","src":"25562:11:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":9361,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"25582:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25586:5:31","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":8039,"src":"25582:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"25562:31:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25562:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"25540:63:31"},{"condition":{"id":9369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25617:12:31","subExpression":{"id":9368,"name":"callSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9357,"src":"25618:11:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9379,"nodeType":"IfStatement","src":"25613:176:31","trueBody":{"id":9378,"nodeType":"Block","src":"25631:158:31","statements":[{"expression":{"id":9374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9370,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"25645:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25649:8:31","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":8043,"src":"25645:12:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25660:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"25645:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9375,"nodeType":"ExpressionStatement","src":"25645:20:31"},{"expression":{"hexValue":"66616c7365","id":9376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25773:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9337,"id":9377,"nodeType":"Return","src":"25766:12:31"}]}},{"eventCall":{"arguments":[{"id":9381,"name":"executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9333,"src":"25823:8:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9382,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"25833:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9380,"name":"ExecuteTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"25804:18:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25804:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9384,"nodeType":"EmitStatement","src":"25799:42:31"},{"assignments":[9386],"declarations":[{"constant":false,"id":9386,"mutability":"mutable","name":"confirmerCount","nameLocation":"25928:14:31","nodeType":"VariableDeclaration","scope":9437,"src":"25920:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9385,"name":"uint256","nodeType":"ElementaryTypeName","src":"25920:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9392,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":9387,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"25945:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":9389,"indexExpression":{"id":9388,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"25959:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25945:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25968:6:31","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7696,"src":"25945:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":9391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25945:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25920:56:31"},{"body":{"id":9427,"nodeType":"Block","src":"26031:295:31","statements":[{"assignments":[9404],"declarations":[{"constant":false,"id":9404,"mutability":"mutable","name":"confirmer","nameLocation":"26119:9:31","nodeType":"VariableDeclaration","scope":9427,"src":"26111:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9403,"name":"address","nodeType":"ElementaryTypeName","src":"26111:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9411,"initialValue":{"arguments":[{"hexValue":"30","id":9409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26157:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"baseExpression":{"id":9405,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"26131:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":9407,"indexExpression":{"id":9406,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"26145:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26131:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26154:2:31","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7723,"src":"26131:25:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7587_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":9410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26131:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"26111:48:31"},{"expression":{"id":9418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9412,"name":"confirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"26173:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9415,"indexExpression":{"id":9413,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"26187:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26173:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9416,"indexExpression":{"id":9414,"name":"confirmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"26196:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26173:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26209:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"26173:41:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9419,"nodeType":"ExpressionStatement","src":"26173:41:31"},{"expression":{"arguments":[{"id":9424,"name":"confirmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"26286:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":9420,"name":"_txConfirmers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"26256:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AddressSet_$7587_storage_$","typeString":"mapping(uint256 => struct EnumerableSet.AddressSet storage ref)"}},"id":9422,"indexExpression":{"id":9421,"name":"txIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"26270:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26256:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7587_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26279:6:31","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7641,"src":"26256:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7587_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7587_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26256:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9426,"nodeType":"ExpressionStatement","src":"26256:40:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9394,"src":"26006:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9398,"name":"confirmerCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"26010:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26006:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9428,"initializationExpression":{"assignments":[9394],"declarations":[{"constant":false,"id":9394,"mutability":"mutable","name":"i","nameLocation":"25999:1:31","nodeType":"VariableDeclaration","scope":9428,"src":"25991:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9393,"name":"uint256","nodeType":"ElementaryTypeName","src":"25991:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9396,"initialValue":{"hexValue":"30","id":9395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26003:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25991:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26026:3:31","subExpression":{"id":9400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9394,"src":"26026:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9402,"nodeType":"ExpressionStatement","src":"26026:3:31"},"nodeType":"ForStatement","src":"25986:340:31"},{"expression":{"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9429,"name":"txn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"26375:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$8048_storage_ptr","typeString":"struct ATKVault.Transaction storage pointer"}},"id":9431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26379:16:31","memberName":"numConfirmations","nodeType":"MemberAccess","referencedDeclaration":8045,"src":"26375:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26398:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26375:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9434,"nodeType":"ExpressionStatement","src":"26375:24:31"},{"expression":{"hexValue":"74727565","id":9435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26417:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9337,"id":9436,"nodeType":"Return","src":"26410:11:31"}]},"documentation":{"id":9329,"nodeType":"StructuredDocumentation","src":"24776:284:31","text":"@notice Internal helper to execute a transaction. Returns true on success, false on failure.\n @param txIndex Index of the transaction\n @param executor Address of the signer who triggered execution\n @return success True if execution succeeded, false otherwise."},"id":9438,"implemented":true,"kind":"function","modifiers":[],"name":"_executeTransaction","nameLocation":"25074:19:31","nodeType":"FunctionDefinition","parameters":{"id":9334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9331,"mutability":"mutable","name":"txIndex","nameLocation":"25102:7:31","nodeType":"VariableDeclaration","scope":9438,"src":"25094:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9330,"name":"uint256","nodeType":"ElementaryTypeName","src":"25094:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9333,"mutability":"mutable","name":"executor","nameLocation":"25119:8:31","nodeType":"VariableDeclaration","scope":9438,"src":"25111:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9332,"name":"address","nodeType":"ElementaryTypeName","src":"25111:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25093:35:31"},"returnParameters":{"id":9337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9336,"mutability":"mutable","name":"success","nameLocation":"25151:7:31","nodeType":"VariableDeclaration","scope":9438,"src":"25146:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9335,"name":"bool","nodeType":"ElementaryTypeName","src":"25146:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25145:14:31"},"scope":9481,"src":"25065:1383:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[1607,3159],"body":{"id":9451,"nodeType":"Block","src":"26672:42:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9447,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"26689:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ATKVault_$9481_$","typeString":"type(contract super ATKVault)"}},"id":9448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26695:10:31","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"26689:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26689:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9446,"id":9450,"nodeType":"Return","src":"26682:25:31"}]},"documentation":{"id":9439,"nodeType":"StructuredDocumentation","src":"26454:125:31","text":"@notice Internal override to support meta-transactions\n @return Address of the message sender (could be forwarded)"},"id":9452,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"26593:10:31","nodeType":"FunctionDefinition","overrides":{"id":9443,"nodeType":"OverrideSpecifier","overrides":[{"id":9441,"name":"Context","nameLocations":["26629:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"26629:7:31"},{"id":9442,"name":"ERC2771Context","nameLocations":["26638:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"26638:14:31"}],"src":"26620:33:31"},"parameters":{"id":9440,"nodeType":"ParameterList","parameters":[],"src":"26603:2:31"},"returnParameters":{"id":9446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9452,"src":"26663:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9444,"name":"address","nodeType":"ElementaryTypeName","src":"26663:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26662:9:31"},"scope":9481,"src":"26584:130:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1648,3168],"body":{"id":9465,"nodeType":"Block","src":"26952:40:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9461,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"26969:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ATKVault_$9481_$","typeString":"type(contract super ATKVault)"}},"id":9462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26975:8:31","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":1648,"src":"26969:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":9463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26969:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":9460,"id":9464,"nodeType":"Return","src":"26962:23:31"}]},"documentation":{"id":9453,"nodeType":"StructuredDocumentation","src":"26720:134:31","text":"@notice Internal override to support meta-transactions\n @return Message data, potentially modified by the trusted forwarder"},"id":9466,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"26868:8:31","nodeType":"FunctionDefinition","overrides":{"id":9457,"nodeType":"OverrideSpecifier","overrides":[{"id":9455,"name":"Context","nameLocations":["26902:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"26902:7:31"},{"id":9456,"name":"ERC2771Context","nameLocations":["26911:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"26911:14:31"}],"src":"26893:33:31"},"parameters":{"id":9454,"nodeType":"ParameterList","parameters":[],"src":"26876:2:31"},"returnParameters":{"id":9460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9466,"src":"26936:14:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9458,"name":"bytes","nodeType":"ElementaryTypeName","src":"26936:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26935:16:31"},"scope":9481,"src":"26859:133:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1658,3176],"body":{"id":9479,"nodeType":"Block","src":"27214:52:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9475,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"27231:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ATKVault_$9481_$","typeString":"type(contract super ATKVault)"}},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27237:20:31","memberName":"_contextSuffixLength","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"27231:26:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27231:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9474,"id":9478,"nodeType":"Return","src":"27224:35:31"}]},"documentation":{"id":9467,"nodeType":"StructuredDocumentation","src":"26998:113:31","text":"@notice Internal override to support meta-transactions\n @return Length of the trusted forwarder suffix"},"id":9480,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"27125:20:31","nodeType":"FunctionDefinition","overrides":{"id":9471,"nodeType":"OverrideSpecifier","overrides":[{"id":9469,"name":"Context","nameLocations":["27171:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"27171:7:31"},{"id":9470,"name":"ERC2771Context","nameLocations":["27180:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"27180:14:31"}],"src":"27162:33:31"},"parameters":{"id":9468,"nodeType":"ParameterList","parameters":[],"src":"27145:2:31"},"returnParameters":{"id":9474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9480,"src":"27205:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9472,"name":"uint256","nodeType":"ElementaryTypeName","src":"27205:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27204:9:31"},"scope":9481,"src":"27116:150:31","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":9482,"src":"1058:26210:31","usedErrors":[1169,1172,3372,3375,3472,8075,8082,8087,8094,8101,8110,8113,8116],"usedEvents":[1181,1190,1199,3364,3369,7950,7965,7980,7997,8004,8011,8018,8025,8034]}],"src":"40:27229:31"},"id":31},"contracts/addons/vault/ATKVaultFactoryImplementation.sol":{"ast":{"absolutePath":"contracts/addons/vault/ATKVaultFactoryImplementation.sol","exportedSymbols":{"ATKSystemRoles":[10350],"ATKVault":[9481],"ATKVaultFactoryImplementation":[9723],"AbstractATKSystemAddonFactoryImplementation":[10685],"IATKSystem":[10963],"IATKVaultFactory":[9913],"IERC165":[3817]},"id":9724,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":9483,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"40:23:32"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":9485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9724,"sourceUnit":3818,"src":"91:82:32","symbolAliases":[{"foreign":{"id":9484,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"100:7:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/addons/vault/IATKVaultFactory.sol","file":"./IATKVaultFactory.sol","id":9487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9724,"sourceUnit":9914,"src":"189:58:32","symbolAliases":[{"foreign":{"id":9486,"name":"IATKVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"198:16:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/IATKSystem.sol","file":"../../system/IATKSystem.sol","id":9489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9724,"sourceUnit":10964,"src":"248:57:32","symbolAliases":[{"foreign":{"id":9488,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"257:10:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/AbstractATKSystemAddonFactoryImplementation.sol","file":"../../system/AbstractATKSystemAddonFactoryImplementation.sol","id":9491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9724,"sourceUnit":10686,"src":"326:127:32","symbolAliases":[{"foreign":{"id":9490,"name":"AbstractATKSystemAddonFactoryImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10685,"src":"335:43:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/addons/vault/ATKVault.sol","file":"./ATKVault.sol","id":9493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9724,"sourceUnit":9482,"src":"454:42:32","symbolAliases":[{"foreign":{"id":9492,"name":"ATKVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"463:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/ATKSystemRoles.sol","file":"../../system/ATKSystemRoles.sol","id":9495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9724,"sourceUnit":10351,"src":"511:65:32","symbolAliases":[{"foreign":{"id":9494,"name":"ATKSystemRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"520:14:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9497,"name":"AbstractATKSystemAddonFactoryImplementation","nameLocations":["1617:43:32"],"nodeType":"IdentifierPath","referencedDeclaration":10685,"src":"1617:43:32"},"id":9498,"nodeType":"InheritanceSpecifier","src":"1617:43:32"},{"baseName":{"id":9499,"name":"IATKVaultFactory","nameLocations":["1662:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":9913,"src":"1662:16:32"},"id":9500,"nodeType":"InheritanceSpecifier","src":"1662:16:32"}],"canonicalName":"ATKVaultFactoryImplementation","contractDependencies":[9481],"contractKind":"contract","documentation":{"id":9496,"nodeType":"StructuredDocumentation","src":"578:997:32","text":"@title Factory for Creating ATKVault Proxies\n @notice This contract serves as a factory to deploy new UUPS proxy instances of `ATKVault` contracts.\n It manages a single implementation contract and allows for updating this implementation.\n @dev Key features of this factory:\n - **Deployment of Proxies**: Provides a `createVault` function to deploy new `ATKVaultProxy` instances,\n   which point to a shared `ATKVault` implementation.\n - **CREATE2**: Leverages `CREATE2` for deploying proxies, allowing their addresses to be pre-calculated.\n - **Implementation Management**: Deploys an initial implementation and allows the owner to update it.\n - **Authorization**: The `createVault` function requires the `DEPLOYER_ROLE` for proper access control.\n - **Registry**: Maintains an array `allVaults` to keep track of all vault proxies created.\n - **Meta-transactions**: Inherits `ERC2771Context` to support gasless operations if a trusted forwarder is\n configured."},"fullyImplemented":true,"id":9723,"linearizedBaseContracts":[9723,9913,10685,10973,362,509,863,3817,1242,823,777],"name":"ATKVaultFactoryImplementation","nameLocation":"1584:29:32","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[10972],"constant":true,"functionSelector":"8f940f63","id":9506,"mutability":"constant","name":"typeId","nameLocation":"1718:6:32","nodeType":"VariableDeclaration","overrides":{"id":9502,"nodeType":"OverrideSpecifier","overrides":[],"src":"1709:8:32"},"scope":9723,"src":"1685:70:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1685:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41544b5661756c74466163746f7279","id":9504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1737:17:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ae60f3cee742e6943392a49179dab2c5e2991d2396b7cf8b808581ecb951bfd","typeString":"literal_string \"ATKVaultFactory\""},"value":"ATKVaultFactory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ae60f3cee742e6943392a49179dab2c5e2991d2396b7cf8b808581ecb951bfd","typeString":"literal_string \"ATKVaultFactory\""}],"id":9503,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1727:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:28:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"documentation":{"id":9507,"nodeType":"StructuredDocumentation","src":"1762:111:32","text":"@notice An array that stores references (addresses) to all vault\n contracts created by this factory."},"id":9510,"mutability":"mutable","name":"allVaults","nameLocation":"1896:9:32","nodeType":"VariableDeclaration","scope":9723,"src":"1878:27:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":9508,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9509,"nodeType":"ArrayTypeName","src":"1878:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"body":{"id":9519,"nodeType":"Block","src":"2051:3:32","statements":[]},"documentation":{"id":9511,"nodeType":"StructuredDocumentation","src":"1912:48:32","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":9520,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9516,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9513,"src":"2040:9:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9517,"kind":"baseConstructorSpecifier","modifierName":{"id":9515,"name":"AbstractATKSystemAddonFactoryImplementation","nameLocations":["1996:43:32"],"nodeType":"IdentifierPath","referencedDeclaration":10685,"src":"1996:43:32"},"nodeType":"ModifierInvocation","src":"1996:54:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9513,"mutability":"mutable","name":"forwarder","nameLocation":"1985:9:32","nodeType":"VariableDeclaration","scope":9520,"src":"1977:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9512,"name":"address","nodeType":"ElementaryTypeName","src":"1977:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1976:19:32"},"returnParameters":{"id":9518,"nodeType":"ParameterList","parameters":[],"src":"2051:0:32"},"scope":9723,"src":"1965:89:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9906],"body":{"id":9535,"nodeType":"Block","src":"2431:85:32","statements":[{"expression":{"arguments":[{"id":9531,"name":"systemAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9523,"src":"2479:14:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9532,"name":"initialAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"2495:13:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9530,"name":"_initializeAbstractSystemAddonFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10447,"src":"2441:37:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2441:68:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9534,"nodeType":"ExpressionStatement","src":"2441:68:32"}]},"documentation":{"id":9521,"nodeType":"StructuredDocumentation","src":"2060:280:32","text":"@notice Initializes the `ATKVaultFactory`.\n @dev Initializes the factory and sets up support for meta-transactions via ERC2771Context.\n @param systemAddress_ The address of the `IATKSystem` contract.\n @param initialAdmin_ The address of the initial admin."},"functionSelector":"485cc955","id":9536,"implemented":true,"kind":"function","modifiers":[{"id":9528,"kind":"modifierInvocation","modifierName":{"id":9527,"name":"initializer","nameLocations":["2419:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":617,"src":"2419:11:32"},"nodeType":"ModifierInvocation","src":"2419:11:32"}],"name":"initialize","nameLocation":"2354:10:32","nodeType":"FunctionDefinition","parameters":{"id":9526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9523,"mutability":"mutable","name":"systemAddress_","nameLocation":"2373:14:32","nodeType":"VariableDeclaration","scope":9536,"src":"2365:22:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9522,"name":"address","nodeType":"ElementaryTypeName","src":"2365:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9525,"mutability":"mutable","name":"initialAdmin_","nameLocation":"2397:13:32","nodeType":"VariableDeclaration","scope":9536,"src":"2389:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9524,"name":"address","nodeType":"ElementaryTypeName","src":"2389:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2364:47:32"},"returnParameters":{"id":9529,"nodeType":"ParameterList","parameters":[],"src":"2431:0:32"},"scope":9723,"src":"2345:171:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9883],"body":{"id":9620,"nodeType":"Block","src":"3732:879:32","statements":[{"assignments":[9558],"declarations":[{"constant":false,"id":9558,"mutability":"mutable","name":"saltInputData","nameLocation":"3755:13:32","nodeType":"VariableDeclaration","scope":9620,"src":"3742:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9557,"name":"bytes","nodeType":"ElementaryTypeName","src":"3742:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9570,"initialValue":{"arguments":[{"arguments":[{"id":9563,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3790:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_ATKVaultFactoryImplementation_$9723","typeString":"contract ATKVaultFactoryImplementation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ATKVaultFactoryImplementation_$9723","typeString":"contract ATKVaultFactoryImplementation"}],"id":9562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3782:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9561,"name":"address","nodeType":"ElementaryTypeName","src":"3782:7:32","typeDescriptions":{}}},"id":9564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3782:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9565,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9540,"src":"3797:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":9566,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"3806:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9567,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9544,"src":"3816:12:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9568,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9546,"src":"3830:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9559,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3771:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3775:6:32","memberName":"encode","nodeType":"MemberAccess","src":"3771:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:64:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3742:93:32"},{"assignments":[9572],"declarations":[{"constant":false,"id":9572,"mutability":"mutable","name":"constructorArgs","nameLocation":"3858:15:32","nodeType":"VariableDeclaration","scope":9620,"src":"3845:28:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9571,"name":"bytes","nodeType":"ElementaryTypeName","src":"3845:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9581,"initialValue":{"arguments":[{"id":9575,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9540,"src":"3887:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":9576,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"3896:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9577,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9544,"src":"3906:12:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9578,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3920:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3920:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9573,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3876:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3880:6:32","memberName":"encode","nodeType":"MemberAccess","src":"3876:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3876:63:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3845:94:32"},{"assignments":[9583],"declarations":[{"constant":false,"id":9583,"mutability":"mutable","name":"vaultBytecode","nameLocation":"3962:13:32","nodeType":"VariableDeclaration","scope":9620,"src":"3949:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9582,"name":"bytes","nodeType":"ElementaryTypeName","src":"3949:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9588,"initialValue":{"expression":{"arguments":[{"id":9585,"name":"ATKVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"3983:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ATKVault_$9481_$","typeString":"type(contract ATKVault)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_ATKVault_$9481_$","typeString":"type(contract ATKVault)"}],"id":9584,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3978:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3978:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_ATKVault_$9481","typeString":"type(contract ATKVault)"}},"id":9587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3993:12:32","memberName":"creationCode","nodeType":"MemberAccess","src":"3978:27:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3949:56:32"},{"assignments":[9590],"declarations":[{"constant":false,"id":9590,"mutability":"mutable","name":"expectedAddress","nameLocation":"4076:15:32","nodeType":"VariableDeclaration","scope":9620,"src":"4068:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9589,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9596,"initialValue":{"arguments":[{"id":9592,"name":"vaultBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9583,"src":"4115:13:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9593,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9572,"src":"4130:15:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9594,"name":"saltInputData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"4147:13:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9591,"name":"_predictProxyAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"4094:20:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (address)"}},"id":9595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4094:67:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:93:32"},{"expression":{"id":9604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9597,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9555,"src":"4224:15:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9599,"name":"vaultBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9583,"src":"4261:13:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9600,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9572,"src":"4276:15:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9601,"name":"saltInputData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"4293:13:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9602,"name":"expectedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"4308:15:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9598,"name":"_deploySystemAddon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10585,"src":"4242:18:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$","typeString":"function (bytes memory,bytes memory,bytes memory,address) returns (address)"}},"id":9603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:82:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4224:100:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9605,"nodeType":"ExpressionStatement","src":"4224:100:32"},{"eventCall":{"arguments":[{"id":9607,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9555,"src":"4419:15:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9608,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[10656],"referencedDeclaration":10656,"src":"4436:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4436:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9606,"name":"ATKVaultCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9868,"src":"4403:15:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4403:46:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9611,"nodeType":"EmitStatement","src":"4398:51:32"},{"expression":{"arguments":[{"id":9615,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9555,"src":"4555:15:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9612,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9510,"src":"4540:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4550:4:32","memberName":"push","nodeType":"MemberAccess","src":"4540:14:32","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":9616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4540:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9617,"nodeType":"ExpressionStatement","src":"4540:31:32"},{"expression":{"id":9618,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9555,"src":"4589:15:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9556,"id":9619,"nodeType":"Return","src":"4582:22:32"}]},"documentation":{"id":9537,"nodeType":"StructuredDocumentation","src":"2522:921:32","text":"@notice Creates and deploys a new `ATKVault` contract for a given configuration.\n @dev This function performs the following steps:\n 1. **Authorization Check**: Verifies the caller has the `DEPLOYER_ROLE`.\n 2. **Salt Generation**: Computes a unique `salt` for CREATE2.\n 3. **Constructor Arguments**: Prepares the constructor arguments for the ATKVault contract.\n 4. **Vault Deployment**: Deploys an `ATKVault` using CREATE2.\n 5. **Event Emission**: Emits `ATKVaultCreated`.\n 6. **Registry Update**: Adds the new vault to `allVaults`.\n @param signers Array of initial signer addresses\n @param required Number of confirmations required to execute a transaction\n @param initialOwner Address that will have admin role\n @param salt Salt value for deterministic address generation\n @return contractAddress Address of the newly created vault"},"functionSelector":"7fe6496d","id":9621,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":9551,"name":"ATKSystemRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"3656:14:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ATKSystemRoles_$10350_$","typeString":"type(library ATKSystemRoles)"}},"id":9552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3671:13:32","memberName":"DEPLOYER_ROLE","nodeType":"MemberAccess","referencedDeclaration":10325,"src":"3656:28:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9553,"kind":"modifierInvocation","modifierName":{"id":9550,"name":"onlyRole","nameLocations":["3647:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"3647:8:32"},"nodeType":"ModifierInvocation","src":"3647:38:32"}],"name":"createVault","nameLocation":"3457:11:32","nodeType":"FunctionDefinition","overrides":{"id":9549,"nodeType":"OverrideSpecifier","overrides":[{"id":9548,"name":"IATKVaultFactory","nameLocations":["3621:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":9913,"src":"3621:16:32"}],"src":"3612:26:32"},"parameters":{"id":9547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9540,"mutability":"mutable","name":"signers","nameLocation":"3495:7:32","nodeType":"VariableDeclaration","scope":9621,"src":"3478:24:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9538,"name":"address","nodeType":"ElementaryTypeName","src":"3478:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9539,"nodeType":"ArrayTypeName","src":"3478:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9542,"mutability":"mutable","name":"required","nameLocation":"3520:8:32","nodeType":"VariableDeclaration","scope":9621,"src":"3512:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9541,"name":"uint256","nodeType":"ElementaryTypeName","src":"3512:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9544,"mutability":"mutable","name":"initialOwner","nameLocation":"3546:12:32","nodeType":"VariableDeclaration","scope":9621,"src":"3538:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9543,"name":"address","nodeType":"ElementaryTypeName","src":"3538:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9546,"mutability":"mutable","name":"salt","nameLocation":"3576:4:32","nodeType":"VariableDeclaration","scope":9621,"src":"3568:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3568:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3468:118:32"},"returnParameters":{"id":9556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9555,"mutability":"mutable","name":"contractAddress","nameLocation":"3711:15:32","nodeType":"VariableDeclaration","scope":9621,"src":"3703:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9554,"name":"address","nodeType":"ElementaryTypeName","src":"3703:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3702:25:32"},"scope":9723,"src":"3448:1163:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9898],"body":{"id":9676,"nodeType":"Block","src":"5296:365:32","statements":[{"assignments":[9639],"declarations":[{"constant":false,"id":9639,"mutability":"mutable","name":"saltInputData","nameLocation":"5319:13:32","nodeType":"VariableDeclaration","scope":9676,"src":"5306:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9638,"name":"bytes","nodeType":"ElementaryTypeName","src":"5306:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9651,"initialValue":{"arguments":[{"arguments":[{"id":9644,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5354:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_ATKVaultFactoryImplementation_$9723","typeString":"contract ATKVaultFactoryImplementation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ATKVaultFactoryImplementation_$9723","typeString":"contract ATKVaultFactoryImplementation"}],"id":9643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5346:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9642,"name":"address","nodeType":"ElementaryTypeName","src":"5346:7:32","typeDescriptions":{}}},"id":9645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5346:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9646,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"5361:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":9647,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"5370:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9648,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"5380:12:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9649,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9631,"src":"5394:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9640,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5335:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5339:6:32","memberName":"encode","nodeType":"MemberAccess","src":"5335:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5335:64:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5306:93:32"},{"assignments":[9653],"declarations":[{"constant":false,"id":9653,"mutability":"mutable","name":"constructorArgs","nameLocation":"5422:15:32","nodeType":"VariableDeclaration","scope":9676,"src":"5409:28:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9652,"name":"bytes","nodeType":"ElementaryTypeName","src":"5409:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9662,"initialValue":{"arguments":[{"id":9656,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"5451:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":9657,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9627,"src":"5460:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9658,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"5470:12:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9659,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"5484:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9654,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5440:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5444:6:32","memberName":"encode","nodeType":"MemberAccess","src":"5440:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:63:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5409:94:32"},{"assignments":[9664],"declarations":[{"constant":false,"id":9664,"mutability":"mutable","name":"vaultBytecode","nameLocation":"5526:13:32","nodeType":"VariableDeclaration","scope":9676,"src":"5513:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9663,"name":"bytes","nodeType":"ElementaryTypeName","src":"5513:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9669,"initialValue":{"expression":{"arguments":[{"id":9666,"name":"ATKVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"5547:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ATKVault_$9481_$","typeString":"type(contract ATKVault)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_ATKVault_$9481_$","typeString":"type(contract ATKVault)"}],"id":9665,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5542:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5542:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_ATKVault_$9481","typeString":"type(contract ATKVault)"}},"id":9668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5557:12:32","memberName":"creationCode","nodeType":"MemberAccess","src":"5542:27:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5513:56:32"},{"expression":{"arguments":[{"id":9671,"name":"vaultBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"5608:13:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9672,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"5623:15:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9673,"name":"saltInputData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"5640:13:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9670,"name":"_predictProxyAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"5587:20:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (address)"}},"id":9674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5587:67:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9637,"id":9675,"nodeType":"Return","src":"5580:74:32"}]},"documentation":{"id":9622,"nodeType":"StructuredDocumentation","src":"4617:415:32","text":"@notice Predicts the address where an ATK Vault contract would be deployed\n @param signers Array of initial signer addresses\n @param required Number of confirmations required to execute a transaction\n @param initialOwner Address that will have admin role\n @param salt Salt value for deterministic address generation\n @return predictedAddress The predicted address of the vault"},"functionSelector":"2f7efa2f","id":9677,"implemented":true,"kind":"function","modifiers":[],"name":"predictVaultAddress","nameLocation":"5046:19:32","nodeType":"FunctionDefinition","overrides":{"id":9634,"nodeType":"OverrideSpecifier","overrides":[{"id":9633,"name":"IATKVaultFactory","nameLocations":["5231:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":9913,"src":"5231:16:32"}],"src":"5222:26:32"},"parameters":{"id":9632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9625,"mutability":"mutable","name":"signers","nameLocation":"5092:7:32","nodeType":"VariableDeclaration","scope":9677,"src":"5075:24:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9623,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9624,"nodeType":"ArrayTypeName","src":"5075:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9627,"mutability":"mutable","name":"required","nameLocation":"5117:8:32","nodeType":"VariableDeclaration","scope":9677,"src":"5109:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9626,"name":"uint256","nodeType":"ElementaryTypeName","src":"5109:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9629,"mutability":"mutable","name":"initialOwner","nameLocation":"5143:12:32","nodeType":"VariableDeclaration","scope":9677,"src":"5135:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9628,"name":"address","nodeType":"ElementaryTypeName","src":"5135:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9631,"mutability":"mutable","name":"salt","nameLocation":"5173:4:32","nodeType":"VariableDeclaration","scope":9677,"src":"5165:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5165:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5065:118:32"},"returnParameters":{"id":9637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9636,"mutability":"mutable","name":"predictedAddress","nameLocation":"5274:16:32","nodeType":"VariableDeclaration","scope":9677,"src":"5266:24:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9635,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5265:26:32"},"scope":9723,"src":"5037:624:32","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9686,"nodeType":"Block","src":"5817:40:32","statements":[{"expression":{"expression":{"id":9683,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9510,"src":"5834:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5844:6:32","memberName":"length","nodeType":"MemberAccess","src":"5834:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9682,"id":9685,"nodeType":"Return","src":"5827:23:32"}]},"documentation":{"id":9678,"nodeType":"StructuredDocumentation","src":"5667:80:32","text":"@notice Returns the total number of vault contracts created by this factory."},"functionSelector":"4cd18577","id":9687,"implemented":true,"kind":"function","modifiers":[],"name":"allVaultsLength","nameLocation":"5761:15:32","nodeType":"FunctionDefinition","parameters":{"id":9679,"nodeType":"ParameterList","parameters":[],"src":"5776:2:32"},"returnParameters":{"id":9682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9681,"mutability":"mutable","name":"count","nameLocation":"5810:5:32","nodeType":"VariableDeclaration","scope":9687,"src":"5802:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9680,"name":"uint256","nodeType":"ElementaryTypeName","src":"5802:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5801:15:32"},"scope":9723,"src":"5752:105:32","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9912],"body":{"id":9698,"nodeType":"Block","src":"6107:34:32","statements":[{"expression":{"arguments":[{"hexValue":"30","id":9695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6132:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6124:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9693,"name":"address","nodeType":"ElementaryTypeName","src":"6124:7:32","typeDescriptions":{}}},"id":9696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6124:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9692,"id":9697,"nodeType":"Return","src":"6117:17:32"}]},"documentation":{"id":9688,"nodeType":"StructuredDocumentation","src":"5863:173:32","text":"@notice Returns the address of the ATKVault implementation (not used in this pattern).\n @dev Since we deploy ATKVault contracts directly, this returns address(0)."},"functionSelector":"bcbd9edb","id":9699,"implemented":true,"kind":"function","modifiers":[],"name":"atkVaultImplementation","nameLocation":"6050:22:32","nodeType":"FunctionDefinition","parameters":{"id":9689,"nodeType":"ParameterList","parameters":[],"src":"6072:2:32"},"returnParameters":{"id":9692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9699,"src":"6098:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9690,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6097:9:32"},"scope":9723,"src":"6041:100:32","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[10642],"body":{"id":9721,"nodeType":"Block","src":"6392:113:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9709,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9702,"src":"6409:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":9711,"name":"IATKVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"6429:16:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IATKVaultFactory_$9913_$","typeString":"type(contract IATKVaultFactory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IATKVaultFactory_$9913_$","typeString":"type(contract IATKVaultFactory)"}],"id":9710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6424:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6424:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IATKVaultFactory_$9913","typeString":"type(contract IATKVaultFactory)"}},"id":9713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6447:11:32","memberName":"interfaceId","nodeType":"MemberAccess","src":"6424:34:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"6409:49:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":9717,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9702,"src":"6486:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9715,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6462:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ATKVaultFactoryImplementation_$9723_$","typeString":"type(contract super ATKVaultFactoryImplementation)"}},"id":9716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6468:17:32","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":10642,"src":"6462:23:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6462:36:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6409:89:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9708,"id":9720,"nodeType":"Return","src":"6402:96:32"}]},"documentation":{"id":9700,"nodeType":"StructuredDocumentation","src":"6147:60:32","text":"@notice Checks if a contract supports a given interface."},"functionSelector":"01ffc9a7","id":9722,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"6221:17:32","nodeType":"FunctionDefinition","overrides":{"id":9705,"nodeType":"OverrideSpecifier","overrides":[{"id":9704,"name":"AbstractATKSystemAddonFactoryImplementation","nameLocations":["6320:43:32"],"nodeType":"IdentifierPath","referencedDeclaration":10685,"src":"6320:43:32"}],"src":"6311:53:32"},"parameters":{"id":9703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9702,"mutability":"mutable","name":"interfaceId","nameLocation":"6246:11:32","nodeType":"VariableDeclaration","scope":9722,"src":"6239:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9701,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6239:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6238:20:32"},"returnParameters":{"id":9708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9722,"src":"6382:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9706,"name":"bool","nodeType":"ElementaryTypeName","src":"6382:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6381:6:32"},"scope":9723,"src":"6212:293:32","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":9724,"src":"1575:4932:32","usedErrors":[526,529,1169,1172,3185,3286,3292,10390,10393],"usedEvents":[534,1181,1190,1199,9868]}],"src":"40:6468:32"},"id":32},"contracts/addons/vault/ATKVaultFactoryProxy.sol":{"ast":{"absolutePath":"contracts/addons/vault/ATKVaultFactoryProxy.sol","exportedSymbols":{"ATKSystemAddonProxy":[10035],"ATKVaultFactoryProxy":[9858],"IATKSystem":[10963],"IATKVaultFactory":[9913]},"id":9859,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":9725,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"40:23:33"},{"absolutePath":"contracts/system/ATKSystemAddonProxy.sol","file":"../../system/ATKSystemAddonProxy.sol","id":9727,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9859,"sourceUnit":10036,"src":"65:75:33","symbolAliases":[{"foreign":{"id":9726,"name":"ATKSystemAddonProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"74:19:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/addons/vault/IATKVaultFactory.sol","file":"./IATKVaultFactory.sol","id":9729,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9859,"sourceUnit":9914,"src":"141:58:33","symbolAliases":[{"foreign":{"id":9728,"name":"IATKVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"150:16:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/IATKSystem.sol","file":"../../system/IATKSystem.sol","id":9731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9859,"sourceUnit":10964,"src":"200:57:33","symbolAliases":[{"foreign":{"id":9730,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"209:10:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ATKVaultFactoryProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":9732,"nodeType":"StructuredDocumentation","src":"259:172:33","text":"@title ATKVaultFactoryProxy\n @notice Proxy contract for the ATK Vault Factory addon\n @dev This contract serves as a proxy to the ATK Vault Factory implementation"},"fullyImplemented":true,"id":9858,"linearizedBaseContracts":[9858],"name":"ATKVaultFactoryProxy","nameLocation":"440:20:33","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":9733,"nodeType":"StructuredDocumentation","src":"467:70:33","text":"@notice The ATK System contract that manages addon implementations"},"id":9736,"mutability":"immutable","name":"_system","nameLocation":"571:7:33","nodeType":"VariableDeclaration","scope":9858,"src":"542:36:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"},"typeName":{"id":9735,"nodeType":"UserDefinedTypeName","pathNode":{"id":9734,"name":"IATKSystem","nameLocations":["542:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":10963,"src":"542:10:33"},"referencedDeclaration":10963,"src":"542:10:33","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"visibility":"private"},{"body":{"id":9804,"nodeType":"Block","src":"928:628:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9746,"name":"systemAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9739,"src":"942:13:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"959:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9747,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:33","typeDescriptions":{}}},"id":9750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"959:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"942:27:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9756,"nodeType":"IfStatement","src":"938:65:33","trueBody":{"expression":{"arguments":[{"hexValue":"496e76616c69642073797374656d2061646472657373","id":9753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"978:24:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_58139de230e4215db162bb3c0422bd89eb3dcfdcaa75cf24e19bf2ebd5567b83","typeString":"literal_string \"Invalid system address\""},"value":"Invalid system address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_58139de230e4215db162bb3c0422bd89eb3dcfdcaa75cf24e19bf2ebd5567b83","typeString":"literal_string \"Invalid system address\""}],"id":9752,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"971:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"971:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9755,"nodeType":"ExpressionStatement","src":"971:32:33"}},{"expression":{"id":9761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9757,"name":"_system","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9736,"src":"1013:7:33","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9759,"name":"systemAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9739,"src":"1034:13:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9758,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"1023:10:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IATKSystem_$10963_$","typeString":"type(contract IATKSystem)"}},"id":9760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"src":"1013:35:33","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"id":9762,"nodeType":"ExpressionStatement","src":"1013:35:33"},{"assignments":[9764],"declarations":[{"constant":false,"id":9764,"mutability":"mutable","name":"implementation","nameLocation":"1125:14:33","nodeType":"VariableDeclaration","scope":9804,"src":"1117:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9763,"name":"address","nodeType":"ElementaryTypeName","src":"1117:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9771,"initialValue":{"arguments":[{"arguments":[{"hexValue":"5661756c74466163746f7279","id":9768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1180:14:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d9","typeString":"literal_string \"VaultFactory\""},"value":"VaultFactory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d9","typeString":"literal_string \"VaultFactory\""}],"id":9767,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1170:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1170:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9765,"name":"_system","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9736,"src":"1142:7:33","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"id":9766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1150:19:33","memberName":"addonImplementation","nodeType":"MemberAccess","referencedDeclaration":10904,"src":"1142:27:33","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":9770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1142:54:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1117:79:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9772,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"1210:14:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1228:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9773,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:33","typeDescriptions":{}}},"id":9776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1228:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1210:28:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9782,"nodeType":"IfStatement","src":"1206:80:33","trueBody":{"expression":{"arguments":[{"hexValue":"5661756c7420666163746f727920696d706c656d656e746174696f6e206e6f7420736574","id":9779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1247:38:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e4ac1c50b728698d9c2dd3bfdd804da0ad7bb5645913555f4d91ad85c036aa4","typeString":"literal_string \"Vault factory implementation not set\""},"value":"Vault factory implementation not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5e4ac1c50b728698d9c2dd3bfdd804da0ad7bb5645913555f4d91ad85c036aa4","typeString":"literal_string \"Vault factory implementation not set\""}],"id":9778,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1240:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1240:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9781,"nodeType":"ExpressionStatement","src":"1240:46:33"}},{"assignments":[9784,null],"declarations":[{"constant":false,"id":9784,"mutability":"mutable","name":"success","nameLocation":"1344:7:33","nodeType":"VariableDeclaration","scope":9804,"src":"1339:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9783,"name":"bool","nodeType":"ElementaryTypeName","src":"1339:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9796,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":9789,"name":"IATKVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"1420:16:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IATKVaultFactory_$9913_$","typeString":"type(contract IATKVaultFactory)"}},"id":9790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1437:10:33","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":9906,"src":"1420:27:33","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function IATKVaultFactory.initialize(address,address)"}},"id":9791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1448:8:33","memberName":"selector","nodeType":"MemberAccess","src":"1420:36:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":9792,"name":"forwarder_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9741,"src":"1458:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9793,"name":"initialAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9743,"src":"1470:13:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9787,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1397:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1401:18:33","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1397:22:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":9794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1397:87:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9785,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"1356:14:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1371:12:33","memberName":"delegatecall","nodeType":"MemberAccess","src":"1356:27:33","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":9795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1356:138:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1338:156:33"},{"condition":{"id":9798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1508:8:33","subExpression":{"id":9797,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9784,"src":"1509:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9803,"nodeType":"IfStatement","src":"1504:45:33","trueBody":{"expression":{"arguments":[{"hexValue":"496e697469616c697a6174696f6e206661696c6564","id":9800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1525:23:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4","typeString":"literal_string \"Initialization failed\""},"value":"Initialization failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4","typeString":"literal_string \"Initialization failed\""}],"id":9799,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1518:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1518:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9802,"nodeType":"ExpressionStatement","src":"1518:31:33"}}]},"documentation":{"id":9737,"nodeType":"StructuredDocumentation","src":"585:260:33","text":"@notice Constructor for the ATKVaultFactoryProxy\n @param systemAddress Address of the ATK System contract\n @param forwarder_ Address of the trusted forwarder for meta-transactions\n @param initialAdmin_ Address that will have admin role"},"id":9805,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9739,"mutability":"mutable","name":"systemAddress","nameLocation":"870:13:33","nodeType":"VariableDeclaration","scope":9805,"src":"862:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9738,"name":"address","nodeType":"ElementaryTypeName","src":"862:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9741,"mutability":"mutable","name":"forwarder_","nameLocation":"893:10:33","nodeType":"VariableDeclaration","scope":9805,"src":"885:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9740,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9743,"mutability":"mutable","name":"initialAdmin_","nameLocation":"913:13:33","nodeType":"VariableDeclaration","scope":9805,"src":"905:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9742,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"861:66:33"},"returnParameters":{"id":9745,"nodeType":"ParameterList","parameters":[],"src":"928:0:33"},"scope":9858,"src":"850:706:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9830,"nodeType":"Block","src":"1742:713:33","statements":[{"assignments":[9810],"declarations":[{"constant":false,"id":9810,"mutability":"mutable","name":"implementation","nameLocation":"1760:14:33","nodeType":"VariableDeclaration","scope":9830,"src":"1752:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9809,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9817,"initialValue":{"arguments":[{"arguments":[{"hexValue":"5661756c74466163746f7279","id":9814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1815:14:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d9","typeString":"literal_string \"VaultFactory\""},"value":"VaultFactory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d9","typeString":"literal_string \"VaultFactory\""}],"id":9813,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1805:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9811,"name":"_system","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9736,"src":"1777:7:33","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"id":9812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1785:19:33","memberName":"addonImplementation","nodeType":"MemberAccess","referencedDeclaration":10904,"src":"1777:27:33","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":9816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1777:54:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1752:79:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9818,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9810,"src":"1845:14:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1871:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1863:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9819,"name":"address","nodeType":"ElementaryTypeName","src":"1863:7:33","typeDescriptions":{}}},"id":9822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1863:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1845:28:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9828,"nodeType":"IfStatement","src":"1841:80:33","trueBody":{"expression":{"arguments":[{"hexValue":"5661756c7420666163746f727920696d706c656d656e746174696f6e206e6f7420736574","id":9825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1882:38:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e4ac1c50b728698d9c2dd3bfdd804da0ad7bb5645913555f4d91ad85c036aa4","typeString":"literal_string \"Vault factory implementation not set\""},"value":"Vault factory implementation not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5e4ac1c50b728698d9c2dd3bfdd804da0ad7bb5645913555f4d91ad85c036aa4","typeString":"literal_string \"Vault factory implementation not set\""}],"id":9824,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1875:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1875:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9827,"nodeType":"ExpressionStatement","src":"1875:46:33"}},{"AST":{"nativeSrc":"1941:508:33","nodeType":"YulBlock","src":"1941:508:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2007:1:33","nodeType":"YulLiteral","src":"2007:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2010:1:33","nodeType":"YulLiteral","src":"2010:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"2013:12:33","nodeType":"YulIdentifier","src":"2013:12:33"},"nativeSrc":"2013:14:33","nodeType":"YulFunctionCall","src":"2013:14:33"}],"functionName":{"name":"calldatacopy","nativeSrc":"1994:12:33","nodeType":"YulIdentifier","src":"1994:12:33"},"nativeSrc":"1994:34:33","nodeType":"YulFunctionCall","src":"1994:34:33"},"nativeSrc":"1994:34:33","nodeType":"YulExpressionStatement","src":"1994:34:33"},{"nativeSrc":"2093:74:33","nodeType":"YulVariableDeclaration","src":"2093:74:33","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"2120:3:33","nodeType":"YulIdentifier","src":"2120:3:33"},"nativeSrc":"2120:5:33","nodeType":"YulFunctionCall","src":"2120:5:33"},{"name":"implementation","nativeSrc":"2127:14:33","nodeType":"YulIdentifier","src":"2127:14:33"},{"kind":"number","nativeSrc":"2143:1:33","nodeType":"YulLiteral","src":"2143:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"2146:12:33","nodeType":"YulIdentifier","src":"2146:12:33"},"nativeSrc":"2146:14:33","nodeType":"YulFunctionCall","src":"2146:14:33"},{"kind":"number","nativeSrc":"2162:1:33","nodeType":"YulLiteral","src":"2162:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2165:1:33","nodeType":"YulLiteral","src":"2165:1:33","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"2107:12:33","nodeType":"YulIdentifier","src":"2107:12:33"},"nativeSrc":"2107:60:33","nodeType":"YulFunctionCall","src":"2107:60:33"},"variables":[{"name":"result","nativeSrc":"2097:6:33","nodeType":"YulTypedName","src":"2097:6:33","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2234:1:33","nodeType":"YulLiteral","src":"2234:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2237:1:33","nodeType":"YulLiteral","src":"2237:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2240:14:33","nodeType":"YulIdentifier","src":"2240:14:33"},"nativeSrc":"2240:16:33","nodeType":"YulFunctionCall","src":"2240:16:33"}],"functionName":{"name":"returndatacopy","nativeSrc":"2219:14:33","nodeType":"YulIdentifier","src":"2219:14:33"},"nativeSrc":"2219:38:33","nodeType":"YulFunctionCall","src":"2219:38:33"},"nativeSrc":"2219:38:33","nodeType":"YulExpressionStatement","src":"2219:38:33"},{"cases":[{"body":{"nativeSrc":"2356:31:33","nodeType":"YulBlock","src":"2356:31:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2365:1:33","nodeType":"YulLiteral","src":"2365:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2368:14:33","nodeType":"YulIdentifier","src":"2368:14:33"},"nativeSrc":"2368:16:33","nodeType":"YulFunctionCall","src":"2368:16:33"}],"functionName":{"name":"revert","nativeSrc":"2358:6:33","nodeType":"YulIdentifier","src":"2358:6:33"},"nativeSrc":"2358:27:33","nodeType":"YulFunctionCall","src":"2358:27:33"},"nativeSrc":"2358:27:33","nodeType":"YulExpressionStatement","src":"2358:27:33"}]},"nativeSrc":"2349:38:33","nodeType":"YulCase","src":"2349:38:33","value":{"kind":"number","nativeSrc":"2354:1:33","nodeType":"YulLiteral","src":"2354:1:33","type":"","value":"0"}},{"body":{"nativeSrc":"2408:31:33","nodeType":"YulBlock","src":"2408:31:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2417:1:33","nodeType":"YulLiteral","src":"2417:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"2420:14:33","nodeType":"YulIdentifier","src":"2420:14:33"},"nativeSrc":"2420:16:33","nodeType":"YulFunctionCall","src":"2420:16:33"}],"functionName":{"name":"return","nativeSrc":"2410:6:33","nodeType":"YulIdentifier","src":"2410:6:33"},"nativeSrc":"2410:27:33","nodeType":"YulFunctionCall","src":"2410:27:33"},"nativeSrc":"2410:27:33","nodeType":"YulExpressionStatement","src":"2410:27:33"}]},"nativeSrc":"2400:39:33","nodeType":"YulCase","src":"2400:39:33","value":"default"}],"expression":{"name":"result","nativeSrc":"2330:6:33","nodeType":"YulIdentifier","src":"2330:6:33"},"nativeSrc":"2323:116:33","nodeType":"YulSwitch","src":"2323:116:33"}]},"evmVersion":"cancun","externalReferences":[{"declaration":9810,"isOffset":false,"isSlot":false,"src":"2127:14:33","valueSize":1}],"id":9829,"nodeType":"InlineAssembly","src":"1932:517:33"}]},"documentation":{"id":9806,"nodeType":"StructuredDocumentation","src":"1562:147:33","text":"@notice Fallback function that delegates all calls to the implementation\n @dev Uses delegatecall to preserve the proxy's storage context"},"id":9831,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9807,"nodeType":"ParameterList","parameters":[],"src":"1722:2:33"},"returnParameters":{"id":9808,"nodeType":"ParameterList","parameters":[],"src":"1742:0:33"},"scope":9858,"src":"1714:741:33","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9856,"nodeType":"Block","src":"2551:733:33","statements":[{"assignments":[9836],"declarations":[{"constant":false,"id":9836,"mutability":"mutable","name":"implementation","nameLocation":"2569:14:33","nodeType":"VariableDeclaration","scope":9856,"src":"2561:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9835,"name":"address","nodeType":"ElementaryTypeName","src":"2561:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9843,"initialValue":{"arguments":[{"arguments":[{"hexValue":"5661756c74466163746f7279","id":9840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2624:14:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d9","typeString":"literal_string \"VaultFactory\""},"value":"VaultFactory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d9","typeString":"literal_string \"VaultFactory\""}],"id":9839,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2614:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2614:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9837,"name":"_system","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9736,"src":"2586:7:33","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"id":9838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2594:19:33","memberName":"addonImplementation","nodeType":"MemberAccess","referencedDeclaration":10904,"src":"2586:27:33","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":9842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:54:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2561:79:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9844,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9836,"src":"2654:14:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2680:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2672:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9845,"name":"address","nodeType":"ElementaryTypeName","src":"2672:7:33","typeDescriptions":{}}},"id":9848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2654:28:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9854,"nodeType":"IfStatement","src":"2650:80:33","trueBody":{"expression":{"arguments":[{"hexValue":"5661756c7420666163746f727920696d706c656d656e746174696f6e206e6f7420736574","id":9851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2691:38:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e4ac1c50b728698d9c2dd3bfdd804da0ad7bb5645913555f4d91ad85c036aa4","typeString":"literal_string \"Vault factory implementation not set\""},"value":"Vault factory implementation not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5e4ac1c50b728698d9c2dd3bfdd804da0ad7bb5645913555f4d91ad85c036aa4","typeString":"literal_string \"Vault factory implementation not set\""}],"id":9850,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2684:6:33","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9853,"nodeType":"ExpressionStatement","src":"2684:46:33"}},{"AST":{"nativeSrc":"2750:528:33","nodeType":"YulBlock","src":"2750:528:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2836:1:33","nodeType":"YulLiteral","src":"2836:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2839:1:33","nodeType":"YulLiteral","src":"2839:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"2842:12:33","nodeType":"YulIdentifier","src":"2842:12:33"},"nativeSrc":"2842:14:33","nodeType":"YulFunctionCall","src":"2842:14:33"}],"functionName":{"name":"calldatacopy","nativeSrc":"2823:12:33","nodeType":"YulIdentifier","src":"2823:12:33"},"nativeSrc":"2823:34:33","nodeType":"YulFunctionCall","src":"2823:34:33"},"nativeSrc":"2823:34:33","nodeType":"YulExpressionStatement","src":"2823:34:33"},{"nativeSrc":"2922:74:33","nodeType":"YulVariableDeclaration","src":"2922:74:33","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"2949:3:33","nodeType":"YulIdentifier","src":"2949:3:33"},"nativeSrc":"2949:5:33","nodeType":"YulFunctionCall","src":"2949:5:33"},{"name":"implementation","nativeSrc":"2956:14:33","nodeType":"YulIdentifier","src":"2956:14:33"},{"kind":"number","nativeSrc":"2972:1:33","nodeType":"YulLiteral","src":"2972:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"2975:12:33","nodeType":"YulIdentifier","src":"2975:12:33"},"nativeSrc":"2975:14:33","nodeType":"YulFunctionCall","src":"2975:14:33"},{"kind":"number","nativeSrc":"2991:1:33","nodeType":"YulLiteral","src":"2991:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2994:1:33","nodeType":"YulLiteral","src":"2994:1:33","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"2936:12:33","nodeType":"YulIdentifier","src":"2936:12:33"},"nativeSrc":"2936:60:33","nodeType":"YulFunctionCall","src":"2936:60:33"},"variables":[{"name":"result","nativeSrc":"2926:6:33","nodeType":"YulTypedName","src":"2926:6:33","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3063:1:33","nodeType":"YulLiteral","src":"3063:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3066:1:33","nodeType":"YulLiteral","src":"3066:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"3069:14:33","nodeType":"YulIdentifier","src":"3069:14:33"},"nativeSrc":"3069:16:33","nodeType":"YulFunctionCall","src":"3069:16:33"}],"functionName":{"name":"returndatacopy","nativeSrc":"3048:14:33","nodeType":"YulIdentifier","src":"3048:14:33"},"nativeSrc":"3048:38:33","nodeType":"YulFunctionCall","src":"3048:38:33"},"nativeSrc":"3048:38:33","nodeType":"YulExpressionStatement","src":"3048:38:33"},{"cases":[{"body":{"nativeSrc":"3185:31:33","nodeType":"YulBlock","src":"3185:31:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3194:1:33","nodeType":"YulLiteral","src":"3194:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"3197:14:33","nodeType":"YulIdentifier","src":"3197:14:33"},"nativeSrc":"3197:16:33","nodeType":"YulFunctionCall","src":"3197:16:33"}],"functionName":{"name":"revert","nativeSrc":"3187:6:33","nodeType":"YulIdentifier","src":"3187:6:33"},"nativeSrc":"3187:27:33","nodeType":"YulFunctionCall","src":"3187:27:33"},"nativeSrc":"3187:27:33","nodeType":"YulExpressionStatement","src":"3187:27:33"}]},"nativeSrc":"3178:38:33","nodeType":"YulCase","src":"3178:38:33","value":{"kind":"number","nativeSrc":"3183:1:33","nodeType":"YulLiteral","src":"3183:1:33","type":"","value":"0"}},{"body":{"nativeSrc":"3237:31:33","nodeType":"YulBlock","src":"3237:31:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3246:1:33","nodeType":"YulLiteral","src":"3246:1:33","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"3249:14:33","nodeType":"YulIdentifier","src":"3249:14:33"},"nativeSrc":"3249:16:33","nodeType":"YulFunctionCall","src":"3249:16:33"}],"functionName":{"name":"return","nativeSrc":"3239:6:33","nodeType":"YulIdentifier","src":"3239:6:33"},"nativeSrc":"3239:27:33","nodeType":"YulFunctionCall","src":"3239:27:33"},"nativeSrc":"3239:27:33","nodeType":"YulExpressionStatement","src":"3239:27:33"}]},"nativeSrc":"3229:39:33","nodeType":"YulCase","src":"3229:39:33","value":"default"}],"expression":{"name":"result","nativeSrc":"3159:6:33","nodeType":"YulIdentifier","src":"3159:6:33"},"nativeSrc":"3152:116:33","nodeType":"YulSwitch","src":"3152:116:33"}]},"evmVersion":"cancun","externalReferences":[{"declaration":9836,"isOffset":false,"isSlot":false,"src":"2956:14:33","valueSize":1}],"id":9855,"nodeType":"InlineAssembly","src":"2741:537:33"}]},"documentation":{"id":9832,"nodeType":"StructuredDocumentation","src":"2461:58:33","text":"@notice Receive function to handle plain ETH transfers"},"id":9857,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9833,"nodeType":"ParameterList","parameters":[],"src":"2531:2:33"},"returnParameters":{"id":9834,"nodeType":"ParameterList","parameters":[],"src":"2551:0:33"},"scope":9858,"src":"2524:760:33","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":9859,"src":"431:2855:33","usedErrors":[],"usedEvents":[]}],"src":"40:3247:33"},"id":33},"contracts/addons/vault/IATKVaultFactory.sol":{"ast":{"absolutePath":"contracts/addons/vault/IATKVaultFactory.sol","exportedSymbols":{"IATKVaultFactory":[9913]},"id":9914,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":9860,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"40:24:34"},{"abstract":false,"baseContracts":[],"canonicalName":"IATKVaultFactory","contractDependencies":[],"contractKind":"interface","documentation":{"id":9861,"nodeType":"StructuredDocumentation","src":"66:172:34","text":"@title IATKVaultFactory Interface\n @notice Interface for the ATK Vault Factory contract\n @dev Defines the functions for creating and managing ATK Vault contracts"},"fullyImplemented":false,"id":9913,"linearizedBaseContracts":[9913],"name":"IATKVaultFactory","nameLocation":"248:16:34","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":9862,"nodeType":"StructuredDocumentation","src":"271:185:34","text":"@notice Emitted when a new ATK Vault contract is created\n @param vault Address of the newly created vault\n @param creator Address of the account that created the vault"},"eventSelector":"dd4f4edaf8af94a1c44f788ac4e78153a8fe0110733f3090d0c6ac09eab17298","id":9868,"name":"ATKVaultCreated","nameLocation":"467:15:34","nodeType":"EventDefinition","parameters":{"id":9867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9864,"indexed":true,"mutability":"mutable","name":"vault","nameLocation":"499:5:34","nodeType":"VariableDeclaration","scope":9868,"src":"483:21:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9863,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9866,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"522:7:34","nodeType":"VariableDeclaration","scope":9868,"src":"506:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9865,"name":"address","nodeType":"ElementaryTypeName","src":"506:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"482:48:34"},"src":"461:70:34"},{"documentation":{"id":9869,"nodeType":"StructuredDocumentation","src":"537:380:34","text":"@notice Creates a new ATK Vault contract\n @param signers Array of initial signer addresses\n @param required Number of confirmations required to execute a transaction\n @param initialOwner Address that will have admin role\n @param salt Salt value for deterministic address generation\n @return contractAddress Address of the newly created vault"},"functionSelector":"7fe6496d","id":9883,"implemented":false,"kind":"function","modifiers":[],"name":"createVault","nameLocation":"931:11:34","nodeType":"FunctionDefinition","parameters":{"id":9879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9872,"mutability":"mutable","name":"signers","nameLocation":"969:7:34","nodeType":"VariableDeclaration","scope":9883,"src":"952:24:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9870,"name":"address","nodeType":"ElementaryTypeName","src":"952:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9871,"nodeType":"ArrayTypeName","src":"952:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9874,"mutability":"mutable","name":"required","nameLocation":"994:8:34","nodeType":"VariableDeclaration","scope":9883,"src":"986:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9873,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9876,"mutability":"mutable","name":"initialOwner","nameLocation":"1020:12:34","nodeType":"VariableDeclaration","scope":9883,"src":"1012:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9875,"name":"address","nodeType":"ElementaryTypeName","src":"1012:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9878,"mutability":"mutable","name":"salt","nameLocation":"1050:4:34","nodeType":"VariableDeclaration","scope":9883,"src":"1042:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1042:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"942:118:34"},"returnParameters":{"id":9882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9881,"mutability":"mutable","name":"contractAddress","nameLocation":"1103:15:34","nodeType":"VariableDeclaration","scope":9883,"src":"1095:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9880,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1094:25:34"},"scope":9913,"src":"922:198:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9884,"nodeType":"StructuredDocumentation","src":"1126:415:34","text":"@notice Predicts the address where an ATK Vault contract would be deployed\n @param signers Array of initial signer addresses\n @param required Number of confirmations required to execute a transaction\n @param initialOwner Address that will have admin role\n @param salt Salt value for deterministic address generation\n @return predictedAddress The predicted address of the vault"},"functionSelector":"2f7efa2f","id":9898,"implemented":false,"kind":"function","modifiers":[],"name":"predictVaultAddress","nameLocation":"1555:19:34","nodeType":"FunctionDefinition","parameters":{"id":9894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9887,"mutability":"mutable","name":"signers","nameLocation":"1601:7:34","nodeType":"VariableDeclaration","scope":9898,"src":"1584:24:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9885,"name":"address","nodeType":"ElementaryTypeName","src":"1584:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9886,"nodeType":"ArrayTypeName","src":"1584:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9889,"mutability":"mutable","name":"required","nameLocation":"1626:8:34","nodeType":"VariableDeclaration","scope":9898,"src":"1618:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1618:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9891,"mutability":"mutable","name":"initialOwner","nameLocation":"1652:12:34","nodeType":"VariableDeclaration","scope":9898,"src":"1644:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9890,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9893,"mutability":"mutable","name":"salt","nameLocation":"1682:4:34","nodeType":"VariableDeclaration","scope":9898,"src":"1674:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1674:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1574:118:34"},"returnParameters":{"id":9897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9896,"mutability":"mutable","name":"predictedAddress","nameLocation":"1748:16:34","nodeType":"VariableDeclaration","scope":9898,"src":"1740:24:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9895,"name":"address","nodeType":"ElementaryTypeName","src":"1740:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1739:26:34"},"scope":9913,"src":"1546:220:34","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9899,"nodeType":"StructuredDocumentation","src":"1772:188:34","text":"@notice Initializes the factory contract\n @param forwarder_ Address of the trusted forwarder for meta-transactions\n @param initialAdmin_ Address that will have admin role"},"functionSelector":"485cc955","id":9906,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1974:10:34","nodeType":"FunctionDefinition","parameters":{"id":9904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9901,"mutability":"mutable","name":"forwarder_","nameLocation":"1993:10:34","nodeType":"VariableDeclaration","scope":9906,"src":"1985:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9900,"name":"address","nodeType":"ElementaryTypeName","src":"1985:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9903,"mutability":"mutable","name":"initialAdmin_","nameLocation":"2013:13:34","nodeType":"VariableDeclaration","scope":9906,"src":"2005:21:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9902,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1984:43:34"},"returnParameters":{"id":9905,"nodeType":"ParameterList","parameters":[],"src":"2036:0:34"},"scope":9913,"src":"1965:72:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9907,"nodeType":"StructuredDocumentation","src":"2043:168:34","text":"@notice Returns the address of the current ATKVault logic contract (implementation).\n @dev This function is expected to be available on the factory contract."},"functionSelector":"bcbd9edb","id":9912,"implemented":false,"kind":"function","modifiers":[],"name":"atkVaultImplementation","nameLocation":"2225:22:34","nodeType":"FunctionDefinition","parameters":{"id":9908,"nodeType":"ParameterList","parameters":[],"src":"2247:2:34"},"returnParameters":{"id":9911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9912,"src":"2273:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9909,"name":"address","nodeType":"ElementaryTypeName","src":"2273:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2272:9:34"},"scope":9913,"src":"2216:66:34","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9914,"src":"238:2046:34","usedErrors":[],"usedEvents":[9868]}],"src":"40:2245:34"},"id":34},"contracts/system/ATKSystemAddonProxy.sol":{"ast":{"absolutePath":"contracts/system/ATKSystemAddonProxy.sol","exportedSymbols":{"ATKSystemAddonProxy":[10035],"ATKSystemProxy":[10282],"AddonImplementationNotSet":[10084],"ETHTransfersNotAllowed":[10094],"IATKSystem":[10963],"IERC165":[3817],"InvalidSystemAddress":[10040],"Proxy":[1695],"StorageSlot":[3781]},"id":10036,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":9915,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"40:24:35"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"@openzeppelin/contracts/proxy/Proxy.sol","id":9917,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10036,"sourceUnit":1696,"src":"66:64:35","symbolAliases":[{"foreign":{"id":9916,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"75:5:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":9919,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10036,"sourceUnit":3818,"src":"131:82:35","symbolAliases":[{"foreign":{"id":9918,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"140:7:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"@openzeppelin/contracts/utils/StorageSlot.sol","id":9921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10036,"sourceUnit":3782,"src":"214:76:35","symbolAliases":[{"foreign":{"id":9920,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"223:11:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/IATKSystem.sol","file":"./IATKSystem.sol","id":9923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10036,"sourceUnit":10964,"src":"291:46:35","symbolAliases":[{"foreign":{"id":9922,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"300:10:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/ATKSystemErrors.sol","file":"./ATKSystemErrors.sol","id":9927,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10036,"sourceUnit":10138,"src":"338:112:35","symbolAliases":[{"foreign":{"id":9924,"name":"InvalidSystemAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10040,"src":"347:20:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":9925,"name":"ETHTransfersNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"369:22:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":9926,"name":"AddonImplementationNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10084,"src":"393:25:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/ATKSystemProxy.sol","file":"./ATKSystemProxy.sol","id":9929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10036,"sourceUnit":10283,"src":"451:54:35","symbolAliases":[{"foreign":{"id":9928,"name":"ATKSystemProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10282,"src":"460:14:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9931,"name":"ATKSystemProxy","nameLocations":["804:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":10282,"src":"804:14:35"},"id":9932,"nodeType":"InheritanceSpecifier","src":"804:14:35"}],"canonicalName":"ATKSystemAddonProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":9930,"nodeType":"StructuredDocumentation","src":"507:265:35","text":"@title Proxy contract for ATK System Addon.\n @notice This contract serves as a proxy to the ATK System Addon implementation,\n allowing for upgradeability of the system addon logic.\n It retrieves the implementation address from the IATKSystem contract."},"fullyImplemented":true,"id":10035,"linearizedBaseContracts":[10035,10282,1695],"name":"ATKSystemAddonProxy","nameLocation":"781:19:35","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":9935,"mutability":"constant","name":"_ADDON_TYPE_HASH_SLOT","nameLocation":"928:21:35","nodeType":"VariableDeclaration","scope":10035,"src":"903:115:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"903:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830306533653063656335396236303133326565613263376135663565653666353631646637343738363237613437316566393766373433376363313431626565","id":9934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:66:35","typeDescriptions":{"typeIdentifier":"t_rational_402625849445826908905082074988214520153970052060473983368111105441596185582_by_1","typeString":"int_const 4026...(67 digits omitted)...5582"},"value":"0x00e3e0cec59b60132eea2c7a5f5ee6f561df7478627a471ef97f7437cc141bee"},"visibility":"private"},{"body":{"id":9949,"nodeType":"Block","src":"1085:89:35","statements":[{"expression":{"id":9947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":9943,"name":"_ADDON_TYPE_HASH_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"1122:21:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9940,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"1095:11:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3781_$","typeString":"type(library StorageSlot)"}},"id":9942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1107:14:35","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"1095:26:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3669_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1095:49:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3669_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"id":9945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1145:5:35","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"1095:55:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9946,"name":"addonTypeHash_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9937,"src":"1153:14:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1095:72:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9948,"nodeType":"ExpressionStatement","src":"1095:72:35"}]},"id":9950,"implemented":true,"kind":"function","modifiers":[],"name":"_setAddonTypeHash","nameLocation":"1034:17:35","nodeType":"FunctionDefinition","parameters":{"id":9938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9937,"mutability":"mutable","name":"addonTypeHash_","nameLocation":"1060:14:35","nodeType":"VariableDeclaration","scope":9950,"src":"1052:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1052:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1051:24:35"},"returnParameters":{"id":9939,"nodeType":"ParameterList","parameters":[],"src":"1085:0:35"},"scope":10035,"src":"1025:149:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9961,"nodeType":"Block","src":"1241:79:35","statements":[{"expression":{"expression":{"arguments":[{"id":9957,"name":"_ADDON_TYPE_HASH_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"1285:21:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"1258:11:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3781_$","typeString":"type(library StorageSlot)"}},"id":9956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1270:14:35","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"1258:26:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3669_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":9958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1258:49:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3669_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"id":9959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1308:5:35","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"1258:55:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9954,"id":9960,"nodeType":"Return","src":"1251:62:35"}]},"id":9962,"implemented":true,"kind":"function","modifiers":[],"name":"_getAddonTypeHash","nameLocation":"1189:17:35","nodeType":"FunctionDefinition","parameters":{"id":9951,"nodeType":"ParameterList","parameters":[],"src":"1206:2:35"},"returnParameters":{"id":9954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9962,"src":"1232:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1232:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1231:9:35"},"scope":10035,"src":"1180:140:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9996,"nodeType":"Block","src":"2348:247:35","statements":[{"expression":{"arguments":[{"id":9976,"name":"addonTypeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9967,"src":"2376:13:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9975,"name":"_setAddonTypeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9950,"src":"2358:17:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":9977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2358:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9978,"nodeType":"ExpressionStatement","src":"2358:32:35"},{"assignments":[9981],"declarations":[{"constant":false,"id":9981,"mutability":"mutable","name":"system_","nameLocation":"2412:7:35","nodeType":"VariableDeclaration","scope":9996,"src":"2401:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"},"typeName":{"id":9980,"nodeType":"UserDefinedTypeName","pathNode":{"id":9979,"name":"IATKSystem","nameLocations":["2401:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":10963,"src":"2401:10:35"},"referencedDeclaration":10963,"src":"2401:10:35","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"visibility":"internal"}],"id":9984,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9982,"name":"_getSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"2422:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IATKSystem_$10963_$","typeString":"function () view returns (contract IATKSystem)"}},"id":9983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:12:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"nodeType":"VariableDeclarationStatement","src":"2401:33:35"},{"assignments":[9986],"declarations":[{"constant":false,"id":9986,"mutability":"mutable","name":"implementation","nameLocation":"2452:14:35","nodeType":"VariableDeclaration","scope":9996,"src":"2444:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9985,"name":"address","nodeType":"ElementaryTypeName","src":"2444:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9990,"initialValue":{"arguments":[{"id":9988,"name":"system_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"2503:7:35","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}],"id":9987,"name":"_getSpecificImplementationAddress","nodeType":"Identifier","overloadedDeclarations":[10034],"referencedDeclaration":10034,"src":"2469:33:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IATKSystem_$10963_$returns$_t_address_$","typeString":"function (contract IATKSystem) view returns (address)"}},"id":9989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2469:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2444:67:35"},{"expression":{"arguments":[{"id":9992,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"2557:14:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9993,"name":"initializeData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9969,"src":"2573:14:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9991,"name":"_performInitializationDelegatecall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10255,"src":"2522:34:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":9994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2522:66:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9995,"nodeType":"ExpressionStatement","src":"2522:66:35"}]},"documentation":{"id":9963,"nodeType":"StructuredDocumentation","src":"1326:858:35","text":"@notice Constructor for the `ATKSystemAddonProxy`.\n @dev This function is called only once when the proxy contract is deployed.\n It performs critical setup steps:\n 1. Stores the `systemAddress` (handled by `ATKSystemProxy` constructor).\n 2. Retrieves the initial `ATKSystemAddonImplementation` address from the `IATKSystem` contract.\n 3. Ensures this retrieved implementation address is not the zero address.\n 4. Executes a `delegatecall` to the `initialize` function of the `ATKSystemAddonImplementation` contract\n    via `_performInitializationDelegatecall`.\n @param systemAddress The address of the `IATKSystem` contract.\n @param addonTypeHash The hash of the addon type.\n @param initializeData The encoded function call to initialize the proxy (e.g., abi.encodeWithSelector(...))."},"id":9997,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9972,"name":"systemAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9965,"src":"2329:13:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9973,"kind":"baseConstructorSpecifier","modifierName":{"id":9971,"name":"ATKSystemProxy","nameLocations":["2314:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":10282,"src":"2314:14:35"},"nodeType":"ModifierInvocation","src":"2314:29:35"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9965,"mutability":"mutable","name":"systemAddress","nameLocation":"2218:13:35","nodeType":"VariableDeclaration","scope":9997,"src":"2210:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9964,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9967,"mutability":"mutable","name":"addonTypeHash","nameLocation":"2249:13:35","nodeType":"VariableDeclaration","scope":9997,"src":"2241:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2241:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9969,"mutability":"mutable","name":"initializeData","nameLocation":"2285:14:35","nodeType":"VariableDeclaration","scope":9997,"src":"2272:27:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9968,"name":"bytes","nodeType":"ElementaryTypeName","src":"2272:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2200:105:35"},"returnParameters":{"id":9974,"nodeType":"ParameterList","parameters":[],"src":"2348:0:35"},"scope":10035,"src":"2189:406:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[10167],"body":{"id":10033,"nodeType":"Block","src":"3076:282:35","statements":[{"assignments":[10008],"declarations":[{"constant":false,"id":10008,"mutability":"mutable","name":"addonTypeHash","nameLocation":"3094:13:35","nodeType":"VariableDeclaration","scope":10033,"src":"3086:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3086:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10011,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":10009,"name":"_getAddonTypeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9962,"src":"3110:17:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":10010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3110:19:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3086:43:35"},{"assignments":[10013],"declarations":[{"constant":false,"id":10013,"mutability":"mutable","name":"implementation","nameLocation":"3147:14:35","nodeType":"VariableDeclaration","scope":10033,"src":"3139:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10012,"name":"address","nodeType":"ElementaryTypeName","src":"3139:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10018,"initialValue":{"arguments":[{"id":10016,"name":"addonTypeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"3191:13:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10014,"name":"system","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10001,"src":"3164:6:35","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:19:35","memberName":"addonImplementation","nodeType":"MemberAccess","referencedDeclaration":10904,"src":"3164:26:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3164:41:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3139:66:35"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10019,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10013,"src":"3219:14:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3245:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3237:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10020,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:35","typeDescriptions":{}}},"id":10023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3237:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3219:28:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10030,"nodeType":"IfStatement","src":"3215:106:35","trueBody":{"id":10029,"nodeType":"Block","src":"3249:72:35","statements":[{"errorCall":{"arguments":[{"id":10026,"name":"addonTypeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"3296:13:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10025,"name":"AddonImplementationNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10084,"src":"3270:25:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":10027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3270:40:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10028,"nodeType":"RevertStatement","src":"3263:47:35"}]}},{"expression":{"id":10031,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10013,"src":"3337:14:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10006,"id":10032,"nodeType":"Return","src":"3330:21:35"}]},"documentation":{"id":9998,"nodeType":"StructuredDocumentation","src":"2601:367:35","text":"@dev Retrieves the implementation address for the System Addon module from the `IATKSystem` contract.\n @dev Reverts with `AddonImplementationNotSet` if the implementation address is zero.\n @param system The `IATKSystem` contract instance.\n @return The address of the `ATKSystemAddonImplementation` contract.\n @inheritdoc ATKSystemProxy"},"id":10034,"implemented":true,"kind":"function","modifiers":[],"name":"_getSpecificImplementationAddress","nameLocation":"2982:33:35","nodeType":"FunctionDefinition","overrides":{"id":10003,"nodeType":"OverrideSpecifier","overrides":[],"src":"3049:8:35"},"parameters":{"id":10002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10001,"mutability":"mutable","name":"system","nameLocation":"3027:6:35","nodeType":"VariableDeclaration","scope":10034,"src":"3016:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"},"typeName":{"id":10000,"nodeType":"UserDefinedTypeName","pathNode":{"id":9999,"name":"IATKSystem","nameLocations":["3016:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":10963,"src":"3016:10:35"},"referencedDeclaration":10963,"src":"3016:10:35","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"visibility":"internal"}],"src":"3015:19:35"},"returnParameters":{"id":10006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10034,"src":"3067:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10004,"name":"address","nodeType":"ElementaryTypeName","src":"3067:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3066:9:35"},"scope":10035,"src":"2973:385:35","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":10036,"src":"772:2588:35","usedErrors":[10040,10084,10094,10134],"usedEvents":[]}],"src":"40:3321:35"},"id":35},"contracts/system/ATKSystemErrors.sol":{"ast":{"absolutePath":"contracts/system/ATKSystemErrors.sol","exportedSymbols":{"AddonImplementationNotSet":[10084],"AddonTypeAlreadyRegistered":[10119],"ComplianceImplementationNotSet":[10052],"ETHTransfersNotAllowed":[10094],"IdentityFactoryImplementationNotSet":[10067],"IdentityImplementationNotSet":[10070],"IdentityRegistryImplementationNotSet":[10055],"IdentityRegistryStorageImplementationNotSet":[10058],"IdentityVerificationModuleNotSet":[10079],"IndexOutOfBounds":[10091],"InitializationFailed":[10043],"InitializationWithZeroAddress":[10134],"InvalidAddonAddress":[10128],"InvalidImplementationInterface":[10101],"InvalidSystemAddress":[10040],"InvalidSystemImplementation":[10137],"InvalidTokenFactoryAddress":[10104],"InvalidTokenImplementationAddress":[10125],"InvalidTokenImplementationInterface":[10131],"SystemAlreadyBootstrapped":[10049],"SystemNotBootstrapped":[10046],"TokenAccessManagerImplementationNotSet":[10076],"TokenFactoryImplementationNotSet":[10109],"TokenFactoryTypeAlreadyRegistered":[10114],"TokenIdentityImplementationNotSet":[10073],"TokenImplementationNotSet":[10122],"TopicSchemeRegistryImplementationNotSet":[10064],"TrustedIssuersRegistryImplementationNotSet":[10061]},"id":10138,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":10037,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"41:24:36"},{"documentation":{"id":10038,"nodeType":"StructuredDocumentation","src":"67:309:36","text":"@notice Error indicating that an invalid system address was provided or encountered.\n @dev This typically means an address expected to be a core system component (like a module proxy or implementation)\n was found to be the zero address or an otherwise incorrect address during a critical operation."},"errorSelector":"3f997a37","id":10040,"name":"InvalidSystemAddress","nameLocation":"382:20:36","nodeType":"ErrorDefinition","parameters":{"id":10039,"nodeType":"ParameterList","parameters":[],"src":"402:2:36"},"src":"376:29:36"},{"documentation":{"id":10041,"nodeType":"StructuredDocumentation","src":"407:276:36","text":"@notice Error indicating that a system initialization process failed.\n @dev This could occur during the `bootstrap` phase of the `SMARTSystem` or during the constructor execution\n of a critical component if a required setup step could not be completed successfully."},"errorSelector":"19b991a8","id":10043,"name":"InitializationFailed","nameLocation":"689:20:36","nodeType":"ErrorDefinition","parameters":{"id":10042,"nodeType":"ParameterList","parameters":[],"src":"709:2:36"},"src":"683:29:36"},{"documentation":{"id":10044,"nodeType":"StructuredDocumentation","src":"714:220:36","text":"@notice Error indicating that an action is being attempted on a system that has not been bootstrapped yet.\n @dev This is thrown when a function requires core proxy contracts to be deployed, but they haven't been."},"errorSelector":"7b43badd","id":10046,"name":"SystemNotBootstrapped","nameLocation":"940:21:36","nodeType":"ErrorDefinition","parameters":{"id":10045,"nodeType":"ParameterList","parameters":[],"src":"961:2:36"},"src":"934:30:36"},{"documentation":{"id":10047,"nodeType":"StructuredDocumentation","src":"966:257:36","text":"@notice Error indicating that the system has already been bootstrapped and cannot be bootstrapped again.\n @dev This error is thrown if the `bootstrap` function is called when the system proxy contracts have already\n been deployed and initialized."},"errorSelector":"cc02a184","id":10049,"name":"SystemAlreadyBootstrapped","nameLocation":"1229:25:36","nodeType":"ErrorDefinition","parameters":{"id":10048,"nodeType":"ParameterList","parameters":[],"src":"1254:2:36"},"src":"1223:34:36"},{"documentation":{"id":10050,"nodeType":"StructuredDocumentation","src":"1259:267:36","text":"@notice Error indicating that the compliance module implementation address has not been set.\n @dev This error is thrown if an operation requires the compliance module, but its logic contract address is\n zero or has not been configured in the `SMARTSystem`."},"errorSelector":"ee30f64f","id":10052,"name":"ComplianceImplementationNotSet","nameLocation":"1532:30:36","nodeType":"ErrorDefinition","parameters":{"id":10051,"nodeType":"ParameterList","parameters":[],"src":"1562:2:36"},"src":"1526:39:36"},{"documentation":{"id":10053,"nodeType":"StructuredDocumentation","src":"1567:267:36","text":"@notice Error indicating that the identity registry implementation address has not been set.\n @dev This error is thrown if an operation requires the identity registry, but its logic contract address is\n zero or has not been configured in the `SMARTSystem`."},"errorSelector":"97a22d93","id":10055,"name":"IdentityRegistryImplementationNotSet","nameLocation":"1840:36:36","nodeType":"ErrorDefinition","parameters":{"id":10054,"nodeType":"ParameterList","parameters":[],"src":"1876:2:36"},"src":"1834:45:36"},{"documentation":{"id":10056,"nodeType":"StructuredDocumentation","src":"1881:283:36","text":"@notice Error indicating that the identity registry storage implementation address has not been set.\n @dev This error is thrown if an operation requires the identity registry storage, but its logic contract address is\n zero or has not been configured in the `SMARTSystem`."},"errorSelector":"d6cd3aeb","id":10058,"name":"IdentityRegistryStorageImplementationNotSet","nameLocation":"2170:43:36","nodeType":"ErrorDefinition","parameters":{"id":10057,"nodeType":"ParameterList","parameters":[],"src":"2213:2:36"},"src":"2164:52:36"},{"documentation":{"id":10059,"nodeType":"StructuredDocumentation","src":"2218:281:36","text":"@notice Error indicating that the trusted issuers registry implementation address has not been set.\n @dev This error is thrown if an operation requires the trusted issuers registry, but its logic contract address is\n zero or has not been configured in the `SMARTSystem`."},"errorSelector":"273e4dd0","id":10061,"name":"TrustedIssuersRegistryImplementationNotSet","nameLocation":"2505:42:36","nodeType":"ErrorDefinition","parameters":{"id":10060,"nodeType":"ParameterList","parameters":[],"src":"2547:2:36"},"src":"2499:51:36"},{"documentation":{"id":10062,"nodeType":"StructuredDocumentation","src":"2552:275:36","text":"@notice Error indicating that the topic scheme registry implementation address has not been set.\n @dev This error is thrown if an operation requires the topic scheme registry, but its logic contract address is\n zero or has not been configured in the `SMARTSystem`."},"errorSelector":"85e9ff1a","id":10064,"name":"TopicSchemeRegistryImplementationNotSet","nameLocation":"2833:39:36","nodeType":"ErrorDefinition","parameters":{"id":10063,"nodeType":"ParameterList","parameters":[],"src":"2872:2:36"},"src":"2827:48:36"},{"documentation":{"id":10065,"nodeType":"StructuredDocumentation","src":"2877:265:36","text":"@notice Error indicating that the identity factory implementation address has not been set.\n @dev This error is thrown if an operation requires the identity factory, but its logic contract address is\n zero or has not been configured in the `SMARTSystem`."},"errorSelector":"b69ce720","id":10067,"name":"IdentityFactoryImplementationNotSet","nameLocation":"3148:35:36","nodeType":"ErrorDefinition","parameters":{"id":10066,"nodeType":"ParameterList","parameters":[],"src":"3183:2:36"},"src":"3142:44:36"},{"documentation":{"id":10068,"nodeType":"StructuredDocumentation","src":"3188:326:36","text":"@notice Error indicating that the standard identity contract implementation address has not been set.\n @dev This error is thrown if an operation requires the standard identity implementation (the template for user\n identities), but its logic contract address is zero or has not been configured in the `SMARTSystem`."},"errorSelector":"4709f982","id":10070,"name":"IdentityImplementationNotSet","nameLocation":"3520:28:36","nodeType":"ErrorDefinition","parameters":{"id":10069,"nodeType":"ParameterList","parameters":[],"src":"3548:2:36"},"src":"3514:37:36"},{"documentation":{"id":10071,"nodeType":"StructuredDocumentation","src":"3553:334:36","text":"@notice Error indicating that the token identity contract implementation address has not been set.\n @dev This error is thrown if an operation requires the token identity implementation (the template for\n token-specific\n identities), but its logic contract address is zero or has not been configured in the `SMARTSystem`."},"errorSelector":"e26a8ec7","id":10073,"name":"TokenIdentityImplementationNotSet","nameLocation":"3893:33:36","nodeType":"ErrorDefinition","parameters":{"id":10072,"nodeType":"ParameterList","parameters":[],"src":"3926:2:36"},"src":"3887:42:36"},{"documentation":{"id":10074,"nodeType":"StructuredDocumentation","src":"3931:297:36","text":"@notice Error indicating that the token access manager contract implementation address has not been set.\n @dev This error is thrown if an operation requires the token access manager implementation, but its logic\n contract address is zero or has not been configured in the `SMARTSystem`."},"errorSelector":"2674f80c","id":10076,"name":"TokenAccessManagerImplementationNotSet","nameLocation":"4234:38:36","nodeType":"ErrorDefinition","parameters":{"id":10075,"nodeType":"ParameterList","parameters":[],"src":"4272:2:36"},"src":"4228:47:36"},{"documentation":{"id":10077,"nodeType":"StructuredDocumentation","src":"4277:293:36","text":"@notice Error indicating that the identity verification module implementation address has not been set.\n @dev This error is thrown if an operation requires the identity verification module, but its logic contract address\n is\n zero or has not been configured in the `SMARTSystem`."},"errorSelector":"eb0b44a4","id":10079,"name":"IdentityVerificationModuleNotSet","nameLocation":"4576:32:36","nodeType":"ErrorDefinition","parameters":{"id":10078,"nodeType":"ParameterList","parameters":[],"src":"4608:2:36"},"src":"4570:41:36"},{"documentation":{"id":10080,"nodeType":"StructuredDocumentation","src":"4613:272:36","text":"@notice Error indicating that the system addon implementation address has not been set.\n @dev This error is thrown if an operation requires the system addon implementation, but its logic contract address\n is zero or has not been configured in the `SMARTSystem`."},"errorSelector":"586ac6c2","id":10084,"name":"AddonImplementationNotSet","nameLocation":"4891:25:36","nodeType":"ErrorDefinition","parameters":{"id":10083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10082,"mutability":"mutable","name":"addonTypeHash","nameLocation":"4925:13:36","nodeType":"VariableDeclaration","scope":10084,"src":"4917:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4917:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4916:23:36"},"src":"4885:55:36"},{"documentation":{"id":10085,"nodeType":"StructuredDocumentation","src":"4942:336:36","text":"@notice Error indicating that an index provided for accessing an array or list is out of its valid range.\n @dev For example, trying to access the 5th element in an array that only has 3 elements.\n @param index The invalid index that was attempted to be accessed.\n @param length The actual length or size of the array/list."},"errorSelector":"63a056dd","id":10091,"name":"IndexOutOfBounds","nameLocation":"5284:16:36","nodeType":"ErrorDefinition","parameters":{"id":10090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10087,"mutability":"mutable","name":"index","nameLocation":"5309:5:36","nodeType":"VariableDeclaration","scope":10091,"src":"5301:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5301:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10089,"mutability":"mutable","name":"length","nameLocation":"5324:6:36","nodeType":"VariableDeclaration","scope":10091,"src":"5316:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10088,"name":"uint256","nodeType":"ElementaryTypeName","src":"5316:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5300:31:36"},"src":"5278:54:36"},{"documentation":{"id":10092,"nodeType":"StructuredDocumentation","src":"5334:279:36","text":"@notice Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it.\n @dev Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent\n loss of funds or unexpected behavior."},"errorSelector":"5d82995b","id":10094,"name":"ETHTransfersNotAllowed","nameLocation":"5619:22:36","nodeType":"ErrorDefinition","parameters":{"id":10093,"nodeType":"ParameterList","parameters":[],"src":"5641:2:36"},"src":"5613:31:36"},{"documentation":{"id":10095,"nodeType":"StructuredDocumentation","src":"5646:606:36","text":"@notice Error indicating that a provided implementation address does not support a required interface.\n @dev When setting implementation addresses for modules (e.g., compliance, identity registry), the `SMARTSystem`\n checks if these implementations adhere to specific standard interfaces (like `IERC165` and the module-specific\n interface). If this check fails, this error is thrown.\n @param implAddress The address of the implementation contract that failed the interface check.\n @param interfaceId The bytes4 identifier of the interface that the `implAddress` was expected to support."},"errorSelector":"27224edf","id":10101,"name":"InvalidImplementationInterface","nameLocation":"6258:30:36","nodeType":"ErrorDefinition","parameters":{"id":10100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10097,"mutability":"mutable","name":"implAddress","nameLocation":"6297:11:36","nodeType":"VariableDeclaration","scope":10101,"src":"6289:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10096,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10099,"mutability":"mutable","name":"interfaceId","nameLocation":"6317:11:36","nodeType":"VariableDeclaration","scope":10101,"src":"6310:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10098,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6310:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6288:41:36"},"src":"6252:78:36"},{"documentation":{"id":10102,"nodeType":"StructuredDocumentation","src":"6332:81:36","text":"@notice Error indicating that an invalid token factory address was provided."},"errorSelector":"fd360a1d","id":10104,"name":"InvalidTokenFactoryAddress","nameLocation":"6419:26:36","nodeType":"ErrorDefinition","parameters":{"id":10103,"nodeType":"ParameterList","parameters":[],"src":"6445:2:36"},"src":"6413:35:36"},{"documentation":{"id":10105,"nodeType":"StructuredDocumentation","src":"6450:93:36","text":"@notice Error indicating that the token factory implementation address has not been set."},"errorSelector":"19919c2a","id":10109,"name":"TokenFactoryImplementationNotSet","nameLocation":"6549:32:36","nodeType":"ErrorDefinition","parameters":{"id":10108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10107,"mutability":"mutable","name":"registryTypeHash","nameLocation":"6590:16:36","nodeType":"VariableDeclaration","scope":10109,"src":"6582:24:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6581:26:36"},"src":"6543:65:36"},{"documentation":{"id":10110,"nodeType":"StructuredDocumentation","src":"6610:89:36","text":"@notice Error indicating that a token factory type hash has already been registered."},"errorSelector":"7a65e7c3","id":10114,"name":"TokenFactoryTypeAlreadyRegistered","nameLocation":"6705:33:36","nodeType":"ErrorDefinition","parameters":{"id":10113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10112,"mutability":"mutable","name":"typeName","nameLocation":"6746:8:36","nodeType":"VariableDeclaration","scope":10114,"src":"6739:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10111,"name":"string","nodeType":"ElementaryTypeName","src":"6739:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6738:17:36"},"src":"6699:57:36"},{"documentation":{"id":10115,"nodeType":"StructuredDocumentation","src":"6758:88:36","text":"@notice Error indicating that a system addon type hash has already been registered."},"errorSelector":"8adab4b7","id":10119,"name":"AddonTypeAlreadyRegistered","nameLocation":"6852:26:36","nodeType":"ErrorDefinition","parameters":{"id":10118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10117,"mutability":"mutable","name":"typeName","nameLocation":"6886:8:36","nodeType":"VariableDeclaration","scope":10119,"src":"6879:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10116,"name":"string","nodeType":"ElementaryTypeName","src":"6879:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6878:17:36"},"src":"6846:50:36"},{"documentation":{"id":10120,"nodeType":"StructuredDocumentation","src":"6898:85:36","text":"@notice Error indicating that the token implementation address has not been set."},"errorSelector":"daa2f31f","id":10122,"name":"TokenImplementationNotSet","nameLocation":"6989:25:36","nodeType":"ErrorDefinition","parameters":{"id":10121,"nodeType":"ParameterList","parameters":[],"src":"7014:2:36"},"src":"6983:34:36"},{"documentation":{"id":10123,"nodeType":"StructuredDocumentation","src":"7019:88:36","text":"@notice Error indicating that an invalid token implementation address was provided."},"errorSelector":"4150de7a","id":10125,"name":"InvalidTokenImplementationAddress","nameLocation":"7113:33:36","nodeType":"ErrorDefinition","parameters":{"id":10124,"nodeType":"ParameterList","parameters":[],"src":"7146:2:36"},"src":"7107:42:36"},{"documentation":{"id":10126,"nodeType":"StructuredDocumentation","src":"7151:73:36","text":"@notice Error indicating that an invalid addon address was provided."},"errorSelector":"82b68efb","id":10128,"name":"InvalidAddonAddress","nameLocation":"7230:19:36","nodeType":"ErrorDefinition","parameters":{"id":10127,"nodeType":"ParameterList","parameters":[],"src":"7249:2:36"},"src":"7224:28:36"},{"documentation":{"id":10129,"nodeType":"StructuredDocumentation","src":"7254:90:36","text":"@notice Error indicating that an invalid token implementation interface was provided."},"errorSelector":"4da1d31f","id":10131,"name":"InvalidTokenImplementationInterface","nameLocation":"7350:35:36","nodeType":"ErrorDefinition","parameters":{"id":10130,"nodeType":"ParameterList","parameters":[],"src":"7385:2:36"},"src":"7344:44:36"},{"documentation":{"id":10132,"nodeType":"StructuredDocumentation","src":"7390:254:36","text":"@notice Error indicating that an attempt was made to initialize a component with a zero address for its\n implementation.\n @dev This typically occurs in proxy constructors if the logic contract address fetched from the system is\n address(0)."},"errorSelector":"ee0a1297","id":10134,"name":"InitializationWithZeroAddress","nameLocation":"7650:29:36","nodeType":"ErrorDefinition","parameters":{"id":10133,"nodeType":"ParameterList","parameters":[],"src":"7679:2:36"},"src":"7644:38:36"},{"documentation":{"id":10135,"nodeType":"StructuredDocumentation","src":"7684:183:36","text":"@notice Error indicating that an invalid ATKSystem implementation address was provided.\n @dev This error is thrown if the ATKSystem implementation address is the zero address."},"errorSelector":"4d174e3b","id":10137,"name":"InvalidSystemImplementation","nameLocation":"7873:27:36","nodeType":"ErrorDefinition","parameters":{"id":10136,"nodeType":"ParameterList","parameters":[],"src":"7900:2:36"},"src":"7867:36:36"}],"src":"41:7863:36"},"id":36},"contracts/system/ATKSystemProxy.sol":{"ast":{"absolutePath":"contracts/system/ATKSystemProxy.sol","exportedSymbols":{"ATKSystemProxy":[10282],"ETHTransfersNotAllowed":[10094],"IATKSystem":[10963],"IERC165":[3817],"InitializationWithZeroAddress":[10134],"InvalidSystemAddress":[10040],"Proxy":[1695],"StorageSlot":[3781]},"id":10283,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":10139,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"87:24:37"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"@openzeppelin/contracts/proxy/Proxy.sol","id":10141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10283,"sourceUnit":1696,"src":"113:64:37","symbolAliases":[{"foreign":{"id":10140,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"122:5:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":10143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10283,"sourceUnit":3818,"src":"178:82:37","symbolAliases":[{"foreign":{"id":10142,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"187:7:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"@openzeppelin/contracts/utils/StorageSlot.sol","id":10145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10283,"sourceUnit":3782,"src":"261:76:37","symbolAliases":[{"foreign":{"id":10144,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"270:11:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/IATKSystem.sol","file":"./IATKSystem.sol","id":10147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10283,"sourceUnit":10964,"src":"338:46:37","symbolAliases":[{"foreign":{"id":10146,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"347:10:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/ATKSystemErrors.sol","file":"./ATKSystemErrors.sol","id":10151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10283,"sourceUnit":10138,"src":"385:116:37","symbolAliases":[{"foreign":{"id":10148,"name":"InvalidSystemAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10040,"src":"394:20:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":10149,"name":"ETHTransfersNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"416:22:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":10150,"name":"InitializationWithZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10134,"src":"440:29:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10153,"name":"Proxy","nameLocations":["1287:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":1695,"src":"1287:5:37"},"id":10154,"nodeType":"InheritanceSpecifier","src":"1287:5:37"}],"canonicalName":"ATKSystemProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":10152,"nodeType":"StructuredDocumentation","src":"503:748:37","text":"@title Abstract Base Proxy for ATK System Components\n @author SettleMint Tokenization Services\n @notice Provides common functionality for proxy contracts that interact with an IATKSystem contract\n         to determine their implementation address and handle initialization.\n @dev Child contracts must:\n      1. Provide their unique storage slot for the IATKSystem address via the constructor.\n      2. Implement `_getSpecificImplementationAddress` to fetch their logic contract address from IATKSystem\n         and revert with a specific error if not found.\n      3. In their own constructor, fetch the implementation address, prepare initialization data,\n         and then call `_performInitializationDelegatecall`."},"fullyImplemented":false,"id":10282,"linearizedBaseContracts":[10282,1695],"name":"ATKSystemProxy","nameLocation":"1269:14:37","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":10155,"nodeType":"StructuredDocumentation","src":"1299:138:37","text":"@dev Fixed storage slot for the IATKSystem address.\n Value: keccak256(\"org.smart.contracts.proxy.ATKSystemProxy.systemAddress\")"},"id":10158,"mutability":"constant","name":"_ATK_SYSTEM_ADDRESS_SLOT","nameLocation":"1467:24:37","nodeType":"VariableDeclaration","scope":10282,"src":"1442:126:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1442:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834656330353165636634323066643136653064623536373139376461373665633766316635663437373633393730643630346239376537356362303036346433","id":10157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1502:66:37","typeDescriptions":{"typeIdentifier":"t_rational_35620202255643501470138482670909179230078142177557803947381071556045311075539_by_1","typeString":"int_const 3562...(69 digits omitted)...5539"},"value":"0x4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d3"},"visibility":"private"},{"documentation":{"id":10159,"nodeType":"StructuredDocumentation","src":"1575:568:37","text":"@notice Child contracts MUST implement this function.\n @dev It should retrieve the specific implementation address for the child proxy from the provided `IATKSystem`\n instance.\n If the implementation address from the system is `address(0)`, this function MUST revert with the\n child proxy's specific \"ImplementationNotSet\" error (e.g., `TrustedIssuersRegistryImplementationNotSet`).\n @param system The `IATKSystem` instance to query.\n @return implementationAddress The address of the child's logic/implementation contract."},"id":10167,"implemented":false,"kind":"function","modifiers":[],"name":"_getSpecificImplementationAddress","nameLocation":"2157:33:37","nodeType":"FunctionDefinition","parameters":{"id":10163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10162,"mutability":"mutable","name":"system","nameLocation":"2202:6:37","nodeType":"VariableDeclaration","scope":10167,"src":"2191:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"},"typeName":{"id":10161,"nodeType":"UserDefinedTypeName","pathNode":{"id":10160,"name":"IATKSystem","nameLocations":["2191:10:37"],"nodeType":"IdentifierPath","referencedDeclaration":10963,"src":"2191:10:37"},"referencedDeclaration":10963,"src":"2191:10:37","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"visibility":"internal"}],"src":"2190:19:37"},"returnParameters":{"id":10166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10165,"mutability":"mutable","name":"implementationAddress","nameLocation":"2281:21:37","nodeType":"VariableDeclaration","scope":10167,"src":"2273:29:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10164,"name":"address","nodeType":"ElementaryTypeName","src":"2273:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2272:31:37"},"scope":10282,"src":"2148:156:37","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":10204,"nodeType":"Block","src":"2519:315:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10173,"name":"systemAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"2533:14:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2559:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2551:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10174,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:37","typeDescriptions":{}}},"id":10177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2533:28:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":10188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2565:72:37","subExpression":{"arguments":[{"expression":{"arguments":[{"id":10184,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"2613:10:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IATKSystem_$10963_$","typeString":"type(contract IATKSystem)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IATKSystem_$10963_$","typeString":"type(contract IATKSystem)"}],"id":10183,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2608:4:37","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":10185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2608:16:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IATKSystem_$10963","typeString":"type(contract IATKSystem)"}},"id":10186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2625:11:37","memberName":"interfaceId","nodeType":"MemberAccess","src":"2608:28:37","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[{"id":10180,"name":"systemAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"2574:14:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10179,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"2566:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3817_$","typeString":"type(contract IERC165)"}},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:23:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$3817","typeString":"contract IERC165"}},"id":10182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2590:17:37","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3816,"src":"2566:41:37","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view external returns (bool)"}},"id":10187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:71:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2533:104:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10194,"nodeType":"IfStatement","src":"2529:164:37","trueBody":{"id":10193,"nodeType":"Block","src":"2639:54:37","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10190,"name":"InvalidSystemAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10040,"src":"2660:20:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:22:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10192,"nodeType":"RevertStatement","src":"2653:29:37"}]}},{"expression":{"id":10202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":10198,"name":"_ATK_SYSTEM_ADDRESS_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10158,"src":"2779:24:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10195,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"2752:11:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3781_$","typeString":"type(library StorageSlot)"}},"id":10197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2764:14:37","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"2752:26:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3663_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":10199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2752:52:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3663_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":10200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2805:5:37","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"2752:58:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10201,"name":"systemAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"2813:14:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2752:75:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10203,"nodeType":"ExpressionStatement","src":"2752:75:37"}]},"documentation":{"id":10168,"nodeType":"StructuredDocumentation","src":"2310:168:37","text":"@notice Constructs the ATKSystemProxy.\n @dev Validates and stores the `systemAddress_`.\n @param systemAddress_ The address of the IATKSystem contract."},"id":10205,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10170,"mutability":"mutable","name":"systemAddress_","nameLocation":"2503:14:37","nodeType":"VariableDeclaration","scope":10205,"src":"2495:22:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10169,"name":"address","nodeType":"ElementaryTypeName","src":"2495:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2494:24:37"},"returnParameters":{"id":10172,"nodeType":"ParameterList","parameters":[],"src":"2519:0:37"},"scope":10282,"src":"2483:351:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10220,"nodeType":"Block","src":"3089:149:37","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":10215,"name":"_ATK_SYSTEM_ADDRESS_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10158,"src":"3199:24:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10213,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"3172:11:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3781_$","typeString":"type(library StorageSlot)"}},"id":10214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3184:14:37","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"3172:26:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3663_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3172:52:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3663_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":10217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3225:5:37","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3662,"src":"3172:58:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10212,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"3161:10:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IATKSystem_$10963_$","typeString":"type(contract IATKSystem)"}},"id":10218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3161:70:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"functionReturnParameters":10211,"id":10219,"nodeType":"Return","src":"3154:77:37"}]},"documentation":{"id":10206,"nodeType":"StructuredDocumentation","src":"2840:187:37","text":"@dev Internal function to retrieve the `IATKSystem` contract instance from the stored address.\n @return An `IATKSystem` instance pointing to the stored system contract address."},"id":10221,"implemented":true,"kind":"function","modifiers":[],"name":"_getSystem","nameLocation":"3041:10:37","nodeType":"FunctionDefinition","parameters":{"id":10207,"nodeType":"ParameterList","parameters":[],"src":"3051:2:37"},"returnParameters":{"id":10211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10221,"src":"3077:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"},"typeName":{"id":10209,"nodeType":"UserDefinedTypeName","pathNode":{"id":10208,"name":"IATKSystem","nameLocations":["3077:10:37"],"nodeType":"IdentifierPath","referencedDeclaration":10963,"src":"3077:10:37"},"referencedDeclaration":10963,"src":"3077:10:37","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"visibility":"internal"}],"src":"3076:12:37"},"scope":10282,"src":"3032:206:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10254,"nodeType":"Block","src":"4035:358:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10229,"name":"implementationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10224,"src":"4049:21:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4082:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4074:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10230,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:37","typeDescriptions":{}}},"id":10233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4074:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4049:35:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10239,"nodeType":"IfStatement","src":"4045:104:37","trueBody":{"id":10238,"nodeType":"Block","src":"4086:63:37","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10235,"name":"InitializationWithZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10134,"src":"4107:29:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:31:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10237,"nodeType":"RevertStatement","src":"4100:38:37"}]}},{"assignments":[10241,10243],"declarations":[{"constant":false,"id":10241,"mutability":"mutable","name":"success","nameLocation":"4164:7:37","nodeType":"VariableDeclaration","scope":10254,"src":"4159:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10240,"name":"bool","nodeType":"ElementaryTypeName","src":"4159:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10243,"mutability":"mutable","name":"returnData","nameLocation":"4186:10:37","nodeType":"VariableDeclaration","scope":10254,"src":"4173:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10242,"name":"bytes","nodeType":"ElementaryTypeName","src":"4173:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":10248,"initialValue":{"arguments":[{"id":10246,"name":"initializeData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10226,"src":"4235:14:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10244,"name":"implementationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10224,"src":"4200:21:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:12:37","memberName":"delegatecall","nodeType":"MemberAccess","src":"4200:34:37","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":10247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4200:50:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4158:92:37"},{"condition":{"id":10250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4264:8:37","subExpression":{"id":10249,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10241,"src":"4265:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10253,"nodeType":"IfStatement","src":"4260:127:37","trueBody":{"id":10252,"nodeType":"Block","src":"4274:113:37","statements":[{"AST":{"nativeSrc":"4297:80:37","nodeType":"YulBlock","src":"4297:80:37","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returnData","nativeSrc":"4326:10:37","nodeType":"YulIdentifier","src":"4326:10:37"},{"kind":"number","nativeSrc":"4338:4:37","nodeType":"YulLiteral","src":"4338:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4322:3:37","nodeType":"YulIdentifier","src":"4322:3:37"},"nativeSrc":"4322:21:37","nodeType":"YulFunctionCall","src":"4322:21:37"},{"arguments":[{"name":"returnData","nativeSrc":"4351:10:37","nodeType":"YulIdentifier","src":"4351:10:37"}],"functionName":{"name":"mload","nativeSrc":"4345:5:37","nodeType":"YulIdentifier","src":"4345:5:37"},"nativeSrc":"4345:17:37","nodeType":"YulFunctionCall","src":"4345:17:37"}],"functionName":{"name":"revert","nativeSrc":"4315:6:37","nodeType":"YulIdentifier","src":"4315:6:37"},"nativeSrc":"4315:48:37","nodeType":"YulFunctionCall","src":"4315:48:37"},"nativeSrc":"4315:48:37","nodeType":"YulExpressionStatement","src":"4315:48:37"}]},"evmVersion":"cancun","externalReferences":[{"declaration":10243,"isOffset":false,"isSlot":false,"src":"4326:10:37","valueSize":1},{"declaration":10243,"isOffset":false,"isSlot":false,"src":"4351:10:37","valueSize":1}],"id":10251,"nodeType":"InlineAssembly","src":"4288:89:37"}]}}]},"documentation":{"id":10222,"nodeType":"StructuredDocumentation","src":"3244:673:37","text":"@dev Performs the delegatecall to initialize the implementation contract.\n @notice Child proxy constructors should call this helper function after they have:\n         1. Fetched their specific implementation address from `IATKSystem`.\n         2. Verified this address is not `address(0)` (and reverted with their specific error if it is).\n         3. Prepared the `bytes memory initializeData` specific to their implementation's `initialize` function.\n @param implementationAddress The non-zero address of the logic contract to `delegatecall` to.\n @param initializeData The ABI-encoded data for the `initialize` function call."},"id":10255,"implemented":true,"kind":"function","modifiers":[],"name":"_performInitializationDelegatecall","nameLocation":"3931:34:37","nodeType":"FunctionDefinition","parameters":{"id":10227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10224,"mutability":"mutable","name":"implementationAddress","nameLocation":"3974:21:37","nodeType":"VariableDeclaration","scope":10255,"src":"3966:29:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10223,"name":"address","nodeType":"ElementaryTypeName","src":"3966:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10226,"mutability":"mutable","name":"initializeData","nameLocation":"4010:14:37","nodeType":"VariableDeclaration","scope":10255,"src":"3997:27:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10225,"name":"bytes","nodeType":"ElementaryTypeName","src":"3997:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3965:60:37"},"returnParameters":{"id":10228,"nodeType":"ParameterList","parameters":[],"src":"4035:0:37"},"scope":10282,"src":"3922:471:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1676],"body":{"id":10272,"nodeType":"Block","src":"4976:109:37","statements":[{"assignments":[10264],"declarations":[{"constant":false,"id":10264,"mutability":"mutable","name":"system_","nameLocation":"4997:7:37","nodeType":"VariableDeclaration","scope":10272,"src":"4986:18:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"},"typeName":{"id":10263,"nodeType":"UserDefinedTypeName","pathNode":{"id":10262,"name":"IATKSystem","nameLocations":["4986:10:37"],"nodeType":"IdentifierPath","referencedDeclaration":10963,"src":"4986:10:37"},"referencedDeclaration":10963,"src":"4986:10:37","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"visibility":"internal"}],"id":10267,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":10265,"name":"_getSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"5007:10:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IATKSystem_$10963_$","typeString":"function () view returns (contract IATKSystem)"}},"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5007:12:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"nodeType":"VariableDeclarationStatement","src":"4986:33:37"},{"expression":{"arguments":[{"id":10269,"name":"system_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10264,"src":"5070:7:37","typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}],"id":10268,"name":"_getSpecificImplementationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10167,"src":"5036:33:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IATKSystem_$10963_$returns$_t_address_$","typeString":"function (contract IATKSystem) view returns (address)"}},"id":10270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5036:42:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10261,"id":10271,"nodeType":"Return","src":"5029:49:37"}]},"documentation":{"id":10256,"nodeType":"StructuredDocumentation","src":"4399:504:37","text":"@dev Overrides `Proxy._implementation()`. This is used by OpenZeppelin's proxy mechanisms (e.g., fallback,\n upgrades).\n It retrieves the `IATKSystem` instance and then calls the abstract `_getSpecificImplementationAddress`\n which the child contract must implement. The child's implementation is responsible for returning a valid\n address or reverting with its specific \"ImplementationNotSet\" error.\n @return The address of the current logic/implementation contract."},"id":10273,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"4917:15:37","nodeType":"FunctionDefinition","overrides":{"id":10258,"nodeType":"OverrideSpecifier","overrides":[],"src":"4949:8:37"},"parameters":{"id":10257,"nodeType":"ParameterList","parameters":[],"src":"4932:2:37"},"returnParameters":{"id":10261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10273,"src":"4967:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10259,"name":"address","nodeType":"ElementaryTypeName","src":"4967:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4966:9:37"},"scope":10282,"src":"4908:177:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10280,"nodeType":"Block","src":"5221:48:37","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10277,"name":"ETHTransfersNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10094,"src":"5238:22:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5238:24:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10279,"nodeType":"RevertStatement","src":"5231:31:37"}]},"documentation":{"id":10274,"nodeType":"StructuredDocumentation","src":"5091:90:37","text":"@notice Fallback function to reject any direct Ether transfers to this proxy contract."},"id":10281,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10275,"nodeType":"ParameterList","parameters":[],"src":"5193:2:37"},"returnParameters":{"id":10276,"nodeType":"ParameterList","parameters":[],"src":"5221:0:37"},"scope":10282,"src":"5186:83:37","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":10283,"src":"1251:4020:37","usedErrors":[10040,10094],"usedEvents":[]}],"src":"87:5185:37"},"id":37},"contracts/system/ATKSystemRoles.sol":{"ast":{"absolutePath":"contracts/system/ATKSystemRoles.sol","exportedSymbols":{"ATKSystemRoles":[10350]},"id":10351,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":10284,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"40:23:38"},{"abstract":false,"baseContracts":[],"canonicalName":"ATKSystemRoles","contractDependencies":[],"contractKind":"library","documentation":{"id":10285,"nodeType":"StructuredDocumentation","src":"65:188:38","text":"@title ATKSystemRoles\n @notice Library defining role constants for the ATK protocol's access control system\n @dev These roles are used with OpenZeppelin's AccessControl contract"},"fullyImplemented":true,"id":10350,"linearizedBaseContracts":[10350],"name":"ATKSystemRoles","nameLocation":"261:14:38","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":10286,"nodeType":"StructuredDocumentation","src":"282:148:38","text":"@notice The default admin role that can grant and revoke other roles\n @dev Matches the default admin role in OpenZeppelin's AccessControl"},"functionSelector":"a217fddf","id":10289,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"459:18:38","nodeType":"VariableDeclaration","scope":10350,"src":"435:49:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"435:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":10288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"480:4:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"constant":true,"documentation":{"id":10290,"nodeType":"StructuredDocumentation","src":"491:121:38","text":"@notice Role for managing registration operations\n @dev Assigned to entities responsible for user registration"},"functionSelector":"f68e9553","id":10295,"mutability":"constant","name":"REGISTRAR_ROLE","nameLocation":"641:14:38","nodeType":"VariableDeclaration","scope":10350,"src":"617:68:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5245474953545241525f524f4c45","id":10293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"668:16:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_edcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c309238","typeString":"literal_string \"REGISTRAR_ROLE\""},"value":"REGISTRAR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_edcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c309238","typeString":"literal_string \"REGISTRAR_ROLE\""}],"id":10292,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"658:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"658:27:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10296,"nodeType":"StructuredDocumentation","src":"692:108:38","text":"@notice Role for managing claims\n @dev Assigned to entities responsible for handling token claims"},"functionSelector":"c9581137","id":10301,"mutability":"constant","name":"CLAIM_MANAGER_ROLE","nameLocation":"829:18:38","nodeType":"VariableDeclaration","scope":10350,"src":"805:76:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"805:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"434c41494d5f4d414e414745525f524f4c45","id":10299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"860:20:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_eca77a5bbbcf8baa6d8f93054311a3e6672f982247f67ba40cb896ecf1992aec","typeString":"literal_string \"CLAIM_MANAGER_ROLE\""},"value":"CLAIM_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_eca77a5bbbcf8baa6d8f93054311a3e6672f982247f67ba40cb896ecf1992aec","typeString":"literal_string \"CLAIM_MANAGER_ROLE\""}],"id":10298,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"850:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"850:31:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10302,"nodeType":"StructuredDocumentation","src":"888:122:38","text":"@notice Role for managing identity issuers\n @dev Assigned to entities responsible for handling identity issuers"},"functionSelector":"aa683370","id":10307,"mutability":"constant","name":"IDENTITY_ISSUER_ROLE","nameLocation":"1039:20:38","nodeType":"VariableDeclaration","scope":10350,"src":"1015:80:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4944454e544954595f4953535545525f524f4c45","id":10305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1072:22:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb85","typeString":"literal_string \"IDENTITY_ISSUER_ROLE\""},"value":"IDENTITY_ISSUER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb85","typeString":"literal_string \"IDENTITY_ISSUER_ROLE\""}],"id":10304,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1062:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1062:33:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10308,"nodeType":"StructuredDocumentation","src":"1102:122:38","text":"@notice Role for token identity issuers\n @dev Assigned to entities responsible for issuing new token identities"},"functionSelector":"a7da5cd5","id":10313,"mutability":"constant","name":"TOKEN_IDENTITY_ISSUER_ROLE","nameLocation":"1253:26:38","nodeType":"VariableDeclaration","scope":10350,"src":"1229:92:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1229:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"544f4b454e5f4944454e544954595f4953535545525f524f4c45","id":10311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1292:28:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb","typeString":"literal_string \"TOKEN_IDENTITY_ISSUER_ROLE\""},"value":"TOKEN_IDENTITY_ISSUER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb","typeString":"literal_string \"TOKEN_IDENTITY_ISSUER_ROLE\""}],"id":10310,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1282:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1282:39:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10314,"nodeType":"StructuredDocumentation","src":"1328:134:38","text":"@notice Role for managing token identity issuers\n @dev Assigned to entities responsible for managing token identity issuers"},"functionSelector":"c34e09f0","id":10319,"mutability":"constant","name":"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE","nameLocation":"1491:32:38","nodeType":"VariableDeclaration","scope":10350,"src":"1467:104:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1467:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"544f4b454e5f4944454e544954595f4953535545525f41444d494e5f524f4c45","id":10317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1536:34:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab55121422db2e83f3da68f1a86ef03984cbd0d4c289dad3bc39e9ccee18e411","typeString":"literal_string \"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE\""},"value":"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ab55121422db2e83f3da68f1a86ef03984cbd0d4c289dad3bc39e9ccee18e411","typeString":"literal_string \"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE\""}],"id":10316,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1526:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1526:45:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10320,"nodeType":"StructuredDocumentation","src":"1578:107:38","text":"@notice Role for token deployers\n @dev Assigned to entities responsible for deploying new tokens"},"functionSelector":"ecd00261","id":10325,"mutability":"constant","name":"DEPLOYER_ROLE","nameLocation":"1714:13:38","nodeType":"VariableDeclaration","scope":10350,"src":"1690:66:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1690:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4445504c4f5945525f524f4c45","id":10323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1740:15:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc425f2263d0df187444b70e47283d622c70181c5baebb1306a01edba1ce184c","typeString":"literal_string \"DEPLOYER_ROLE\""},"value":"DEPLOYER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fc425f2263d0df187444b70e47283d622c70181c5baebb1306a01edba1ce184c","typeString":"literal_string \"DEPLOYER_ROLE\""}],"id":10322,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1730:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1730:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10326,"nodeType":"StructuredDocumentation","src":"1763:138:38","text":"@notice Role for managing implementation addresses\n @dev Assigned to entities responsible for managing implementation addresses"},"functionSelector":"5a129a8a","id":10331,"mutability":"constant","name":"IMPLEMENTATION_MANAGER_ROLE","nameLocation":"1930:27:38","nodeType":"VariableDeclaration","scope":10350,"src":"1906:94:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1906:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"494d504c454d454e544154494f4e5f4d414e414745525f524f4c45","id":10329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1970:29:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecaefa0171c08a6ded02d98b9432940d3852ef2c7f5007661eb8de37c5a1adc5","typeString":"literal_string \"IMPLEMENTATION_MANAGER_ROLE\""},"value":"IMPLEMENTATION_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ecaefa0171c08a6ded02d98b9432940d3852ef2c7f5007661eb8de37c5a1adc5","typeString":"literal_string \"IMPLEMENTATION_MANAGER_ROLE\""}],"id":10328,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1960:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1960:40:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10332,"nodeType":"StructuredDocumentation","src":"2007:497:38","text":"@notice A unique identifier (hash) for the role that grants permission to modify the data stored in this\n contract.\n @dev This role is typically granted to `ATKIdentityRegistry` contracts that are \"bound\" to this storage.\n Only addresses holding this role can call functions like `addIdentityToStorage`, `removeIdentityFromStorage`,\n `modifyStoredIdentity`, and `modifyStoredInvestorCountry`.\n The value is calculated as `keccak256(\"STORAGE_MODIFIER_ROLE\")`."},"functionSelector":"fd272646","id":10337,"mutability":"constant","name":"STORAGE_MODIFIER_ROLE","nameLocation":"2533:21:38","nodeType":"VariableDeclaration","scope":10350,"src":"2509:82:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2509:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"53544f524147455f4d4f4449464945525f524f4c45","id":10335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2567:23:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_f926905b211c4fe59c7d68bb001aa504586558fd2888c1ea46e1b382450050cf","typeString":"literal_string \"STORAGE_MODIFIER_ROLE\""},"value":"STORAGE_MODIFIER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f926905b211c4fe59c7d68bb001aa504586558fd2888c1ea46e1b382450050cf","typeString":"literal_string \"STORAGE_MODIFIER_ROLE\""}],"id":10334,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2557:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:34:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10338,"nodeType":"StructuredDocumentation","src":"2598:640:38","text":"@notice A unique identifier (hash) for the role that grants permission to manage the list of bound identity\n registry contracts.\n @dev Addresses holding this role can call `bindIdentityRegistry` to authorize a new registry contract and\n `unbindIdentityRegistry` to revoke authorization from an existing one.\n This role is crucial for controlling which external contracts can write to this storage.\n It is typically assigned to a high-level system management contract (e.g., `ATKSystem` or an identity factory\n contract).\n The value is calculated as `keccak256(\"MANAGE_REGISTRIES_ROLE\")`."},"functionSelector":"c65490d2","id":10343,"mutability":"constant","name":"MANAGE_REGISTRIES_ROLE","nameLocation":"3267:22:38","nodeType":"VariableDeclaration","scope":10350,"src":"3243:84:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3243:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d414e4147455f524547495354524945535f524f4c45","id":10341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3302:24:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_3878ec43b99c41b142f55c5c47e7aa371ea82865d891af952bc6234dbce14f18","typeString":"literal_string \"MANAGE_REGISTRIES_ROLE\""},"value":"MANAGE_REGISTRIES_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3878ec43b99c41b142f55c5c47e7aa371ea82865d891af952bc6234dbce14f18","typeString":"literal_string \"MANAGE_REGISTRIES_ROLE\""}],"id":10340,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3292:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3292:35:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":10344,"nodeType":"StructuredDocumentation","src":"3370:195:38","text":"@notice Role identifier for addresses that can manage the compliance bypass list\n @dev This role allows adding/removing addresses from the bypass list that can bypass compliance checks"},"functionSelector":"9f4530df","id":10349,"mutability":"constant","name":"BYPASS_LIST_MANAGER_ROLE","nameLocation":"3594:24:38","nodeType":"VariableDeclaration","scope":10350,"src":"3570:88:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4259504153535f4c4953545f4d414e414745525f524f4c45","id":10347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3631:26:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaeeb45c1b9029a6e392e1e7aa6f4af6bd8111f85c32809598bc9903a16227a3","typeString":"literal_string \"BYPASS_LIST_MANAGER_ROLE\""},"value":"BYPASS_LIST_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_eaeeb45c1b9029a6e392e1e7aa6f4af6bd8111f85c32809598bc9903a16227a3","typeString":"literal_string \"BYPASS_LIST_MANAGER_ROLE\""}],"id":10346,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3621:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3621:37:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"}],"scope":10351,"src":"253:3408:38","usedErrors":[],"usedEvents":[]}],"src":"40:3622:38"},"id":38},"contracts/system/AbstractATKSystemAddonFactoryImplementation.sol":{"ast":{"absolutePath":"contracts/system/AbstractATKSystemAddonFactoryImplementation.sol","exportedSymbols":{"ATKSystemRoles":[10350],"AbstractATKSystemAddonFactoryImplementation":[10685],"AccessControlUpgradeable":[362],"ContextUpgradeable":[823],"Create2":[3276],"ERC165Upgradeable":[863],"ERC2771ContextUpgradeable":[509],"IATKComplianceBypassList":[11035],"IATKSystem":[10963],"IERC165":[3817],"IWithTypeIdentifier":[10973],"Initializable":[777]},"id":10686,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":10352,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"40:23:39"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":10354,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":778,"src":"91:98:39","symbolAliases":[{"foreign":{"id":10353,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"100:13:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol","id":10356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":510,"src":"190:117:39","symbolAliases":[{"foreign":{"id":10355,"name":"ERC2771ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"199:25:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":10358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":363,"src":"308:115:39","symbolAliases":[{"foreign":{"id":10357,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"317:24:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":10360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":824,"src":"424:102:39","symbolAliases":[{"foreign":{"id":10359,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"433:18:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","id":10362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":864,"src":"527:114:39","symbolAliases":[{"foreign":{"id":10361,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"536:17:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":10364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":3818,"src":"642:82:39","symbolAliases":[{"foreign":{"id":10363,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"651:7:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"@openzeppelin/contracts/utils/Create2.sol","id":10366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":3277,"src":"725:68:39","symbolAliases":[{"foreign":{"id":10365,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"734:7:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/IATKSystem.sol","file":"./IATKSystem.sol","id":10368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":10964,"src":"809:46:39","symbolAliases":[{"foreign":{"id":10367,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"818:10:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/compliance/IATKComplianceBypassList.sol","file":"./compliance/IATKComplianceBypassList.sol","id":10370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":11036,"src":"856:85:39","symbolAliases":[{"foreign":{"id":10369,"name":"IATKComplianceBypassList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11035,"src":"865:24:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/IWithTypeIdentifier.sol","file":"./IWithTypeIdentifier.sol","id":10372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":10974,"src":"942:64:39","symbolAliases":[{"foreign":{"id":10371,"name":"IWithTypeIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10973,"src":"951:19:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/system/ATKSystemRoles.sol","file":"./ATKSystemRoles.sol","id":10374,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10686,"sourceUnit":10351,"src":"1021:54:39","symbolAliases":[{"foreign":{"id":10373,"name":"ATKSystemRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"1030:14:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10376,"name":"Initializable","nameLocations":["1884:13:39"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1884:13:39"},"id":10377,"nodeType":"InheritanceSpecifier","src":"1884:13:39"},{"baseName":{"id":10378,"name":"ERC165Upgradeable","nameLocations":["1903:17:39"],"nodeType":"IdentifierPath","referencedDeclaration":863,"src":"1903:17:39"},"id":10379,"nodeType":"InheritanceSpecifier","src":"1903:17:39"},{"baseName":{"id":10380,"name":"ERC2771ContextUpgradeable","nameLocations":["1926:25:39"],"nodeType":"IdentifierPath","referencedDeclaration":509,"src":"1926:25:39"},"id":10381,"nodeType":"InheritanceSpecifier","src":"1926:25:39"},{"baseName":{"id":10382,"name":"AccessControlUpgradeable","nameLocations":["1957:24:39"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"1957:24:39"},"id":10383,"nodeType":"InheritanceSpecifier","src":"1957:24:39"},{"baseName":{"id":10384,"name":"IWithTypeIdentifier","nameLocations":["1987:19:39"],"nodeType":"IdentifierPath","referencedDeclaration":10973,"src":"1987:19:39"},"id":10385,"nodeType":"InheritanceSpecifier","src":"1987:19:39"}],"canonicalName":"AbstractATKSystemAddonFactoryImplementation","contractDependencies":[],"contractKind":"contract","documentation":{"id":10375,"nodeType":"StructuredDocumentation","src":"1077:738:39","text":"@title Abstract Factory for Creating ATK System Addon Proxies\n @notice This abstract contract provides common functionality for system addon factory implementations.\n It manages implementation contracts and provides CREATE2 address prediction capabilities.\n @dev Key features of this abstract factory:\n - **Implementation Management**: Manages implementation contracts and allows for updating them.\n - **CREATE2 Support**: Provides utilities for CREATE2 deployment and address prediction.\n - **Authorization**: Access control with role-based permissions.\n - **Registry**: Maintains tracking of deployed system addon contracts.\n - **Meta-transactions**: Inherits `ERC2771Context` to support gasless operations."},"fullyImplemented":false,"id":10685,"linearizedBaseContracts":[10685,10973,362,509,863,3817,1242,823,777],"name":"AbstractATKSystemAddonFactoryImplementation","nameLocation":"1833:43:39","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":10386,"nodeType":"StructuredDocumentation","src":"2013:68:39","text":"@notice Error thrown when a CREATE2 address is already deployed."},"errorSelector":"d0dc5949","id":10390,"name":"AddressAlreadyDeployed","nameLocation":"2092:22:39","nodeType":"ErrorDefinition","parameters":{"id":10389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10388,"mutability":"mutable","name":"deployedAddress","nameLocation":"2123:15:39","nodeType":"VariableDeclaration","scope":10390,"src":"2115:23:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10387,"name":"address","nodeType":"ElementaryTypeName","src":"2115:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2114:25:39"},"src":"2086:54:39"},{"documentation":{"id":10391,"nodeType":"StructuredDocumentation","src":"2146:51:39","text":"@notice Error thrown when proxy creation fails."},"errorSelector":"d49e7d74","id":10393,"name":"ProxyCreationFailed","nameLocation":"2208:19:39","nodeType":"ErrorDefinition","parameters":{"id":10392,"nodeType":"ParameterList","parameters":[],"src":"2227:2:39"},"src":"2202:28:39"},{"constant":false,"documentation":{"id":10394,"nodeType":"StructuredDocumentation","src":"2236:53:39","text":"@notice The address of the `IATKSystem` contract."},"id":10396,"mutability":"mutable","name":"_systemAddress","nameLocation":"2311:14:39","nodeType":"VariableDeclaration","scope":10685,"src":"2294:31:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10395,"name":"address","nodeType":"ElementaryTypeName","src":"2294:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"documentation":{"id":10397,"nodeType":"StructuredDocumentation","src":"2332:193:39","text":"@notice Mapping indicating whether an system addon address was deployed by this factory.\n @dev Stores a boolean value for each system addon address, true if deployed by this factory."},"functionSelector":"229fff60","id":10401,"mutability":"mutable","name":"isFactorySystemAddon","nameLocation":"2602:20:39","nodeType":"VariableDeclaration","scope":10685,"src":"2530:92:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":10400,"keyName":"systemAddonAddress","keyNameLocation":"2546:18:39","keyType":{"id":10398,"name":"address","nodeType":"ElementaryTypeName","src":"2538:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2530:64:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"isFactorySystemAddon","valueNameLocation":"2573:20:39","valueType":{"id":10399,"name":"bool","nodeType":"ElementaryTypeName","src":"2568:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":10413,"nodeType":"Block","src":"2750:39:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10410,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2760:20:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2760:22:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10412,"nodeType":"ExpressionStatement","src":"2760:22:39"}]},"documentation":{"id":10402,"nodeType":"StructuredDocumentation","src":"2629:48:39","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":10414,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10407,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10404,"src":"2739:9:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10408,"kind":"baseConstructorSpecifier","modifierName":{"id":10406,"name":"ERC2771ContextUpgradeable","nameLocations":["2713:25:39"],"nodeType":"IdentifierPath","referencedDeclaration":509,"src":"2713:25:39"},"nodeType":"ModifierInvocation","src":"2713:36:39"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10404,"mutability":"mutable","name":"forwarder","nameLocation":"2702:9:39","nodeType":"VariableDeclaration","scope":10414,"src":"2694:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10403,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:19:39"},"returnParameters":{"id":10409,"nodeType":"ParameterList","parameters":[],"src":"2750:0:39"},"scope":10685,"src":"2682:107:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10446,"nodeType":"Block","src":"3147:281:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10422,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3157:20:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3157:22:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10424,"nodeType":"ExpressionStatement","src":"3157:22:39"},{"expression":{"arguments":[{"id":10426,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"3201:18:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10427,"name":"initialAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10419,"src":"3221:13:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10425,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3190:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10429,"nodeType":"ExpressionStatement","src":"3190:45:39"},{"expression":{"arguments":[{"expression":{"id":10431,"name":"ATKSystemRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"3256:14:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ATKSystemRoles_$10350_$","typeString":"type(library ATKSystemRoles)"}},"id":10432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3271:27:39","memberName":"IMPLEMENTATION_MANAGER_ROLE","nodeType":"MemberAccess","referencedDeclaration":10331,"src":"3256:42:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10433,"name":"initialAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10419,"src":"3300:13:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10430,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3245:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:69:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10435,"nodeType":"ExpressionStatement","src":"3245:69:39"},{"expression":{"arguments":[{"expression":{"id":10437,"name":"ATKSystemRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"3335:14:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ATKSystemRoles_$10350_$","typeString":"type(library ATKSystemRoles)"}},"id":10438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3350:13:39","memberName":"DEPLOYER_ROLE","nodeType":"MemberAccess","referencedDeclaration":10325,"src":"3335:28:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10439,"name":"initialAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10419,"src":"3365:13:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10436,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3324:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3324:55:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10441,"nodeType":"ExpressionStatement","src":"3324:55:39"},{"expression":{"id":10444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10442,"name":"_systemAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10396,"src":"3390:14:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10443,"name":"systemAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"3407:14:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3390:31:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10445,"nodeType":"ExpressionStatement","src":"3390:31:39"}]},"documentation":{"id":10415,"nodeType":"StructuredDocumentation","src":"2795:244:39","text":"@notice Initializes the abstract airdrop factory.\n @dev Sets up access control and system address.\n @param systemAddress_ The address of the `IATKSystem` contract.\n @param initialAdmin_ The address of the initial admin."},"id":10447,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeAbstractSystemAddonFactory","nameLocation":"3053:37:39","nodeType":"FunctionDefinition","parameters":{"id":10420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10417,"mutability":"mutable","name":"systemAddress_","nameLocation":"3099:14:39","nodeType":"VariableDeclaration","scope":10447,"src":"3091:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10416,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10419,"mutability":"mutable","name":"initialAdmin_","nameLocation":"3123:13:39","nodeType":"VariableDeclaration","scope":10447,"src":"3115:21:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10418,"name":"address","nodeType":"ElementaryTypeName","src":"3115:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3090:47:39"},"returnParameters":{"id":10421,"nodeType":"ParameterList","parameters":[],"src":"3147:0:39"},"scope":10685,"src":"3044:384:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10466,"nodeType":"Block","src":"3802:75:39","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":10460,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3848:4:39","typeDescriptions":{"typeIdentifier":"t_contract$_AbstractATKSystemAddonFactoryImplementation_$10685","typeString":"contract AbstractATKSystemAddonFactoryImplementation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AbstractATKSystemAddonFactoryImplementation_$10685","typeString":"contract AbstractATKSystemAddonFactoryImplementation"}],"id":10459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3840:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10458,"name":"address","nodeType":"ElementaryTypeName","src":"3840:7:39","typeDescriptions":{}}},"id":10461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10462,"name":"saltInputData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10450,"src":"3855:13:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10456,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3829:3:39","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3833:6:39","memberName":"encode","nodeType":"MemberAccess","src":"3829:10:39","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3829:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10455,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3819:9:39","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3819:51:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10454,"id":10465,"nodeType":"Return","src":"3812:58:39"}]},"documentation":{"id":10448,"nodeType":"StructuredDocumentation","src":"3434:279:39","text":"@notice Calculates the salt for CREATE2 deployment.\n @dev Can be overridden by derived contracts for custom salt calculation.\n @param saltInputData The ABI encoded data to be used for salt calculation.\n @return The calculated salt for CREATE2 deployment."},"id":10467,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateSalt","nameLocation":"3727:14:39","nodeType":"FunctionDefinition","parameters":{"id":10451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10450,"mutability":"mutable","name":"saltInputData","nameLocation":"3755:13:39","nodeType":"VariableDeclaration","scope":10467,"src":"3742:26:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10449,"name":"bytes","nodeType":"ElementaryTypeName","src":"3742:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3741:28:39"},"returnParameters":{"id":10454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10467,"src":"3793:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:39"},"scope":10685,"src":"3718:159:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10512,"nodeType":"Block","src":"4614:304:39","statements":[{"assignments":[10480],"declarations":[{"constant":false,"id":10480,"mutability":"mutable","name":"salt","nameLocation":"4632:4:39","nodeType":"VariableDeclaration","scope":10512,"src":"4624:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4624:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10484,"initialValue":{"arguments":[{"id":10482,"name":"saltInputData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"4654:13:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10481,"name":"_calculateSalt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"4639:14:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) view returns (bytes32)"}},"id":10483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4639:29:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4624:44:39"},{"assignments":[10486],"declarations":[{"constant":false,"id":10486,"mutability":"mutable","name":"fullCreationCode","nameLocation":"4691:16:39","nodeType":"VariableDeclaration","scope":10512,"src":"4678:29:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10485,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":10493,"initialValue":{"arguments":[{"id":10490,"name":"proxyCreationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10470,"src":"4723:17:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10491,"name":"encodedConstructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10472,"src":"4742:22:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4710:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10487,"name":"bytes","nodeType":"ElementaryTypeName","src":"4710:5:39","typeDescriptions":{}}},"id":10489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4716:6:39","memberName":"concat","nodeType":"MemberAccess","src":"4710:12:39","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4710:55:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4678:87:39"},{"assignments":[10495],"declarations":[{"constant":false,"id":10495,"mutability":"mutable","name":"bytecodeHash","nameLocation":"4783:12:39","nodeType":"VariableDeclaration","scope":10512,"src":"4775:20:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4775:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10499,"initialValue":{"arguments":[{"id":10497,"name":"fullCreationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10486,"src":"4808:16:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10496,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4798:9:39","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4798:27:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4775:50:39"},{"expression":{"id":10510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10500,"name":"predictedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10477,"src":"4835:16:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10503,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10480,"src":"4877:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10504,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10495,"src":"4883:12:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":10507,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4905:4:39","typeDescriptions":{"typeIdentifier":"t_contract$_AbstractATKSystemAddonFactoryImplementation_$10685","typeString":"contract AbstractATKSystemAddonFactoryImplementation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AbstractATKSystemAddonFactoryImplementation_$10685","typeString":"contract AbstractATKSystemAddonFactoryImplementation"}],"id":10506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4897:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10505,"name":"address","nodeType":"ElementaryTypeName","src":"4897:7:39","typeDescriptions":{}}},"id":10508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10501,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"4854:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$3276_$","typeString":"type(library Create2)"}},"id":10502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4862:14:39","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":3275,"src":"4854:22:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":10509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4854:57:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4835:76:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10511,"nodeType":"ExpressionStatement","src":"4835:76:39"}]},"documentation":{"id":10468,"nodeType":"StructuredDocumentation","src":"3883:492:39","text":"@notice Predicts the deployment address of a proxy using CREATE2.\n @dev Internal function to compute the address without performing deployment.\n @param proxyCreationCode The creation bytecode of the proxy contract.\n @param encodedConstructorArgs ABI-encoded constructor arguments for the proxy.\n @param saltInputData The ABI encoded data to be used for salt calculation.\n @return predictedAddress The predicted address where the proxy would be deployed."},"id":10513,"implemented":true,"kind":"function","modifiers":[],"name":"_predictProxyAddress","nameLocation":"4389:20:39","nodeType":"FunctionDefinition","parameters":{"id":10475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10470,"mutability":"mutable","name":"proxyCreationCode","nameLocation":"4432:17:39","nodeType":"VariableDeclaration","scope":10513,"src":"4419:30:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10469,"name":"bytes","nodeType":"ElementaryTypeName","src":"4419:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10472,"mutability":"mutable","name":"encodedConstructorArgs","nameLocation":"4472:22:39","nodeType":"VariableDeclaration","scope":10513,"src":"4459:35:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10471,"name":"bytes","nodeType":"ElementaryTypeName","src":"4459:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10474,"mutability":"mutable","name":"saltInputData","nameLocation":"4517:13:39","nodeType":"VariableDeclaration","scope":10513,"src":"4504:26:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10473,"name":"bytes","nodeType":"ElementaryTypeName","src":"4504:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4409:127:39"},"returnParameters":{"id":10478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10477,"mutability":"mutable","name":"predictedAddress","nameLocation":"4592:16:39","nodeType":"VariableDeclaration","scope":10513,"src":"4584:24:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10476,"name":"address","nodeType":"ElementaryTypeName","src":"4584:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4583:26:39"},"scope":10685,"src":"4380:538:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10584,"nodeType":"Block","src":"5788:651:39","statements":[{"condition":{"baseExpression":{"id":10531,"name":"isFactorySystemAddon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"5802:20:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10533,"indexExpression":{"id":10532,"name":"expectedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10522,"src":"5823:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5802:37:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10539,"nodeType":"IfStatement","src":"5798:114:39","trueBody":{"id":10538,"nodeType":"Block","src":"5841:71:39","statements":[{"errorCall":{"arguments":[{"id":10535,"name":"expectedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10522,"src":"5885:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10534,"name":"AddressAlreadyDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10390,"src":"5862:22:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":10536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:39:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10537,"nodeType":"RevertStatement","src":"5855:46:39"}]}},{"assignments":[10541],"declarations":[{"constant":false,"id":10541,"mutability":"mutable","name":"salt","nameLocation":"5930:4:39","nodeType":"VariableDeclaration","scope":10584,"src":"5922:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5922:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10545,"initialValue":{"arguments":[{"id":10543,"name":"saltInputData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10520,"src":"5952:13:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10542,"name":"_calculateSalt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"5937:14:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) view returns (bytes32)"}},"id":10544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5937:29:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5922:44:39"},{"assignments":[10547],"declarations":[{"constant":false,"id":10547,"mutability":"mutable","name":"fullCreationCode","nameLocation":"5989:16:39","nodeType":"VariableDeclaration","scope":10584,"src":"5976:29:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10546,"name":"bytes","nodeType":"ElementaryTypeName","src":"5976:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":10554,"initialValue":{"arguments":[{"id":10551,"name":"proxyCreationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10516,"src":"6021:17:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10552,"name":"encodedConstructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10518,"src":"6040:22:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10548,"name":"bytes","nodeType":"ElementaryTypeName","src":"6008:5:39","typeDescriptions":{}}},"id":10550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6014:6:39","memberName":"concat","nodeType":"MemberAccess","src":"6008:12:39","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:55:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5976:87:39"},{"expression":{"id":10562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10555,"name":"deployedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"6074:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":10558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6107:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":10559,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10541,"src":"6110:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10560,"name":"fullCreationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10547,"src":"6116:16:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10556,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"6092:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$3276_$","typeString":"type(library Create2)"}},"id":10557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6100:6:39","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":3241,"src":"6092:14:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":10561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6092:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6074:59:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10563,"nodeType":"ExpressionStatement","src":"6074:59:39"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10564,"name":"deployedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"6148:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10565,"name":"expectedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10522,"src":"6167:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6148:34:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10571,"nodeType":"IfStatement","src":"6144:93:39","trueBody":{"id":10570,"nodeType":"Block","src":"6184:53:39","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10567,"name":"ProxyCreationFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10393,"src":"6205:19:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6205:21:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10569,"nodeType":"RevertStatement","src":"6198:28:39"}]}},{"expression":{"id":10576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10572,"name":"isFactorySystemAddon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10401,"src":"6247:20:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10574,"indexExpression":{"id":10573,"name":"deployedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"6268:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6247:37:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6287:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6247:44:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10577,"nodeType":"ExpressionStatement","src":"6247:44:39"},{"expression":{"arguments":[{"id":10579,"name":"deployedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"6383:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10578,"name":"_addToComplianceBypassList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10625,"src":"6356:26:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:43:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10581,"nodeType":"ExpressionStatement","src":"6356:43:39"},{"expression":{"id":10582,"name":"deployedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10529,"src":"6417:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10530,"id":10583,"nodeType":"Return","src":"6410:22:39"}]},"documentation":{"id":10514,"nodeType":"StructuredDocumentation","src":"4924:561:39","text":"@notice Deploys a proxy contract using CREATE2.\n @dev This internal function handles the prediction and deployment of the system addon proxy.\n @param proxyCreationCode The creation bytecode of the proxy contract.\n @param encodedConstructorArgs ABI-encoded constructor arguments for the proxy.\n @param saltInputData The ABI encoded data to be used for salt calculation.\n @param expectedAddress The expected deployment address for validation.\n @return deployedAddress The address of the newly deployed proxy contract."},"id":10585,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":10525,"name":"ATKSystemRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"5712:14:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ATKSystemRoles_$10350_$","typeString":"type(library ATKSystemRoles)"}},"id":10526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5727:13:39","memberName":"DEPLOYER_ROLE","nodeType":"MemberAccess","referencedDeclaration":10325,"src":"5712:28:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10527,"kind":"modifierInvocation","modifierName":{"id":10524,"name":"onlyRole","nameLocations":["5703:8:39"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5703:8:39"},"nodeType":"ModifierInvocation","src":"5703:38:39"}],"name":"_deploySystemAddon","nameLocation":"5499:18:39","nodeType":"FunctionDefinition","parameters":{"id":10523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10516,"mutability":"mutable","name":"proxyCreationCode","nameLocation":"5540:17:39","nodeType":"VariableDeclaration","scope":10585,"src":"5527:30:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10515,"name":"bytes","nodeType":"ElementaryTypeName","src":"5527:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10518,"mutability":"mutable","name":"encodedConstructorArgs","nameLocation":"5580:22:39","nodeType":"VariableDeclaration","scope":10585,"src":"5567:35:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10517,"name":"bytes","nodeType":"ElementaryTypeName","src":"5567:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10520,"mutability":"mutable","name":"saltInputData","nameLocation":"5625:13:39","nodeType":"VariableDeclaration","scope":10585,"src":"5612:26:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10519,"name":"bytes","nodeType":"ElementaryTypeName","src":"5612:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10522,"mutability":"mutable","name":"expectedAddress","nameLocation":"5656:15:39","nodeType":"VariableDeclaration","scope":10585,"src":"5648:23:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10521,"name":"address","nodeType":"ElementaryTypeName","src":"5648:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5517:160:39"},"returnParameters":{"id":10530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10529,"mutability":"mutable","name":"deployedAddress","nameLocation":"5767:15:39","nodeType":"VariableDeclaration","scope":10585,"src":"5759:23:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10528,"name":"address","nodeType":"ElementaryTypeName","src":"5759:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5758:25:39"},"scope":10685,"src":"5490:949:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10624,"nodeType":"Block","src":"6766:414:39","statements":[{"assignments":[10592],"declarations":[{"constant":false,"id":10592,"mutability":"mutable","name":"complianceProxy","nameLocation":"6784:15:39","nodeType":"VariableDeclaration","scope":10624,"src":"6776:23:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10591,"name":"address","nodeType":"ElementaryTypeName","src":"6776:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10598,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":10594,"name":"_systemAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10396,"src":"6813:14:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10593,"name":"IATKSystem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"6802:10:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IATKSystem_$10963_$","typeString":"type(contract IATKSystem)"}},"id":10595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:26:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IATKSystem_$10963","typeString":"contract IATKSystem"}},"id":10596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6829:15:39","memberName":"complianceProxy","nodeType":"MemberAccess","referencedDeclaration":10910,"src":"6802:42:39","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":10597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:44:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6776:70:39"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10599,"name":"complianceProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10592,"src":"6873:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6892:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10600,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:39","typeDescriptions":{}}},"id":10603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6873:29:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":10610,"name":"IATKComplianceBypassList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11035,"src":"6970:24:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IATKComplianceBypassList_$11035_$","typeString":"type(contract IATKComplianceBypassList)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IATKComplianceBypassList_$11035_$","typeString":"type(contract IATKComplianceBypassList)"}],"id":10609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6965:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":10611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6965:30:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IATKComplianceBypassList_$11035","typeString":"type(contract IATKComplianceBypassList)"}},"id":10612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6996:11:39","memberName":"interfaceId","nodeType":"MemberAccess","src":"6965:42:39","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[{"id":10606,"name":"complianceProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10592,"src":"6930:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10605,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"6922:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3817_$","typeString":"type(contract IERC165)"}},"id":10607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$3817","typeString":"contract IERC165"}},"id":10608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6947:17:39","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3816,"src":"6922:42:39","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view external returns (bool)"}},"id":10613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:86:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6873:135:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10623,"nodeType":"IfStatement","src":"6856:318:39","trueBody":{"id":10622,"nodeType":"Block","src":"7019:155:39","statements":[{"expression":{"arguments":[{"id":10619,"name":"systemAddonAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10588,"src":"7144:18:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":10616,"name":"complianceProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10592,"src":"7111:15:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10615,"name":"IATKComplianceBypassList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11035,"src":"7086:24:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IATKComplianceBypassList_$11035_$","typeString":"type(contract IATKComplianceBypassList)"}},"id":10617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IATKComplianceBypassList_$11035","typeString":"contract IATKComplianceBypassList"}},"id":10618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7128:15:39","memberName":"addToBypassList","nodeType":"MemberAccess","referencedDeclaration":11006,"src":"7086:57:39","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":10620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:77:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10621,"nodeType":"ExpressionStatement","src":"7086:77:39"}]}}]},"documentation":{"id":10586,"nodeType":"StructuredDocumentation","src":"6445:243:39","text":"@notice Adds an system addon address to the compliance bypass list if available.\n @dev Internal helper to handle compliance bypass list registration.\n @param systemAddonAddress The address of the system addon contract to add."},"id":10625,"implemented":true,"kind":"function","modifiers":[],"name":"_addToComplianceBypassList","nameLocation":"6702:26:39","nodeType":"FunctionDefinition","parameters":{"id":10589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10588,"mutability":"mutable","name":"systemAddonAddress","nameLocation":"6737:18:39","nodeType":"VariableDeclaration","scope":10625,"src":"6729:26:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10587,"name":"address","nodeType":"ElementaryTypeName","src":"6729:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:28:39"},"returnParameters":{"id":10590,"nodeType":"ParameterList","parameters":[],"src":"6766:0:39"},"scope":10685,"src":"6693:487:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[91,862],"body":{"id":10641,"nodeType":"Block","src":"7567:60:39","statements":[{"expression":{"arguments":[{"id":10638,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10628,"src":"7608:11:39","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":10636,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7584:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AbstractATKSystemAddonFactoryImplementation_$10685_$","typeString":"type(contract super AbstractATKSystemAddonFactoryImplementation)"}},"id":10637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7590:17:39","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":91,"src":"7584:23:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":10639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7584:36:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10635,"id":10640,"nodeType":"Return","src":"7577:43:39"}]},"documentation":{"id":10626,"nodeType":"StructuredDocumentation","src":"7186:196:39","text":"@notice Checks if a contract supports a given interface.\n @param interfaceId The interface identifier.\n @return bool True if the contract supports the interface, false otherwise."},"functionSelector":"01ffc9a7","id":10642,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"7396:17:39","nodeType":"FunctionDefinition","overrides":{"id":10632,"nodeType":"OverrideSpecifier","overrides":[{"id":10630,"name":"AccessControlUpgradeable","nameLocations":["7495:24:39"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"7495:24:39"},{"id":10631,"name":"ERC165Upgradeable","nameLocations":["7521:17:39"],"nodeType":"IdentifierPath","referencedDeclaration":863,"src":"7521:17:39"}],"src":"7486:53:39"},"parameters":{"id":10629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10628,"mutability":"mutable","name":"interfaceId","nameLocation":"7421:11:39","nodeType":"VariableDeclaration","scope":10642,"src":"7414:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10627,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7414:6:39","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"7413:20:39"},"returnParameters":{"id":10635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10642,"src":"7557:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10633,"name":"bool","nodeType":"ElementaryTypeName","src":"7557:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7556:6:39"},"scope":10685,"src":"7387:240:39","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[457,805],"body":{"id":10655,"nodeType":"Block","src":"8013:42:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10651,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8030:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AbstractATKSystemAddonFactoryImplementation_$10685_$","typeString":"type(contract super AbstractATKSystemAddonFactoryImplementation)"}},"id":10652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8036:10:39","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":457,"src":"8030:16:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8030:18:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10650,"id":10654,"nodeType":"Return","src":"8023:25:39"}]},"documentation":{"id":10643,"nodeType":"StructuredDocumentation","src":"7633:265:39","text":"@dev Overridden from `Context` and `ERC2771Context` to correctly identify the transaction sender,\n accounting for meta-transactions if a trusted forwarder is used.\n @return The actual sender of the transaction (`msg.sender` or the relayed sender)."},"id":10656,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"7912:10:39","nodeType":"FunctionDefinition","overrides":{"id":10647,"nodeType":"OverrideSpecifier","overrides":[{"id":10645,"name":"ContextUpgradeable","nameLocations":["7948:18:39"],"nodeType":"IdentifierPath","referencedDeclaration":823,"src":"7948:18:39"},{"id":10646,"name":"ERC2771ContextUpgradeable","nameLocations":["7968:25:39"],"nodeType":"IdentifierPath","referencedDeclaration":509,"src":"7968:25:39"}],"src":"7939:55:39"},"parameters":{"id":10644,"nodeType":"ParameterList","parameters":[],"src":"7922:2:39"},"returnParameters":{"id":10650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10656,"src":"8004:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10648,"name":"address","nodeType":"ElementaryTypeName","src":"8004:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8003:9:39"},"scope":10685,"src":"7903:152:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[498,814],"body":{"id":10669,"nodeType":"Block","src":"8436:40:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10665,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8453:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AbstractATKSystemAddonFactoryImplementation_$10685_$","typeString":"type(contract super AbstractATKSystemAddonFactoryImplementation)"}},"id":10666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8459:8:39","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":498,"src":"8453:14:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":10667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8453:16:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":10664,"id":10668,"nodeType":"Return","src":"8446:23:39"}]},"documentation":{"id":10657,"nodeType":"StructuredDocumentation","src":"8061:219:39","text":"@dev Overridden from `Context` and `ERC2771Context` to correctly retrieve the transaction data,\n accounting for meta-transactions.\n @return The actual transaction data (`msg.data` or the relayed data)."},"id":10670,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"8294:8:39","nodeType":"FunctionDefinition","overrides":{"id":10661,"nodeType":"OverrideSpecifier","overrides":[{"id":10659,"name":"ContextUpgradeable","nameLocations":["8352:18:39"],"nodeType":"IdentifierPath","referencedDeclaration":823,"src":"8352:18:39"},{"id":10660,"name":"ERC2771ContextUpgradeable","nameLocations":["8372:25:39"],"nodeType":"IdentifierPath","referencedDeclaration":509,"src":"8372:25:39"}],"src":"8343:55:39"},"parameters":{"id":10658,"nodeType":"ParameterList","parameters":[],"src":"8302:2:39"},"returnParameters":{"id":10664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10670,"src":"8416:14:39","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10662,"name":"bytes","nodeType":"ElementaryTypeName","src":"8416:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8415:16:39"},"scope":10685,"src":"8285:191:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[508,822],"body":{"id":10683,"nodeType":"Block","src":"8865:52:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10679,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8882:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AbstractATKSystemAddonFactoryImplementation_$10685_$","typeString":"type(contract super AbstractATKSystemAddonFactoryImplementation)"}},"id":10680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8888:20:39","memberName":"_contextSuffixLength","nodeType":"MemberAccess","referencedDeclaration":508,"src":"8882:26:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8882:28:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10678,"id":10682,"nodeType":"Return","src":"8875:35:39"}]},"documentation":{"id":10671,"nodeType":"StructuredDocumentation","src":"8482:222:39","text":"@dev Overridden from `ERC2771Context` to define the length of the suffix appended to `msg.data` for relayed\n calls.\n @return The length of the context suffix (typically 20 bytes for the sender's address)."},"id":10684,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"8718:20:39","nodeType":"FunctionDefinition","overrides":{"id":10675,"nodeType":"OverrideSpecifier","overrides":[{"id":10673,"name":"ContextUpgradeable","nameLocations":["8788:18:39"],"nodeType":"IdentifierPath","referencedDeclaration":823,"src":"8788:18:39"},{"id":10674,"name":"ERC2771ContextUpgradeable","nameLocations":["8808:25:39"],"nodeType":"IdentifierPath","referencedDeclaration":509,"src":"8808:25:39"}],"src":"8779:55:39"},"parameters":{"id":10672,"nodeType":"ParameterList","parameters":[],"src":"8738:2:39"},"returnParameters":{"id":10678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10684,"src":"8852:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10676,"name":"uint256","nodeType":"ElementaryTypeName","src":"8852:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8851:9:39"},"scope":10685,"src":"8709:208:39","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":10686,"src":"1815:7104:39","usedErrors":[526,529,1169,1172,10390,10393],"usedEvents":[534,1181,1190,1199]}],"src":"40:8880:39"},"id":39},"contracts/system/IATKSystem.sol":{"ast":{"absolutePath":"contracts/system/IATKSystem.sol","exportedSymbols":{"IATKSystem":[10963],"IERC165":[3817]},"id":10964,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":10687,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"40:24:40"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":10689,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10964,"sourceUnit":3818,"src":"66:82:40","symbolAliases":[{"foreign":{"id":10688,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"75:7:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10691,"name":"IERC165","nameLocations":["933:7:40"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"933:7:40"},"id":10692,"nodeType":"InheritanceSpecifier","src":"933:7:40"}],"canonicalName":"IATKSystem","contractDependencies":[],"contractKind":"interface","documentation":{"id":10690,"nodeType":"StructuredDocumentation","src":"150:759:40","text":"@title IATKSystem Interface\n @author SettleMint Tokenization Services\n @notice This interface outlines the essential functions for interacting with the ATK Protocol's central system\n contract.\n @dev The ATK System contract serves as the main hub and discovery point for various modules and features within\n the\n ATK Protocol. It allows other contracts and external users to find the addresses of crucial components like\n compliance modules, identity registries, and their corresponding proxy contracts. These proxies are important\n because they enable these components to be upgraded in the future without altering the addresses that other parts\n of the system use to interact with them, ensuring stability and maintainability."},"fullyImplemented":false,"id":10963,"linearizedBaseContracts":[10963,3817],"name":"IATKSystem","nameLocation":"919:10:40","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":10693,"nodeType":"StructuredDocumentation","src":"1154:290:40","text":"@notice Emitted when the implementation (logic contract) for the compliance module is updated.\n @param sender The address that called the `updateComplianceImplementation` function.\n @param newImplementation The address of the new compliance module implementation contract."},"eventSelector":"18ea1177da83ebf23520cb37420841e05033121576c404e09f73db10fea6ac78","id":10699,"name":"ComplianceImplementationUpdated","nameLocation":"1455:31:40","nodeType":"EventDefinition","parameters":{"id":10698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10695,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1503:6:40","nodeType":"VariableDeclaration","scope":10699,"src":"1487:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10694,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10697,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"1527:17:40","nodeType":"VariableDeclaration","scope":10699,"src":"1511:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10696,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:59:40"},"src":"1449:97:40"},{"anonymous":false,"documentation":{"id":10700,"nodeType":"StructuredDocumentation","src":"1551:310:40","text":"@notice Emitted when the implementation (logic contract) for the identity registry module is updated.\n @param sender The address that called the `updateIdentityRegistryImplementation` function.\n @param newImplementation The address of the new identity registry module implementation contract."},"eventSelector":"e8ad049e0ad7908009ae0f7f4364595fd1a499488f22fa486d8542dcc57af413","id":10706,"name":"IdentityRegistryImplementationUpdated","nameLocation":"1872:37:40","nodeType":"EventDefinition","parameters":{"id":10705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10702,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1926:6:40","nodeType":"VariableDeclaration","scope":10706,"src":"1910:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10701,"name":"address","nodeType":"ElementaryTypeName","src":"1910:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10704,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"1950:17:40","nodeType":"VariableDeclaration","scope":10706,"src":"1934:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10703,"name":"address","nodeType":"ElementaryTypeName","src":"1934:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1909:59:40"},"src":"1866:103:40"},{"anonymous":false,"documentation":{"id":10707,"nodeType":"StructuredDocumentation","src":"1974:333:40","text":"@notice Emitted when the implementation (logic contract) for the identity registry storage module is updated.\n @param sender The address that called the `updateIdentityRegistryStorageImplementation` function.\n @param newImplementation The address of the new identity registry storage module implementation contract."},"eventSelector":"81275737702fb4f879c5b1b3ef8d4de980fdb3a2b4462ad24fe8c7832e7d0f47","id":10713,"name":"IdentityRegistryStorageImplementationUpdated","nameLocation":"2318:44:40","nodeType":"EventDefinition","parameters":{"id":10712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10709,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2379:6:40","nodeType":"VariableDeclaration","scope":10713,"src":"2363:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10708,"name":"address","nodeType":"ElementaryTypeName","src":"2363:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10711,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"2403:17:40","nodeType":"VariableDeclaration","scope":10713,"src":"2387:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10710,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2362:59:40"},"src":"2312:110:40"},{"anonymous":false,"documentation":{"id":10714,"nodeType":"StructuredDocumentation","src":"2427:330:40","text":"@notice Emitted when the implementation (logic contract) for the trusted issuers registry module is updated.\n @param sender The address that called the `updateTrustedIssuersRegistryImplementation` function.\n @param newImplementation The address of the new trusted issuers registry module implementation contract."},"eventSelector":"d48b61a9f91ca2b642303e47ebca68d50d9187468daa2268cdd4ec792ade1804","id":10720,"name":"TrustedIssuersRegistryImplementationUpdated","nameLocation":"2768:43:40","nodeType":"EventDefinition","parameters":{"id":10719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10716,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2828:6:40","nodeType":"VariableDeclaration","scope":10720,"src":"2812:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10715,"name":"address","nodeType":"ElementaryTypeName","src":"2812:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10718,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"2852:17:40","nodeType":"VariableDeclaration","scope":10720,"src":"2836:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10717,"name":"address","nodeType":"ElementaryTypeName","src":"2836:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2811:59:40"},"src":"2762:109:40"},{"anonymous":false,"documentation":{"id":10721,"nodeType":"StructuredDocumentation","src":"2876:321:40","text":"@notice Emitted when the implementation (logic contract) for the topic scheme registry module is updated.\n @param sender The address that called the `updateTopicSchemeRegistryImplementation` function.\n @param newImplementation The address of the new topic scheme registry module implementation contract."},"eventSelector":"ce8fc7b69fcc1eda934571831e15bb10f95dddbb09559b28ad712d618f6ca0a9","id":10727,"name":"TopicSchemeRegistryImplementationUpdated","nameLocation":"3208:40:40","nodeType":"EventDefinition","parameters":{"id":10726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10723,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3265:6:40","nodeType":"VariableDeclaration","scope":10727,"src":"3249:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10722,"name":"address","nodeType":"ElementaryTypeName","src":"3249:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10725,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"3289:17:40","nodeType":"VariableDeclaration","scope":10727,"src":"3273:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10724,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3248:59:40"},"src":"3202:106:40"},{"anonymous":false,"documentation":{"id":10728,"nodeType":"StructuredDocumentation","src":"3313:307:40","text":"@notice Emitted when the implementation (logic contract) for the identity factory module is updated.\n @param sender The address that called the `updateIdentityFactoryImplementation` function.\n @param newImplementation The address of the new identity factory module implementation contract."},"eventSelector":"4bcec9d20bb800258ed241271d77077db5d50a6f76f12140c122c883deef7995","id":10734,"name":"IdentityFactoryImplementationUpdated","nameLocation":"3631:36:40","nodeType":"EventDefinition","parameters":{"id":10733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10730,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3684:6:40","nodeType":"VariableDeclaration","scope":10734,"src":"3668:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10729,"name":"address","nodeType":"ElementaryTypeName","src":"3668:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10732,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"3708:17:40","nodeType":"VariableDeclaration","scope":10734,"src":"3692:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10731,"name":"address","nodeType":"ElementaryTypeName","src":"3692:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3667:59:40"},"src":"3625:102:40"},{"anonymous":false,"documentation":{"id":10735,"nodeType":"StructuredDocumentation","src":"3732:402:40","text":"@notice Emitted when the implementation (logic contract) for the standard identity module is updated.\n @dev Standard identity contracts are typically used to represent users or general entities.\n @param sender The address that called the `updateIdentityImplementation` function.\n @param newImplementation The address of the new standard identity module implementation contract."},"eventSelector":"efea9f2b39bb4f73b0a1080278a75714ae7d6def44739e209eebe2085b9b62b3","id":10741,"name":"IdentityImplementationUpdated","nameLocation":"4145:29:40","nodeType":"EventDefinition","parameters":{"id":10740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10737,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4191:6:40","nodeType":"VariableDeclaration","scope":10741,"src":"4175:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10736,"name":"address","nodeType":"ElementaryTypeName","src":"4175:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10739,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"4215:17:40","nodeType":"VariableDeclaration","scope":10741,"src":"4199:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10738,"name":"address","nodeType":"ElementaryTypeName","src":"4199:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4174:59:40"},"src":"4139:95:40"},{"anonymous":false,"documentation":{"id":10742,"nodeType":"StructuredDocumentation","src":"4239:404:40","text":"@notice Emitted when the implementation (logic contract) for the token identity module is updated.\n @dev Token identity contracts might be specialized identities associated with specific tokens.\n @param sender The address that called the `updateTokenIdentityImplementation` function.\n @param newImplementation The address of the new token identity module implementation contract."},"eventSelector":"96cb65f899c3cf9ec267a022e255746ae585ae6e1bd3fb01601032dbcc58e383","id":10748,"name":"TokenIdentityImplementationUpdated","nameLocation":"4654:34:40","nodeType":"EventDefinition","parameters":{"id":10747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10744,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4705:6:40","nodeType":"VariableDeclaration","scope":10748,"src":"4689:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10743,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10746,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"4729:17:40","nodeType":"VariableDeclaration","scope":10748,"src":"4713:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10745,"name":"address","nodeType":"ElementaryTypeName","src":"4713:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4688:59:40"},"src":"4648:100:40"},{"anonymous":false,"documentation":{"id":10749,"nodeType":"StructuredDocumentation","src":"4753:318:40","text":"@notice Emitted when the implementation (logic contract) for the token access manager module is updated.\n @param sender The address that called the `updateTokenAccessManagerImplementation` function.\n @param newImplementation The address of the new token access manager module implementation contract."},"eventSelector":"4bd715e9ad4344031fe5194dd335709e8af5fc028d2d990a192615beb3ef11fa","id":10755,"name":"TokenAccessManagerImplementationUpdated","nameLocation":"5082:39:40","nodeType":"EventDefinition","parameters":{"id":10754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10751,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5138:6:40","nodeType":"VariableDeclaration","scope":10755,"src":"5122:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10750,"name":"address","nodeType":"ElementaryTypeName","src":"5122:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10753,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"5162:17:40","nodeType":"VariableDeclaration","scope":10755,"src":"5146:33:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10752,"name":"address","nodeType":"ElementaryTypeName","src":"5146:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5121:59:40"},"src":"5076:105:40"},{"anonymous":false,"documentation":{"id":10756,"nodeType":"StructuredDocumentation","src":"5187:970:40","text":"@notice Emitted when the `bootstrap` function has been successfully executed, creating and linking proxy\n contracts\n for all core modules of the ATKSystem.\n @param sender The address that called the `bootstrap` function.\n @param complianceProxy The address of the deployed ATKComplianceProxy contract.\n @param identityRegistryProxy The address of the deployed ATKIdentityRegistryProxy contract.\n @param identityRegistryStorageProxy The address of the deployed ATKIdentityRegistryStorageProxy contract.\n @param trustedIssuersRegistryProxy The address of the deployed ATKTrustedIssuersRegistryProxy contract.\n @param topicSchemeRegistryProxy The address of the deployed ATKTopicSchemeRegistryProxy contract.\n @param identityFactoryProxy The address of the deployed ATKIdentityFactoryProxy contract.\n @param identityVerificationModule The address of the deployed IdentityVerificationModule contract."},"eventSelector":"7a0ba7a03e47f134ef41839f5428a76ccddaa010aa247abc3e1adf2910da5fce","id":10774,"name":"Bootstrapped","nameLocation":"6168:12:40","nodeType":"EventDefinition","parameters":{"id":10773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10758,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"6206:6:40","nodeType":"VariableDeclaration","scope":10774,"src":"6190:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10757,"name":"address","nodeType":"ElementaryTypeName","src":"6190:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10760,"indexed":true,"mutability":"mutable","name":"complianceProxy","nameLocation":"6238:15:40","nodeType":"VariableDeclaration","scope":10774,"src":"6222:31:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10759,"name":"address","nodeType":"ElementaryTypeName","src":"6222:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10762,"indexed":true,"mutability":"mutable","name":"identityRegistryProxy","nameLocation":"6279:21:40","nodeType":"VariableDeclaration","scope":10774,"src":"6263:37:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10761,"name":"address","nodeType":"ElementaryTypeName","src":"6263:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10764,"indexed":false,"mutability":"mutable","name":"identityRegistryStorageProxy","nameLocation":"6318:28:40","nodeType":"VariableDeclaration","scope":10774,"src":"6310:36:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10763,"name":"address","nodeType":"ElementaryTypeName","src":"6310:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10766,"indexed":false,"mutability":"mutable","name":"trustedIssuersRegistryProxy","nameLocation":"6364:27:40","nodeType":"VariableDeclaration","scope":10774,"src":"6356:35:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10765,"name":"address","nodeType":"ElementaryTypeName","src":"6356:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10768,"indexed":false,"mutability":"mutable","name":"topicSchemeRegistryProxy","nameLocation":"6409:24:40","nodeType":"VariableDeclaration","scope":10774,"src":"6401:32:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10767,"name":"address","nodeType":"ElementaryTypeName","src":"6401:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10770,"indexed":false,"mutability":"mutable","name":"identityFactoryProxy","nameLocation":"6451:20:40","nodeType":"VariableDeclaration","scope":10774,"src":"6443:28:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10769,"name":"address","nodeType":"ElementaryTypeName","src":"6443:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10772,"indexed":false,"mutability":"mutable","name":"identityVerificationModule","nameLocation":"6489:26:40","nodeType":"VariableDeclaration","scope":10774,"src":"6481:34:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10771,"name":"address","nodeType":"ElementaryTypeName","src":"6481:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6180:341:40"},"src":"6162:360:40"},{"anonymous":false,"documentation":{"id":10775,"nodeType":"StructuredDocumentation","src":"6528:498:40","text":"@notice Emitted when a ATKTokenFactory is registered.\n @param sender The address that registered the token factory.\n @param name The human-readable name of the token factory.\n @param typeId The type identifier of the token factory.\n @param proxyAddress The address of the deployed token factory proxy.\n @param implementationAddress The address of the deployed token factory implementation.\n @param timestamp The timestamp of the token factory creation."},"eventSelector":"d35354d6b4ceea2cdf8a58e10b4728124e39a8818b349aa07bf0563fa9392b5a","id":10789,"name":"TokenFactoryCreated","nameLocation":"7037:19:40","nodeType":"EventDefinition","parameters":{"id":10788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10777,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"7082:6:40","nodeType":"VariableDeclaration","scope":10789,"src":"7066:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10776,"name":"address","nodeType":"ElementaryTypeName","src":"7066:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10779,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"7105:4:40","nodeType":"VariableDeclaration","scope":10789,"src":"7098:11:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10778,"name":"string","nodeType":"ElementaryTypeName","src":"7098:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10781,"indexed":false,"mutability":"mutable","name":"typeId","nameLocation":"7127:6:40","nodeType":"VariableDeclaration","scope":10789,"src":"7119:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7119:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10783,"indexed":false,"mutability":"mutable","name":"proxyAddress","nameLocation":"7151:12:40","nodeType":"VariableDeclaration","scope":10789,"src":"7143:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10782,"name":"address","nodeType":"ElementaryTypeName","src":"7143:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10785,"indexed":false,"mutability":"mutable","name":"implementationAddress","nameLocation":"7181:21:40","nodeType":"VariableDeclaration","scope":10789,"src":"7173:29:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10784,"name":"address","nodeType":"ElementaryTypeName","src":"7173:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10787,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"7220:9:40","nodeType":"VariableDeclaration","scope":10789,"src":"7212:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10786,"name":"uint256","nodeType":"ElementaryTypeName","src":"7212:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7056:179:40"},"src":"7031:205:40"},{"anonymous":false,"documentation":{"id":10790,"nodeType":"StructuredDocumentation","src":"7242:568:40","text":"@notice Emitted when a system addon is created.\n @param sender The address that created the system addon.\n @param name The human-readable name of the system addon.\n @param typeId The type identifier of the system addon.\n @param proxyAddress The address of the deployed system addon proxy.\n @param implementation The address of the deployed system addon implementation.\n @param initializationData The encoded function call to initialize the system addon.\n @param timestamp The timestamp of the system addon creation."},"eventSelector":"1fd3f5ac3f399fee1f2e1542a21e54419982652427453cc1d8241134888c7047","id":10806,"name":"SystemAddonCreated","nameLocation":"7821:18:40","nodeType":"EventDefinition","parameters":{"id":10805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10792,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"7865:6:40","nodeType":"VariableDeclaration","scope":10806,"src":"7849:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10791,"name":"address","nodeType":"ElementaryTypeName","src":"7849:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10794,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"7888:4:40","nodeType":"VariableDeclaration","scope":10806,"src":"7881:11:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10793,"name":"string","nodeType":"ElementaryTypeName","src":"7881:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10796,"indexed":false,"mutability":"mutable","name":"typeId","nameLocation":"7910:6:40","nodeType":"VariableDeclaration","scope":10806,"src":"7902:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7902:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10798,"indexed":false,"mutability":"mutable","name":"proxyAddress","nameLocation":"7934:12:40","nodeType":"VariableDeclaration","scope":10806,"src":"7926:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10797,"name":"address","nodeType":"ElementaryTypeName","src":"7926:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10800,"indexed":false,"mutability":"mutable","name":"implementation","nameLocation":"7964:14:40","nodeType":"VariableDeclaration","scope":10806,"src":"7956:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10799,"name":"address","nodeType":"ElementaryTypeName","src":"7956:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10802,"indexed":false,"mutability":"mutable","name":"initializationData","nameLocation":"7994:18:40","nodeType":"VariableDeclaration","scope":10806,"src":"7988:24:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10801,"name":"bytes","nodeType":"ElementaryTypeName","src":"7988:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10804,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"8030:9:40","nodeType":"VariableDeclaration","scope":10806,"src":"8022:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10803,"name":"uint256","nodeType":"ElementaryTypeName","src":"8022:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7839:206:40"},"src":"7815:231:40"},{"documentation":{"id":10807,"nodeType":"StructuredDocumentation","src":"8052:651:40","text":"@notice Initializes and sets up the entire ATK Protocol system.\n @dev This function is responsible for the initial deployment and configuration of the ATK Protocol.\n This involves deploying necessary smart contracts, setting initial parameters, and defining the relationships\n and connections between different components of the system.\n It is critically important that this function is called only ONCE during the very first deployment of the\n protocol.\n Attempting to call it more than once could result in severe errors, misconfigurations, or unpredictable behavior\n in the protocol's operation."},"functionSelector":"fb969b0a","id":10810,"implemented":false,"kind":"function","modifiers":[],"name":"bootstrap","nameLocation":"8717:9:40","nodeType":"FunctionDefinition","parameters":{"id":10808,"nodeType":"ParameterList","parameters":[],"src":"8726:2:40"},"returnParameters":{"id":10809,"nodeType":"ParameterList","parameters":[],"src":"8737:0:40"},"scope":10963,"src":"8708:30:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":10811,"nodeType":"StructuredDocumentation","src":"8744:314:40","text":"@notice Creates a new token factory implementation and proxy.\n @param _name The human-readable name of the token factory.\n @param _factoryImplementation The address of the token factory implementation contract.\n @param _tokenImplementation The address of the token implementation contract."},"functionSelector":"e277d07d","id":10822,"implemented":false,"kind":"function","modifiers":[],"name":"createTokenFactory","nameLocation":"9072:18:40","nodeType":"FunctionDefinition","parameters":{"id":10818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10813,"mutability":"mutable","name":"_name","nameLocation":"9116:5:40","nodeType":"VariableDeclaration","scope":10822,"src":"9100:21:40","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10812,"name":"string","nodeType":"ElementaryTypeName","src":"9100:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10815,"mutability":"mutable","name":"_factoryImplementation","nameLocation":"9139:22:40","nodeType":"VariableDeclaration","scope":10822,"src":"9131:30:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10814,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10817,"mutability":"mutable","name":"_tokenImplementation","nameLocation":"9179:20:40","nodeType":"VariableDeclaration","scope":10822,"src":"9171:28:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10816,"name":"address","nodeType":"ElementaryTypeName","src":"9171:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9090:115:40"},"returnParameters":{"id":10821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10822,"src":"9240:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10819,"name":"address","nodeType":"ElementaryTypeName","src":"9240:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9239:9:40"},"scope":10963,"src":"9063:186:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":10823,"nodeType":"StructuredDocumentation","src":"9255:436:40","text":"@notice Deploys and registers a new system addon with a proxy and initializer.\n @param name A human-readable identifier (e.g., \"Swap\", \"YieldContract\").\n @param implementation The address of the logic contract to use for the proxy.\n @param initializationData Encoded function call to initialize the proxy (e.g., abi.encodeWithSelector(...)).\n @return proxyAddress The address of the newly deployed proxy."},"functionSelector":"157f1181","id":10834,"implemented":false,"kind":"function","modifiers":[],"name":"createSystemAddon","nameLocation":"9705:17:40","nodeType":"FunctionDefinition","parameters":{"id":10830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10825,"mutability":"mutable","name":"name","nameLocation":"9748:4:40","nodeType":"VariableDeclaration","scope":10834,"src":"9732:20:40","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10824,"name":"string","nodeType":"ElementaryTypeName","src":"9732:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10827,"mutability":"mutable","name":"implementation","nameLocation":"9770:14:40","nodeType":"VariableDeclaration","scope":10834,"src":"9762:22:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10826,"name":"address","nodeType":"ElementaryTypeName","src":"9762:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10829,"mutability":"mutable","name":"initializationData","nameLocation":"9809:18:40","nodeType":"VariableDeclaration","scope":10834,"src":"9794:33:40","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10828,"name":"bytes","nodeType":"ElementaryTypeName","src":"9794:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9722:111:40"},"returnParameters":{"id":10833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10832,"mutability":"mutable","name":"proxyAddress","nameLocation":"9876:12:40","nodeType":"VariableDeclaration","scope":10834,"src":"9868:20:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10831,"name":"address","nodeType":"ElementaryTypeName","src":"9868:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9867:22:40"},"scope":10963,"src":"9696:194:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":10835,"nodeType":"StructuredDocumentation","src":"9896:807:40","text":"@notice Retrieves the current, active smart contract address of the compliance module's logic.\n @dev Compliance modules are responsible for enforcing rules and restrictions on token transfers, account\n interactions,\n or other operations within the ATK Protocol. For example, they might check if a transfer is allowed based on\n regulatory requirements.\n This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n for these compliance checks.\n It's important to note that this address can change if the compliance logic is updated or upgraded to a new\n version.\n @return complianceImplementationAddress The blockchain address of the smart contract containing the compliance\n logic."},"functionSelector":"917fc629","id":10840,"implemented":false,"kind":"function","modifiers":[],"name":"complianceImplementation","nameLocation":"10717:24:40","nodeType":"FunctionDefinition","parameters":{"id":10836,"nodeType":"ParameterList","parameters":[],"src":"10741:2:40"},"returnParameters":{"id":10839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10838,"mutability":"mutable","name":"complianceImplementationAddress","nameLocation":"10775:31:40","nodeType":"VariableDeclaration","scope":10840,"src":"10767:39:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10837,"name":"address","nodeType":"ElementaryTypeName","src":"10767:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10766:41:40"},"scope":10963,"src":"10708:100:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10841,"nodeType":"StructuredDocumentation","src":"10814:872:40","text":"@notice Retrieves the current, active smart contract address of the identity registry module's logic.\n @dev Identity registries are a core component for managing information about users, organizations, or any entity\n interacting with ATK tokens. This can include details like Know Your Customer (KYC) / Anti-Money Laundering\n (AML)\n status, investor qualifications, country of residence, or other relevant identity attributes.\n This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n for the identity registry.\n Similar to other modules, this address can change if the identity registry's logic is upgraded.\n @return identityRegistryImplementationAddress The blockchain address of the smart contract containing the\n identity\n registry logic."},"functionSelector":"a18dd9ea","id":10846,"implemented":false,"kind":"function","modifiers":[],"name":"identityRegistryImplementation","nameLocation":"11700:30:40","nodeType":"FunctionDefinition","parameters":{"id":10842,"nodeType":"ParameterList","parameters":[],"src":"11730:2:40"},"returnParameters":{"id":10845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10844,"mutability":"mutable","name":"identityRegistryImplementationAddress","nameLocation":"11764:37:40","nodeType":"VariableDeclaration","scope":10846,"src":"11756:45:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10843,"name":"address","nodeType":"ElementaryTypeName","src":"11756:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11755:47:40"},"scope":10963,"src":"11691:112:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10847,"nodeType":"StructuredDocumentation","src":"11809:849:40","text":"@notice Retrieves the current, active smart contract address of the identity registry storage module's logic.\n @dev Identity registry storage modules are dedicated to securely and efficiently storing the data associated\n with\n the identities managed by the identity registry. This separation of logic and storage can enhance security and\n upgradeability.\n This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n for managing this identity data storage.\n This address may change if the storage management logic is upgraded or if data is migrated to a new storage\n system.\n @return identityRegistryStorageImplementationAddress The blockchain address of the smart contract containing the\n identity registry storage logic."},"functionSelector":"6dbe06f5","id":10852,"implemented":false,"kind":"function","modifiers":[],"name":"identityRegistryStorageImplementation","nameLocation":"12672:37:40","nodeType":"FunctionDefinition","parameters":{"id":10848,"nodeType":"ParameterList","parameters":[],"src":"12709:2:40"},"returnParameters":{"id":10851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10850,"mutability":"mutable","name":"identityRegistryStorageImplementationAddress","nameLocation":"12767:44:40","nodeType":"VariableDeclaration","scope":10852,"src":"12759:52:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10849,"name":"address","nodeType":"ElementaryTypeName","src":"12759:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12758:54:40"},"scope":10963,"src":"12663:150:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10853,"nodeType":"StructuredDocumentation","src":"12819:752:40","text":"@notice Retrieves the current, active smart contract address of the identity factory module's logic.\n @dev Identity factories are responsible for the creation of new identity contracts or records within the\n ATK Protocol. They provide a standardized way to onboard new users or entities and associate them with\n an on-chain identity.\n This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n for this identity creation process.\n This address can change if the identity factory's logic is upgraded.\n @return identityFactoryImplementationAddress The blockchain address of the smart contract containing the\n identity\n factory logic."},"functionSelector":"e32d4b67","id":10858,"implemented":false,"kind":"function","modifiers":[],"name":"identityFactoryImplementation","nameLocation":"13585:29:40","nodeType":"FunctionDefinition","parameters":{"id":10854,"nodeType":"ParameterList","parameters":[],"src":"13614:2:40"},"returnParameters":{"id":10857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10856,"mutability":"mutable","name":"identityFactoryImplementationAddress","nameLocation":"13648:36:40","nodeType":"VariableDeclaration","scope":10858,"src":"13640:44:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10855,"name":"address","nodeType":"ElementaryTypeName","src":"13640:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13639:46:40"},"scope":10963,"src":"13576:110:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10859,"nodeType":"StructuredDocumentation","src":"13692:915:40","text":"@notice Retrieves the current, active smart contract address of the trusted issuers registry module's logic.\n @dev Trusted issuers registries play a crucial role in decentralized identity systems. They maintain a list of\n entities (known as \"issuers,\" such as KYC providers, accreditation bodies, etc.) that are authorized and trusted\n to make verifiable claims or attestations about identities (e.g., \"User X is KYC verified,\" \"Entity Y is an\n accredited investor\").\n This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n for managing this list of trusted issuers.\n This address can change if the trusted issuers registry's logic is upgraded.\n @return trustedIssuersRegistryImplementationAddress The blockchain address of the smart contract containing the\n trusted issuers registry logic."},"functionSelector":"39b14cdf","id":10864,"implemented":false,"kind":"function","modifiers":[],"name":"trustedIssuersRegistryImplementation","nameLocation":"14621:36:40","nodeType":"FunctionDefinition","parameters":{"id":10860,"nodeType":"ParameterList","parameters":[],"src":"14657:2:40"},"returnParameters":{"id":10863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10862,"mutability":"mutable","name":"trustedIssuersRegistryImplementationAddress","nameLocation":"14715:43:40","nodeType":"VariableDeclaration","scope":10864,"src":"14707:51:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10861,"name":"address","nodeType":"ElementaryTypeName","src":"14707:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14706:53:40"},"scope":10963,"src":"14612:148:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10865,"nodeType":"StructuredDocumentation","src":"14766:747:40","text":"@notice Retrieves the current, active smart contract address of the topic scheme registry module's logic.\n @dev Topic scheme registries manage the registration and lifecycle of topic schemes used for claim data\n structures.\n They store mapping between topic IDs and their corresponding signatures for encoding/decoding claim data.\n This function returns the specific address of the contract that holds the actual programming code (the \"logic\")\n for managing topic schemes.\n This address can change if the topic scheme registry's logic is upgraded.\n @return topicSchemeRegistryImplementationAddress The blockchain address of the smart contract containing the\n topic scheme registry logic."},"functionSelector":"588aa306","id":10870,"implemented":false,"kind":"function","modifiers":[],"name":"topicSchemeRegistryImplementation","nameLocation":"15527:33:40","nodeType":"FunctionDefinition","parameters":{"id":10866,"nodeType":"ParameterList","parameters":[],"src":"15560:2:40"},"returnParameters":{"id":10869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10868,"mutability":"mutable","name":"topicSchemeRegistryImplementationAddress","nameLocation":"15618:40:40","nodeType":"VariableDeclaration","scope":10870,"src":"15610:48:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10867,"name":"address","nodeType":"ElementaryTypeName","src":"15610:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15609:50:40"},"scope":10963,"src":"15518:142:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10871,"nodeType":"StructuredDocumentation","src":"15666:770:40","text":"@notice Retrieves the current, active smart contract address of the standard identity contract's logic.\n @dev Standard identity contracts are the actual on-chain representations of individual users, organizations, or\n entities within the ATK Protocol. These contracts typically hold claims and attributes related to an identity.\n This function returns the address of the base implementation (template) contract that new standard identity\n contracts will be created from (often via a proxy pattern).\n This address can change if the underlying logic for standard identity contracts is upgraded.\n @return identityImplementationAddress The blockchain address of the smart contract containing the standard\n identity logic."},"functionSelector":"6d7203cb","id":10876,"implemented":false,"kind":"function","modifiers":[],"name":"identityImplementation","nameLocation":"16450:22:40","nodeType":"FunctionDefinition","parameters":{"id":10872,"nodeType":"ParameterList","parameters":[],"src":"16472:2:40"},"returnParameters":{"id":10875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10874,"mutability":"mutable","name":"identityImplementationAddress","nameLocation":"16506:29:40","nodeType":"VariableDeclaration","scope":10876,"src":"16498:37:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10873,"name":"address","nodeType":"ElementaryTypeName","src":"16498:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16497:39:40"},"scope":10963,"src":"16441:96:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10877,"nodeType":"StructuredDocumentation","src":"16543:707:40","text":"@notice Retrieves the current, active smart contract address of the token identity contract's logic.\n @dev Token identity contracts are a specialized type of identity contract that might be specifically linked to\n certain tokens, tokenized assets, or have features tailored for token interactions.\n This function returns the address of the base implementation (template) contract that new token identity\n contracts will be created from.\n This address can change if the underlying logic for token identity contracts is upgraded.\n @return tokenIdentityImplementationAddress The blockchain address of the smart contract containing the token\n identity logic."},"functionSelector":"3cdbceda","id":10882,"implemented":false,"kind":"function","modifiers":[],"name":"tokenIdentityImplementation","nameLocation":"17264:27:40","nodeType":"FunctionDefinition","parameters":{"id":10878,"nodeType":"ParameterList","parameters":[],"src":"17291:2:40"},"returnParameters":{"id":10881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10880,"mutability":"mutable","name":"tokenIdentityImplementationAddress","nameLocation":"17325:34:40","nodeType":"VariableDeclaration","scope":10882,"src":"17317:42:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10879,"name":"address","nodeType":"ElementaryTypeName","src":"17317:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17316:44:40"},"scope":10963,"src":"17255:106:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10883,"nodeType":"StructuredDocumentation","src":"17367:562:40","text":"@notice Retrieves the current, active smart contract address of the token access manager contract's logic.\n @dev Token access managers are responsible for managing access control for tokens.\n This function returns the address of the base implementation (template) contract that new token access\n managers will be created from.\n This address can change if the underlying logic for token access managers is upgraded.\n @return tokenAccessManagerImplementationAddress The blockchain address of the smart contract containing the"},"functionSelector":"44eecc17","id":10888,"implemented":false,"kind":"function","modifiers":[],"name":"tokenAccessManagerImplementation","nameLocation":"17943:32:40","nodeType":"FunctionDefinition","parameters":{"id":10884,"nodeType":"ParameterList","parameters":[],"src":"17975:2:40"},"returnParameters":{"id":10887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10886,"mutability":"mutable","name":"tokenAccessManagerImplementationAddress","nameLocation":"18033:39:40","nodeType":"VariableDeclaration","scope":10888,"src":"18025:47:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10885,"name":"address","nodeType":"ElementaryTypeName","src":"18025:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18024:49:40"},"scope":10963,"src":"17934:140:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10889,"nodeType":"StructuredDocumentation","src":"18080:212:40","text":"@notice Returns the address of the current token registry implementation.\n @param factoryTypeHash The hash of the factory type.\n @return The address of the token factory implementation contract."},"functionSelector":"1cece55f","id":10896,"implemented":false,"kind":"function","modifiers":[],"name":"tokenFactoryImplementation","nameLocation":"18306:26:40","nodeType":"FunctionDefinition","parameters":{"id":10892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10891,"mutability":"mutable","name":"factoryTypeHash","nameLocation":"18341:15:40","nodeType":"VariableDeclaration","scope":10896,"src":"18333:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18333:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18332:25:40"},"returnParameters":{"id":10895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10896,"src":"18381:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10893,"name":"address","nodeType":"ElementaryTypeName","src":"18381:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18380:9:40"},"scope":10963,"src":"18297:93:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10897,"nodeType":"StructuredDocumentation","src":"18396:205:40","text":"@notice Returns the address of the current system addon implementation.\n @param addonTypeHash The hash of the addon type.\n @return The address of the system addon implementation contract."},"functionSelector":"e1554666","id":10904,"implemented":false,"kind":"function","modifiers":[],"name":"addonImplementation","nameLocation":"18615:19:40","nodeType":"FunctionDefinition","parameters":{"id":10900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10899,"mutability":"mutable","name":"addonTypeHash","nameLocation":"18643:13:40","nodeType":"VariableDeclaration","scope":10904,"src":"18635:21:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18635:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18634:23:40"},"returnParameters":{"id":10903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10904,"src":"18681:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10901,"name":"address","nodeType":"ElementaryTypeName","src":"18681:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18680:9:40"},"scope":10963,"src":"18606:84:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10905,"nodeType":"StructuredDocumentation","src":"18696:895:40","text":"@notice Retrieves the smart contract address of the proxy for the compliance module.\n @dev A proxy contract is an intermediary contract that delegates all function calls it receives to another\n contract, known as the implementation contract (which contains the actual logic).\n The primary benefit of using a proxy is that the underlying logic (implementation) can be upgraded\n without changing the address that other contracts or users interact with. This provides flexibility and\n allows for bug fixes or feature additions without disrupting the ecosystem.\n This function returns the stable, unchanging address of the compliance module's proxy contract.\n All interactions with the compliance module should go through this proxy address.\n @return complianceProxyAddress The blockchain address of the compliance module's proxy contract."},"functionSelector":"98468e51","id":10910,"implemented":false,"kind":"function","modifiers":[],"name":"complianceProxy","nameLocation":"19605:15:40","nodeType":"FunctionDefinition","parameters":{"id":10906,"nodeType":"ParameterList","parameters":[],"src":"19620:2:40"},"returnParameters":{"id":10909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10908,"mutability":"mutable","name":"complianceProxyAddress","nameLocation":"19654:22:40","nodeType":"VariableDeclaration","scope":10910,"src":"19646:30:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10907,"name":"address","nodeType":"ElementaryTypeName","src":"19646:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19645:32:40"},"scope":10963,"src":"19596:82:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10911,"nodeType":"StructuredDocumentation","src":"19684:644:40","text":"@notice Retrieves the smart contract address of the proxy for the identity registry module.\n @dev Similar to the compliance proxy, this function returns the stable, unchanging address of the identity\n registry's proxy contract.\n To interact with the identity registry (e.g., to query identity information or register a new identity,\n depending on its features), you should use this proxy address. It will automatically forward your requests\n to the current logic implementation contract.\n @return identityRegistryProxyAddress The blockchain address of the identity registry module's proxy contract."},"functionSelector":"d62def8f","id":10916,"implemented":false,"kind":"function","modifiers":[],"name":"identityRegistryProxy","nameLocation":"20342:21:40","nodeType":"FunctionDefinition","parameters":{"id":10912,"nodeType":"ParameterList","parameters":[],"src":"20363:2:40"},"returnParameters":{"id":10915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10914,"mutability":"mutable","name":"identityRegistryProxyAddress","nameLocation":"20397:28:40","nodeType":"VariableDeclaration","scope":10916,"src":"20389:36:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10913,"name":"address","nodeType":"ElementaryTypeName","src":"20389:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20388:38:40"},"scope":10963,"src":"20333:94:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10917,"nodeType":"StructuredDocumentation","src":"20433:580:40","text":"@notice Retrieves the smart contract address of the proxy for the identity registry storage module.\n @dev This function returns the stable, unchanging address of the identity registry storage's proxy contract.\n All interactions related to storing or retrieving identity data should go through this proxy address.\n It ensures that calls are directed to the current logic implementation for identity data management.\n @return identityRegistryStorageProxyAddress The blockchain address of the identity registry storage module's\n proxy contract."},"functionSelector":"72b3f57e","id":10922,"implemented":false,"kind":"function","modifiers":[],"name":"identityRegistryStorageProxy","nameLocation":"21027:28:40","nodeType":"FunctionDefinition","parameters":{"id":10918,"nodeType":"ParameterList","parameters":[],"src":"21055:2:40"},"returnParameters":{"id":10921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10920,"mutability":"mutable","name":"identityRegistryStorageProxyAddress","nameLocation":"21089:35:40","nodeType":"VariableDeclaration","scope":10922,"src":"21081:43:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10919,"name":"address","nodeType":"ElementaryTypeName","src":"21081:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21080:45:40"},"scope":10963,"src":"21018:108:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10923,"nodeType":"StructuredDocumentation","src":"21132:606:40","text":"@notice Retrieves the smart contract address of the proxy for the trusted issuers registry module.\n @dev This function returns the stable, unchanging address of the trusted issuers registry's proxy contract.\n To interact with the trusted issuers registry (e.g., to check if an issuer is trusted or to add/remove\n issuers, depending on its features), you should use this proxy address. It will forward calls to the\n current logic implementation.\n @return trustedIssuersRegistryProxyAddress The blockchain address of the trusted issuers registry module's\n proxy."},"functionSelector":"d907c456","id":10928,"implemented":false,"kind":"function","modifiers":[],"name":"trustedIssuersRegistryProxy","nameLocation":"21752:27:40","nodeType":"FunctionDefinition","parameters":{"id":10924,"nodeType":"ParameterList","parameters":[],"src":"21779:2:40"},"returnParameters":{"id":10927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10926,"mutability":"mutable","name":"trustedIssuersRegistryProxyAddress","nameLocation":"21813:34:40","nodeType":"VariableDeclaration","scope":10928,"src":"21805:42:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10925,"name":"address","nodeType":"ElementaryTypeName","src":"21805:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21804:44:40"},"scope":10963,"src":"21743:106:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10929,"nodeType":"StructuredDocumentation","src":"21855:553:40","text":"@notice Retrieves the smart contract address of the proxy for the identity factory module.\n @dev This function returns the stable, unchanging address of the identity factory's proxy contract.\n To create new identities within the ATK Protocol, you should interact with this proxy address.\n It will delegate the identity creation requests to the current active logic implementation of the\n identity factory.\n @return identityFactoryProxyAddress The blockchain address of the identity factory module's proxy contract."},"functionSelector":"78e72222","id":10934,"implemented":false,"kind":"function","modifiers":[],"name":"identityFactoryProxy","nameLocation":"22422:20:40","nodeType":"FunctionDefinition","parameters":{"id":10930,"nodeType":"ParameterList","parameters":[],"src":"22442:2:40"},"returnParameters":{"id":10933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10932,"mutability":"mutable","name":"identityFactoryProxyAddress","nameLocation":"22476:27:40","nodeType":"VariableDeclaration","scope":10934,"src":"22468:35:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10931,"name":"address","nodeType":"ElementaryTypeName","src":"22468:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22467:37:40"},"scope":10963,"src":"22413:92:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10935,"nodeType":"StructuredDocumentation","src":"22511:185:40","text":"@notice Returns the address of the token factory proxy.\n @param factoryTypeHash The hash of the factory type.\n @return The address of the token factory proxy contract."},"functionSelector":"139aca99","id":10942,"implemented":false,"kind":"function","modifiers":[],"name":"tokenFactoryProxy","nameLocation":"22710:17:40","nodeType":"FunctionDefinition","parameters":{"id":10938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10937,"mutability":"mutable","name":"factoryTypeHash","nameLocation":"22736:15:40","nodeType":"VariableDeclaration","scope":10942,"src":"22728:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22728:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22727:25:40"},"returnParameters":{"id":10941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10942,"src":"22776:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10939,"name":"address","nodeType":"ElementaryTypeName","src":"22776:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22775:9:40"},"scope":10963,"src":"22701:84:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10943,"nodeType":"StructuredDocumentation","src":"22791:179:40","text":"@notice Returns the address of the system addon proxy.\n @param addonTypeHash The hash of the addon type.\n @return The address of the system addon proxy contract."},"functionSelector":"b00a0fdc","id":10950,"implemented":false,"kind":"function","modifiers":[],"name":"addonProxy","nameLocation":"22984:10:40","nodeType":"FunctionDefinition","parameters":{"id":10946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10945,"mutability":"mutable","name":"addonTypeHash","nameLocation":"23003:13:40","nodeType":"VariableDeclaration","scope":10950,"src":"22995:21:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22995:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22994:23:40"},"returnParameters":{"id":10949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10950,"src":"23041:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10947,"name":"address","nodeType":"ElementaryTypeName","src":"23041:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23040:9:40"},"scope":10963,"src":"22975:75:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10951,"nodeType":"StructuredDocumentation","src":"23056:545:40","text":"@notice Retrieves the smart contract address of the proxy for the topic scheme registry module.\n @dev This function returns the stable, unchanging address of the topic scheme registry's proxy contract.\n To interact with the topic scheme registry (e.g., to register topic schemes or retrieve topic signatures),\n you should use this proxy address. It will forward calls to the current logic implementation.\n @return topicSchemeRegistryProxyAddress The blockchain address of the topic scheme registry module's proxy."},"functionSelector":"7d6b252e","id":10956,"implemented":false,"kind":"function","modifiers":[],"name":"topicSchemeRegistryProxy","nameLocation":"23615:24:40","nodeType":"FunctionDefinition","parameters":{"id":10952,"nodeType":"ParameterList","parameters":[],"src":"23639:2:40"},"returnParameters":{"id":10955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10954,"mutability":"mutable","name":"topicSchemeRegistryProxyAddress","nameLocation":"23673:31:40","nodeType":"VariableDeclaration","scope":10956,"src":"23665:39:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10953,"name":"address","nodeType":"ElementaryTypeName","src":"23665:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23664:41:40"},"scope":10963,"src":"23606:100:40","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":10957,"nodeType":"StructuredDocumentation","src":"23712:557:40","text":"@notice Retrieves the smart contract address of the proxy for the identity verification module.\n @dev This function returns the stable, unchanging address of the identity verification module's proxy contract.\n To interact with the identity verification module (e.g., to verify an identity or check verification status),\n you should use this proxy address. It will forward calls to the current logic implementation.\n @return identityVerificationModuleAddress The blockchain address of the identity verification module's proxy."},"functionSelector":"c8b5d911","id":10962,"implemented":false,"kind":"function","modifiers":[],"name":"identityVerificationModule","nameLocation":"24283:26:40","nodeType":"FunctionDefinition","parameters":{"id":10958,"nodeType":"ParameterList","parameters":[],"src":"24309:2:40"},"returnParameters":{"id":10961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10960,"mutability":"mutable","name":"identityVerificationModuleAddress","nameLocation":"24343:33:40","nodeType":"VariableDeclaration","scope":10962,"src":"24335:41:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10959,"name":"address","nodeType":"ElementaryTypeName","src":"24335:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24334:43:40"},"scope":10963,"src":"24274:104:40","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10964,"src":"909:23471:40","usedErrors":[],"usedEvents":[10699,10706,10713,10720,10727,10734,10741,10748,10755,10774,10789,10806]}],"src":"40:24341:40"},"id":40},"contracts/system/IWithTypeIdentifier.sol":{"ast":{"absolutePath":"contracts/system/IWithTypeIdentifier.sol","exportedSymbols":{"IWithTypeIdentifier":[10973]},"id":10974,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":10965,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"40:24:41"},{"abstract":false,"baseContracts":[],"canonicalName":"IWithTypeIdentifier","contractDependencies":[],"contractKind":"interface","documentation":{"id":10966,"nodeType":"StructuredDocumentation","src":"66:283:41","text":"@title IWithTypeIdentifier\n @notice Interface for contracts that have a unique type identifier.\n @dev This interface is used to identify the type of a contract.\n      It is used to identify the type of a contract.\n      It is used to identify the type of a contract."},"fullyImplemented":false,"id":10973,"linearizedBaseContracts":[10973],"name":"IWithTypeIdentifier","nameLocation":"359:19:41","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":10967,"nodeType":"StructuredDocumentation","src":"385:70:41","text":"@notice Returns a unique identifier for the type of this contract."},"functionSelector":"8f940f63","id":10972,"implemented":false,"kind":"function","modifiers":[],"name":"typeId","nameLocation":"469:6:41","nodeType":"FunctionDefinition","parameters":{"id":10968,"nodeType":"ParameterList","parameters":[],"src":"475:2:41"},"returnParameters":{"id":10971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10972,"src":"501:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"501:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"500:9:41"},"scope":10973,"src":"460:50:41","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":10974,"src":"349:163:41","usedErrors":[],"usedEvents":[]}],"src":"40:473:41"},"id":41},"contracts/system/compliance/IATKComplianceBypassList.sol":{"ast":{"absolutePath":"contracts/system/compliance/IATKComplianceBypassList.sol","exportedSymbols":{"IATKComplianceBypassList":[11035]},"id":11036,"license":"FSL-1.1-MIT","nodeType":"SourceUnit","nodes":[{"id":10975,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"40:24:42"},{"abstract":false,"baseContracts":[],"canonicalName":"IATKComplianceBypassList","contractDependencies":[],"contractKind":"interface","documentation":{"id":10976,"nodeType":"StructuredDocumentation","src":"66:279:42","text":"@title ATK Compliance Bypass List Interface\n @author SettleMint Tokenization Services\n @notice Interface for managing the compliance bypass list functionality.\n @dev This interface defines the standard functions for managing addresses that bypass compliance checks."},"fullyImplemented":false,"id":11035,"linearizedBaseContracts":[11035],"name":"IATKComplianceBypassList","nameLocation":"355:24:42","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":10977,"nodeType":"StructuredDocumentation","src":"408:209:42","text":"@notice Emitted when an address is added to the compliance bypass list.\n @param account The address that was added to the bypass list.\n @param manager The address that performed the addition."},"eventSelector":"0f3a9500f0f26c009c928e123e0f7bee0ecd4caa7b6010581f85e7b28794c127","id":10983,"name":"AddressAddedToBypassList","nameLocation":"628:24:42","nodeType":"EventDefinition","parameters":{"id":10982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10979,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"669:7:42","nodeType":"VariableDeclaration","scope":10983,"src":"653:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10978,"name":"address","nodeType":"ElementaryTypeName","src":"653:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10981,"indexed":true,"mutability":"mutable","name":"manager","nameLocation":"694:7:42","nodeType":"VariableDeclaration","scope":10983,"src":"678:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10980,"name":"address","nodeType":"ElementaryTypeName","src":"678:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"652:50:42"},"src":"622:81:42"},{"anonymous":false,"documentation":{"id":10984,"nodeType":"StructuredDocumentation","src":"709:216:42","text":"@notice Emitted when an address is removed from the compliance bypass list.\n @param account The address that was removed from the bypass list.\n @param manager The address that performed the removal."},"eventSelector":"128fb3593d4d8a8ca29b7babc9136572a1e28c525fa35c4bb4ea14b20742c863","id":10990,"name":"AddressRemovedFromBypassList","nameLocation":"936:28:42","nodeType":"EventDefinition","parameters":{"id":10989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10986,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"981:7:42","nodeType":"VariableDeclaration","scope":10990,"src":"965:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10985,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10988,"indexed":true,"mutability":"mutable","name":"manager","nameLocation":"1006:7:42","nodeType":"VariableDeclaration","scope":10990,"src":"990:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10987,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"964:50:42"},"src":"930:85:42"},{"documentation":{"id":10991,"nodeType":"StructuredDocumentation","src":"1050:89:42","text":"@notice Error thrown when trying to remove an address that is not on the bypass list."},"errorSelector":"b3c8ab84","id":10995,"name":"AddressNotOnBypassList","nameLocation":"1150:22:42","nodeType":"ErrorDefinition","parameters":{"id":10994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10993,"mutability":"mutable","name":"account","nameLocation":"1181:7:42","nodeType":"VariableDeclaration","scope":10995,"src":"1173:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10992,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1172:17:42"},"src":"1144:46:42"},{"documentation":{"id":10996,"nodeType":"StructuredDocumentation","src":"1196:90:42","text":"@notice Error thrown when trying to add an address that is already on the bypass list."},"errorSelector":"046e4a46","id":11000,"name":"AddressAlreadyOnBypassList","nameLocation":"1297:26:42","nodeType":"ErrorDefinition","parameters":{"id":10999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10998,"mutability":"mutable","name":"account","nameLocation":"1332:7:42","nodeType":"VariableDeclaration","scope":11000,"src":"1324:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10997,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1323:17:42"},"src":"1291:50:42"},{"documentation":{"id":11001,"nodeType":"StructuredDocumentation","src":"1372:293:42","text":"@notice Adds an address to the compliance bypass list.\n @dev Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\n Addresses on the bypass list can bypass compliance checks in canTransfer function.\n @param account The address to add to the bypass list."},"functionSelector":"882f1ea8","id":11006,"implemented":false,"kind":"function","modifiers":[],"name":"addToBypassList","nameLocation":"1679:15:42","nodeType":"FunctionDefinition","parameters":{"id":11004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11003,"mutability":"mutable","name":"account","nameLocation":"1703:7:42","nodeType":"VariableDeclaration","scope":11006,"src":"1695:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11002,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1694:17:42"},"returnParameters":{"id":11005,"nodeType":"ParameterList","parameters":[],"src":"1720:0:42"},"scope":11035,"src":"1670:51:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":11007,"nodeType":"StructuredDocumentation","src":"1727:212:42","text":"@notice Removes an address from the compliance bypass list.\n @dev Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\n @param account The address to remove from the bypass list."},"functionSelector":"8a668634","id":11012,"implemented":false,"kind":"function","modifiers":[],"name":"removeFromBypassList","nameLocation":"1953:20:42","nodeType":"FunctionDefinition","parameters":{"id":11010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11009,"mutability":"mutable","name":"account","nameLocation":"1982:7:42","nodeType":"VariableDeclaration","scope":11012,"src":"1974:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11008,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1973:17:42"},"returnParameters":{"id":11011,"nodeType":"ParameterList","parameters":[],"src":"1999:0:42"},"scope":11035,"src":"1944:56:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":11013,"nodeType":"StructuredDocumentation","src":"2006:332:42","text":"@notice Adds multiple addresses to the compliance bypass list in a single transaction.\n @dev Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\n This is a gas-efficient way to add multiple addresses to the bypass list at once.\n @param accounts Array of addresses to add to the bypass list."},"functionSelector":"03792104","id":11019,"implemented":false,"kind":"function","modifiers":[],"name":"addMultipleToBypassList","nameLocation":"2352:23:42","nodeType":"FunctionDefinition","parameters":{"id":11017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11016,"mutability":"mutable","name":"accounts","nameLocation":"2395:8:42","nodeType":"VariableDeclaration","scope":11019,"src":"2376:27:42","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11014,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11015,"nodeType":"ArrayTypeName","src":"2376:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2375:29:42"},"returnParameters":{"id":11018,"nodeType":"ParameterList","parameters":[],"src":"2413:0:42"},"scope":11035,"src":"2343:71:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":11020,"nodeType":"StructuredDocumentation","src":"2420:252:42","text":"@notice Removes multiple addresses from the compliance bypass list in a single transaction.\n @dev Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\n @param accounts Array of addresses to remove from the bypass list."},"functionSelector":"ad02d621","id":11026,"implemented":false,"kind":"function","modifiers":[],"name":"removeMultipleFromBypassList","nameLocation":"2686:28:42","nodeType":"FunctionDefinition","parameters":{"id":11024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11023,"mutability":"mutable","name":"accounts","nameLocation":"2734:8:42","nodeType":"VariableDeclaration","scope":11026,"src":"2715:27:42","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11021,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11022,"nodeType":"ArrayTypeName","src":"2715:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2714:29:42"},"returnParameters":{"id":11025,"nodeType":"ParameterList","parameters":[],"src":"2752:0:42"},"scope":11035,"src":"2677:76:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":11027,"nodeType":"StructuredDocumentation","src":"2759:176:42","text":"@notice Checks if an address is on the bypass list.\n @param account The address to check.\n @return True if the address is on the bypass list, false otherwise."},"functionSelector":"204b6001","id":11034,"implemented":false,"kind":"function","modifiers":[],"name":"isBypassed","nameLocation":"2949:10:42","nodeType":"FunctionDefinition","parameters":{"id":11030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11029,"mutability":"mutable","name":"account","nameLocation":"2968:7:42","nodeType":"VariableDeclaration","scope":11034,"src":"2960:15:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11028,"name":"address","nodeType":"ElementaryTypeName","src":"2960:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2959:17:42"},"returnParameters":{"id":11033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11034,"src":"3000:4:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11031,"name":"bool","nodeType":"ElementaryTypeName","src":"3000:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2999:6:42"},"scope":11035,"src":"2940:66:42","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11036,"src":"345:2663:42","usedErrors":[10995,11000],"usedEvents":[10983,10990]}],"src":"40:2969:42"},"id":42}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol":{"ERC2771ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isTrustedForwarder(address)":"572b6c05","trustedForwarder()":"7da0a877"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_trustedForwarder\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol\":\"ERC2771ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ERC2771Context":{"abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isTrustedForwarder(address)":"572b6c05","trustedForwarder()":"7da0a877"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_trustedForwarder\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":\"ERC2771Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220cc6fdc3e51b5205d465e6011626b02a316e640b31050dffb10a2d05826a9e8a864736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH16 0xDC3E51B5205D465E6011626B02A316E6 BLOCKHASH 0xB3 LT POP 0xDF 0xFB LT LOG2 0xD0 PC 0x26 0xA9 0xE8 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"698:9376:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220cc6fdc3e51b5205d465e6011626b02a316e640b31050dffb10a2d05826a9e8a864736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH16 0xDC3E51B5205D465E6011626B02A316E6 BLOCKHASH 0xB3 LT POP 0xDF 0xFB LT LOG2 0xD0 PC 0x26 0xA9 0xE8 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"698:9376:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212205864a1dfe3796166805d9fb7e284d9b64b36e2fb14e598d8e14f14a9d49e147164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH5 0xA1DFE37961 PUSH7 0x805D9FB7E284D9 0xB6 0x4B CALLDATASIZE 0xE2 0xFB EQ 0xE5 SWAP9 0xD8 0xE1 0x4F EQ 0xA9 0xD4 SWAP15 EQ PUSH18 0x64736F6C634300081C003300000000000000 ","sourceMap":"459:17878:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212205864a1dfe3796166805d9fb7e284d9b64b36e2fb14e598d8e14f14a9d49e147164736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH5 0xA1DFE37961 PUSH7 0x805D9FB7E284D9 0xB6 0x4B CALLDATASIZE 0xE2 0xFB EQ 0xE5 SWAP9 0xD8 0xE1 0x4F EQ 0xA9 0xD4 SWAP15 EQ PUSH18 0x64736F6C634300081C003300000000000000 ","sourceMap":"459:17878:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122032c2e45abc0da26d1578719eb32959affc91f407ec690978e01ce52d9b0aa79764736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xC2 0xE4 GAS 0xBC 0xD LOG2 PUSH14 0x1578719EB32959AFFC91F407EC69 MULMOD PUSH25 0xE01CE52D9B0AA79764736F6C634300081C0033000000000000 ","sourceMap":"224:218:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122032c2e45abc0da26d1578719eb32959affc91f407ec690978e01ce52d9b0aa79764736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xC2 0xE4 GAS 0xBC 0xD LOG2 PUSH14 0x1578719EB32959AFFC91F407EC69 MULMOD PUSH25 0xE01CE52D9B0AA79764736F6C634300081C0033000000000000 ","sourceMap":"224:218:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122061ca3834c382666d249171be2bbb066a0f905cfb1950ef7cbf61c0f81760f36364736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCA38 CALLVALUE 0xC3 DUP3 PUSH7 0x6D249171BE2BBB MOD PUSH11 0xF905CFB1950EF7CBF61C0 0xF8 OR PUSH1 0xF3 PUSH4 0x64736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"533:3932:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122061ca3834c382666d249171be2bbb066a0f905cfb1950ef7cbf61c0f81760f36364736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCA38 CALLVALUE 0xC3 DUP3 PUSH7 0x6D249171BE2BBB MOD PUSH11 0xF905CFB1950EF7CBF61C0 0xF8 OR PUSH1 0xF3 PUSH4 0x64736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"533:3932:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122002c8e244d68c53038f1a416823a19c2e7bf1a3c10ee5a97ad60b36b001c1d81064736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xC8 0xE2 PREVRANDAO 0xD6 DUP13 MSTORE8 SUB DUP16 BYTE COINBASE PUSH9 0x23A19C2E7BF1A3C10E 0xE5 0xA9 PUSH27 0xD60B36B001C1D81064736F6C634300081C00330000000000000000 ","sourceMap":"411:484:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122002c8e244d68c53038f1a416823a19c2e7bf1a3c10ee5a97ad60b36b001c1d81064736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xC8 0xE2 PREVRANDAO 0xD6 DUP13 MSTORE8 SUB DUP16 BYTE COINBASE PUSH9 0x23A19C2E7BF1A3C10E 0xE5 0xA9 PUSH27 0xD60B36B001C1D81064736F6C634300081C00330000000000000000 ","sourceMap":"411:484:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212204985cd5f617a5713879118bbf330caa14c717fa03aedd7cfa6a6eaea147ee7b964736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH DUP6 0xCD PUSH0 PUSH2 0x7A57 SGT DUP8 SWAP2 XOR 0xBB RETURN ADDRESS 0xCA LOG1 0x4C PUSH18 0x7FA03AEDD7CFA6A6EAEA147EE7B964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212204985cd5f617a5713879118bbf330caa14c717fa03aedd7cfa6a6eaea147ee7b964736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH DUP6 0xCD PUSH0 PUSH2 0x7A57 SGT DUP8 SWAP2 XOR 0xBB RETURN ADDRESS 0xCA LOG1 0x4C PUSH18 0x7FA03AEDD7CFA6A6EAEA147EE7B964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212207cb63747a428ba341f7c1c225aa2adafc14972477c73722a2f89613cbd65d8c064736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xB63747A428BA341F7C1C225AA2ADAFC14972477C73722A2F89613CBD65 0xD8 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1599:3723:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212207cb63747a428ba341f7c1c225aa2adafc14972477c73722a2f89613cbd65d8c064736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xB63747A428BA341F7C1C225AA2ADAFC14972477C73722A2F89613CBD65 0xD8 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1599:3723:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200ef2955a1c73aac3788b2a750bbafbb37c8d1fc817d429dfe4328c84dcd89aaa64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE CALLCODE SWAP6 GAS SHR PUSH20 0xAAC3788B2A750BBAFBB37C8D1FC817D429DFE432 DUP13 DUP5 0xDC 0xD8 SWAP11 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212200ef2955a1c73aac3788b2a750bbafbb37c8d1fc817d429dfe4328c84dcd89aaa64736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE CALLCODE SWAP6 GAS SHR PUSH20 0xAAC3788B2A750BBAFBB37C8D1FC817D429DFE432 DUP13 DUP5 0xDC 0xD8 SWAP11 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1407:2774:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220272fc08d98899a54a1a1ceb3634e1a82bc647a83582db34942c2e6e0312f642064736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2F 0xC0 DUP14 SWAP9 DUP10 SWAP11 SLOAD LOG1 LOG1 0xCE 0xB3 PUSH4 0x4E1A82BC PUSH5 0x7A83582DB3 BLOBHASH TIMESTAMP 0xC2 0xE6 0xE0 BALANCE 0x2F PUSH5 0x2064736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"281:31863:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220272fc08d98899a54a1a1ceb3634e1a82bc647a83582db34942c2e6e0312f642064736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2F 0xC0 DUP14 SWAP9 DUP10 SWAP11 SLOAD LOG1 LOG1 0xCE 0xB3 PUSH4 0x4E1A82BC PUSH5 0x7A83582DB3 BLOBHASH TIMESTAMP 0xC2 0xE6 0xE0 BALANCE 0x2F PUSH5 0x2064736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"281:31863:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220fda88d2585f32ce4ba418b78269732ff06e8733c5a55a8e169f2f080c1f5385564736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xA8 DUP14 0x25 DUP6 RETURN 0x2C 0xE4 0xBA COINBASE DUP12 PUSH25 0x269732FF06E8733C5A55A8E169F2F080C1F5385564736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220fda88d2585f32ce4ba418b78269732ff06e8733c5a55a8e169f2f080c1f5385564736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xA8 DUP14 0x25 DUP6 RETURN 0x2C 0xE4 0xBA COINBASE DUP12 PUSH25 0x269732FF06E8733C5A55A8E169F2F080C1F5385564736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220d651dff202d50a52943d107baf69833ad91d37b1b83ce54f3f1e76e615507d3164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 MLOAD 0xDF CALLCODE MUL 0xD5 EXP MSTORE SWAP5 RETURNDATASIZE LT PUSH28 0xAF69833AD91D37B1B83CE54F3F1E76E615507D3164736F6C63430008 SHR STOP CALLER ","sourceMap":"1425:13298:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220d651dff202d50a52943d107baf69833ad91d37b1b83ce54f3f1e76e615507d3164736f6c634300081c0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 MLOAD 0xDF CALLCODE MUL 0xD5 EXP MSTORE SWAP5 RETURNDATASIZE LT PUSH28 0xAF69833AD91D37B1B83CE54F3F1E76E615507D3164736F6C63430008 SHR STOP CALLER ","sourceMap":"1425:13298:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. - Set can be cleared (all elements removed) in O(n). ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}"}},"contracts/addons/vault/ATKVault.sol":{"ATKVault":{"abi":[{"inputs":[{"internalType":"address[]","name":"_signers","type":"address[]"},{"internalType":"uint256","name":"_required","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"forwarder","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"},{"internalType":"address","name":"signer","type":"address"}],"name":"AlreadyConfirmed","type":"error"},{"inputs":[],"name":"ArrayLengthMismatch","type":"error"},{"inputs":[],"name":"EmptyBatchArray","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"ExecutionFailed","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"uint256","name":"requested","type":"uint256"},{"internalType":"uint256","name":"signerCount","type":"uint256"}],"name":"InvalidRequirement","type":"error"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"},{"internalType":"address","name":"signer","type":"address"}],"name":"NotConfirmed","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"},{"internalType":"uint256","name":"maxIndex","type":"uint256"}],"name":"TxDoesNotExist","type":"error"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"TxExecuted","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"ConfirmTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"ExecuteTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"required","type":"uint256"}],"name":"RequirementChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"RevokeConfirmation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"},{"indexed":false,"internalType":"bytes","name":"abiEncodedArguments","type":"bytes"},{"indexed":false,"internalType":"string","name":"comment","type":"string"}],"name":"SubmitContractCallTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"comment","type":"string"}],"name":"SubmitERC20TransferTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"string","name":"comment","type":"string"}],"name":"SubmitTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecutionFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SIGNER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"txIndices","type":"uint256[]"}],"name":"batchConfirm","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes4[]","name":"selectors","type":"bytes4[]"},{"internalType":"bytes[]","name":"abiEncodedArguments","type":"bytes[]"},{"internalType":"string[]","name":"comments","type":"string[]"}],"name":"batchSubmitContractCalls","outputs":[{"internalType":"uint256[]","name":"txIndices","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"string[]","name":"comments","type":"string[]"}],"name":"batchSubmitERC20Transfers","outputs":[{"internalType":"uint256[]","name":"txIndices","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"},{"internalType":"string[]","name":"comments","type":"string[]"}],"name":"batchSubmitTransactions","outputs":[{"internalType":"uint256[]","name":"txIndices","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"confirm","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"confirmations","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"getConfirmers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"},{"internalType":"address","name":"signer","type":"address"}],"name":"hasConfirmed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"required","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"requirement","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"revoke","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_required","type":"uint256"}],"name":"setRequirement","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"signers","outputs":[{"internalType":"address[]","name":"signers_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes4","name":"selector","type":"bytes4"},{"internalType":"bytes","name":"abiEncodedArguments","type":"bytes"},{"internalType":"string","name":"comment","type":"string"}],"name":"submitContractCall","outputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"comment","type":"string"}],"name":"submitERC20Transfer","outputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"string","name":"comment","type":"string"}],"name":"submitTransaction","outputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"transaction","outputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"numConfirmations","type":"uint256"},{"internalType":"string","name":"comment","type":"string"}],"internalType":"struct ATKVault.Transaction","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"transactions","outputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"numConfirmations","type":"uint256"},{"internalType":"string","name":"comment","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":631,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":594,"id":null,"parameterSlots":1,"returnSlots":1},"fun_add":{"entryPoint":1012,"id":7258,"parameterSlots":2,"returnSlots":1},"fun_grantRole":{"entryPoint":788,"id":1120,"parameterSlots":1,"returnSlots":1},"fun_grantRole_2271":{"entryPoint":651,"id":1120,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":933,"id":1607,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a06040523461023a57612d0f8038038061001981610252565b928339810160808282031261023a5781516001600160401b03811161023a5782019080601f8301121561023a578151916001600160401b03831161023e578260051b9060208061006a818501610252565b80968152019282010192831161023a57602001905b828210610222575050506020820151916100a760606100a060408401610277565b9201610277565b60805260016003558151908115801561021a575b8015610211575b6101fa576100cf8161028b565b6101b8575b505f5b818110610146576007849055837f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b036101176103a5565b1692604051908152a260405161283e90816104518239608051818181610ba401528181610c9b015261237c0152f35b82518110156101a457600581901b830160200151600191906001600160a01b031661017081610314565b61017c575b50016100d7565b61019d905f516020612caf5f395f51905f525f528360205260405f206103f4565b505f610175565b634e487b7160e01b5f52603260045260245ffd5b5f805260016020526101f3906001600160a01b03167fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496103f4565b505f6100d4565b50826306a0ee3160e31b5f5260045260245260445ffd5b508184116100c2565b5083156100bb565b6020809161022f84610277565b81520191019061007f565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b0381118382101761023e57604052565b51906001600160a01b038216820361023a57565b6001600160a01b0381165f9081525f516020612cef5f395f51905f52602052604090205460ff1661030f576001600160a01b038181165f9081525f516020612cef5f395f51905f5260205260409020805460ff191660011790556102ed6103a5565b16906001600160a01b03165f5f516020612c8f5f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081525f516020612ccf5f395f51905f52602052604090205460ff1661030f576001600160a01b038181165f9081525f516020612ccf5f395f51905f5260205260409020805460ff191660011790556103766103a5565b16906001600160a01b03165f516020612caf5f395f51905f525f516020612c8f5f395f51905f525f80a4600190565b6080516001600160a01b03163314806103e9575b156103e55760131936013681116103d1573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b5060143610156103b9565b6001810190825f528160205260405f2054155f146104495780546801000000000000000081101561023e57600181018083558110156101a4578390825f5260205f20015554915f5260205260405f2055600190565b5050505f9056fe6080806040526004361015610069575b50361561001a575f80fd5b610022611cf3565b61002a612379565b604080513481524760208201526001600160a01b03909216917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159190a2005b5f3560e01c90816301ffc9a7146116315750806308aff933146115dd5780630f05205614611423578063205e7c061461123857806320c5429b14611155578063248a9ca3146111235780632f2ff15d146110be5780633411c81c1461107557806336568abe146110215780633f4ba83a14610fbc57806346bd084114610e8f57806346e24b0814610da157806346f0975a14610ccf578063572b6c0514610c7b5780635c975abb14610c595780636239152014610bd35780637da0a87714610b8f5780638456cb5914610b245780638f56015f14610a615780639010d07c14610a1b57806391d14854146109d35780639ace38c214610916578063a1ebf35d146108ef578063a217fddf146108d5578063a3246ad314610865578063aa787c1e14610763578063b756393014610306578063b779e1c014610691578063ba0179b51461064e578063c13138f114610391578063ca15c87314610367578063d547741f14610323578063dc8452cd146103065763ee0e6f65146101eb575f61000f565b34610302576080366003190112610302576102046116b4565b61020c61169e565b9060443591606435916001600160401b038311610302576020937f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b9336102f59361025c6102ec9636906004016117eb565b9290610266611bbf565b61026e611cf3565b610276611d0e565b61027e612379565b60405163a9059cbb60e01b8b8201526001600160a01b0385166024820152604480820188905281529096906102ca906102b860648261198d565b6102c3368886611a77565b9083611d7d565b98899560405193849360018060a01b03169860018060a01b038b169785611b10565b0390a4826121a9565b6001600355604051908152f35b5f80fd5b34610302575f366003190112610302576020600754604051908152f35b346103025760403660031901126103025761036560043561034261169e565b9061036061035b825f525f602052600160405f20015490565b611ca2565b61233f565b005b34610302576020366003190112610302576004355f526001602052602060405f2054604051908152f35b346103025760a0366003190112610302576004356001600160401b038111610302576103c19036906004016116ca565b6024356001600160401b038111610302576103e09036906004016116ca565b6044356001600160401b038111610302576103ff9036906004016116ca565b9490936064356001600160401b038111610302576104219036906004016116ca565b9290966084356001600160401b038111610302576104439036906004016116ca565b95909161044e611bbf565b610456611cf3565b61045e611d0e565b841561063f57818514801590610635575b801561062b575b8015610621575b6106125761048c979397612379565b96610496866119c5565b996001600160a01b038916955f5b8881106104c2576001600355604051806104be8f8261178e565b0390f35b8a8d8f8c8f8c8c8f928c8c8f92888c8f8f829c90838f96818f988f828f8f8f918f92849f92859c968697948f95886104fe8180999781986119f7565b61050790611baa565b9261051192611a1b565b9061051b92611b34565b94610526918c6119f7565b61052f90611a07565b9561053a918d6119f7565b359361054592611a1b565b369061055092611a77565b9161055a93611fd2565b6105648284611aad565b5261056e91611aad565b519e610579926119f7565b61058290611a07565b9961058c926119f7565b3596610597926119f7565b6105a090611baa565b996105aa92611a1b565b926105b6929196611a1b565b91604051958695600160a01b6001900316996105d29587611b6e565b037fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd1691a46105ff91611aad565b519061060a916121a9565b6001016104a4565b63512509d360e11b5f5260045ffd5b508685141561047d565b5085851415610476565b508085141561046f565b637dc57e7b60e01b5f5260045ffd5b3461030257602036600319011261030257610667611bbf565b61066f611cf3565b610677611d0e565b61068a610682612379565b6004356121a9565b6001600355005b34610302576020366003190112610302576004356006548082101561071f5750805f52600460205260405f20546106c7816119c5565b915f5b8281106106df57604051806104be8682611818565b600190825f5260046020526106f78160405f20612589565b838060a01b0391549060031b1c1661070f8287611aad565b90838060a01b03169052016106ca565b801561075b575f19810190811161074757905b632d71397360e11b5f5260045260245260445ffd5b634e487b7160e01b5f52601160045260245ffd5b505f90610732565b346103025760a03660031901126103025761077c6116b4565b602435906044356001600160e01b031981168103610302576064356001600160401b038111610302576107b39036906004016117eb565b91608435926001600160401b038411610302576020957fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd166107fb6102f59636906004016117eb565b959097610806611bbf565b61080e611cf3565b610816611d0e565b6102ec610821612379565b9761084361083088868b611b34565b61083b36848f611a77565b908886611fd2565b9a8b9760405195869560018060a01b03169a60018060a01b038d169987611b6e565b34610302576020366003190112610302576004355f52600160205260405f206040519081602082549182815201915f5260205f20905f5b8181106108bf576104be856108b38187038261198d565b60405191829182611818565b825484526020909301926001928301920161089c565b34610302575f3660031901126103025760206040515f8152f35b34610302575f3660031901126103025760206040515f5160206127e95f395f51905f528152f35b34610302576020366003190112610302576004356006548110156103025761093d9061185a565b5060018060a01b038154166104be60018301549260056040519161096f8361096881600285016118dd565b038461198d565b6109b960ff6003830154169361099b60048401549361099460405180978193016118dd565b038561198d565b6040519788978852602088015260c0604088015260c08701906117c7565b9215156060860152608085015283820360a08501526117c7565b34610302576040366003190112610302576109ec61169e565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004355f5260016020526020610a4860405f2060243590612589565b905460405160039290921b1c6001600160a01b03168152f35b3461030257602036600319011261030257600435610a7d611c3a565b5f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df85481158015610b1b575b610b05575060078190557f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b03610afa612379565b1692604051908152a2005b906306a0ee3160e31b5f5260045260245260445ffd5b50808211610abd565b34610302575f36600319011261030257610b3c611c3a565b610b44611cf3565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020610b7c612379565b6040516001600160a01b039091168152a1005b34610302575f366003190112610302576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610302576020366003190112610302576004356001600160401b03811161030257610c039036906004016116ca565b90610c0c611bbf565b610c14611cf3565b610c1c611d0e565b811561063f57610c2a612379565b905f5b838110610c3b576001600355005b80610c5384610c4d60019488876119f7565b356121a9565b01610c2d565b34610302575f36600319011261030257602060ff600254166040519015158152f35b34610302576020366003190112610302576020610c966116b4565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610302575f366003190112610302575f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df854610d1f816119c5565b905f5b818110610d3757604051806104be8582611818565b5f5160206127e95f395f51905f525f526001602081905290610d79817fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df8612589565b838060a01b0391549060031b1c16610d918286611aad565b90838060a01b0316905201610d22565b3461030257608036600319011261030257610dba6116b4565b6024356044356001600160401b03811161030257610ddc9036906004016117eb565b92606435916001600160401b038311610302576020947fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd94610e256102f59536906004016117eb565b969092610e30611bbf565b610e38611cf3565b610e40611d0e565b610e48612379565b956102ec610e6d610e5a36858a611a77565b610e65368d8a611a77565b908785611fd2565b998a9660405194859460018060a01b03169960018060a01b038c169886611ae1565b3461030257602036600319011261030257600435606060a0604051610eb38161195e565b5f81525f60208201528260408201525f838201525f608082015201526006548082101561071f57610ee38261185a565b50604051610ef08161195e565b81546001600160a01b0316815260018201546020820190815260405190926104be9190600590610f278361096881600285016118dd565b60408501928352610f9b60ff60038301541693606087019415158552610f636004840154936080890194855261099460405180978193016118dd565b60a087019384526040519788976020895260018060a01b0390511660208901525160408801525160c0606088015260e08701906117c7565b9251151560808601525160a085015251838203601f190160c08501526117c7565b34610302575f36600319011261030257610fd4611c3a565b60025460ff8116156110125760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020610b7c612379565b638dfc202b60e01b5f5260045ffd5b346103025760403660031901126103025761103a61169e565b6001600160a01b0361104a612379565b166001600160a01b03821603611066576103659060043561233f565b63334bd91960e11b5f5260045ffd5b346103025760403660031901126103025761108e61169e565b6004355f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004356110da61169e565b6110f261035b835f525f602052600160405f20015490565b6110fc8183612679565b61110257005b5f91825260016020526040909120610365916001600160a01b03169061279b565b3461030257602036600319011261030257602061114d6004355f525f602052600160405f20015490565b604051908152f35b3461030257602036600319011261030257600435611171611bbf565b611179611cf3565b611182816122dd565b61118a612379565b90825f5260046020526111b860405f209260018060a01b031680936001915f520160205260405f2054151590565b1561122157600490835f52816020526111d48360405f2061259e565b50835f52600560205260405f20835f5260205260405f2060ff198154169055015f1981540190557ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd555f80a3005b509063b29436e960e01b5f5260045260245260445ffd5b3461030257611246366116fa565b9296909591611253611bbf565b61125b611cf3565b611263611d0e565b821561063f57848314801590611419575b801561140f575b6106125761128a959195612379565b94611294846119c5565b976001600160a01b038716935f5b8681106112bc576001600355604051806104be8d8261178e565b808787878f8f8f868f928184878f8f908f858b8f926112de83809681936119f7565b6112e790611a07565b966112f1926119f7565b60405163a9059cbb60e01b60208201526001600160a01b0396909616602487015235604480870191909152855261132960648661198d565b611333918a6119f7565b61133c90611a07565b9361134692611a1b565b369061135192611a77565b9061135b92611d7d565b6113658284611aad565b5261136f91611aad565b519661137a926119f7565b61138390611a07565b9186611390818d8c6119f7565b61139990611a07565b946113a3926119f7565b35956113af918a611a1b565b6040516001600160a01b0390931696929384936113cd939185611b10565b037f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b93391a4886113fc828d611aad565b5190611407916121a9565b6001016112a2565b508383141561127b565b5080831415611274565b3461030257611431366116fa565b61144097919397969296611bbf565b611448611cf3565b611450611d0e565b821561063f578483148015906115d3575b80156115c9575b61061257611477959195612379565b94611481846119c5565b976001600160a01b038716935f5b8681106114a9576001600355604051806104be8d8261178e565b878787878f8f8f82888c83828e96818f898f8f848f919e819f8b96839f6114d385809481936119f7565b6114dc90611a07565b986114e6926119f7565b35956114f192611a1b565b926114fd929194611a1b565b929091369061150b92611a77565b91369061151792611a77565b9161152193611fd2565b61152b8284611aad565b5261153591611aad565b519a611540926119f7565b61154990611a07565b95611554918d6119f7565b359361155f92611a1b565b9461156b929198611a1b565b90604051948594600160a01b6001900316986115879486611ae1565b037fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd91a4886115b6828d611aad565b51906115c1916121a9565b60010161148f565b5080831415611468565b5086831415611461565b346103025760403660031901126103025760206116276115fb61169e565b600480355f90815290845260408082206001600160a01b03909316825260019092016020522054151590565b6040519015158152f35b34610302576020366003190112610302576004359063ffffffff60e01b821680920361030257602091635a05180f60e01b8114908115611673575b5015158152f35b637965db0b60e01b81149150811561168d575b508361166c565b6301ffc9a760e01b14905083611686565b602435906001600160a01b038216820361030257565b600435906001600160a01b038216820361030257565b9181601f84011215610302578235916001600160401b038311610302576020808501948460051b01011161030257565b6080600319820112610302576004356001600160401b0381116103025781611724916004016116ca565b929092916024356001600160401b0381116103025781611746916004016116ca565b929092916044356001600160401b0381116103025781611768916004016116ca565b92909291606435906001600160401b0382116103025761178a916004016116ca565b9091565b60206040818301928281528451809452019201905f5b8181106117b15750505090565b82518452602093840193909201916001016117a4565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610302578235916001600160401b038311610302576020838186019501011161030257565b60206040818301928281528451809452019201905f5b81811061183b5750505090565b82516001600160a01b031684526020938401939092019160010161182e565b6006548110156118915760065f81815291027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0191565b634e487b7160e01b5f52603260045260245ffd5b90600182811c921680156118d3575b60208310146118bf57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916118b4565b5f92918154916118ec836118a5565b8083529260018116908115611941575060011461190857505050565b5f9081526020812093945091925b838310611927575060209250010190565b600181602092949394548385870101520191019190611916565b915050602093945060ff929192191683830152151560051b010190565b60c081019081106001600160401b0382111761197957604052565b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761197957604052565b6001600160401b0381116119795760051b60200190565b906119cf826119ae565b6119dc604051918261198d565b82815280926119ed601f19916119ae565b0190602036910137565b91908110156118915760051b0190565b356001600160a01b03811681036103025790565b91908110156118915760051b81013590601e19813603018212156103025701908135916001600160401b038311610302576020018236038113610302579190565b6001600160401b03811161197957601f01601f191660200190565b929192611a8382611a5c565b91611a91604051938461198d565b829481845281830111610302578281602093845f960137010152565b80518210156118915760209160051b010190565b908060209392818452848401375f828201840152601f01601f1916010190565b9391611b0d9593611aff928652606060208701526060860191611ac1565b926040818503910152611ac1565b90565b611b0d949260609260018060a01b0316825260208201528160408201520191611ac1565b602490611b6c9294938060405196879363ffffffff60e01b1660208501528484013781015f838201520301601f19810184528361198d565b565b94929093611b9c92611b0d9795875263ffffffff60e01b166020870152608060408701526080860191611ac1565b926060818503910152611ac1565b356001600160e01b0319811681036103025790565b611bc7612379565b6001600160a01b0381165f9081527f059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5b602052604090205460ff1615611c095750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004525f5160206127e95f395f51905f52602452604490fd5b611c42612379565b6001600160a01b0381165f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1615611c845750565b63e2517d3f60e01b5f5260018060a01b03166004525f60245260445ffd5b611caa612379565b5f828152602081815260408083206001600160a01b038516845290915290205460ff1615611cd6575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b60ff60025416611cff57565b63d93c066560e01b5f5260045ffd5b600260035414611d1f576002600355565b633ee5aeb560e01b5f5260045ffd5b601f8211611d3b57505050565b5f5260205f20906020601f840160051c83019310611d73575b601f0160051c01905b818110611d68575050565b5f8155600101611d5d565b9091508190611d54565b929091926006549260405191611d928361195e565b6001600160a01b031682525f6020830181815260408401928352606084018281526080850192835260a08501978852919290600160401b8710156119795760018701600655611de08761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b03821161197957611e3382611e2d85546118a5565b85611d2e565b602090601f8311600114611f535782600597969593611e879593611e6c935f92611eea575b50508160011b915f199060031b1c19161790565b90555b511515600384019060ff801983541691151516179055565b5160048201550192519283516001600160401b03811161197957611eb581611eaf84546118a5565b84611d2e565b602094601f8211600114611ef557611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b9055565b015190505f80611e58565b601f19821695835f52805f20915f5b888110611f3b57508360019596979810611f23575b505050811b019055565b01515f1960f88460031b161c191690555f8080611f19565b91926020600181928685015181550194019201611f04565b90601f19831691845f52815f20925f5b818110611fa7575092600192859260059a999896611e87989610611f8f575b505050811b019055611e6f565b01515f1960f88460031b161c191690555f8080611f82565b92936020600181928786015181550195019301611f63565b634e487b7160e01b5f525f60045260245ffd5b90939192936006549360405192611fe88461195e565b60018060a01b03168352602083019182526040830190815260608301905f825260808401925f845260a08501978852600160401b87101561197957600187016006556120338761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b0382116119795761208082611e2d85546118a5565b602090601f831160011461215657826005979695936120b89593611e6c935f92611eea5750508160011b915f199060031b1c19161790565b5160048201550192519283516001600160401b038111611979576120e081611eaf84546118a5565b602094601f821160011461211157611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b601f19821695835f52805f20915f5b88811061213e57508360019596979810611f2357505050811b019055565b91926020600181928685015181550194019201612120565b90601f19831691845f52815f20925f5b818110612191575092600192859260059a9998966120b8989610611f8f57505050811b019055611e6f565b92936020600181928786015181550195019301612166565b6121b2816122dd565b91815f52600460205260405f206121e060018060a01b03831680926001915f520160205260405f2054151590565b6122c757825f5260046020526121f98160405f2061279b565b50825f52600560205260405f20815f5260205260405f20600160ff1982541617905582600485019160018354018093557f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb633900415f80a36007541115806122b8575b61226157505050565b61226b90826123d2565b15612274575050565b8154604051635f226afd60e11b815260048101929092526001600160a01b03166024820152606060448201529081906122b49060648301906002016118dd565b0390fd5b5060ff60038401541615612258565b826347b467b960e11b5f5260045260245260445ffd5b906006548083101561231657506122f38261185a565b509160ff6003840154166123045750565b6393fbc70960e01b5f5260045260245ffd5b9050801561075b575f1981019081116107475790632d71397360e11b5f5260045260245260445ffd5b612349828261270e565b918261235457505090565b5f91825260016020526040909120612375916001600160a01b03169061259e565b5090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806123c7575b156123c3576013193601368111610747573560601c90565b3390565b5060143610156123ab565b6123db8161185a565b509160038301805460ff811661257f5760019060ff191617815560018060a01b0384541660018501546002860190604051915f9080549061241b826118a5565b91600181169081156125685750600114612536575b5050915f939181859403925af13d15612531573d61244d81611a5c565b9061245b604051928361198d565b81525f60203d92013e5b15612521575081906001600160a01b03167f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac5f80a3805f52600460205260405f20545f5b8181106124be5750505060045f910155600190565b825f52600460205260405f2090815415611891575f9182526020808320548584526005825260408085206001600160a01b03909216808652918352808520805460ff191690558685526004909252922060019261251a9161259e565b50016124a9565b805460ff19169055505f92915050565b612465565b9091505f5260205f205f905b82821061255457505082018183612430565b600181602092548488015201910190612542565b60ff19168652505080151502830190508183612430565b5050505050600190565b8054821015611891575f5260205f2001905f90565b906001820191815f528260205260405f20548015155f14612671575f1981018181116107475782545f1981019190821161074757818103612626575b50505080548015612612575f1901906125f38282612589565b8154905f199060031b1b19169055555f526020525f6040812055600190565b634e487b7160e01b5f52603160045260245ffd5b61265c6126366126469386612589565b90549060031b1c92839286612589565b819391549060031b91821b915f19901b19161790565b90555f528360205260405f20555f80806125da565b505050505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff191660011790556126d3612379565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff19169055612766612379565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b5f82815260018201602052604090205461270857805490600160401b82101561197957826127d3612646846001809601855584612589565b90558054925f520160205260405f205560019056fee2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70a26469706673582212200b2d9c147d6c2e67c0df5428313f0ffb94bcbf214c3c9ea38f7cd4fe7286667b64736f6c634300081c00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0de2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5bad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23A JUMPI PUSH2 0x2D0F DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x252 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x23A JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23A JUMPI DUP3 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x23A JUMPI DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x23E JUMPI DUP3 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 DUP1 PUSH2 0x6A DUP2 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST DUP1 SWAP7 DUP2 MSTORE ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x23A JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x222 JUMPI POP POP POP PUSH1 0x20 DUP3 ADD MLOAD SWAP2 PUSH2 0xA7 PUSH1 0x60 PUSH2 0xA0 PUSH1 0x40 DUP5 ADD PUSH2 0x277 JUMP JUMPDEST SWAP3 ADD PUSH2 0x277 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x3 SSTORE DUP2 MLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x1FA JUMPI PUSH2 0xCF DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x1B8 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x146 JUMPI PUSH1 0x7 DUP5 SWAP1 SSTORE DUP4 PUSH32 0x9E0800728E995CA040F68D19B1BCC1B4AE0420ED8190FABB5FA564E2961EB7D5 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x117 PUSH2 0x3A5 JUMP JUMPDEST AND SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x40 MLOAD PUSH2 0x283E SWAP1 DUP2 PUSH2 0x451 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xBA4 ADD MSTORE DUP2 DUP2 PUSH2 0xC9B ADD MSTORE PUSH2 0x237C ADD MSTORE RETURN JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 DUP2 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x17C JUMPI JUMPDEST POP ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x19D SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CAF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x3F4 JUMP JUMPDEST POP PUSH0 PUSH2 0x175 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1F3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH2 0x3F4 JUMP JUMPDEST POP PUSH0 PUSH2 0xD4 JUMP JUMPDEST POP DUP3 PUSH4 0x6A0EE31 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST POP DUP2 DUP5 GT PUSH2 0xC2 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBB JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x22F DUP5 PUSH2 0x277 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x23E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23A JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CEF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x30F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CEF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2ED PUSH2 0x3A5 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2C8F PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CCF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x30F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CCF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x376 PUSH2 0x3A5 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CAF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2C8F PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x3E9 JUMPI JUMPDEST ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x3D1 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH0 EQ PUSH2 0x449 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x1A4 JUMPI DUP4 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE SLOAD SWAP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x69 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x22 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x2A PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE SELFBALANCE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 SWAP1 LOG2 STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1631 JUMPI POP DUP1 PUSH4 0x8AFF933 EQ PUSH2 0x15DD JUMPI DUP1 PUSH4 0xF052056 EQ PUSH2 0x1423 JUMPI DUP1 PUSH4 0x205E7C06 EQ PUSH2 0x1238 JUMPI DUP1 PUSH4 0x20C5429B EQ PUSH2 0x1155 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1123 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x10BE JUMPI DUP1 PUSH4 0x3411C81C EQ PUSH2 0x1075 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1021 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xFBC JUMPI DUP1 PUSH4 0x46BD0841 EQ PUSH2 0xE8F JUMPI DUP1 PUSH4 0x46E24B08 EQ PUSH2 0xDA1 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0xCCF JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0xC7B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC59 JUMPI DUP1 PUSH4 0x62391520 EQ PUSH2 0xBD3 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0xB8F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB24 JUMPI DUP1 PUSH4 0x8F56015F EQ PUSH2 0xA61 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xA1B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x9D3 JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0xA1EBF35D EQ PUSH2 0x8EF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0xAA787C1E EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xB7563930 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xB779E1C0 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xBA0179B5 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xC13138F1 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x306 JUMPI PUSH4 0xEE0E6F65 EQ PUSH2 0x1EB JUMPI PUSH0 PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x204 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x169E JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP4 PUSH32 0x97A1625FFE5FA52EA35B6D6808A64CF13BB4AB9BDCE9643B7A97F09C8922B933 PUSH2 0x2F5 SWAP4 PUSH2 0x25C PUSH2 0x2EC SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x266 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x26E PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP12 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP1 SWAP7 SWAP1 PUSH2 0x2CA SWAP1 PUSH2 0x2B8 PUSH1 0x64 DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x2C3 CALLDATASIZE DUP9 DUP7 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x1D7D JUMP JUMPDEST SWAP9 DUP10 SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP8 DUP6 PUSH2 0x1B10 JUMP JUMPDEST SUB SWAP1 LOG4 DUP3 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x365 PUSH1 0x4 CALLDATALOAD PUSH2 0x342 PUSH2 0x169E JUMP JUMPDEST SWAP1 PUSH2 0x360 PUSH2 0x35B DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3C1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3E0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3FF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP5 SWAP1 SWAP4 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x421 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP7 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x443 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP6 SWAP1 SWAP2 PUSH2 0x44E PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x456 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x45E PUSH2 0x1D0E JUMP JUMPDEST DUP5 ISZERO PUSH2 0x63F JUMPI DUP2 DUP6 EQ DUP1 ISZERO SWAP1 PUSH2 0x635 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x62B JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x621 JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x48C SWAP8 SWAP4 SWAP8 PUSH2 0x2379 JUMP JUMPDEST SWAP7 PUSH2 0x496 DUP7 PUSH2 0x19C5 JUMP JUMPDEST SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP6 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x4C2 JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP16 DUP3 PUSH2 0x178E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP11 DUP14 DUP16 DUP13 DUP16 DUP13 DUP13 DUP16 SWAP3 DUP13 DUP13 DUP16 SWAP3 DUP9 DUP13 DUP16 DUP16 DUP3 SWAP13 SWAP1 DUP4 DUP16 SWAP7 DUP2 DUP16 SWAP9 DUP16 DUP3 DUP16 DUP16 DUP16 SWAP2 DUP16 SWAP3 DUP5 SWAP16 SWAP3 DUP6 SWAP13 SWAP7 DUP7 SWAP8 SWAP5 DUP16 SWAP6 DUP9 PUSH2 0x4FE DUP2 DUP1 SWAP10 SWAP8 DUP2 SWAP9 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x507 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST SWAP3 PUSH2 0x511 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 PUSH2 0x51B SWAP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP5 PUSH2 0x526 SWAP2 DUP13 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x52F SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP6 PUSH2 0x53A SWAP2 DUP14 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0x545 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x550 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 PUSH2 0x55A SWAP4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x564 DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x56E SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP15 PUSH2 0x579 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x582 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP10 PUSH2 0x58C SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP7 PUSH2 0x597 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x5A0 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST SWAP10 PUSH2 0x5AA SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 PUSH2 0x5B6 SWAP3 SWAP2 SWAP7 PUSH2 0x1A1B JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP10 PUSH2 0x5D2 SWAP6 DUP8 PUSH2 0x1B6E JUMP JUMPDEST SUB PUSH32 0xD1048E3510DFDA1FAA9BDE9BCF936DC0C15B5BB24C1F9B7D795959FB476ECD16 SWAP2 LOG4 PUSH2 0x5FF SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x60A SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4A4 JUMP JUMPDEST PUSH4 0x512509D3 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP DUP7 DUP6 EQ ISZERO PUSH2 0x47D JUMP JUMPDEST POP DUP6 DUP6 EQ ISZERO PUSH2 0x476 JUMP JUMPDEST POP DUP1 DUP6 EQ ISZERO PUSH2 0x46F JUMP JUMPDEST PUSH4 0x7DC57E7B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x667 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x66F PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x677 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x68A PUSH2 0x682 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x71F JUMPI POP DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x6C7 DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP7 DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x6F7 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x2589 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x70F DUP3 DUP8 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE ADD PUSH2 0x6CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75B JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x747 JUMPI SWAP1 JUMPDEST PUSH4 0x2D713973 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 SWAP1 PUSH2 0x732 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x77C PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x7B3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP6 PUSH32 0xD1048E3510DFDA1FAA9BDE9BCF936DC0C15B5BB24C1F9B7D795959FB476ECD16 PUSH2 0x7FB PUSH2 0x2F5 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP6 SWAP1 SWAP8 PUSH2 0x806 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x80E PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x816 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x821 PUSH2 0x2379 JUMP JUMPDEST SWAP8 PUSH2 0x843 PUSH2 0x830 DUP9 DUP7 DUP12 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x83B CALLDATASIZE DUP5 DUP16 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP9 DUP7 PUSH2 0x1FD2 JUMP JUMPDEST SWAP11 DUP12 SWAP8 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP10 DUP8 PUSH2 0x1B6E JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x4BE DUP6 PUSH2 0x8B3 DUP2 DUP8 SUB DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1818 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x89C JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH2 0x93D SWAP1 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH2 0x4BE PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x96F DUP4 PUSH2 0x968 DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x18DD JUMP JUMPDEST SUB DUP5 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP4 PUSH2 0x99B PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST SUB DUP6 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x17C7 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x9EC PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0xA48 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA7D PUSH2 0x1C3A JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 SLOAD DUP2 ISZERO DUP1 ISZERO PUSH2 0xB1B JUMPI JUMPDEST PUSH2 0xB05 JUMPI POP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH32 0x9E0800728E995CA040F68D19B1BCC1B4AE0420ED8190FABB5FA564E2961EB7D5 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAFA PUSH2 0x2379 JUMP JUMPDEST AND SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST SWAP1 PUSH4 0x6A0EE31 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST POP DUP1 DUP3 GT PUSH2 0xABD JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xB3C PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0xB44 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH2 0xB7C PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0xC03 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP1 PUSH2 0xC0C PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xC14 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xC1C PUSH2 0x1D0E JUMP JUMPDEST DUP2 ISZERO PUSH2 0x63F JUMPI PUSH2 0xC2A PUSH2 0x2379 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xC3B JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE STOP JUMPDEST DUP1 PUSH2 0xC53 DUP5 PUSH2 0xC4D PUSH1 0x1 SWAP5 DUP9 DUP8 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD PUSH2 0x21A9 JUMP JUMPDEST ADD PUSH2 0xC2D JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0xC96 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 SLOAD PUSH2 0xD1F DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP6 DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 PUSH2 0xD79 DUP2 PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 PUSH2 0x2589 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0xD91 DUP3 DUP7 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE ADD PUSH2 0xD22 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xDBA PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0xDDC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP5 PUSH32 0xA48C1B3842E6F2C3793E18D2B4FED84FC8C6D18C3687702A2B43492078551EFD SWAP5 PUSH2 0xE25 PUSH2 0x2F5 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP7 SWAP1 SWAP3 PUSH2 0xE30 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xE38 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xE40 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0xE48 PUSH2 0x2379 JUMP JUMPDEST SWAP6 PUSH2 0x2EC PUSH2 0xE6D PUSH2 0xE5A CALLDATASIZE DUP6 DUP11 PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0xE65 CALLDATASIZE DUP14 DUP11 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP8 DUP6 PUSH2 0x1FD2 JUMP JUMPDEST SWAP10 DUP11 SWAP7 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP9 DUP7 PUSH2 0x1AE1 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0xEB3 DUP2 PUSH2 0x195E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 DUP4 DUP3 ADD MSTORE PUSH0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x6 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x71F JUMPI PUSH2 0xEE3 DUP3 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEF0 DUP2 PUSH2 0x195E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 SWAP3 PUSH2 0x4BE SWAP2 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0xF27 DUP4 PUSH2 0x968 DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP3 DUP4 MSTORE PUSH2 0xF9B PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x60 DUP8 ADD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH2 0xF63 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP10 ADD SWAP5 DUP6 MSTORE PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0x20 DUP10 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x20 DUP10 ADD MSTORE MLOAD PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP3 MLOAD ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x17C7 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xFD4 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1012 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH2 0xB7C PUSH2 0x2379 JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x103A PUSH2 0x169E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x104A PUSH2 0x2379 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1066 JUMPI PUSH2 0x365 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x233F JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x108E PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10DA PUSH2 0x169E JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x35B DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10FC DUP2 DUP4 PUSH2 0x2679 JUMP JUMPDEST PUSH2 0x1102 JUMPI STOP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x365 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x279B JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0x114D PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1171 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1179 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1182 DUP2 PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x118A PUSH2 0x2379 JUMP JUMPDEST SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x11B8 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 SWAP4 PUSH1 0x1 SWAP2 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1221 JUMPI PUSH1 0x4 SWAP1 DUP4 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH2 0x11D4 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x259E JUMP JUMPDEST POP DUP4 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH32 0xF0DCA620E2E81F7841D07BCC105E1704FB01475B278A9D4C236E1C62945EDD55 PUSH0 DUP1 LOG3 STOP JUMPDEST POP SWAP1 PUSH4 0xB29436E9 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH2 0x1246 CALLDATASIZE PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP7 SWAP1 SWAP6 SWAP2 PUSH2 0x1253 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x125B PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1263 PUSH2 0x1D0E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x63F JUMPI DUP5 DUP4 EQ DUP1 ISZERO SWAP1 PUSH2 0x1419 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x140F JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x128A SWAP6 SWAP2 SWAP6 PUSH2 0x2379 JUMP JUMPDEST SWAP5 PUSH2 0x1294 DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x12BC JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP14 DUP3 PUSH2 0x178E JUMP JUMPDEST DUP1 DUP8 DUP8 DUP8 DUP16 DUP16 DUP16 DUP7 DUP16 SWAP3 DUP2 DUP5 DUP8 DUP16 DUP16 SWAP1 DUP16 DUP6 DUP12 DUP16 SWAP3 PUSH2 0x12DE DUP4 DUP1 SWAP7 DUP2 SWAP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x12E7 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP7 PUSH2 0x12F1 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x24 DUP8 ADD MSTORE CALLDATALOAD PUSH1 0x44 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE PUSH2 0x1329 PUSH1 0x64 DUP7 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x1333 SWAP2 DUP11 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x133C SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP4 PUSH2 0x1346 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x1351 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 PUSH2 0x135B SWAP3 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x136F SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP7 PUSH2 0x137A SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1383 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP2 DUP7 PUSH2 0x1390 DUP2 DUP14 DUP13 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1399 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP5 PUSH2 0x13A3 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP6 PUSH2 0x13AF SWAP2 DUP11 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP7 SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x13CD SWAP4 SWAP2 DUP6 PUSH2 0x1B10 JUMP JUMPDEST SUB PUSH32 0x97A1625FFE5FA52EA35B6D6808A64CF13BB4AB9BDCE9643B7A97F09C8922B933 SWAP2 LOG4 DUP9 PUSH2 0x13FC DUP3 DUP14 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1407 SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12A2 JUMP JUMPDEST POP DUP4 DUP4 EQ ISZERO PUSH2 0x127B JUMP JUMPDEST POP DUP1 DUP4 EQ ISZERO PUSH2 0x1274 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH2 0x1431 CALLDATASIZE PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x1440 SWAP8 SWAP2 SWAP4 SWAP8 SWAP7 SWAP3 SWAP7 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1448 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1450 PUSH2 0x1D0E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x63F JUMPI DUP5 DUP4 EQ DUP1 ISZERO SWAP1 PUSH2 0x15D3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x15C9 JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x1477 SWAP6 SWAP2 SWAP6 PUSH2 0x2379 JUMP JUMPDEST SWAP5 PUSH2 0x1481 DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x14A9 JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP14 DUP3 PUSH2 0x178E JUMP JUMPDEST DUP8 DUP8 DUP8 DUP8 DUP16 DUP16 DUP16 DUP3 DUP9 DUP13 DUP4 DUP3 DUP15 SWAP7 DUP2 DUP16 DUP10 DUP16 DUP16 DUP5 DUP16 SWAP2 SWAP15 DUP2 SWAP16 DUP12 SWAP7 DUP4 SWAP16 PUSH2 0x14D3 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x14DC SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP9 PUSH2 0x14E6 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP6 PUSH2 0x14F1 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 PUSH2 0x14FD SWAP3 SWAP2 SWAP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 SWAP1 SWAP2 CALLDATASIZE SWAP1 PUSH2 0x150B SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 CALLDATASIZE SWAP1 PUSH2 0x1517 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 PUSH2 0x1521 SWAP4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x152B DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x1535 SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP11 PUSH2 0x1540 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1549 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP6 PUSH2 0x1554 SWAP2 DUP14 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0x155F SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP5 PUSH2 0x156B SWAP3 SWAP2 SWAP9 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP9 PUSH2 0x1587 SWAP5 DUP7 PUSH2 0x1AE1 JUMP JUMPDEST SUB PUSH32 0xA48C1B3842E6F2C3793E18D2B4FED84FC8C6D18C3687702A2B43492078551EFD SWAP2 LOG4 DUP9 PUSH2 0x15B6 DUP3 DUP14 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x15C1 SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x148F JUMP JUMPDEST POP DUP1 DUP4 EQ ISZERO PUSH2 0x1468 JUMP JUMPDEST POP DUP7 DUP4 EQ ISZERO PUSH2 0x1461 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0x1627 PUSH2 0x15FB PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 DUP1 CALLDATALOAD PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x302 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1673 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x168D JUMPI JUMPDEST POP DUP4 PUSH2 0x166C JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x302 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x302 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1724 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1746 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1768 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x302 JUMPI PUSH2 0x178A SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x17B1 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17A4 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x302 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x183B JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x182E JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x6 PUSH0 DUP2 DUP2 MSTORE SWAP2 MUL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x18D3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18BF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18B4 JUMP JUMPDEST PUSH0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x18EC DUP4 PUSH2 0x18A5 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1941 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1908 JUMPI POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1927 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1979 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1979 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19CF DUP3 PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x198D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x19ED PUSH1 0x1F NOT SWAP2 PUSH2 0x19AE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x302 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x302 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1A83 DUP3 PUSH2 0x1A5C JUMP JUMPDEST SWAP2 PUSH2 0x1A91 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x198D JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x302 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x1B0D SWAP6 SWAP4 PUSH2 0x1AFF SWAP3 DUP7 MSTORE PUSH1 0x60 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x1AC1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B0D SWAP5 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH2 0x1B6C SWAP3 SWAP5 SWAP4 DUP1 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x198D JUMP JUMPDEST JUMP JUMPDEST SWAP5 SWAP3 SWAP1 SWAP4 PUSH2 0x1B9C SWAP3 PUSH2 0x1B0D SWAP8 SWAP6 DUP8 MSTORE PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x1AC1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x1BC7 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x59F08E7D7BA1C82EDDC57AFAE67F80DF851BAF38A099607A779825038C3CE5B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C09 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH2 0x1C42 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C84 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH2 0x1CAA PUSH2 0x2379 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CD6 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x1CFF JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ PUSH2 0x1D1F JUMPI PUSH1 0x2 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT PUSH2 0x1D3B JUMPI POP POP POP JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1D73 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D68 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D5D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D54 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1D92 DUP4 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH0 PUSH1 0x20 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP6 ADD SWAP8 DUP9 MSTORE SWAP2 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP8 LT ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x6 SSTORE PUSH2 0x1DE0 DUP8 PUSH2 0x185A JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x1FBF JUMPI MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1979 JUMPI PUSH2 0x1E33 DUP3 PUSH2 0x1E2D DUP6 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP6 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F53 JUMPI DUP3 PUSH1 0x5 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0x1E87 SWAP6 SWAP4 PUSH2 0x1E6C SWAP4 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x3 DUP5 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH2 0x1EB5 DUP2 PUSH2 0x1EAF DUP5 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP5 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1EF5 JUMPI PUSH2 0x1EE6 SWAP3 SWAP4 SWAP5 SWAP6 DUP3 SWAP2 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1F3B JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1F23 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1F04 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FA7 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x5 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0x1E87 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6F JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1F63 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 SWAP4 PUSH1 0x6 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1FE8 DUP5 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 PUSH0 DUP5 MSTORE PUSH1 0xA0 DUP6 ADD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP8 LT ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x6 SSTORE PUSH2 0x2033 DUP8 PUSH2 0x185A JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x1FBF JUMPI MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1979 JUMPI PUSH2 0x2080 DUP3 PUSH2 0x1E2D DUP6 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2156 JUMPI DUP3 PUSH1 0x5 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0x20B8 SWAP6 SWAP4 PUSH2 0x1E6C SWAP4 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH2 0x20E0 DUP2 PUSH2 0x1EAF DUP5 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2111 JUMPI PUSH2 0x1EE6 SWAP3 SWAP4 SWAP5 SWAP6 DUP3 SWAP2 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x213E JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1F23 JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2120 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2191 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x5 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0x20B8 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2166 JUMP JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x22DD JUMP JUMPDEST SWAP2 DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x21E0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 SWAP3 PUSH1 0x1 SWAP2 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x22C7 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x21F9 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x279B JUMP JUMPDEST POP DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 PUSH1 0x4 DUP6 ADD SWAP2 PUSH1 0x1 DUP4 SLOAD ADD DUP1 SWAP4 SSTORE PUSH32 0x5CBE105E36805F7820E291F799D5794FF948AF2A5F664E580382DEFB63390041 PUSH0 DUP1 LOG3 PUSH1 0x7 SLOAD GT ISZERO DUP1 PUSH2 0x22B8 JUMPI JUMPDEST PUSH2 0x2261 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x226B SWAP1 DUP3 PUSH2 0x23D2 JUMP JUMPDEST ISZERO PUSH2 0x2274 JUMPI POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5F226AFD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x22B4 SWAP1 PUSH1 0x64 DUP4 ADD SWAP1 PUSH1 0x2 ADD PUSH2 0x18DD JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND ISZERO PUSH2 0x2258 JUMP JUMPDEST DUP3 PUSH4 0x47B467B9 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x6 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x2316 JUMPI POP PUSH2 0x22F3 DUP3 PUSH2 0x185A JUMP JUMPDEST POP SWAP2 PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND PUSH2 0x2304 JUMPI POP JUMP JUMPDEST PUSH4 0x93FBC709 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x75B JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x747 JUMPI SWAP1 PUSH4 0x2D713973 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH2 0x2349 DUP3 DUP3 PUSH2 0x270E JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2354 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x2375 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x259E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x23C7 JUMPI JUMPDEST ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x747 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x23DB DUP2 PUSH2 0x185A JUMP JUMPDEST POP SWAP2 PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x257F JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR DUP2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH0 SWAP1 DUP1 SLOAD SWAP1 PUSH2 0x241B DUP3 PUSH2 0x18A5 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2568 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2536 JUMPI JUMPDEST POP POP SWAP2 PUSH0 SWAP4 SWAP2 DUP2 DUP6 SWAP5 SUB SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x2531 JUMPI RETURNDATASIZE PUSH2 0x244D DUP2 PUSH2 0x1A5C JUMP JUMPDEST SWAP1 PUSH2 0x245B PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x198D JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x2521 JUMPI POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5445F318F4F5FCFB66592E68E0CC5822AA15664039BD5F0FFDE24C5A8142B1AC PUSH0 DUP1 LOG3 DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x24BE JUMPI POP POP POP PUSH1 0x4 PUSH0 SWAP2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD ISZERO PUSH2 0x1891 JUMPI PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP7 MSTORE SWAP2 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP7 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x1 SWAP3 PUSH2 0x251A SWAP2 PUSH2 0x259E JUMP JUMPDEST POP ADD PUSH2 0x24A9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2465 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2554 JUMPI POP POP DUP3 ADD DUP2 DUP4 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP9 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP4 ADD SWAP1 POP DUP2 DUP4 PUSH2 0x2430 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1891 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP2 PUSH0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP1 ISZERO ISZERO PUSH0 EQ PUSH2 0x2671 JUMPI PUSH0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x747 JUMPI DUP3 SLOAD PUSH0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x747 JUMPI DUP2 DUP2 SUB PUSH2 0x2626 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x2612 JUMPI PUSH0 NOT ADD SWAP1 PUSH2 0x25F3 DUP3 DUP3 PUSH2 0x2589 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x265C PUSH2 0x2636 PUSH2 0x2646 SWAP4 DUP7 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x2589 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x25DA JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2708 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x26D3 PUSH2 0x2379 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2708 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x2766 PUSH2 0x2379 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2708 JUMPI DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x1979 JUMPI DUP3 PUSH2 0x27D3 PUSH2 0x2646 DUP5 PUSH1 0x1 DUP1 SWAP7 ADD DUP6 SSTORE DUP5 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP INVALID 0xE2 DELEGATECALL 0xEA 0xAE BLOBBASEFEE SWAP8 MLOAD 0xE8 GAS RETURNDATACOPY BLOBBASEFEE PUSH28 0x9587827A877F29914755229B07A7B2DA98285F70A264697066735822 SLT KECCAK256 SIGNEXTEND 0x2D SWAP13 EQ PUSH30 0x6C2E67C0DF5428313F0FFB94BCBF214C3C9EA38F7CD4FE7286667B64736F PUSH13 0x634300081C00332F8788117E7E SELFDESTRUCT SAR DUP3 0xE9 0x26 0xEC PUSH26 0x4901D17C78024A50270940304540A733656F0DE2F4EAAE4A9751 0xE8 GAS RETURNDATACOPY BLOBBASEFEE PUSH28 0x9587827A877F29914755229B07A7B2DA98285F70059F08E7D7BA1C82 0xED 0xDC JUMPI 0xAF 0xAE PUSH8 0xF80DF851BAF38A09 SWAP7 SMOD 0xA7 PUSH26 0x825038C3CE5BAD3228B676F7D3CD4284A5443F17F1962B36E491 0xB3 EXP BLOCKHASH 0xB2 BLOCKHASH PC BLOBHASH 0xE5 SWAP8 0xBA PUSH0 0xB5 ","sourceMap":"1058:26210:31:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;1500:37:12;1058:26210:31;2061:21:23;1361:24:31;1058:26210;;8515:8;;;:26;;;;1058:26210;8515:45;;;;1058:26210;8511:92;;2865:31:7;;;:::i;:::-;2906:69;;1058:26210:31;8775:13;-1:-1:-1;8790:7:31;;;;;;8874:20;1361:24;;;;8909:43;1058:26210;-1:-1:-1;;;;;26689:18:31;;:::i;:::-;1058:26210;;;;;;;8909:43;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;8799:3;1058:26210;;1361:24;;;;;1058:26210;1361:24;;;;;1058:26210;1361:24;;1058:26210;;;-1:-1:-1;;;;;1058:26210:31;2865:31:7;1058:26210:31;2865:31:7;:::i;:::-;2906:69;;8799:3:31;;2232:4:5;8775:13:31;;2906:69:7;9425:50:30;1058:26210:31;-1:-1:-1;;;;;;;;;;;;1058:26210:31;;;;;-1:-1:-1;1058:26210:31;9425:50:30;:::i;:::-;;2906:69:7;;;1361:24:31;1058:26210;;;-1:-1:-1;1361:24:31;;;;;-1:-1:-1;1361:24:31;2906:69:7;-1:-1:-1;1058:26210:31;;;;;9425:50:30;;-1:-1:-1;;;;;1058:26210:31;;9425:50:30;:::i;:::-;;2906:69:7;;;8511:92:31;8569:34;;;;;-1:-1:-1;8569:34:31;;1058:26210;;;;-1:-1:-1;8569:34:31;8515:45;8545:15;;;;8515:45;;:26;8527:14;;;8515:26;;1058:26210;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;-1:-1:-1;1058:26210:31;;;;;-1:-1:-1;1058:26210:31;;;;;;;;-1:-1:-1;;1058:26210:31;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1058:26210:31;;;;;;:::o;6179:316:5:-;-1:-1:-1;;;;;1058:26210:31;;8522:1;1058:26210;;;-1:-1:-1;;;;;;;;;;;1058:26210:31;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;8522:1;1058:26210;;;-1:-1:-1;;;;;;;;;;;1058:26210:31;;;;;;;-1:-1:-1;;1058:26210:31;;;;;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:31;8522:1;-1:-1:-1;;;;;;;;;;;8522:1:31;;6370:40:5;6347:4;6424:11;:::o;6272:217::-;6466:12;8522:1:31;6466:12:5;:::o;6179:316::-;-1:-1:-1;;;;;1058:26210:31;;;;;;-1:-1:-1;;;;;;;;;;;1058:26210:31;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;-1:-1:-1;;;;;;;;;;;1058:26210:31;;;;;;;-1:-1:-1;;1058:26210:31;;;;;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;1058:26210:31;;6370:40:5;6347:4;6424:11;:::o;2206:429:12:-;1707:17;1361:24:31;-1:-1:-1;;;;;1058:26210:31;2422:10:12;1931:31;;2403:71;;2206:429;2399:230;;;1058:26210:31;;2312:8:12;1058:26210:31;2312:8:12;1058:26210:31;;;;;;;;2490:72:12:o;1058:26210:31:-;;;;;;;;;;;;2399:230:12;2422:10;2593:25;:::o;2403:71::-;2312:8;3483:2;2312:8;2437:37;;2403:71;;2336:406:30;5006:14;;;1058:26210:31;;;;;;;;;;;5006:26:30;2415:321;1058:26210:31;;;;;;;;;;;5006:14:30;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1361:24;5006:14:30;2671:11;:::o;2415:321::-;2713:12;;;1058:26210:31;2713:12:30;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5812,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_21285":{"entryPoint":5790,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":5834,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_calldatat_array_uint256_dyn_calldatat_array_bytes_calldata_dyn_calldatat_array_string_calldata_dyn_calldata":{"entryPoint":5882,"id":null,"parameterSlots":1,"returnSlots":8},"abi_decode_available_length_bytes":{"entryPoint":6775,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":6123,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_string_calldata":{"entryPoint":6928,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":6168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":6030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":6087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":6849,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_storage":{"entryPoint":6365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_bytes4_bytes_calldata_string_calldata":{"entryPoint":7022,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_uint256_bytes_calldata_string_calldata":{"entryPoint":6881,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":6597,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":6574,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":6748,"id":null,"parameterSlots":1,"returnSlots":1},"bytes_concat_bytes4_bytes_calldata":{"entryPoint":6964,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":6647,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":6683,"id":null,"parameterSlots":3,"returnSlots":2},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":7470,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6309,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":6541,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_21296":{"entryPoint":6494,"id":null,"parameterSlots":1,"returnSlots":0},"fun__revokeRole":{"entryPoint":9023,"id":1399,"parameterSlots":2,"returnSlots":1},"fun_add":{"entryPoint":10139,"id":7258,"parameterSlots":2,"returnSlots":1},"fun_assertTxPending":{"entryPoint":8925,"id":9246,"parameterSlots":1,"returnSlots":1},"fun_checkRole":{"entryPoint":7330,"id":957,"parameterSlots":1,"returnSlots":0},"fun_checkRole_21287":{"entryPoint":7103,"id":957,"parameterSlots":0,"returnSlots":0},"fun_checkRole_21295":{"entryPoint":7226,"id":957,"parameterSlots":0,"returnSlots":0},"fun_confirm":{"entryPoint":8617,"id":9328,"parameterSlots":2,"returnSlots":0},"fun_contains":{"entryPoint":null,"id":7404,"parameterSlots":2,"returnSlots":1},"fun_executeTransaction":{"entryPoint":9170,"id":9438,"parameterSlots":2,"returnSlots":1},"fun_getRoleAdmin":{"entryPoint":null,"id":992,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":9849,"id":1120,"parameterSlots":2,"returnSlots":1},"fun_msgSender":{"entryPoint":9081,"id":1607,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":7438,"id":3507,"parameterSlots":0,"returnSlots":0},"fun_remove":{"entryPoint":9630,"id":7342,"parameterSlots":2,"returnSlots":1},"fun_requireNotPaused":{"entryPoint":7411,"id":3412,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":9998,"id":1158,"parameterSlots":2,"returnSlots":1},"fun_storeTransaction":{"entryPoint":8146,"id":9203,"parameterSlots":4,"returnSlots":1},"fun_storeTransaction_21290":{"entryPoint":7549,"id":9203,"parameterSlots":3,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":6829,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":6663,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bytes4":{"entryPoint":7082,"id":null,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_bytes32_dyn":{"entryPoint":9609,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_Transaction__dyn":{"entryPoint":6234,"id":null,"parameterSlots":1,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_offset_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"1526":[{"length":32,"start":2980},{"length":32,"start":3227},{"length":32,"start":9084}]},"linkReferences":{},"object":"6080806040526004361015610069575b50361561001a575f80fd5b610022611cf3565b61002a612379565b604080513481524760208201526001600160a01b03909216917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159190a2005b5f3560e01c90816301ffc9a7146116315750806308aff933146115dd5780630f05205614611423578063205e7c061461123857806320c5429b14611155578063248a9ca3146111235780632f2ff15d146110be5780633411c81c1461107557806336568abe146110215780633f4ba83a14610fbc57806346bd084114610e8f57806346e24b0814610da157806346f0975a14610ccf578063572b6c0514610c7b5780635c975abb14610c595780636239152014610bd35780637da0a87714610b8f5780638456cb5914610b245780638f56015f14610a615780639010d07c14610a1b57806391d14854146109d35780639ace38c214610916578063a1ebf35d146108ef578063a217fddf146108d5578063a3246ad314610865578063aa787c1e14610763578063b756393014610306578063b779e1c014610691578063ba0179b51461064e578063c13138f114610391578063ca15c87314610367578063d547741f14610323578063dc8452cd146103065763ee0e6f65146101eb575f61000f565b34610302576080366003190112610302576102046116b4565b61020c61169e565b9060443591606435916001600160401b038311610302576020937f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b9336102f59361025c6102ec9636906004016117eb565b9290610266611bbf565b61026e611cf3565b610276611d0e565b61027e612379565b60405163a9059cbb60e01b8b8201526001600160a01b0385166024820152604480820188905281529096906102ca906102b860648261198d565b6102c3368886611a77565b9083611d7d565b98899560405193849360018060a01b03169860018060a01b038b169785611b10565b0390a4826121a9565b6001600355604051908152f35b5f80fd5b34610302575f366003190112610302576020600754604051908152f35b346103025760403660031901126103025761036560043561034261169e565b9061036061035b825f525f602052600160405f20015490565b611ca2565b61233f565b005b34610302576020366003190112610302576004355f526001602052602060405f2054604051908152f35b346103025760a0366003190112610302576004356001600160401b038111610302576103c19036906004016116ca565b6024356001600160401b038111610302576103e09036906004016116ca565b6044356001600160401b038111610302576103ff9036906004016116ca565b9490936064356001600160401b038111610302576104219036906004016116ca565b9290966084356001600160401b038111610302576104439036906004016116ca565b95909161044e611bbf565b610456611cf3565b61045e611d0e565b841561063f57818514801590610635575b801561062b575b8015610621575b6106125761048c979397612379565b96610496866119c5565b996001600160a01b038916955f5b8881106104c2576001600355604051806104be8f8261178e565b0390f35b8a8d8f8c8f8c8c8f928c8c8f92888c8f8f829c90838f96818f988f828f8f8f918f92849f92859c968697948f95886104fe8180999781986119f7565b61050790611baa565b9261051192611a1b565b9061051b92611b34565b94610526918c6119f7565b61052f90611a07565b9561053a918d6119f7565b359361054592611a1b565b369061055092611a77565b9161055a93611fd2565b6105648284611aad565b5261056e91611aad565b519e610579926119f7565b61058290611a07565b9961058c926119f7565b3596610597926119f7565b6105a090611baa565b996105aa92611a1b565b926105b6929196611a1b565b91604051958695600160a01b6001900316996105d29587611b6e565b037fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd1691a46105ff91611aad565b519061060a916121a9565b6001016104a4565b63512509d360e11b5f5260045ffd5b508685141561047d565b5085851415610476565b508085141561046f565b637dc57e7b60e01b5f5260045ffd5b3461030257602036600319011261030257610667611bbf565b61066f611cf3565b610677611d0e565b61068a610682612379565b6004356121a9565b6001600355005b34610302576020366003190112610302576004356006548082101561071f5750805f52600460205260405f20546106c7816119c5565b915f5b8281106106df57604051806104be8682611818565b600190825f5260046020526106f78160405f20612589565b838060a01b0391549060031b1c1661070f8287611aad565b90838060a01b03169052016106ca565b801561075b575f19810190811161074757905b632d71397360e11b5f5260045260245260445ffd5b634e487b7160e01b5f52601160045260245ffd5b505f90610732565b346103025760a03660031901126103025761077c6116b4565b602435906044356001600160e01b031981168103610302576064356001600160401b038111610302576107b39036906004016117eb565b91608435926001600160401b038411610302576020957fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd166107fb6102f59636906004016117eb565b959097610806611bbf565b61080e611cf3565b610816611d0e565b6102ec610821612379565b9761084361083088868b611b34565b61083b36848f611a77565b908886611fd2565b9a8b9760405195869560018060a01b03169a60018060a01b038d169987611b6e565b34610302576020366003190112610302576004355f52600160205260405f206040519081602082549182815201915f5260205f20905f5b8181106108bf576104be856108b38187038261198d565b60405191829182611818565b825484526020909301926001928301920161089c565b34610302575f3660031901126103025760206040515f8152f35b34610302575f3660031901126103025760206040515f5160206127e95f395f51905f528152f35b34610302576020366003190112610302576004356006548110156103025761093d9061185a565b5060018060a01b038154166104be60018301549260056040519161096f8361096881600285016118dd565b038461198d565b6109b960ff6003830154169361099b60048401549361099460405180978193016118dd565b038561198d565b6040519788978852602088015260c0604088015260c08701906117c7565b9215156060860152608085015283820360a08501526117c7565b34610302576040366003190112610302576109ec61169e565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004355f5260016020526020610a4860405f2060243590612589565b905460405160039290921b1c6001600160a01b03168152f35b3461030257602036600319011261030257600435610a7d611c3a565b5f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df85481158015610b1b575b610b05575060078190557f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b03610afa612379565b1692604051908152a2005b906306a0ee3160e31b5f5260045260245260445ffd5b50808211610abd565b34610302575f36600319011261030257610b3c611c3a565b610b44611cf3565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020610b7c612379565b6040516001600160a01b039091168152a1005b34610302575f366003190112610302576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610302576020366003190112610302576004356001600160401b03811161030257610c039036906004016116ca565b90610c0c611bbf565b610c14611cf3565b610c1c611d0e565b811561063f57610c2a612379565b905f5b838110610c3b576001600355005b80610c5384610c4d60019488876119f7565b356121a9565b01610c2d565b34610302575f36600319011261030257602060ff600254166040519015158152f35b34610302576020366003190112610302576020610c966116b4565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610302575f366003190112610302575f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df854610d1f816119c5565b905f5b818110610d3757604051806104be8582611818565b5f5160206127e95f395f51905f525f526001602081905290610d79817fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df8612589565b838060a01b0391549060031b1c16610d918286611aad565b90838060a01b0316905201610d22565b3461030257608036600319011261030257610dba6116b4565b6024356044356001600160401b03811161030257610ddc9036906004016117eb565b92606435916001600160401b038311610302576020947fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd94610e256102f59536906004016117eb565b969092610e30611bbf565b610e38611cf3565b610e40611d0e565b610e48612379565b956102ec610e6d610e5a36858a611a77565b610e65368d8a611a77565b908785611fd2565b998a9660405194859460018060a01b03169960018060a01b038c169886611ae1565b3461030257602036600319011261030257600435606060a0604051610eb38161195e565b5f81525f60208201528260408201525f838201525f608082015201526006548082101561071f57610ee38261185a565b50604051610ef08161195e565b81546001600160a01b0316815260018201546020820190815260405190926104be9190600590610f278361096881600285016118dd565b60408501928352610f9b60ff60038301541693606087019415158552610f636004840154936080890194855261099460405180978193016118dd565b60a087019384526040519788976020895260018060a01b0390511660208901525160408801525160c0606088015260e08701906117c7565b9251151560808601525160a085015251838203601f190160c08501526117c7565b34610302575f36600319011261030257610fd4611c3a565b60025460ff8116156110125760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020610b7c612379565b638dfc202b60e01b5f5260045ffd5b346103025760403660031901126103025761103a61169e565b6001600160a01b0361104a612379565b166001600160a01b03821603611066576103659060043561233f565b63334bd91960e11b5f5260045ffd5b346103025760403660031901126103025761108e61169e565b6004355f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004356110da61169e565b6110f261035b835f525f602052600160405f20015490565b6110fc8183612679565b61110257005b5f91825260016020526040909120610365916001600160a01b03169061279b565b3461030257602036600319011261030257602061114d6004355f525f602052600160405f20015490565b604051908152f35b3461030257602036600319011261030257600435611171611bbf565b611179611cf3565b611182816122dd565b61118a612379565b90825f5260046020526111b860405f209260018060a01b031680936001915f520160205260405f2054151590565b1561122157600490835f52816020526111d48360405f2061259e565b50835f52600560205260405f20835f5260205260405f2060ff198154169055015f1981540190557ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd555f80a3005b509063b29436e960e01b5f5260045260245260445ffd5b3461030257611246366116fa565b9296909591611253611bbf565b61125b611cf3565b611263611d0e565b821561063f57848314801590611419575b801561140f575b6106125761128a959195612379565b94611294846119c5565b976001600160a01b038716935f5b8681106112bc576001600355604051806104be8d8261178e565b808787878f8f8f868f928184878f8f908f858b8f926112de83809681936119f7565b6112e790611a07565b966112f1926119f7565b60405163a9059cbb60e01b60208201526001600160a01b0396909616602487015235604480870191909152855261132960648661198d565b611333918a6119f7565b61133c90611a07565b9361134692611a1b565b369061135192611a77565b9061135b92611d7d565b6113658284611aad565b5261136f91611aad565b519661137a926119f7565b61138390611a07565b9186611390818d8c6119f7565b61139990611a07565b946113a3926119f7565b35956113af918a611a1b565b6040516001600160a01b0390931696929384936113cd939185611b10565b037f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b93391a4886113fc828d611aad565b5190611407916121a9565b6001016112a2565b508383141561127b565b5080831415611274565b3461030257611431366116fa565b61144097919397969296611bbf565b611448611cf3565b611450611d0e565b821561063f578483148015906115d3575b80156115c9575b61061257611477959195612379565b94611481846119c5565b976001600160a01b038716935f5b8681106114a9576001600355604051806104be8d8261178e565b878787878f8f8f82888c83828e96818f898f8f848f919e819f8b96839f6114d385809481936119f7565b6114dc90611a07565b986114e6926119f7565b35956114f192611a1b565b926114fd929194611a1b565b929091369061150b92611a77565b91369061151792611a77565b9161152193611fd2565b61152b8284611aad565b5261153591611aad565b519a611540926119f7565b61154990611a07565b95611554918d6119f7565b359361155f92611a1b565b9461156b929198611a1b565b90604051948594600160a01b6001900316986115879486611ae1565b037fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd91a4886115b6828d611aad565b51906115c1916121a9565b60010161148f565b5080831415611468565b5086831415611461565b346103025760403660031901126103025760206116276115fb61169e565b600480355f90815290845260408082206001600160a01b03909316825260019092016020522054151590565b6040519015158152f35b34610302576020366003190112610302576004359063ffffffff60e01b821680920361030257602091635a05180f60e01b8114908115611673575b5015158152f35b637965db0b60e01b81149150811561168d575b508361166c565b6301ffc9a760e01b14905083611686565b602435906001600160a01b038216820361030257565b600435906001600160a01b038216820361030257565b9181601f84011215610302578235916001600160401b038311610302576020808501948460051b01011161030257565b6080600319820112610302576004356001600160401b0381116103025781611724916004016116ca565b929092916024356001600160401b0381116103025781611746916004016116ca565b929092916044356001600160401b0381116103025781611768916004016116ca565b92909291606435906001600160401b0382116103025761178a916004016116ca565b9091565b60206040818301928281528451809452019201905f5b8181106117b15750505090565b82518452602093840193909201916001016117a4565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610302578235916001600160401b038311610302576020838186019501011161030257565b60206040818301928281528451809452019201905f5b81811061183b5750505090565b82516001600160a01b031684526020938401939092019160010161182e565b6006548110156118915760065f81815291027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0191565b634e487b7160e01b5f52603260045260245ffd5b90600182811c921680156118d3575b60208310146118bf57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916118b4565b5f92918154916118ec836118a5565b8083529260018116908115611941575060011461190857505050565b5f9081526020812093945091925b838310611927575060209250010190565b600181602092949394548385870101520191019190611916565b915050602093945060ff929192191683830152151560051b010190565b60c081019081106001600160401b0382111761197957604052565b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761197957604052565b6001600160401b0381116119795760051b60200190565b906119cf826119ae565b6119dc604051918261198d565b82815280926119ed601f19916119ae565b0190602036910137565b91908110156118915760051b0190565b356001600160a01b03811681036103025790565b91908110156118915760051b81013590601e19813603018212156103025701908135916001600160401b038311610302576020018236038113610302579190565b6001600160401b03811161197957601f01601f191660200190565b929192611a8382611a5c565b91611a91604051938461198d565b829481845281830111610302578281602093845f960137010152565b80518210156118915760209160051b010190565b908060209392818452848401375f828201840152601f01601f1916010190565b9391611b0d9593611aff928652606060208701526060860191611ac1565b926040818503910152611ac1565b90565b611b0d949260609260018060a01b0316825260208201528160408201520191611ac1565b602490611b6c9294938060405196879363ffffffff60e01b1660208501528484013781015f838201520301601f19810184528361198d565b565b94929093611b9c92611b0d9795875263ffffffff60e01b166020870152608060408701526080860191611ac1565b926060818503910152611ac1565b356001600160e01b0319811681036103025790565b611bc7612379565b6001600160a01b0381165f9081527f059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5b602052604090205460ff1615611c095750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004525f5160206127e95f395f51905f52602452604490fd5b611c42612379565b6001600160a01b0381165f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1615611c845750565b63e2517d3f60e01b5f5260018060a01b03166004525f60245260445ffd5b611caa612379565b5f828152602081815260408083206001600160a01b038516845290915290205460ff1615611cd6575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b60ff60025416611cff57565b63d93c066560e01b5f5260045ffd5b600260035414611d1f576002600355565b633ee5aeb560e01b5f5260045ffd5b601f8211611d3b57505050565b5f5260205f20906020601f840160051c83019310611d73575b601f0160051c01905b818110611d68575050565b5f8155600101611d5d565b9091508190611d54565b929091926006549260405191611d928361195e565b6001600160a01b031682525f6020830181815260408401928352606084018281526080850192835260a08501978852919290600160401b8710156119795760018701600655611de08761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b03821161197957611e3382611e2d85546118a5565b85611d2e565b602090601f8311600114611f535782600597969593611e879593611e6c935f92611eea575b50508160011b915f199060031b1c19161790565b90555b511515600384019060ff801983541691151516179055565b5160048201550192519283516001600160401b03811161197957611eb581611eaf84546118a5565b84611d2e565b602094601f8211600114611ef557611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b9055565b015190505f80611e58565b601f19821695835f52805f20915f5b888110611f3b57508360019596979810611f23575b505050811b019055565b01515f1960f88460031b161c191690555f8080611f19565b91926020600181928685015181550194019201611f04565b90601f19831691845f52815f20925f5b818110611fa7575092600192859260059a999896611e87989610611f8f575b505050811b019055611e6f565b01515f1960f88460031b161c191690555f8080611f82565b92936020600181928786015181550195019301611f63565b634e487b7160e01b5f525f60045260245ffd5b90939192936006549360405192611fe88461195e565b60018060a01b03168352602083019182526040830190815260608301905f825260808401925f845260a08501978852600160401b87101561197957600187016006556120338761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b0382116119795761208082611e2d85546118a5565b602090601f831160011461215657826005979695936120b89593611e6c935f92611eea5750508160011b915f199060031b1c19161790565b5160048201550192519283516001600160401b038111611979576120e081611eaf84546118a5565b602094601f821160011461211157611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b601f19821695835f52805f20915f5b88811061213e57508360019596979810611f2357505050811b019055565b91926020600181928685015181550194019201612120565b90601f19831691845f52815f20925f5b818110612191575092600192859260059a9998966120b8989610611f8f57505050811b019055611e6f565b92936020600181928786015181550195019301612166565b6121b2816122dd565b91815f52600460205260405f206121e060018060a01b03831680926001915f520160205260405f2054151590565b6122c757825f5260046020526121f98160405f2061279b565b50825f52600560205260405f20815f5260205260405f20600160ff1982541617905582600485019160018354018093557f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb633900415f80a36007541115806122b8575b61226157505050565b61226b90826123d2565b15612274575050565b8154604051635f226afd60e11b815260048101929092526001600160a01b03166024820152606060448201529081906122b49060648301906002016118dd565b0390fd5b5060ff60038401541615612258565b826347b467b960e11b5f5260045260245260445ffd5b906006548083101561231657506122f38261185a565b509160ff6003840154166123045750565b6393fbc70960e01b5f5260045260245ffd5b9050801561075b575f1981019081116107475790632d71397360e11b5f5260045260245260445ffd5b612349828261270e565b918261235457505090565b5f91825260016020526040909120612375916001600160a01b03169061259e565b5090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806123c7575b156123c3576013193601368111610747573560601c90565b3390565b5060143610156123ab565b6123db8161185a565b509160038301805460ff811661257f5760019060ff191617815560018060a01b0384541660018501546002860190604051915f9080549061241b826118a5565b91600181169081156125685750600114612536575b5050915f939181859403925af13d15612531573d61244d81611a5c565b9061245b604051928361198d565b81525f60203d92013e5b15612521575081906001600160a01b03167f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac5f80a3805f52600460205260405f20545f5b8181106124be5750505060045f910155600190565b825f52600460205260405f2090815415611891575f9182526020808320548584526005825260408085206001600160a01b03909216808652918352808520805460ff191690558685526004909252922060019261251a9161259e565b50016124a9565b805460ff19169055505f92915050565b612465565b9091505f5260205f205f905b82821061255457505082018183612430565b600181602092548488015201910190612542565b60ff19168652505080151502830190508183612430565b5050505050600190565b8054821015611891575f5260205f2001905f90565b906001820191815f528260205260405f20548015155f14612671575f1981018181116107475782545f1981019190821161074757818103612626575b50505080548015612612575f1901906125f38282612589565b8154905f199060031b1b19169055555f526020525f6040812055600190565b634e487b7160e01b5f52603160045260245ffd5b61265c6126366126469386612589565b90549060031b1c92839286612589565b819391549060031b91821b915f19901b19161790565b90555f528360205260405f20555f80806125da565b505050505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff191660011790556126d3612379565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff19169055612766612379565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b5f82815260018201602052604090205461270857805490600160401b82101561197957826127d3612646846001809601855584612589565b90558054925f520160205260405f205560019056fee2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70a26469706673582212200b2d9c147d6c2e67c0df5428313f0ffb94bcbf214c3c9ea38f7cd4fe7286667b64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x69 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x22 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x2A PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE SELFBALANCE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 SWAP1 LOG2 STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1631 JUMPI POP DUP1 PUSH4 0x8AFF933 EQ PUSH2 0x15DD JUMPI DUP1 PUSH4 0xF052056 EQ PUSH2 0x1423 JUMPI DUP1 PUSH4 0x205E7C06 EQ PUSH2 0x1238 JUMPI DUP1 PUSH4 0x20C5429B EQ PUSH2 0x1155 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1123 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x10BE JUMPI DUP1 PUSH4 0x3411C81C EQ PUSH2 0x1075 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1021 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xFBC JUMPI DUP1 PUSH4 0x46BD0841 EQ PUSH2 0xE8F JUMPI DUP1 PUSH4 0x46E24B08 EQ PUSH2 0xDA1 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0xCCF JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0xC7B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC59 JUMPI DUP1 PUSH4 0x62391520 EQ PUSH2 0xBD3 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0xB8F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB24 JUMPI DUP1 PUSH4 0x8F56015F EQ PUSH2 0xA61 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xA1B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x9D3 JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0xA1EBF35D EQ PUSH2 0x8EF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0xAA787C1E EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xB7563930 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xB779E1C0 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xBA0179B5 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xC13138F1 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x306 JUMPI PUSH4 0xEE0E6F65 EQ PUSH2 0x1EB JUMPI PUSH0 PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x204 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x169E JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP4 PUSH32 0x97A1625FFE5FA52EA35B6D6808A64CF13BB4AB9BDCE9643B7A97F09C8922B933 PUSH2 0x2F5 SWAP4 PUSH2 0x25C PUSH2 0x2EC SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x266 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x26E PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP12 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP1 SWAP7 SWAP1 PUSH2 0x2CA SWAP1 PUSH2 0x2B8 PUSH1 0x64 DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x2C3 CALLDATASIZE DUP9 DUP7 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x1D7D JUMP JUMPDEST SWAP9 DUP10 SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP8 DUP6 PUSH2 0x1B10 JUMP JUMPDEST SUB SWAP1 LOG4 DUP3 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x365 PUSH1 0x4 CALLDATALOAD PUSH2 0x342 PUSH2 0x169E JUMP JUMPDEST SWAP1 PUSH2 0x360 PUSH2 0x35B DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3C1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3E0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3FF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP5 SWAP1 SWAP4 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x421 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP7 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x443 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP6 SWAP1 SWAP2 PUSH2 0x44E PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x456 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x45E PUSH2 0x1D0E JUMP JUMPDEST DUP5 ISZERO PUSH2 0x63F JUMPI DUP2 DUP6 EQ DUP1 ISZERO SWAP1 PUSH2 0x635 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x62B JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x621 JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x48C SWAP8 SWAP4 SWAP8 PUSH2 0x2379 JUMP JUMPDEST SWAP7 PUSH2 0x496 DUP7 PUSH2 0x19C5 JUMP JUMPDEST SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP6 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x4C2 JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP16 DUP3 PUSH2 0x178E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP11 DUP14 DUP16 DUP13 DUP16 DUP13 DUP13 DUP16 SWAP3 DUP13 DUP13 DUP16 SWAP3 DUP9 DUP13 DUP16 DUP16 DUP3 SWAP13 SWAP1 DUP4 DUP16 SWAP7 DUP2 DUP16 SWAP9 DUP16 DUP3 DUP16 DUP16 DUP16 SWAP2 DUP16 SWAP3 DUP5 SWAP16 SWAP3 DUP6 SWAP13 SWAP7 DUP7 SWAP8 SWAP5 DUP16 SWAP6 DUP9 PUSH2 0x4FE DUP2 DUP1 SWAP10 SWAP8 DUP2 SWAP9 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x507 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST SWAP3 PUSH2 0x511 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 PUSH2 0x51B SWAP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP5 PUSH2 0x526 SWAP2 DUP13 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x52F SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP6 PUSH2 0x53A SWAP2 DUP14 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0x545 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x550 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 PUSH2 0x55A SWAP4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x564 DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x56E SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP15 PUSH2 0x579 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x582 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP10 PUSH2 0x58C SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP7 PUSH2 0x597 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x5A0 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST SWAP10 PUSH2 0x5AA SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 PUSH2 0x5B6 SWAP3 SWAP2 SWAP7 PUSH2 0x1A1B JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP10 PUSH2 0x5D2 SWAP6 DUP8 PUSH2 0x1B6E JUMP JUMPDEST SUB PUSH32 0xD1048E3510DFDA1FAA9BDE9BCF936DC0C15B5BB24C1F9B7D795959FB476ECD16 SWAP2 LOG4 PUSH2 0x5FF SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x60A SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4A4 JUMP JUMPDEST PUSH4 0x512509D3 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP DUP7 DUP6 EQ ISZERO PUSH2 0x47D JUMP JUMPDEST POP DUP6 DUP6 EQ ISZERO PUSH2 0x476 JUMP JUMPDEST POP DUP1 DUP6 EQ ISZERO PUSH2 0x46F JUMP JUMPDEST PUSH4 0x7DC57E7B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x667 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x66F PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x677 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x68A PUSH2 0x682 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x71F JUMPI POP DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x6C7 DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP7 DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x6F7 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x2589 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x70F DUP3 DUP8 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE ADD PUSH2 0x6CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75B JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x747 JUMPI SWAP1 JUMPDEST PUSH4 0x2D713973 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 SWAP1 PUSH2 0x732 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x77C PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x7B3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP6 PUSH32 0xD1048E3510DFDA1FAA9BDE9BCF936DC0C15B5BB24C1F9B7D795959FB476ECD16 PUSH2 0x7FB PUSH2 0x2F5 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP6 SWAP1 SWAP8 PUSH2 0x806 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x80E PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x816 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x821 PUSH2 0x2379 JUMP JUMPDEST SWAP8 PUSH2 0x843 PUSH2 0x830 DUP9 DUP7 DUP12 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x83B CALLDATASIZE DUP5 DUP16 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP9 DUP7 PUSH2 0x1FD2 JUMP JUMPDEST SWAP11 DUP12 SWAP8 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP10 DUP8 PUSH2 0x1B6E JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x4BE DUP6 PUSH2 0x8B3 DUP2 DUP8 SUB DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1818 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x89C JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH2 0x93D SWAP1 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH2 0x4BE PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x96F DUP4 PUSH2 0x968 DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x18DD JUMP JUMPDEST SUB DUP5 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP4 PUSH2 0x99B PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST SUB DUP6 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x17C7 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x9EC PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0xA48 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA7D PUSH2 0x1C3A JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 SLOAD DUP2 ISZERO DUP1 ISZERO PUSH2 0xB1B JUMPI JUMPDEST PUSH2 0xB05 JUMPI POP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH32 0x9E0800728E995CA040F68D19B1BCC1B4AE0420ED8190FABB5FA564E2961EB7D5 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAFA PUSH2 0x2379 JUMP JUMPDEST AND SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST SWAP1 PUSH4 0x6A0EE31 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST POP DUP1 DUP3 GT PUSH2 0xABD JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xB3C PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0xB44 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH2 0xB7C PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0xC03 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP1 PUSH2 0xC0C PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xC14 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xC1C PUSH2 0x1D0E JUMP JUMPDEST DUP2 ISZERO PUSH2 0x63F JUMPI PUSH2 0xC2A PUSH2 0x2379 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xC3B JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE STOP JUMPDEST DUP1 PUSH2 0xC53 DUP5 PUSH2 0xC4D PUSH1 0x1 SWAP5 DUP9 DUP8 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD PUSH2 0x21A9 JUMP JUMPDEST ADD PUSH2 0xC2D JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0xC96 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 SLOAD PUSH2 0xD1F DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP6 DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 PUSH2 0xD79 DUP2 PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 PUSH2 0x2589 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0xD91 DUP3 DUP7 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE ADD PUSH2 0xD22 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xDBA PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0xDDC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP5 PUSH32 0xA48C1B3842E6F2C3793E18D2B4FED84FC8C6D18C3687702A2B43492078551EFD SWAP5 PUSH2 0xE25 PUSH2 0x2F5 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP7 SWAP1 SWAP3 PUSH2 0xE30 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xE38 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xE40 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0xE48 PUSH2 0x2379 JUMP JUMPDEST SWAP6 PUSH2 0x2EC PUSH2 0xE6D PUSH2 0xE5A CALLDATASIZE DUP6 DUP11 PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0xE65 CALLDATASIZE DUP14 DUP11 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP8 DUP6 PUSH2 0x1FD2 JUMP JUMPDEST SWAP10 DUP11 SWAP7 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP9 DUP7 PUSH2 0x1AE1 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0xEB3 DUP2 PUSH2 0x195E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 DUP4 DUP3 ADD MSTORE PUSH0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x6 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x71F JUMPI PUSH2 0xEE3 DUP3 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEF0 DUP2 PUSH2 0x195E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 SWAP3 PUSH2 0x4BE SWAP2 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0xF27 DUP4 PUSH2 0x968 DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP3 DUP4 MSTORE PUSH2 0xF9B PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x60 DUP8 ADD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH2 0xF63 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP10 ADD SWAP5 DUP6 MSTORE PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0x20 DUP10 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x20 DUP10 ADD MSTORE MLOAD PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP3 MLOAD ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x17C7 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xFD4 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1012 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH2 0xB7C PUSH2 0x2379 JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x103A PUSH2 0x169E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x104A PUSH2 0x2379 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1066 JUMPI PUSH2 0x365 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x233F JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x108E PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10DA PUSH2 0x169E JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x35B DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10FC DUP2 DUP4 PUSH2 0x2679 JUMP JUMPDEST PUSH2 0x1102 JUMPI STOP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x365 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x279B JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0x114D PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1171 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1179 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1182 DUP2 PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x118A PUSH2 0x2379 JUMP JUMPDEST SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x11B8 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 SWAP4 PUSH1 0x1 SWAP2 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1221 JUMPI PUSH1 0x4 SWAP1 DUP4 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH2 0x11D4 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x259E JUMP JUMPDEST POP DUP4 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH32 0xF0DCA620E2E81F7841D07BCC105E1704FB01475B278A9D4C236E1C62945EDD55 PUSH0 DUP1 LOG3 STOP JUMPDEST POP SWAP1 PUSH4 0xB29436E9 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH2 0x1246 CALLDATASIZE PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP7 SWAP1 SWAP6 SWAP2 PUSH2 0x1253 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x125B PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1263 PUSH2 0x1D0E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x63F JUMPI DUP5 DUP4 EQ DUP1 ISZERO SWAP1 PUSH2 0x1419 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x140F JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x128A SWAP6 SWAP2 SWAP6 PUSH2 0x2379 JUMP JUMPDEST SWAP5 PUSH2 0x1294 DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x12BC JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP14 DUP3 PUSH2 0x178E JUMP JUMPDEST DUP1 DUP8 DUP8 DUP8 DUP16 DUP16 DUP16 DUP7 DUP16 SWAP3 DUP2 DUP5 DUP8 DUP16 DUP16 SWAP1 DUP16 DUP6 DUP12 DUP16 SWAP3 PUSH2 0x12DE DUP4 DUP1 SWAP7 DUP2 SWAP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x12E7 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP7 PUSH2 0x12F1 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x24 DUP8 ADD MSTORE CALLDATALOAD PUSH1 0x44 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE PUSH2 0x1329 PUSH1 0x64 DUP7 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x1333 SWAP2 DUP11 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x133C SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP4 PUSH2 0x1346 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x1351 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 PUSH2 0x135B SWAP3 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x136F SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP7 PUSH2 0x137A SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1383 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP2 DUP7 PUSH2 0x1390 DUP2 DUP14 DUP13 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1399 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP5 PUSH2 0x13A3 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP6 PUSH2 0x13AF SWAP2 DUP11 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP7 SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x13CD SWAP4 SWAP2 DUP6 PUSH2 0x1B10 JUMP JUMPDEST SUB PUSH32 0x97A1625FFE5FA52EA35B6D6808A64CF13BB4AB9BDCE9643B7A97F09C8922B933 SWAP2 LOG4 DUP9 PUSH2 0x13FC DUP3 DUP14 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1407 SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12A2 JUMP JUMPDEST POP DUP4 DUP4 EQ ISZERO PUSH2 0x127B JUMP JUMPDEST POP DUP1 DUP4 EQ ISZERO PUSH2 0x1274 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH2 0x1431 CALLDATASIZE PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x1440 SWAP8 SWAP2 SWAP4 SWAP8 SWAP7 SWAP3 SWAP7 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1448 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1450 PUSH2 0x1D0E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x63F JUMPI DUP5 DUP4 EQ DUP1 ISZERO SWAP1 PUSH2 0x15D3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x15C9 JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x1477 SWAP6 SWAP2 SWAP6 PUSH2 0x2379 JUMP JUMPDEST SWAP5 PUSH2 0x1481 DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x14A9 JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP14 DUP3 PUSH2 0x178E JUMP JUMPDEST DUP8 DUP8 DUP8 DUP8 DUP16 DUP16 DUP16 DUP3 DUP9 DUP13 DUP4 DUP3 DUP15 SWAP7 DUP2 DUP16 DUP10 DUP16 DUP16 DUP5 DUP16 SWAP2 SWAP15 DUP2 SWAP16 DUP12 SWAP7 DUP4 SWAP16 PUSH2 0x14D3 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x14DC SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP9 PUSH2 0x14E6 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP6 PUSH2 0x14F1 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 PUSH2 0x14FD SWAP3 SWAP2 SWAP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 SWAP1 SWAP2 CALLDATASIZE SWAP1 PUSH2 0x150B SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 CALLDATASIZE SWAP1 PUSH2 0x1517 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 PUSH2 0x1521 SWAP4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x152B DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x1535 SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP11 PUSH2 0x1540 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1549 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP6 PUSH2 0x1554 SWAP2 DUP14 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0x155F SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP5 PUSH2 0x156B SWAP3 SWAP2 SWAP9 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP9 PUSH2 0x1587 SWAP5 DUP7 PUSH2 0x1AE1 JUMP JUMPDEST SUB PUSH32 0xA48C1B3842E6F2C3793E18D2B4FED84FC8C6D18C3687702A2B43492078551EFD SWAP2 LOG4 DUP9 PUSH2 0x15B6 DUP3 DUP14 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x15C1 SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x148F JUMP JUMPDEST POP DUP1 DUP4 EQ ISZERO PUSH2 0x1468 JUMP JUMPDEST POP DUP7 DUP4 EQ ISZERO PUSH2 0x1461 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0x1627 PUSH2 0x15FB PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 DUP1 CALLDATALOAD PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x302 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1673 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x168D JUMPI JUMPDEST POP DUP4 PUSH2 0x166C JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x302 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x302 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1724 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1746 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1768 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x302 JUMPI PUSH2 0x178A SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x17B1 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17A4 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x302 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x183B JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x182E JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x6 PUSH0 DUP2 DUP2 MSTORE SWAP2 MUL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x18D3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18BF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18B4 JUMP JUMPDEST PUSH0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x18EC DUP4 PUSH2 0x18A5 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1941 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1908 JUMPI POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1927 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1979 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1979 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19CF DUP3 PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x198D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x19ED PUSH1 0x1F NOT SWAP2 PUSH2 0x19AE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x302 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x302 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1A83 DUP3 PUSH2 0x1A5C JUMP JUMPDEST SWAP2 PUSH2 0x1A91 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x198D JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x302 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x1B0D SWAP6 SWAP4 PUSH2 0x1AFF SWAP3 DUP7 MSTORE PUSH1 0x60 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x1AC1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B0D SWAP5 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH2 0x1B6C SWAP3 SWAP5 SWAP4 DUP1 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x198D JUMP JUMPDEST JUMP JUMPDEST SWAP5 SWAP3 SWAP1 SWAP4 PUSH2 0x1B9C SWAP3 PUSH2 0x1B0D SWAP8 SWAP6 DUP8 MSTORE PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x1AC1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x1BC7 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x59F08E7D7BA1C82EDDC57AFAE67F80DF851BAF38A099607A779825038C3CE5B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C09 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH2 0x1C42 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C84 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH2 0x1CAA PUSH2 0x2379 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CD6 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x1CFF JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ PUSH2 0x1D1F JUMPI PUSH1 0x2 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT PUSH2 0x1D3B JUMPI POP POP POP JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1D73 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D68 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D5D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D54 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1D92 DUP4 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH0 PUSH1 0x20 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP6 ADD SWAP8 DUP9 MSTORE SWAP2 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP8 LT ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x6 SSTORE PUSH2 0x1DE0 DUP8 PUSH2 0x185A JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x1FBF JUMPI MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1979 JUMPI PUSH2 0x1E33 DUP3 PUSH2 0x1E2D DUP6 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP6 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F53 JUMPI DUP3 PUSH1 0x5 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0x1E87 SWAP6 SWAP4 PUSH2 0x1E6C SWAP4 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x3 DUP5 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH2 0x1EB5 DUP2 PUSH2 0x1EAF DUP5 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP5 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1EF5 JUMPI PUSH2 0x1EE6 SWAP3 SWAP4 SWAP5 SWAP6 DUP3 SWAP2 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1F3B JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1F23 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1F04 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FA7 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x5 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0x1E87 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6F JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1F63 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 SWAP4 PUSH1 0x6 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1FE8 DUP5 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 PUSH0 DUP5 MSTORE PUSH1 0xA0 DUP6 ADD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP8 LT ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x6 SSTORE PUSH2 0x2033 DUP8 PUSH2 0x185A JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x1FBF JUMPI MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1979 JUMPI PUSH2 0x2080 DUP3 PUSH2 0x1E2D DUP6 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2156 JUMPI DUP3 PUSH1 0x5 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0x20B8 SWAP6 SWAP4 PUSH2 0x1E6C SWAP4 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH2 0x20E0 DUP2 PUSH2 0x1EAF DUP5 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2111 JUMPI PUSH2 0x1EE6 SWAP3 SWAP4 SWAP5 SWAP6 DUP3 SWAP2 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x213E JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1F23 JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2120 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2191 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x5 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0x20B8 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2166 JUMP JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x22DD JUMP JUMPDEST SWAP2 DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x21E0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 SWAP3 PUSH1 0x1 SWAP2 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x22C7 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x21F9 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x279B JUMP JUMPDEST POP DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 PUSH1 0x4 DUP6 ADD SWAP2 PUSH1 0x1 DUP4 SLOAD ADD DUP1 SWAP4 SSTORE PUSH32 0x5CBE105E36805F7820E291F799D5794FF948AF2A5F664E580382DEFB63390041 PUSH0 DUP1 LOG3 PUSH1 0x7 SLOAD GT ISZERO DUP1 PUSH2 0x22B8 JUMPI JUMPDEST PUSH2 0x2261 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x226B SWAP1 DUP3 PUSH2 0x23D2 JUMP JUMPDEST ISZERO PUSH2 0x2274 JUMPI POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5F226AFD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x22B4 SWAP1 PUSH1 0x64 DUP4 ADD SWAP1 PUSH1 0x2 ADD PUSH2 0x18DD JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND ISZERO PUSH2 0x2258 JUMP JUMPDEST DUP3 PUSH4 0x47B467B9 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x6 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x2316 JUMPI POP PUSH2 0x22F3 DUP3 PUSH2 0x185A JUMP JUMPDEST POP SWAP2 PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND PUSH2 0x2304 JUMPI POP JUMP JUMPDEST PUSH4 0x93FBC709 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x75B JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x747 JUMPI SWAP1 PUSH4 0x2D713973 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH2 0x2349 DUP3 DUP3 PUSH2 0x270E JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2354 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x2375 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x259E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x23C7 JUMPI JUMPDEST ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x747 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x23DB DUP2 PUSH2 0x185A JUMP JUMPDEST POP SWAP2 PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x257F JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR DUP2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH0 SWAP1 DUP1 SLOAD SWAP1 PUSH2 0x241B DUP3 PUSH2 0x18A5 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2568 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2536 JUMPI JUMPDEST POP POP SWAP2 PUSH0 SWAP4 SWAP2 DUP2 DUP6 SWAP5 SUB SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x2531 JUMPI RETURNDATASIZE PUSH2 0x244D DUP2 PUSH2 0x1A5C JUMP JUMPDEST SWAP1 PUSH2 0x245B PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x198D JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x2521 JUMPI POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5445F318F4F5FCFB66592E68E0CC5822AA15664039BD5F0FFDE24C5A8142B1AC PUSH0 DUP1 LOG3 DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x24BE JUMPI POP POP POP PUSH1 0x4 PUSH0 SWAP2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD ISZERO PUSH2 0x1891 JUMPI PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP7 MSTORE SWAP2 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP7 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x1 SWAP3 PUSH2 0x251A SWAP2 PUSH2 0x259E JUMP JUMPDEST POP ADD PUSH2 0x24A9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2465 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2554 JUMPI POP POP DUP3 ADD DUP2 DUP4 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP9 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP4 ADD SWAP1 POP DUP2 DUP4 PUSH2 0x2430 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1891 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP2 PUSH0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP1 ISZERO ISZERO PUSH0 EQ PUSH2 0x2671 JUMPI PUSH0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x747 JUMPI DUP3 SLOAD PUSH0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x747 JUMPI DUP2 DUP2 SUB PUSH2 0x2626 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x2612 JUMPI PUSH0 NOT ADD SWAP1 PUSH2 0x25F3 DUP3 DUP3 PUSH2 0x2589 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x265C PUSH2 0x2636 PUSH2 0x2646 SWAP4 DUP7 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x2589 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x25DA JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2708 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x26D3 PUSH2 0x2379 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2708 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x2766 PUSH2 0x2379 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2708 JUMPI DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x1979 JUMPI DUP3 PUSH2 0x27D3 PUSH2 0x2646 DUP5 PUSH1 0x1 DUP1 SWAP7 ADD DUP6 SSTORE DUP5 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP INVALID 0xE2 DELEGATECALL 0xEA 0xAE BLOBBASEFEE SWAP8 MLOAD 0xE8 GAS RETURNDATACOPY BLOBBASEFEE PUSH28 0x9587827A877F29914755229B07A7B2DA98285F70A264697066735822 SLT KECCAK256 SIGNEXTEND 0x2D SWAP13 EQ PUSH30 0x6C2E67C0DF5428313F0FFB94BCBF214C3C9EA38F7CD4FE7286667B64736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"1058:26210:31:-:0;;;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;;;;1315:72:22;;:::i;:::-;26689:18:31;;:::i;:::-;1058:26210;;;9150:9;1058:26210;;9161:21;1058:26210;;;;-1:-1:-1;;;;;1058:26210:31;;;;9128:55;;1058:26210;9128:55;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;13617:75;13770:6;1058:26210;;13617:75;1058:26210;;;;;;:::i;:::-;2475:4:5;;;;:::i;:::-;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;26689:18:31;;:::i;:::-;1058:26210;;-1:-1:-1;;;13455:60:31;;;;-1:-1:-1;;;;;1058:26210:31;;;13455:60;;1058:26210;;;;;;;;13455:60;;1058:26210;;;13535:42;;13455:60;1058:26210;;13455:60;:::i;:::-;1058:26210;;;;;:::i;:::-;13535:42;;;:::i;:::-;1058:26210;;;;;;;;;;;;;;;;;;;;;;13617:75;;;:::i;:::-;;;;13770:6;;:::i;:::-;1058:26210;3068:21:23;1058:26210:31;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;6160:23;1058:26210;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;4747:26:5;1058:26210:31;;;;:::i;:::-;4717:18:5;2475:4;4717:18;;3901:6;1058:26210:31;3901:6:5;1058:26210:31;;3901:22:5;1058:26210:31;3901:6:5;1058:26210:31;3901:22:5;1058:26210:31;3810:120:5;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;1058:26210:31;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;:::i;:::-;2475:4:5;;;;;:::i;:::-;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;17414:14:31;;17410:44;;17531:26;;;;;:59;;;1058:26210;17531:102;;;;1058:26210;17531:150;;;;1058:26210;17514:206;;26689:18;;;;;:::i;:::-;17782:24;;;;:::i;:::-;17873:13;-1:-1:-1;;;;;1058:26210:31;;;;17888:13;;;;;;1058:26210;3068:21:23;1058:26210:31;;;;;;;;:::i;:::-;;;;17903:3;17955:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;17969:22;;;;:::i;:::-;17942:50;;;;:::i;:::-;18039:10;;;;;:::i;:::-;;;;:::i;:::-;18051:9;;;;;:::i;:::-;1058:26210;18068:11;;;;:::i;:::-;1058:26210;;;;;:::i;:::-;18021:59;;;;:::i;:::-;18006:74;;;;:::i;:::-;1058:26210;18155:12;;;:::i;:::-;1058:26210;18169:10;;;;:::i;:::-;;;;:::i;:::-;18181:9;;;;:::i;:::-;1058:26210;18192:12;;;;:::i;:::-;;;;:::i;:::-;18206:22;;;;:::i;:::-;18230:11;;;;;;:::i;:::-;1058:26210;;;;;;;;;;;;;18100:155;;;;;:::i;:::-;;;;;18333:12;;;:::i;:::-;1058:26210;18347:6;;;;:::i;:::-;1058:26210;;17873:13;;17514:206;12248:21;;;1058:26210;17699:21;1058:26210;;17699:21;17531:150;17653:28;;;;;17531:150;;:102;17594:39;;;;;17531:102;;:59;17561:29;;;;;17531:59;;17410:44;12059:17;;;1058:26210;17437:17;1058:26210;;17437:17;1058:26210;;;;;;-1:-1:-1;;1058:26210:31;;;;2475:4:5;;:::i;:::-;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;18603:12:31;26689:18;;:::i;:::-;1058:26210;;18603:12;:::i;:::-;1058:26210;3068:21:23;1058:26210:31;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;21620:12;1058:26210;21609:30;;;;21605:146;;1058:26210;;;;;;;;;;;21844:20;;;:::i;:::-;21933:13;1058:26210;21948:9;;;;;;1058:26210;;;;;;;:::i;21959:3::-;1058:26210;;;;;;;;5662:18:30;1058:26210:31;;;;5662:18:30;:::i;:::-;1058:26210:31;;;;;;;;;;;;21978:40;;;;:::i;:::-;1058:26210;;;;;;;;;;21933:13;;21605:146;21686:23;;;;-1:-1:-1;;1058:26210:31;;;;;;;21686:53;;20808:78;;;1058:26210;21662:78;1058:26210;;;;;;21662:78;1058:26210;;;;;;;;;;;;21686:53;;1058:26210;21686:53;;;1058:26210;;;;;;-1:-1:-1;;1058:26210:31;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1058:26210:31;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;16377:101;1058:26210;16556:6;1058:26210;;;;;;:::i;:::-;2475:4:5;;;;;:::i;:::-;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;16377:101:31;26689:18;;:::i;:::-;16251:43;16314:47;16251:43;;;;;:::i;:::-;1058:26210;;;;;:::i;:::-;16314:47;;;;:::i;:::-;1058:26210;;;;;;;;;;;;;;;;;;;;;;16377:101;;;:::i;1058:26210::-;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;-1:-1:-1;;;;;;;;;;;1058:26210:31;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;6046:33;1058:26210;6046:33;;;;;;;;:::i;:::-;1058:26210;;;;;;;;;;;6046:33;;1058:26210;;6046:33;1058:26210;;6046:33;1058:26210;6046:33;1058:26210;6046:33;;;;1058:26210;:::i;:::-;;;;:::i;:::-;;;6046:33;;;1058:26210;;6046:33;1058:26210;;6046:33;;1058:26210;;;;;6046:33;;;;;1058:26210;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1058:26210:31;;;;;;:::i;:::-;;;;;;;;;;;2954:29:5;1058:26210:31;;;;;;-1:-1:-1;1058:26210:31;;;;;;-1:-1:-1;1058:26210:31;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;;;;;5662:18:30;1058:26210:31;;;;;5662:18:30;;:::i;:::-;1058:26210:31;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;2475:4:5;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1058:26210:31;;;;;;;10214:14;;:40;;;;1058:26210;10210:94;;-1:-1:-1;10314:20:31;1058:26210;;;10349:43;1058:26210;-1:-1:-1;;;;;26689:18:31;;:::i;:::-;1058:26210;;;;;;;10349:43;1058:26210;10210:94;10263:41;;;;1058:26210;10263:41;1058:26210;;;;;;10263:41;10214:40;10232:22;;;;10214:40;;1058:26210;;;;;;-1:-1:-1;;1058:26210:31;;;;2475:4:5;;:::i;:::-;1315:72:22;;:::i;:::-;2408:4;1058:26210:31;;2398:14:22;1058:26210:31;;;2398:14:22;1058:26210:31;2427:20:22;1058:26210:31;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:31;;;;;2427:20:22;1058:26210:31;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;1707:17:12;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;:::i;:::-;2475:4:5;;;:::i;:::-;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;18890:21:31;;18886:51;;26689:18;;:::i;:::-;19041:13;1058:26210;19056:20;;;;;;1058:26210;3068:21:23;1058:26210:31;;19078:3;19106:12;19120:6;19106:12;;1058:26210;19106:12;;;;:::i;:::-;1058:26210;19120:6;:::i;:::-;1058:26210;19041:13;;1058:26210;;;;;;-1:-1:-1;;1058:26210:31;;;;;;1796:7:22;1058:26210:31;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;:::i;:::-;;;1707:17:12;-1:-1:-1;;;;;1058:26210:31;;;;;1931:31:12;;;;1058:26210:31;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;-1:-1:-1;;;;;;;;;;;1058:26210:31;;1933:12:7;1058:26210:31;;;;20244:20;1058:26210;20244:20;:::i;:::-;20341:13;1058:26210;20356:9;;;;;;1058:26210;;;;;;;:::i;20367:3::-;-1:-1:-1;;;;;;;;;;;1058:26210:31;;1933:12:7;1058:26210:31;;;;1933:12:7;5662:18:30;1058:26210:31;;5662:18:30;:::i;:::-;1058:26210:31;;;;;;;;;;;;20386:43;;;;:::i;:::-;1058:26210;;;;;;;;;;20341:13;;1058:26210;;;;;;-1:-1:-1;;1058:26210:31;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;11183:60;1058:26210;;11339:6;1058:26210;;;;;;:::i;:::-;2475:4:5;;;;;:::i;:::-;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;26689:18:31;;:::i;:::-;1058:26210;11183:60;11125:43;1058:26210;;;;;:::i;:::-;;;;;;:::i;:::-;11125:43;;;;:::i;:::-;1058:26210;;;;;;;;;;;;;;;;;;;;;;11183:60;;;:::i;1058:26210::-;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;20766:12;1058:26210;20755:30;;;;20751:146;;20913:21;;;:::i;:::-;1058:26210;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1058:26210:31;;;;2475:4:5;;:::i;:::-;1796:7:22;1058:26210:31;;;;2140:9:22;2136:62;;-1:-1:-1;;1058:26210:31;1796:7:22;1058:26210:31;2674:22:22;1058:26210:31;26689:18;;:::i;2136:62:22:-;2172:15;;;1058:26210:31;2172:15:22;1058:26210:31;;2172:15:22;1058:26210:31;;;;;;-1:-1:-1;;1058:26210:31;;;;;;:::i;:::-;-1:-1:-1;;;;;26689:18:31;;:::i;:::-;1058:26210;-1:-1:-1;;;;;1058:26210:31;;5421:34:5;5417:102;;5529:37;1058:26210:31;;;5529:37:5;:::i;5417:102::-;5478:30;;;1058:26210:31;5478:30:5;1058:26210:31;;5478:30:5;1058:26210:31;;;;;;-1:-1:-1;;1058:26210:31;;;;;;:::i;:::-;;;;;5909:65;1058:26210;;;;;5909:65;1058:26210;;;;;;-1:-1:-1;1058:26210:31;;;;;;-1:-1:-1;1058:26210:31;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;:::i;:::-;2475:4:5;4300:18;;3901:6;1058:26210:31;3901:6:5;1058:26210:31;;3901:22:5;1058:26210:31;3901:6:5;1058:26210:31;3901:22:5;1058:26210:31;3810:120:5;;2475:4;2865:31:7;;;;:::i;:::-;2906:69;;1058:26210:31;2906:69:7;1058:26210:31;;;;;;;;;;;9425:50:30;;-1:-1:-1;;;;;1058:26210:31;;9425:50:30;:::i;1058:26210:31:-;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;3901:6:5;1058:26210:31;3901:6:5;1058:26210:31;;3901:22:5;1058:26210:31;3901:6:5;1058:26210:31;3901:22:5;1058:26210:31;3810:120:5;;1058:26210:31;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;2475:4:5;;:::i;:::-;1315:72:22;;:::i;:::-;19378:25:31;;;:::i;:::-;26689:18;;:::i;:::-;1058:26210;;;;;;;10387:55:30;1058:26210:31;;;;;;;;;;10387:55:30;;5006:14;4910:129;-1:-1:-1;1058:26210:31;5006:14:30;1058:26210:31;;;-1:-1:-1;1058:26210:31;;5006:26:30;;4910:129;;10387:55;19573:40:31;19569:82;;1058:26210;;;;;;;;9746:53:30;1058:26210:31;;;;9746:53:30;:::i;:::-;;1058:26210:31;;;19778:13;1058:26210;;;;;;-1:-1:-1;1058:26210:31;;;;-1:-1:-1;1058:26210:31;;;;;;;;19899:20;1058:26210;;;;;;;19944:35;1058:26210;19944:35;;1058:26210;19569:82;19622:29;;;;;1058:26210;19622:29;1058:26210;;;;;;19622:29;1058:26210;;;;;;;:::i;:::-;2475:4:5;;;;;;;:::i;:::-;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;14516:14:31;;14512:44;;14620:22;;;;;:53;;;1058:26210;14620:85;;;;1058:26210;14616:144;;26689:18;;;;;:::i;:::-;14821:24;;;;:::i;:::-;14913:13;-1:-1:-1;;;;;1058:26210:31;;;;14928:13;;;;;;1058:26210;3068:21:23;1058:26210:31;;;;;;;;:::i;14943:3::-;15031:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;15038:10;;;;:::i;:::-;1058:26210;;-1:-1:-1;;;14982:67:31;;;;-1:-1:-1;;;;;1058:26210:31;;;;14982:67;;;1058:26210;;;;;;;;;;14982:67;;;1058:26210;;14982:67;:::i;:::-;15096:9;;;;:::i;:::-;;;;:::i;:::-;15116:11;;;;:::i;:::-;1058:26210;;;;;:::i;:::-;15078:50;;;;:::i;:::-;15063:65;;;;:::i;:::-;1058:26210;15186:12;;;:::i;:::-;1058:26210;15200:9;;;;:::i;:::-;;;;:::i;:::-;15211:5;;;;;;;:::i;:::-;;;;:::i;:::-;15218:10;;;;:::i;:::-;1058:26210;15230:11;;;;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;15147:95;;1058:26210;;15147:95;:::i;:::-;;;;;15320:12;;;;;:::i;:::-;1058:26210;15334:6;;;;:::i;:::-;1058:26210;;14913:13;;14620:85;14677:28;;;;;14620:85;;:53;14646:27;;;;;14620:53;;1058:26210;;;;;;;:::i;:::-;2475:4:5;;;;;;;;;:::i;:::-;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;12036:14:31;;12032:44;;12140:25;;;;;:53;;;1058:26210;12140:85;;;;1058:26210;12136:144;;26689:18;;;;;:::i;:::-;12341:24;;;;:::i;:::-;12430:13;-1:-1:-1;;;;;1058:26210:31;;;;12445:13;;;;;;1058:26210;3068:21:23;1058:26210:31;;;;;;;;:::i;12460:3::-;12512:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;12519:8;;;;:::i;:::-;1058:26210;12529:7;;;;:::i;:::-;12538:11;;;;;;:::i;:::-;1058:26210;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;12494:56;;;;:::i;:::-;12479:71;;;;:::i;:::-;1058:26210;12595:12;;;:::i;:::-;1058:26210;12609:5;;;;:::i;:::-;;;;:::i;:::-;12616:8;;;;;:::i;:::-;1058:26210;12626:7;;;;:::i;:::-;12635:11;;;;;;:::i;:::-;1058:26210;;;;;;;;;;;;;12569:78;;;;;:::i;:::-;;;;;12725:12;;;;;:::i;:::-;1058:26210;12739:6;;;;:::i;:::-;1058:26210;;12430:13;;12140:85;12197:28;;;;;12140:85;;:53;12169:24;;;;;12140:53;;1058:26210;;;;;;-1:-1:-1;;1058:26210:31;;;;;10387:55:30;1058:26210:31;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;5006:14:30;;;-1:-1:-1;1058:26210:31;;;5006:26:30;;;4910:129;10387:55;1058:26210:31;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;837:57:7;;;:97;;;;1058:26210:31;;;;;;;837:97:7;-1:-1:-1;;;2673:47:5;;;-1:-1:-1;2673:87:5;;;;837:97:7;;;;;2673:87:5;-1:-1:-1;;;862:40:26;;-1:-1:-1;2673:87:5;;;1058:26210:31;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1058:26210:31;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;;;-1:-1:-1;;1058:26210:31;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;20766:12;1058:26210;;;;;;20766:12;-1:-1:-1;1058:26210:31;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1058:26210:31;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;:::o;:::-;;;;-1:-1:-1;1058:26210:31;;;;;-1:-1:-1;1058:26210:31;;;;14982:67;;1058:26210;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;:::o;:::-;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;14982:67;1058:26210;14982:67;;1058:26210;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;1058:26210:31;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1058:26210:31;;;;;;-1:-1:-1;;1058:26210:31;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;;;-1:-1:-1;;1058:26210:31;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;14982:67;;1058:26210;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;1058:26210:31;;;;;;;:::o;3199:103:5:-;26689:18:31;;:::i;:::-;-1:-1:-1;;;;;1058:26210:31;;2954:6:5;1058:26210:31;;;;;;;;;;;;3519:23:5;3515:108;;3199:103;:::o;3515:108::-;-1:-1:-1;;;2954:6:5;3565:47;;;-1:-1:-1;;;;;1058:26210:31;;;;3565:47:5;1058:26210:31;-1:-1:-1;;;;;;;;;;;1058:26210:31;;;;3565:47:5;3199:103;26689:18:31;;:::i;:::-;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;3519:23:5;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;1058:26210:31;3565:47:5;1058:26210:31;;;;;;3565:47:5;1058:26210:31;;;;;;3565:47:5;3199:103;26689:18:31;;:::i;:::-;2954:6:5;1058:26210:31;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;3519:23:5;3515:108;;3199:103;;:::o;3515:108::-;3565:47;;;2954:6;3565:47;1058:26210:31;;;;;;3565:47:5;1058:26210:31;;;;2954:6:5;3565:47;1878:128:22;1058:26210:31;1796:7:22;1058:26210:31;;1939:61:22;;1878:128::o;1939:61::-;1974:15;;;-1:-1:-1;1974:15:22;;-1:-1:-1;1974:15:22;2575:307:23;1899:1;2702:7;1058:26210:31;2702:18:23;2698:86;;1899:1;2702:7;1058:26210:31;2575:307:23:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:23;;-1:-1:-1;2743:30:23;1058:26210:31;;;;;;;;;:::o;:::-;-1:-1:-1;1058:26210:31;;-1:-1:-1;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1058:26210:31;;;;;;;;;-1:-1:-1;1058:26210:31;;;;22340:512;;;;;22545:12;1058:26210;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1058:26210:31;;;;22653:105;;;1058:26210;;;;22653:105;;1058:26210;;;22653:105;;;1058:26210;;;22653:105;;;1058:26210;;;;22653:105;;1058:26210;;;22653:105;;;-1:-1:-1;;;1058:26210:31;;;;;;;;22545:12;1058:26210;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;1058:26210:31;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;:::i;:::-;;;:::i;:::-;22653:105;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;:::i;:::-;;;:::i;:::-;22653:105;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22340:512::o;1058:26210::-;;;;-1:-1:-1;1058:26210:31;;;;;14982:67;;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22340:512::o;1058:26210::-;;;;;;;;;;;;;;;;;;;;;;;22653:105;1058:26210;;;;;;;;;;;;;;;;;14982:67;;;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22653:105;1058:26210;;;;;;;;;;;;;;;;;;;;;;;;;;;;22340:512;;;;;;22545:12;1058:26210;;;;;;;;:::i;:::-;;;;;;;;;22653:105;;;1058:26210;;;;22653:105;;1058:26210;;;22653:105;;;1058:26210;-1:-1:-1;1058:26210:31;;22653:105;;;1058:26210;-1:-1:-1;1058:26210:31;;22653:105;;;1058:26210;;;-1:-1:-1;;;1058:26210:31;;;;;;;;22545:12;1058:26210;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;1058:26210:31;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;:::i;:::-;22653:105;1058:26210;;;;;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;:::i;:::-;22653:105;1058:26210;;;;;;;;;;;;;;;-1:-1:-1;1058:26210:31;;;;;;;;;;;;;;;;;;;;;14982:67;;1058:26210;;;;-1:-1:-1;1058:26210:31;;-1:-1:-1;1058:26210:31;;-1:-1:-1;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;22340:512::o;1058:26210::-;;;22653:105;1058:26210;;;;;;;;;;;;;;;;;14982:67;;;1058:26210;;;;-1:-1:-1;1058:26210:31;;-1:-1:-1;1058:26210:31;;-1:-1:-1;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22653:105;1058:26210;;;;;;;;;;;;;;;;23564:1206;23663:25;;;:::i;:::-;1058:26210;;-1:-1:-1;1058:26210:31;23796:13;1058:26210;;;-1:-1:-1;1058:26210:31;10387:55:30;1058:26210:31;;;;;;;10387:55:30;;5006:14;4910:129;-1:-1:-1;1058:26210:31;5006:14:30;1058:26210:31;;;-1:-1:-1;1058:26210:31;;5006:26:30;;4910:129;;10387:55;23792:91:31;;1058:26210;-1:-1:-1;1058:26210:31;23796:13;1058:26210;;9425:50:30;1058:26210:31;;-1:-1:-1;1058:26210:31;9425:50:30;:::i;:::-;;1058:26210:31;-1:-1:-1;1058:26210:31;24005:13;1058:26210;;;-1:-1:-1;1058:26210:31;;-1:-1:-1;1058:26210:31;;;;-1:-1:-1;1058:26210:31;24041:4;1058:26210;;;;;;;;24129:20;23796:13;24129:20;;1058:26210;24041:4;1058:26210;;;;;;24174:38;-1:-1:-1;24174:38:31;;24324:8;1058:26210;-1:-1:-1;24300:32:31;:49;;;23564:1206;24296:468;;23564:1206;;;:::o;24296:468::-;24393:39;;;;:::i;:::-;24450:21;24446:308;;23564:1206;;:::o;24446:308::-;1058:26210;;;;-1:-1:-1;;;24697:42:31;;23796:13;24697:42;;1058:26210;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;;;24730:8;;1058:26210;:::i;:::-;24697:42;;;24300:49;24337:12;1058:26210;24337:12;;;1058:26210;;24336:13;24300:49;;23792:91;23847:36;;;;-1:-1:-1;23847:36:31;23796:13;1058:26210;;;;-1:-1:-1;23847:36:31;23035:344;;23151:12;1058:26210;23140:30;;;;23136:146;;23297:21;;;;:::i;:::-;23291:27;;1058:26210;23332:12;23291:27;23332:12;1058:26210;;23328:44;;23035:344;:::o;23328:44::-;23353:19;;;-1:-1:-1;23353:19:31;;1058:26210;;-1:-1:-1;23353:19:31;23136:146;23217:53;-1:-1:-1;23217:23:31;;;;-1:-1:-1;;1058:26210:31;;;;;;;23217:53;20808:78;;;-1:-1:-1;23193:78:31;;1058:26210;;;;-1:-1:-1;23193:78:31;3108:262:7;3226:32;;;;:::i;:::-;3268:72;;;;3349:14;;3108:262;:::o;3268:72::-;-1:-1:-1;1058:26210:31;;;3295:12:7;1058:26210:31;;;;;;9746:53:30;;-1:-1:-1;;;;;1058:26210:31;;9746:53:30;:::i;:::-;;3108:262:7;:::o;2206:429:12:-;2422:10;1707:17;-1:-1:-1;;;;;1058:26210:31;1931:31:12;;2403:71;;2206:429;2399:230;;;1058:26210:31;;2312:8:12;1058:26210:31;2312:8:12;1058:26210:31;;;;;;;;2490:72:12:o;2399:230::-;2422:10;2593:25;:::o;2403:71::-;2312:8;3483:2;2312:8;2437:37;;2403:71;;25065:1383:31;25196:21;;;:::i;:::-;25309:12;;;;;1058:26210;;;;;25305:29;;25491:4;1058:26210;;;;;;;;;;;;;;;25491:4;25582:9;;1058:26210;25594:8;;;1058:26210;;;;;;;;;;;;:::i;:::-;;25491:4;1058:26210;;;25491:4;;;;1058:26210;;;;;;25562:41;;;1058:26210;25562:41;;;;;;;;;1058:26210;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;25617:12;25613:176;;-1:-1:-1;1058:26210:31;;-1:-1:-1;;;;;1058:26210:31;25804:37;1058:26210;;25804:37;1058:26210;;;25945:13;1058:26210;;;;;;;26006:18;;;;;;26375:20;;;25945:13;1058:26210;26375:20;;1058:26210;25491:4;25065:1383;:::o;26026:3::-;1058:26210;;;25945:13;1058:26210;;;;;5662:18:30;1058:26210:31;;;;;;;;;;;;;;;;;26173:13;1058:26210;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;25945:13;1058:26210;;;;;-1:-1:-1;;9746:53:30;;;:::i;:::-;;1058:26210:31;25991:13;;25613:176;1058:26210;;-1:-1:-1;;1058:26210:31;;;-1:-1:-1;;;25766:12:31;-1:-1:-1;;25766:12:31:o;1058:26210::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;25491:4;1058:26210;;;;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;-1:-1:-1;;1058:26210:31;;;;;;;-1:-1:-1;1058:26210:31;;;;25305:29;25323:11;;;;;25330:4;25323:11;:::o;1058:26210::-;;;;;;;;-1:-1:-1;1058:26210:31;;-1:-1:-1;1058:26210:31;;;-1:-1:-1;1058:26210:31;:::o;2910:1368:30:-;;3105:14;;;1058:26210:31;;;;;;;;;;;3141:13:30;;;3137:1135;3141:13;;;-1:-1:-1;;1058:26210:31;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;;;3616:23:30;;;3612:378;;3137:1135;1058:26210:31;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3105:14:30;4207:11;:::o;1058:26210:31:-;;;;;;;;;;;;3612:378:30;1058:26210:31;3679:22:30;3800:23;3679:22;;;:::i;:::-;1058:26210:31;;;;;;3800:23:30;;;;;:::i;:::-;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3612:378:30;;;;;3137:1135;4249:12;;;;1058:26210:31;4249:12:30;:::o;6179:316:5:-;1058:26210:31;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;;;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:31;;6370:40:5;1058:26210:31;;6370:40:5;6347:4;6424:11;:::o;6272:217::-;6466:12;;1058:26210:31;6466:12:5;:::o;6732:317::-;1058:26210:31;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1058:26210:31;;;;;;;;;;;;-1:-1:-1;;1058:26210:31;;;26689:18;;:::i;:::-;1058:26210;;-1:-1:-1;;;;;1058:26210:31;;6924:40:5;1058:26210:31;;6924:40:5;1058:26210:31;6978:11:5;:::o;2336:406:30:-;-1:-1:-1;1058:26210:31;;;5006:14:30;;;1058:26210:31;;;;;;2420:21:30;;1058:26210:31;;;-1:-1:-1;;;1058:26210:31;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2615:14:30;1058:26210:31;;;;;;;2671:11:30;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","SIGNER_ROLE()":"a1ebf35d","batchConfirm(uint256[])":"62391520","batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])":"c13138f1","batchSubmitERC20Transfers(address[],address[],uint256[],string[])":"205e7c06","batchSubmitTransactions(address[],uint256[],bytes[],string[])":"0f052056","confirm(uint256)":"ba0179b5","confirmations(uint256,address)":"3411c81c","getConfirmers(uint256)":"b779e1c0","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasConfirmed(uint256,address)":"08aff933","hasRole(bytes32,address)":"91d14854","isTrustedForwarder(address)":"572b6c05","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","required()":"dc8452cd","requirement()":"b7563930","revoke(uint256)":"20c5429b","revokeRole(bytes32,address)":"d547741f","setRequirement(uint256)":"8f56015f","signers()":"46f0975a","submitContractCall(address,uint256,bytes4,bytes,string)":"aa787c1e","submitERC20Transfer(address,address,uint256,string)":"ee0e6f65","submitTransaction(address,uint256,bytes,string)":"46e24b08","supportsInterface(bytes4)":"01ffc9a7","transaction(uint256)":"46bd0841","transactions(uint256)":"9ace38c2","trustedForwarder()":"7da0a877","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"AlreadyConfirmed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyBatchArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signerCount\",\"type\":\"uint256\"}],\"name\":\"InvalidRequirement\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"NotConfirmed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxIndex\",\"type\":\"uint256\"}],\"name\":\"TxDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ConfirmTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"RequirementChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"RevokeConfirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"abiEncodedArguments\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"SubmitContractCallTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"SubmitERC20TransferTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"SubmitTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SIGNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"txIndices\",\"type\":\"uint256[]\"}],\"name\":\"batchConfirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes[]\",\"name\":\"abiEncodedArguments\",\"type\":\"bytes[]\"},{\"internalType\":\"string[]\",\"name\":\"comments\",\"type\":\"string[]\"}],\"name\":\"batchSubmitContractCalls\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"txIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"comments\",\"type\":\"string[]\"}],\"name\":\"batchSubmitERC20Transfers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"txIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"string[]\",\"name\":\"comments\",\"type\":\"string[]\"}],\"name\":\"batchSubmitTransactions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"txIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"confirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"confirmations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"getConfirmers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"hasConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"setRequirement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"signers_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedArguments\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"submitContractCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"submitERC20Transfer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"submitTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"transaction\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"internalType\":\"struct ATKVault.Transaction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:security-contact\":\"support@settlemint.com\",\"details\":\"Implements OpenZeppelin's AccessControl, ERC2771Context, Pausable, and ReentrancyGuard\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AlreadyConfirmed(uint256,address)\":[{\"params\":{\"signer\":\"The signer's address\",\"txIndex\":\"The transaction index\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExecutionFailed(uint256,address,bytes)\":[{\"params\":{\"data\":\"The call data\",\"to\":\"The destination address\",\"txIndex\":\"The transaction index\"}}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidRequirement(uint256,uint256)\":[{\"params\":{\"requested\":\"The requested number of confirmations\",\"signerCount\":\"The total number of signers\"}}],\"NotConfirmed(uint256,address)\":[{\"params\":{\"signer\":\"The signer's address\",\"txIndex\":\"The transaction index\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"TxDoesNotExist(uint256,uint256)\":[{\"params\":{\"maxIndex\":\"The maximum valid index\",\"txIndex\":\"The requested transaction index\"}}],\"TxExecuted(uint256)\":[{\"params\":{\"txIndex\":\"The transaction index\"}}]},\"events\":{\"ConfirmTransaction(address,uint256)\":{\"params\":{\"signer\":\"Address of the signer who confirmed the transaction\",\"txIndex\":\"Index of the confirmed transaction\"}},\"Deposit(address,uint256,uint256)\":{\"params\":{\"balance\":\"New total balance of the vault\",\"sender\":\"Address that sent the ETH\",\"value\":\"Amount of ETH deposited\"}},\"ExecuteTransaction(address,uint256)\":{\"params\":{\"signer\":\"Address of the signer who triggered execution\",\"txIndex\":\"Index of the executed transaction\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RequirementChanged(address,uint256)\":{\"params\":{\"account\":\"Address of the account that changed the requirement\",\"required\":\"New number of required confirmations\"}},\"RevokeConfirmation(address,uint256)\":{\"params\":{\"signer\":\"Address of the signer who revoked confirmation\",\"txIndex\":\"Index of the transaction\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"SubmitContractCallTransaction(address,uint256,address,uint256,bytes4,bytes,string)\":{\"params\":{\"abiEncodedArguments\":\"ABI-encoded arguments for the function call\",\"comment\":\"Description of the transaction\",\"selector\":\"Function selector (first 4 bytes of the function signature)\",\"signer\":\"Address of the signer who submitted the transaction\",\"target\":\"Contract address to call\",\"txIndex\":\"Index of the transaction in the transactions array\",\"value\":\"Amount of ETH to send with the call\"}},\"SubmitERC20TransferTransaction(address,uint256,address,address,uint256,string)\":{\"params\":{\"amount\":\"Amount of tokens to transfer\",\"comment\":\"Description of the transaction\",\"signer\":\"Address of the signer who submitted the transaction\",\"to\":\"Recipient address for the token transfer\",\"token\":\"Address of the ERC20 token to transfer\",\"txIndex\":\"Index of the transaction in the transactions array\"}},\"SubmitTransaction(address,uint256,address,uint256,bytes,string)\":{\"params\":{\"comment\":\"Description of the transaction\",\"data\":\"Function call data\",\"signer\":\"Address of the signer who submitted the transaction\",\"to\":\"Destination address for the transaction\",\"txIndex\":\"Index of the transaction in the transactions array\",\"value\":\"Amount of ETH to send with the transaction\"}},\"TransactionExecutionFailed(uint256,address,bytes)\":{\"params\":{\"data\":\"Call data of the failed call\",\"to\":\"Destination address of the failed call\",\"txIndex\":\"Index of the failed transaction\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"batchConfirm(uint256[])\":{\"params\":{\"txIndices\":\"Array of transaction indices to confirm\"}},\"batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])\":{\"params\":{\"abiEncodedArguments\":\"Array of ABI-encoded arguments\",\"comments\":\"Array of transaction descriptions\",\"selectors\":\"Array of function selectors\",\"targets\":\"Array of contract addresses\",\"values\":\"Array of ETH amounts\"},\"returns\":{\"txIndices\":\"Array of created transaction indices\"}},\"batchSubmitERC20Transfers(address[],address[],uint256[],string[])\":{\"params\":{\"amounts\":\"Array of token amounts\",\"comments\":\"Array of transaction descriptions\",\"to\":\"Array of recipient addresses\",\"tokens\":\"Array of ERC20 token addresses\"},\"returns\":{\"txIndices\":\"Array of created transaction indices\"}},\"batchSubmitTransactions(address[],uint256[],bytes[],string[])\":{\"params\":{\"comments\":\"Array of transaction descriptions\",\"data\":\"Array of call data\",\"to\":\"Array of destination addresses\",\"value\":\"Array of ETH amounts\"},\"returns\":{\"txIndices\":\"Array of created transaction indices\"}},\"confirm(uint256)\":{\"params\":{\"txIndex\":\"Index of the transaction to confirm\"}},\"constructor\":{\"params\":{\"_required\":\"Number of confirmations required to execute a transaction\",\"_signers\":\"Array of initial signer addresses\",\"forwarder\":\"Address of the ERC2771 forwarder for meta-transactions\",\"initialOwner\":\"Address that will have admin role\"}},\"getConfirmers(uint256)\":{\"params\":{\"txIndex\":\"Index of the transaction\"},\"returns\":{\"_0\":\"Array of signer addresses who confirmed the transaction\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasConfirmed(uint256,address)\":{\"params\":{\"signer\":\"Address of the signer\",\"txIndex\":\"Index of the transaction\"},\"returns\":{\"_0\":\"True if the signer has confirmed the transaction\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"pause()\":{\"details\":\"Can only be called by admin\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"requirement()\":{\"returns\":{\"_0\":\"The number of required confirmations\"}},\"revoke(uint256)\":{\"params\":{\"txIndex\":\"Index of the transaction\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setRequirement(uint256)\":{\"details\":\"Can only be called by admin\",\"params\":{\"_required\":\"New number of required confirmations\"}},\"signers()\":{\"returns\":{\"signers_\":\"Array of signer addresses\"}},\"submitContractCall(address,uint256,bytes4,bytes,string)\":{\"params\":{\"abiEncodedArguments\":\"ABI-encoded arguments for the function call\",\"comment\":\"Description of the transaction\",\"selector\":\"Function selector (first 4 bytes of the function signature)\",\"target\":\"Address of the contract to call\",\"value\":\"Amount of ETH to send with the call\"},\"returns\":{\"txIndex\":\"Index of the created transaction\"}},\"submitERC20Transfer(address,address,uint256,string)\":{\"params\":{\"amount\":\"Amount of tokens to transfer\",\"comment\":\"Description of the transaction\",\"to\":\"Recipient address\",\"token\":\"Address of the ERC20 token\"},\"returns\":{\"txIndex\":\"Index of the created transaction\"}},\"submitTransaction(address,uint256,bytes,string)\":{\"params\":{\"comment\":\"Description of the transaction\",\"data\":\"Call data for the transaction\",\"to\":\"Destination address\",\"value\":\"Amount of ETH to send\"},\"returns\":{\"txIndex\":\"Index of the created transaction\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transaction(uint256)\":{\"params\":{\"txIndex\":\"Index of the transaction\"},\"returns\":{\"_0\":\"Transaction struct containing all transaction details\"}},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"unpause()\":{\"details\":\"Can only be called by admin\"}},\"stateVariables\":{\"confirmations\":{\"details\":\"txIndex => signer address => has confirmed\"}},\"title\":\"ATKVault - A multi-signature wallet with role-based access control\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyConfirmed(uint256,address)\":[{\"notice\":\"Error thrown when a signer tries to confirm a transaction they already confirmed\"}],\"ArrayLengthMismatch()\":[{\"notice\":\"Error thrown when array lengths don't match in batch operations\"}],\"EmptyBatchArray()\":[{\"notice\":\"Error thrown when an empty array is provided for batch operations\"}],\"ExecutionFailed(uint256,address,bytes)\":[{\"notice\":\"Error thrown when transaction execution fails\"}],\"InvalidRequirement(uint256,uint256)\":[{\"notice\":\"Error thrown when an invalid requirement is set\"}],\"NotConfirmed(uint256,address)\":[{\"notice\":\"Error thrown when a signer tries to revoke a confirmation they didn't make\"}],\"TxDoesNotExist(uint256,uint256)\":[{\"notice\":\"Error thrown when accessing a non-existent transaction\"}],\"TxExecuted(uint256)\":[{\"notice\":\"Error thrown when trying to confirm an already executed transaction\"}]},\"events\":{\"ConfirmTransaction(address,uint256)\":{\"notice\":\"Emitted when a transaction is confirmed by a signer\"},\"Deposit(address,uint256,uint256)\":{\"notice\":\"Emitted when ETH is deposited to the vault\"},\"ExecuteTransaction(address,uint256)\":{\"notice\":\"Emitted when a transaction is executed\"},\"RequirementChanged(address,uint256)\":{\"notice\":\"Emitted when the confirmation requirement changes\"},\"RevokeConfirmation(address,uint256)\":{\"notice\":\"Emitted when a signer revokes their confirmation\"},\"SubmitContractCallTransaction(address,uint256,address,uint256,bytes4,bytes,string)\":{\"notice\":\"Emitted when a contract call transaction is submitted\"},\"SubmitERC20TransferTransaction(address,uint256,address,address,uint256,string)\":{\"notice\":\"Emitted when an ERC20 transfer transaction is submitted\"},\"SubmitTransaction(address,uint256,address,uint256,bytes,string)\":{\"notice\":\"Emitted when a general transaction is submitted\"},\"TransactionExecutionFailed(uint256,address,bytes)\":{\"notice\":\"Emitted when transaction execution fails after reaching the required confirmations\"}},\"kind\":\"user\",\"methods\":{\"SIGNER_ROLE()\":{\"notice\":\"Role identifier for signers who can submit and confirm transactions\"},\"batchConfirm(uint256[])\":{\"notice\":\"Confirms multiple pending transactions in a single call\"},\"batchSubmitContractCalls(address[],uint256[],bytes4[],bytes[],string[])\":{\"notice\":\"Submits multiple contract call transactions in a single call\"},\"batchSubmitERC20Transfers(address[],address[],uint256[],string[])\":{\"notice\":\"Submits multiple ERC20 token transfer transactions in a single call\"},\"batchSubmitTransactions(address[],uint256[],bytes[],string[])\":{\"notice\":\"Submits multiple transactions in a single call\"},\"confirm(uint256)\":{\"notice\":\"Confirms a pending transaction\"},\"confirmations(uint256,address)\":{\"notice\":\"Quick lookup to check if a signer has confirmed a transaction\"},\"constructor\":{\"notice\":\"Initializes the Vault with a set of signers and confirmation threshold\"},\"getConfirmers(uint256)\":{\"notice\":\"Returns a list of all signers who confirmed a transaction\"},\"hasConfirmed(uint256,address)\":{\"notice\":\"Checks if a signer has confirmed a transaction\"},\"pause()\":{\"notice\":\"Pauses the contract, preventing most operations\"},\"required()\":{\"notice\":\"Number of confirmations required to execute a transaction\"},\"requirement()\":{\"notice\":\"Gets the number of confirmations required to execute a transaction\"},\"revoke(uint256)\":{\"notice\":\"Revokes a confirmation from a pending transaction\"},\"setRequirement(uint256)\":{\"notice\":\"Changes the number of confirmations required\"},\"signers()\":{\"notice\":\"Returns a list of all current signers\"},\"submitContractCall(address,uint256,bytes4,bytes,string)\":{\"notice\":\"Submits a contract call transaction\"},\"submitERC20Transfer(address,address,uint256,string)\":{\"notice\":\"Submits a new ERC20 token transfer transaction\"},\"submitTransaction(address,uint256,bytes,string)\":{\"notice\":\"Submits a new transaction to the vault\"},\"transaction(uint256)\":{\"notice\":\"Returns detailed information about a transaction\"},\"transactions(uint256)\":{\"notice\":\"Array of all transactions (pending and executed)\"},\"unpause()\":{\"notice\":\"Unpauses the contract, allowing operations to resume\"}},\"notice\":\"This contract allows multiple signers to propose, confirm, and execute transactions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/vault/ATKVault.sol\":\"ATKVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/addons/vault/ATKVault.sol\":{\"keccak256\":\"0x86d8321671eed655a5fe3ca153e909672fbf6bede675fa630546da1f08061b8b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://5697585f61d0672fb3a9bf7cedd988cdbd95871e4cc1e7c3d1994bf0f00629df\",\"dweb:/ipfs/QmWwpBUKpEpW68Hyb72EWYyg5Gs8ai6Nvn3hdURa21DVco\"]}},\"version\":1}"}},"contracts/addons/vault/ATKVaultFactoryImplementation.sol":{"ATKVaultFactoryImplementation":{"abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"deployedAddress","type":"address"}],"name":"AddressAlreadyDeployed","type":"error"},{"inputs":[],"name":"Create2EmptyBytecode","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ProxyCreationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"vault","type":"address"},{"indexed":true,"internalType":"address","name":"creator","type":"address"}],"name":"ATKVaultCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allVaultsLength","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"atkVaultImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address[]","name":"signers","type":"address[]"},{"internalType":"uint256","name":"required","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"createVault","outputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"systemAddress_","type":"address"},{"internalType":"address","name":"initialAdmin_","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"systemAddonAddress","type":"address"}],"name":"isFactorySystemAddon","outputs":[{"internalType":"bool","name":"isFactorySystemAddon","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"signers","type":"address[]"},{"internalType":"uint256","name":"required","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"predictVaultAddress","outputs":[{"internalType":"address","name":"predictedAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"typeId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a03461011e57601f61404f38819003918201601f19168301916001600160401b038311848410176101225780849260209460405283398101031261011e57516001600160a01b038116810361011e576080525f51602061402f5f395f51905f525460ff8160401c1661010f576002600160401b03196001600160401b038216016100b9575b604051613ef89081610137823960805181818161022301528181610575015281816105c40152818161084d01526110e90152f35b6001600160401b0319166001600160401b039081175f51602061402f5f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610085565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816301ffc9a71461096e57508063229fff6014610931578063248a9ca3146108f25780632f2ff15d146108a85780632f7efa2f1461080e57806336568abe146107b8578063485cc955146106155780634cd18577146105f8578063572b6c05146105a45780637da0a877146105605780637fe6496d146101d15780638f940f631461019657806391d1485414610140578063a217fddf14610124578063bcbd9edb146101245763d547741f146100ce575f80fd5b346101215760403660031901126101215761011d6004356100ed6109f1565b90610118610113825f525f516020613e835f395f51905f52602052600160405f20015490565b610c35565b610ff0565b5080f35b80fd5b5034610121578060031936011261012157602090604051908152f35b503461012157604036600319011261012157604061015c6109f1565b9160043581525f516020613e835f395f51905f52602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b503461012157806003193601126101215760206040517f3ae60f3cee742e6943392a49179dab2c5e2991d2396b7cf8b808581ecb951bfd8152f35b50346104675761020d61024c61025a61021b6101ec36610a3d565b6101fa969392949196610ba7565b6040519788918887863060208701610b30565b03601f198101885287610a07565b6040519485937f00000000000000000000000000000000000000000000000000000000000000009260208601610b71565b03601f198101835282610a07565b60405190612d0f61026e6020820184610a07565b8083526111546020840139610284838284610fb2565b61028c610ba7565b6001600160a01b03165f8181526001602052604090205490939060ff1661054d57906102ba6102c092611099565b92610f72565b80511561053e576020815191015ff53d151981151661045c576001600160a01b031690811561052f57810361052057805f52600160205260405f20600160ff198254161790556004602060018060a01b035f5416604051928380926398468e5160e01b82525afa90811561045c575f916104de575b506001600160a01b03168015158061046b575b610417575b506001600160a01b0361035e6110e6565b169060405191817fdd4f4edaf8af94a1c44f788ac4e78153a8fe0110733f3090d0c6ac09eab172988580a3600254680100000000000000008110156104035760018101806002558110156103ef576002602094527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01816bffffffffffffffffffffffff60a01b8254161790558152f35b634e487b7160e01b84526032600452602484fd5b634e487b7160e01b84526041600452602484fd5b803b15610467575f8091602460405180948193631105e3d560e31b83528760048401525af1801561045c571561034d576104549192505f90610a07565b5f905f61034d565b6040513d5f823e3d90fd5b5f80fd5b506040516301ffc9a760e01b815263118f21f760e31b6004820152602081602481855afa90811561045c575f916104a3575b50610348565b90506020813d6020116104d6575b816104be60209383610a07565b8101031261046757518015158103610467575f61049d565b3d91506104b1565b90506020813d602011610518575b816104f960209383610a07565b8101031261046757516001600160a01b0381168103610467575f610335565b3d91506104ec565b6335279f5d60e21b5f5260045ffd5b63b06ebf3d60e01b5f5260045ffd5b631328927760e21b5f5260045ffd5b8363d0dc594960e01b5f5260045260245ffd5b34610467575f366003190112610467576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346104675760203660031901126104675760206105bf6109db565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610467575f366003190112610467576020600254604051908152f35b346104675760403660031901126104675761062e6109db565b6106366109f1565b905f516020613ea35f395f51905f52549160ff8360401c16159267ffffffffffffffff8116801590816107b0575b60011490816107a6575b15908161079d575b5061078e5767ffffffffffffffff1981166001175f516020613ea35f395f51905f525583610762575b5060ff5f516020613ea35f395f51905f525460401c161561075357806106c76106d792610c91565b506106d181610d40565b50610e0a565b5060018060a01b03166bffffffffffffffffffffffff60a01b5f5416175f556106fc57005b68ff0000000000000000195f516020613ea35f395f51905f5254165f516020613ea35f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b631afcd79f60e31b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f516020613ea35f395f51905f52558361069f565b63f92ee8a960e01b5f5260045ffd5b90501585610676565b303b15915061066e565b859150610664565b34610467576040366003190112610467576107d16109f1565b6001600160a01b036107e16110e6565b166001600160a01b038216036107ff576107fd90600435610ff0565b005b63334bd91960e11b5f5260045ffd5b3461046757602061089661020d61024c61087561084561082d36610a3d565b604096939294919651978891888786308f8701610b30565b6040519485937f0000000000000000000000000000000000000000000000000000000000000000928a8601610b71565b604051612d0f61088786820183610a07565b80825261115486830139610fb2565b6040516001600160a01b039091168152f35b34610467576040366003190112610467576107fd6004356108c76109f1565b906108ed610113825f525f516020613e835f395f51905f52602052600160405f20015490565b610ed4565b346104675760203660031901126104675760206109296004355f525f516020613e835f395f51905f52602052600160405f20015490565b604051908152f35b34610467576020366003190112610467576001600160a01b036109526109db565b165f526001602052602060ff60405f2054166040519015158152f35b34610467576020366003190112610467576004359063ffffffff60e01b82168092036104675760209163291e793360e21b81149081156109b0575b5015158152f35b637965db0b60e01b8114915081156109ca575b50836109a9565b6301ffc9a760e01b149050836109c3565b600435906001600160a01b038216820361046757565b602435906001600160a01b038216820361046757565b90601f8019910116810190811067ffffffffffffffff821117610a2957604052565b634e487b7160e01b5f52604160045260245ffd5b60806003198201126104675760043567ffffffffffffffff811161046757816023820112156104675780600401359167ffffffffffffffff8311610a29578260051b9160405193610a916020850186610a07565b84526024602085019382010191821161046757602401915b818310610ad457509192602435925090506044356001600160a01b0381168103610467579060643590565b82356001600160a01b038116810361046757815260209283019201610aa9565b90602080835192838152019201905f5b818110610b115750505090565b82516001600160a01b0316845260209384019390920191600101610b04565b91610b57906080949796959260018060a01b0316845260a0602085015260a0840190610af4565b60408301969096526001600160a01b031660608201520152565b92610b89606093969592608086526080860190610af4565b60208501969096526001600160a01b03908116604085015216910152565b610baf6110e6565b6001600160a01b0381165f9081527f8f7e9a8734279607aeaac474f24949ddc99eae25c0da72edcf5ad21022be2c9e602052604090205460ff1615610bf15750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004527ffc425f2263d0df187444b70e47283d622c70181c5baebb1306a01edba1ce184c602452604490fd5b610c3d6110e6565b815f525f516020613e835f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f20541615610c74575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16610d3b576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff19166001179055610d196110e6565b16906001600160a01b03165f5f516020613e635f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081527fb121b6c2cfb68d56d259fa39abd93d7a85e352365bbcbddf27041e20d031c3d3602052604090205460ff16610d3b576001600160a01b038181165f9081527fb121b6c2cfb68d56d259fa39abd93d7a85e352365bbcbddf27041e20d031c3d360205260409020805460ff19166001179055610dc86110e6565b16906001600160a01b03167fecaefa0171c08a6ded02d98b9432940d3852ef2c7f5007661eb8de37c5a1adc55f516020613e635f395f51905f525f80a4600190565b6001600160a01b0381165f9081527f8f7e9a8734279607aeaac474f24949ddc99eae25c0da72edcf5ad21022be2c9e602052604090205460ff16610d3b576001600160a01b038181165f9081527f8f7e9a8734279607aeaac474f24949ddc99eae25c0da72edcf5ad21022be2c9e60205260409020805460ff19166001179055610e926110e6565b16906001600160a01b03167ffc425f2263d0df187444b70e47283d622c70181c5baebb1306a01edba1ce184c5f516020613e635f395f51905f525f80a4600190565b5f8181525f516020613e835f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16610f6c575f8181525f516020613e835f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff19166001179055610f4a6110e6565b16916001600160a01b0316905f516020613e635f395f51905f525f80a4600190565b50505f90565b610fb0906020808095946040519684889551918291018487015e8401908282015f8152815193849201905e01015f815203601f198101845283610a07565b565b90610fc2906102ba600b94611099565b602081519101209060405191604083015260208201523081520160ff8153605590206001600160a01b031690565b5f8181525f516020613e835f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615610f6c575f8181525f516020613e835f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff191690556110646110e6565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b6040516110e06080826020808201953087526040808401528051918291826060860152018484015e5f838284010152601f801991011681010301601f198101835282610a07565b51902090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611148575b15611144576013193601368111611130573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b50601436101561111856fe60a06040523461023a57612d0f8038038061001981610252565b928339810160808282031261023a5781516001600160401b03811161023a5782019080601f8301121561023a578151916001600160401b03831161023e578260051b9060208061006a818501610252565b80968152019282010192831161023a57602001905b828210610222575050506020820151916100a760606100a060408401610277565b9201610277565b60805260016003558151908115801561021a575b8015610211575b6101fa576100cf8161028b565b6101b8575b505f5b818110610146576007849055837f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b036101176103a5565b1692604051908152a260405161283e90816104518239608051818181610ba401528181610c9b015261237c0152f35b82518110156101a457600581901b830160200151600191906001600160a01b031661017081610314565b61017c575b50016100d7565b61019d905f516020612caf5f395f51905f525f528360205260405f206103f4565b505f610175565b634e487b7160e01b5f52603260045260245ffd5b5f805260016020526101f3906001600160a01b03167fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496103f4565b505f6100d4565b50826306a0ee3160e31b5f5260045260245260445ffd5b508184116100c2565b5083156100bb565b6020809161022f84610277565b81520191019061007f565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b0381118382101761023e57604052565b51906001600160a01b038216820361023a57565b6001600160a01b0381165f9081525f516020612cef5f395f51905f52602052604090205460ff1661030f576001600160a01b038181165f9081525f516020612cef5f395f51905f5260205260409020805460ff191660011790556102ed6103a5565b16906001600160a01b03165f5f516020612c8f5f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081525f516020612ccf5f395f51905f52602052604090205460ff1661030f576001600160a01b038181165f9081525f516020612ccf5f395f51905f5260205260409020805460ff191660011790556103766103a5565b16906001600160a01b03165f516020612caf5f395f51905f525f516020612c8f5f395f51905f525f80a4600190565b6080516001600160a01b03163314806103e9575b156103e55760131936013681116103d1573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b5060143610156103b9565b6001810190825f528160205260405f2054155f146104495780546801000000000000000081101561023e57600181018083558110156101a4578390825f5260205f20015554915f5260205260405f2055600190565b5050505f9056fe6080806040526004361015610069575b50361561001a575f80fd5b610022611cf3565b61002a612379565b604080513481524760208201526001600160a01b03909216917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159190a2005b5f3560e01c90816301ffc9a7146116315750806308aff933146115dd5780630f05205614611423578063205e7c061461123857806320c5429b14611155578063248a9ca3146111235780632f2ff15d146110be5780633411c81c1461107557806336568abe146110215780633f4ba83a14610fbc57806346bd084114610e8f57806346e24b0814610da157806346f0975a14610ccf578063572b6c0514610c7b5780635c975abb14610c595780636239152014610bd35780637da0a87714610b8f5780638456cb5914610b245780638f56015f14610a615780639010d07c14610a1b57806391d14854146109d35780639ace38c214610916578063a1ebf35d146108ef578063a217fddf146108d5578063a3246ad314610865578063aa787c1e14610763578063b756393014610306578063b779e1c014610691578063ba0179b51461064e578063c13138f114610391578063ca15c87314610367578063d547741f14610323578063dc8452cd146103065763ee0e6f65146101eb575f61000f565b34610302576080366003190112610302576102046116b4565b61020c61169e565b9060443591606435916001600160401b038311610302576020937f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b9336102f59361025c6102ec9636906004016117eb565b9290610266611bbf565b61026e611cf3565b610276611d0e565b61027e612379565b60405163a9059cbb60e01b8b8201526001600160a01b0385166024820152604480820188905281529096906102ca906102b860648261198d565b6102c3368886611a77565b9083611d7d565b98899560405193849360018060a01b03169860018060a01b038b169785611b10565b0390a4826121a9565b6001600355604051908152f35b5f80fd5b34610302575f366003190112610302576020600754604051908152f35b346103025760403660031901126103025761036560043561034261169e565b9061036061035b825f525f602052600160405f20015490565b611ca2565b61233f565b005b34610302576020366003190112610302576004355f526001602052602060405f2054604051908152f35b346103025760a0366003190112610302576004356001600160401b038111610302576103c19036906004016116ca565b6024356001600160401b038111610302576103e09036906004016116ca565b6044356001600160401b038111610302576103ff9036906004016116ca565b9490936064356001600160401b038111610302576104219036906004016116ca565b9290966084356001600160401b038111610302576104439036906004016116ca565b95909161044e611bbf565b610456611cf3565b61045e611d0e565b841561063f57818514801590610635575b801561062b575b8015610621575b6106125761048c979397612379565b96610496866119c5565b996001600160a01b038916955f5b8881106104c2576001600355604051806104be8f8261178e565b0390f35b8a8d8f8c8f8c8c8f928c8c8f92888c8f8f829c90838f96818f988f828f8f8f918f92849f92859c968697948f95886104fe8180999781986119f7565b61050790611baa565b9261051192611a1b565b9061051b92611b34565b94610526918c6119f7565b61052f90611a07565b9561053a918d6119f7565b359361054592611a1b565b369061055092611a77565b9161055a93611fd2565b6105648284611aad565b5261056e91611aad565b519e610579926119f7565b61058290611a07565b9961058c926119f7565b3596610597926119f7565b6105a090611baa565b996105aa92611a1b565b926105b6929196611a1b565b91604051958695600160a01b6001900316996105d29587611b6e565b037fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd1691a46105ff91611aad565b519061060a916121a9565b6001016104a4565b63512509d360e11b5f5260045ffd5b508685141561047d565b5085851415610476565b508085141561046f565b637dc57e7b60e01b5f5260045ffd5b3461030257602036600319011261030257610667611bbf565b61066f611cf3565b610677611d0e565b61068a610682612379565b6004356121a9565b6001600355005b34610302576020366003190112610302576004356006548082101561071f5750805f52600460205260405f20546106c7816119c5565b915f5b8281106106df57604051806104be8682611818565b600190825f5260046020526106f78160405f20612589565b838060a01b0391549060031b1c1661070f8287611aad565b90838060a01b03169052016106ca565b801561075b575f19810190811161074757905b632d71397360e11b5f5260045260245260445ffd5b634e487b7160e01b5f52601160045260245ffd5b505f90610732565b346103025760a03660031901126103025761077c6116b4565b602435906044356001600160e01b031981168103610302576064356001600160401b038111610302576107b39036906004016117eb565b91608435926001600160401b038411610302576020957fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd166107fb6102f59636906004016117eb565b959097610806611bbf565b61080e611cf3565b610816611d0e565b6102ec610821612379565b9761084361083088868b611b34565b61083b36848f611a77565b908886611fd2565b9a8b9760405195869560018060a01b03169a60018060a01b038d169987611b6e565b34610302576020366003190112610302576004355f52600160205260405f206040519081602082549182815201915f5260205f20905f5b8181106108bf576104be856108b38187038261198d565b60405191829182611818565b825484526020909301926001928301920161089c565b34610302575f3660031901126103025760206040515f8152f35b34610302575f3660031901126103025760206040515f5160206127e95f395f51905f528152f35b34610302576020366003190112610302576004356006548110156103025761093d9061185a565b5060018060a01b038154166104be60018301549260056040519161096f8361096881600285016118dd565b038461198d565b6109b960ff6003830154169361099b60048401549361099460405180978193016118dd565b038561198d565b6040519788978852602088015260c0604088015260c08701906117c7565b9215156060860152608085015283820360a08501526117c7565b34610302576040366003190112610302576109ec61169e565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004355f5260016020526020610a4860405f2060243590612589565b905460405160039290921b1c6001600160a01b03168152f35b3461030257602036600319011261030257600435610a7d611c3a565b5f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df85481158015610b1b575b610b05575060078190557f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b03610afa612379565b1692604051908152a2005b906306a0ee3160e31b5f5260045260245260445ffd5b50808211610abd565b34610302575f36600319011261030257610b3c611c3a565b610b44611cf3565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020610b7c612379565b6040516001600160a01b039091168152a1005b34610302575f366003190112610302576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610302576020366003190112610302576004356001600160401b03811161030257610c039036906004016116ca565b90610c0c611bbf565b610c14611cf3565b610c1c611d0e565b811561063f57610c2a612379565b905f5b838110610c3b576001600355005b80610c5384610c4d60019488876119f7565b356121a9565b01610c2d565b34610302575f36600319011261030257602060ff600254166040519015158152f35b34610302576020366003190112610302576020610c966116b4565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610302575f366003190112610302575f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df854610d1f816119c5565b905f5b818110610d3757604051806104be8582611818565b5f5160206127e95f395f51905f525f526001602081905290610d79817fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df8612589565b838060a01b0391549060031b1c16610d918286611aad565b90838060a01b0316905201610d22565b3461030257608036600319011261030257610dba6116b4565b6024356044356001600160401b03811161030257610ddc9036906004016117eb565b92606435916001600160401b038311610302576020947fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd94610e256102f59536906004016117eb565b969092610e30611bbf565b610e38611cf3565b610e40611d0e565b610e48612379565b956102ec610e6d610e5a36858a611a77565b610e65368d8a611a77565b908785611fd2565b998a9660405194859460018060a01b03169960018060a01b038c169886611ae1565b3461030257602036600319011261030257600435606060a0604051610eb38161195e565b5f81525f60208201528260408201525f838201525f608082015201526006548082101561071f57610ee38261185a565b50604051610ef08161195e565b81546001600160a01b0316815260018201546020820190815260405190926104be9190600590610f278361096881600285016118dd565b60408501928352610f9b60ff60038301541693606087019415158552610f636004840154936080890194855261099460405180978193016118dd565b60a087019384526040519788976020895260018060a01b0390511660208901525160408801525160c0606088015260e08701906117c7565b9251151560808601525160a085015251838203601f190160c08501526117c7565b34610302575f36600319011261030257610fd4611c3a565b60025460ff8116156110125760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020610b7c612379565b638dfc202b60e01b5f5260045ffd5b346103025760403660031901126103025761103a61169e565b6001600160a01b0361104a612379565b166001600160a01b03821603611066576103659060043561233f565b63334bd91960e11b5f5260045ffd5b346103025760403660031901126103025761108e61169e565b6004355f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004356110da61169e565b6110f261035b835f525f602052600160405f20015490565b6110fc8183612679565b61110257005b5f91825260016020526040909120610365916001600160a01b03169061279b565b3461030257602036600319011261030257602061114d6004355f525f602052600160405f20015490565b604051908152f35b3461030257602036600319011261030257600435611171611bbf565b611179611cf3565b611182816122dd565b61118a612379565b90825f5260046020526111b860405f209260018060a01b031680936001915f520160205260405f2054151590565b1561122157600490835f52816020526111d48360405f2061259e565b50835f52600560205260405f20835f5260205260405f2060ff198154169055015f1981540190557ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd555f80a3005b509063b29436e960e01b5f5260045260245260445ffd5b3461030257611246366116fa565b9296909591611253611bbf565b61125b611cf3565b611263611d0e565b821561063f57848314801590611419575b801561140f575b6106125761128a959195612379565b94611294846119c5565b976001600160a01b038716935f5b8681106112bc576001600355604051806104be8d8261178e565b808787878f8f8f868f928184878f8f908f858b8f926112de83809681936119f7565b6112e790611a07565b966112f1926119f7565b60405163a9059cbb60e01b60208201526001600160a01b0396909616602487015235604480870191909152855261132960648661198d565b611333918a6119f7565b61133c90611a07565b9361134692611a1b565b369061135192611a77565b9061135b92611d7d565b6113658284611aad565b5261136f91611aad565b519661137a926119f7565b61138390611a07565b9186611390818d8c6119f7565b61139990611a07565b946113a3926119f7565b35956113af918a611a1b565b6040516001600160a01b0390931696929384936113cd939185611b10565b037f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b93391a4886113fc828d611aad565b5190611407916121a9565b6001016112a2565b508383141561127b565b5080831415611274565b3461030257611431366116fa565b61144097919397969296611bbf565b611448611cf3565b611450611d0e565b821561063f578483148015906115d3575b80156115c9575b61061257611477959195612379565b94611481846119c5565b976001600160a01b038716935f5b8681106114a9576001600355604051806104be8d8261178e565b878787878f8f8f82888c83828e96818f898f8f848f919e819f8b96839f6114d385809481936119f7565b6114dc90611a07565b986114e6926119f7565b35956114f192611a1b565b926114fd929194611a1b565b929091369061150b92611a77565b91369061151792611a77565b9161152193611fd2565b61152b8284611aad565b5261153591611aad565b519a611540926119f7565b61154990611a07565b95611554918d6119f7565b359361155f92611a1b565b9461156b929198611a1b565b90604051948594600160a01b6001900316986115879486611ae1565b037fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd91a4886115b6828d611aad565b51906115c1916121a9565b60010161148f565b5080831415611468565b5086831415611461565b346103025760403660031901126103025760206116276115fb61169e565b600480355f90815290845260408082206001600160a01b03909316825260019092016020522054151590565b6040519015158152f35b34610302576020366003190112610302576004359063ffffffff60e01b821680920361030257602091635a05180f60e01b8114908115611673575b5015158152f35b637965db0b60e01b81149150811561168d575b508361166c565b6301ffc9a760e01b14905083611686565b602435906001600160a01b038216820361030257565b600435906001600160a01b038216820361030257565b9181601f84011215610302578235916001600160401b038311610302576020808501948460051b01011161030257565b6080600319820112610302576004356001600160401b0381116103025781611724916004016116ca565b929092916024356001600160401b0381116103025781611746916004016116ca565b929092916044356001600160401b0381116103025781611768916004016116ca565b92909291606435906001600160401b0382116103025761178a916004016116ca565b9091565b60206040818301928281528451809452019201905f5b8181106117b15750505090565b82518452602093840193909201916001016117a4565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610302578235916001600160401b038311610302576020838186019501011161030257565b60206040818301928281528451809452019201905f5b81811061183b5750505090565b82516001600160a01b031684526020938401939092019160010161182e565b6006548110156118915760065f81815291027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0191565b634e487b7160e01b5f52603260045260245ffd5b90600182811c921680156118d3575b60208310146118bf57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916118b4565b5f92918154916118ec836118a5565b8083529260018116908115611941575060011461190857505050565b5f9081526020812093945091925b838310611927575060209250010190565b600181602092949394548385870101520191019190611916565b915050602093945060ff929192191683830152151560051b010190565b60c081019081106001600160401b0382111761197957604052565b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761197957604052565b6001600160401b0381116119795760051b60200190565b906119cf826119ae565b6119dc604051918261198d565b82815280926119ed601f19916119ae565b0190602036910137565b91908110156118915760051b0190565b356001600160a01b03811681036103025790565b91908110156118915760051b81013590601e19813603018212156103025701908135916001600160401b038311610302576020018236038113610302579190565b6001600160401b03811161197957601f01601f191660200190565b929192611a8382611a5c565b91611a91604051938461198d565b829481845281830111610302578281602093845f960137010152565b80518210156118915760209160051b010190565b908060209392818452848401375f828201840152601f01601f1916010190565b9391611b0d9593611aff928652606060208701526060860191611ac1565b926040818503910152611ac1565b90565b611b0d949260609260018060a01b0316825260208201528160408201520191611ac1565b602490611b6c9294938060405196879363ffffffff60e01b1660208501528484013781015f838201520301601f19810184528361198d565b565b94929093611b9c92611b0d9795875263ffffffff60e01b166020870152608060408701526080860191611ac1565b926060818503910152611ac1565b356001600160e01b0319811681036103025790565b611bc7612379565b6001600160a01b0381165f9081527f059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5b602052604090205460ff1615611c095750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004525f5160206127e95f395f51905f52602452604490fd5b611c42612379565b6001600160a01b0381165f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1615611c845750565b63e2517d3f60e01b5f5260018060a01b03166004525f60245260445ffd5b611caa612379565b5f828152602081815260408083206001600160a01b038516845290915290205460ff1615611cd6575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b60ff60025416611cff57565b63d93c066560e01b5f5260045ffd5b600260035414611d1f576002600355565b633ee5aeb560e01b5f5260045ffd5b601f8211611d3b57505050565b5f5260205f20906020601f840160051c83019310611d73575b601f0160051c01905b818110611d68575050565b5f8155600101611d5d565b9091508190611d54565b929091926006549260405191611d928361195e565b6001600160a01b031682525f6020830181815260408401928352606084018281526080850192835260a08501978852919290600160401b8710156119795760018701600655611de08761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b03821161197957611e3382611e2d85546118a5565b85611d2e565b602090601f8311600114611f535782600597969593611e879593611e6c935f92611eea575b50508160011b915f199060031b1c19161790565b90555b511515600384019060ff801983541691151516179055565b5160048201550192519283516001600160401b03811161197957611eb581611eaf84546118a5565b84611d2e565b602094601f8211600114611ef557611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b9055565b015190505f80611e58565b601f19821695835f52805f20915f5b888110611f3b57508360019596979810611f23575b505050811b019055565b01515f1960f88460031b161c191690555f8080611f19565b91926020600181928685015181550194019201611f04565b90601f19831691845f52815f20925f5b818110611fa7575092600192859260059a999896611e87989610611f8f575b505050811b019055611e6f565b01515f1960f88460031b161c191690555f8080611f82565b92936020600181928786015181550195019301611f63565b634e487b7160e01b5f525f60045260245ffd5b90939192936006549360405192611fe88461195e565b60018060a01b03168352602083019182526040830190815260608301905f825260808401925f845260a08501978852600160401b87101561197957600187016006556120338761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b0382116119795761208082611e2d85546118a5565b602090601f831160011461215657826005979695936120b89593611e6c935f92611eea5750508160011b915f199060031b1c19161790565b5160048201550192519283516001600160401b038111611979576120e081611eaf84546118a5565b602094601f821160011461211157611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b601f19821695835f52805f20915f5b88811061213e57508360019596979810611f2357505050811b019055565b91926020600181928685015181550194019201612120565b90601f19831691845f52815f20925f5b818110612191575092600192859260059a9998966120b8989610611f8f57505050811b019055611e6f565b92936020600181928786015181550195019301612166565b6121b2816122dd565b91815f52600460205260405f206121e060018060a01b03831680926001915f520160205260405f2054151590565b6122c757825f5260046020526121f98160405f2061279b565b50825f52600560205260405f20815f5260205260405f20600160ff1982541617905582600485019160018354018093557f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb633900415f80a36007541115806122b8575b61226157505050565b61226b90826123d2565b15612274575050565b8154604051635f226afd60e11b815260048101929092526001600160a01b03166024820152606060448201529081906122b49060648301906002016118dd565b0390fd5b5060ff60038401541615612258565b826347b467b960e11b5f5260045260245260445ffd5b906006548083101561231657506122f38261185a565b509160ff6003840154166123045750565b6393fbc70960e01b5f5260045260245ffd5b9050801561075b575f1981019081116107475790632d71397360e11b5f5260045260245260445ffd5b612349828261270e565b918261235457505090565b5f91825260016020526040909120612375916001600160a01b03169061259e565b5090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806123c7575b156123c3576013193601368111610747573560601c90565b3390565b5060143610156123ab565b6123db8161185a565b509160038301805460ff811661257f5760019060ff191617815560018060a01b0384541660018501546002860190604051915f9080549061241b826118a5565b91600181169081156125685750600114612536575b5050915f939181859403925af13d15612531573d61244d81611a5c565b9061245b604051928361198d565b81525f60203d92013e5b15612521575081906001600160a01b03167f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac5f80a3805f52600460205260405f20545f5b8181106124be5750505060045f910155600190565b825f52600460205260405f2090815415611891575f9182526020808320548584526005825260408085206001600160a01b03909216808652918352808520805460ff191690558685526004909252922060019261251a9161259e565b50016124a9565b805460ff19169055505f92915050565b612465565b9091505f5260205f205f905b82821061255457505082018183612430565b600181602092548488015201910190612542565b60ff19168652505080151502830190508183612430565b5050505050600190565b8054821015611891575f5260205f2001905f90565b906001820191815f528260205260405f20548015155f14612671575f1981018181116107475782545f1981019190821161074757818103612626575b50505080548015612612575f1901906125f38282612589565b8154905f199060031b1b19169055555f526020525f6040812055600190565b634e487b7160e01b5f52603160045260245ffd5b61265c6126366126469386612589565b90549060031b1c92839286612589565b819391549060031b91821b915f19901b19161790565b90555f528360205260405f20555f80806125da565b505050505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff191660011790556126d3612379565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff19169055612766612379565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b5f82815260018201602052604090205461270857805490600160401b82101561197957826127d3612646846001809601855584612589565b90558054925f520160205260405f205560019056fee2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70a26469706673582212200b2d9c147d6c2e67c0df5428313f0ffb94bcbf214c3c9ea38f7cd4fe7286667b64736f6c634300081c00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0de2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5bad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb52f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a264697066735822122063e85ee7a8244abad032b3ec5737e0dfa004867910b45709b67a4cb6e869668264736f6c634300081c0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0x11E JUMPI PUSH1 0x1F PUSH2 0x404F CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x122 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x11E JUMPI PUSH1 0x80 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x402F PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH2 0x10F JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ADD PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF8 SWAP1 DUP2 PUSH2 0x137 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x223 ADD MSTORE DUP2 DUP2 PUSH2 0x575 ADD MSTORE DUP2 DUP2 PUSH2 0x5C4 ADD MSTORE DUP2 DUP2 PUSH2 0x84D ADD MSTORE PUSH2 0x10E9 ADD MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR PUSH0 MLOAD PUSH1 0x20 PUSH2 0x402F PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 PUSH0 PUSH2 0x85 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x96E JUMPI POP DUP1 PUSH4 0x229FFF60 EQ PUSH2 0x931 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x8F2 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x8A8 JUMPI DUP1 PUSH4 0x2F7EFA2F EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x4CD18577 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x7FE6496D EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x8F940F63 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xBCBD9EDB EQ PUSH2 0x124 JUMPI PUSH4 0xD547741F EQ PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x11D PUSH1 0x4 CALLDATALOAD PUSH2 0xED PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH2 0x118 PUSH2 0x113 DUP3 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x121 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x40 PUSH2 0x15C PUSH2 0x9F1 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x121 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3AE60F3CEE742E6943392A49179DAB2C5E2991D2396B7CF8B808581ECB951BFD DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x467 JUMPI PUSH2 0x20D PUSH2 0x24C PUSH2 0x25A PUSH2 0x21B PUSH2 0x1EC CALLDATASIZE PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x1FA SWAP7 SWAP4 SWAP3 SWAP5 SWAP2 SWAP7 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP2 DUP9 DUP8 DUP7 ADDRESS PUSH1 0x20 DUP8 ADD PUSH2 0xB30 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP9 MSTORE DUP8 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x0 SWAP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB71 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2D0F PUSH2 0x26E PUSH1 0x20 DUP3 ADD DUP5 PUSH2 0xA07 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1154 PUSH1 0x20 DUP5 ADD CODECOPY PUSH2 0x284 DUP4 DUP3 DUP5 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 SWAP1 PUSH1 0xFF AND PUSH2 0x54D JUMPI SWAP1 PUSH2 0x2BA PUSH2 0x2C0 SWAP3 PUSH2 0x1099 JUMP JUMPDEST SWAP3 PUSH2 0xF72 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x53E JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD PUSH0 CREATE2 RETURNDATASIZE ISZERO NOT DUP2 ISZERO AND PUSH2 0x45C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x52F JUMPI DUP2 SUB PUSH2 0x520 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x98468E51 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x45C JUMPI PUSH0 SWAP2 PUSH2 0x4DE JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO DUP1 PUSH2 0x46B JUMPI JUMPDEST PUSH2 0x417 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x35E PUSH2 0x10E6 JUMP JUMPDEST AND SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP2 PUSH32 0xDD4F4EDAF8AF94A1C44F788AC4E78153A8FE0110733F3090D0C6AC09EAB17298 DUP6 DUP1 LOG3 PUSH1 0x2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x403 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x2 SSTORE DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x2 PUSH1 0x20 SWAP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1105E3D5 PUSH1 0xE3 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x45C JUMPI ISZERO PUSH2 0x34D JUMPI PUSH2 0x454 SWAP2 SWAP3 POP PUSH0 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x118F21F7 PUSH1 0xE3 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x45C JUMPI PUSH0 SWAP2 PUSH2 0x4A3 JUMPI JUMPDEST POP PUSH2 0x348 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4D6 JUMPI JUMPDEST DUP2 PUSH2 0x4BE PUSH1 0x20 SWAP4 DUP4 PUSH2 0xA07 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x467 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x467 JUMPI PUSH0 PUSH2 0x49D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x518 JUMPI JUMPDEST DUP2 PUSH2 0x4F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xA07 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x467 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x467 JUMPI PUSH0 PUSH2 0x335 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4EC JUMP JUMPDEST PUSH4 0x35279F5D PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xB06EBF3D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x13289277 PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST DUP4 PUSH4 0xD0DC5949 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x20 PUSH2 0x5BF PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH2 0x62E PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x636 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x7B0 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x7A6 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x79D JUMPI JUMPDEST POP PUSH2 0x78E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE DUP4 PUSH2 0x762 JUMPI JUMPDEST POP PUSH1 0xFF PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x753 JUMPI DUP1 PUSH2 0x6C7 PUSH2 0x6D7 SWAP3 PUSH2 0xC91 JUMP JUMPDEST POP PUSH2 0x6D1 DUP2 PUSH2 0xD40 JUMP JUMPDEST POP PUSH2 0xE0A JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH2 0x6FC JUMPI STOP JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD AND PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE DUP4 PUSH2 0x69F JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH2 0x676 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x66E JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x664 JUMP JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH2 0x7D1 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7E1 PUSH2 0x10E6 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x7FF JUMPI PUSH2 0x7FD SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xFF0 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 PUSH2 0x896 PUSH2 0x20D PUSH2 0x24C PUSH2 0x875 PUSH2 0x845 PUSH2 0x82D CALLDATASIZE PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 SWAP7 SWAP4 SWAP3 SWAP5 SWAP2 SWAP7 MLOAD SWAP8 DUP9 SWAP2 DUP9 DUP8 DUP7 ADDRESS DUP16 DUP8 ADD PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x0 SWAP3 DUP11 DUP7 ADD PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0F PUSH2 0x887 DUP7 DUP3 ADD DUP4 PUSH2 0xA07 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH2 0x1154 DUP7 DUP4 ADD CODECOPY PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH2 0x7FD PUSH1 0x4 CALLDATALOAD PUSH2 0x8C7 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH2 0x8ED PUSH2 0x113 DUP3 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xED4 JUMP JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x20 PUSH2 0x929 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x952 PUSH2 0x9DB JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x467 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x291E7933 PUSH1 0xE2 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x9B0 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x9CA JUMPI JUMPDEST POP DUP4 PUSH2 0x9A9 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x467 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x467 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA29 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x467 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x467 JUMPI DUP2 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x467 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA29 JUMPI DUP3 PUSH1 0x5 SHL SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xA91 PUSH1 0x20 DUP6 ADD DUP7 PUSH2 0xA07 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP4 DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x467 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xAD4 JUMPI POP SWAP2 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP3 POP SWAP1 POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x467 JUMPI SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x467 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xAA9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB11 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB04 JUMP JUMPDEST SWAP2 PUSH2 0xB57 SWAP1 PUSH1 0x80 SWAP5 SWAP8 SWAP7 SWAP6 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP3 PUSH2 0xB89 PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP3 PUSH1 0x80 DUP7 MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xBAF PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8F7E9A8734279607AEAAC474F24949DDC99EAE25C0DA72EDCF5AD21022BE2C9E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBF1 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH32 0xFC425F2263D0DF187444B70E47283D622C70181C5BAEBB1306A01EDBA1CE184C PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0x10E6 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC74 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xD19 PUSH2 0x10E6 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E63 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xB121B6C2CFB68D56D259FA39ABD93D7A85E352365BBCBDDF27041E20D031C3D3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xB121B6C2CFB68D56D259FA39ABD93D7A85E352365BBCBDDF27041E20D031C3D3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDC8 PUSH2 0x10E6 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xECAEFA0171C08A6DED02D98B9432940D3852EF2C7F5007661EB8DE37C5A1ADC5 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E63 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8F7E9A8734279607AEAAC474F24949DDC99EAE25C0DA72EDCF5AD21022BE2C9E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8F7E9A8734279607AEAAC474F24949DDC99EAE25C0DA72EDCF5AD21022BE2C9E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE92 PUSH2 0x10E6 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFC425F2263D0DF187444B70E47283D622C70181C5BAEBB1306A01EDBA1CE184C PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E63 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF6C JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xF4A PUSH2 0x10E6 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E63 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xFB0 SWAP1 PUSH1 0x20 DUP1 DUP1 SWAP6 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP5 DUP9 SWAP6 MLOAD SWAP2 DUP3 SWAP2 ADD DUP5 DUP8 ADD MCOPY DUP5 ADD SWAP1 DUP3 DUP3 ADD PUSH0 DUP2 MSTORE DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD SWAP1 MCOPY ADD ADD PUSH0 DUP2 MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0xA07 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xFC2 SWAP1 PUSH2 0x2BA PUSH1 0xB SWAP5 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF6C JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1064 PUSH2 0x10E6 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E0 PUSH1 0x80 DUP3 PUSH1 0x20 DUP1 DUP3 ADD SWAP6 ADDRESS DUP8 MSTORE PUSH1 0x40 DUP1 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x60 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xA07 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1148 JUMPI JUMPDEST ISZERO PUSH2 0x1144 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x1130 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x1118 JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23A JUMPI PUSH2 0x2D0F DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x252 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x23A JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23A JUMPI DUP3 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x23A JUMPI DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x23E JUMPI DUP3 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 DUP1 PUSH2 0x6A DUP2 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST DUP1 SWAP7 DUP2 MSTORE ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x23A JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x222 JUMPI POP POP POP PUSH1 0x20 DUP3 ADD MLOAD SWAP2 PUSH2 0xA7 PUSH1 0x60 PUSH2 0xA0 PUSH1 0x40 DUP5 ADD PUSH2 0x277 JUMP JUMPDEST SWAP3 ADD PUSH2 0x277 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x3 SSTORE DUP2 MLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x1FA JUMPI PUSH2 0xCF DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x1B8 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x146 JUMPI PUSH1 0x7 DUP5 SWAP1 SSTORE DUP4 PUSH32 0x9E0800728E995CA040F68D19B1BCC1B4AE0420ED8190FABB5FA564E2961EB7D5 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x117 PUSH2 0x3A5 JUMP JUMPDEST AND SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x40 MLOAD PUSH2 0x283E SWAP1 DUP2 PUSH2 0x451 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xBA4 ADD MSTORE DUP2 DUP2 PUSH2 0xC9B ADD MSTORE PUSH2 0x237C ADD MSTORE RETURN JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 DUP2 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x17C JUMPI JUMPDEST POP ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x19D SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CAF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x3F4 JUMP JUMPDEST POP PUSH0 PUSH2 0x175 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1F3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH2 0x3F4 JUMP JUMPDEST POP PUSH0 PUSH2 0xD4 JUMP JUMPDEST POP DUP3 PUSH4 0x6A0EE31 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST POP DUP2 DUP5 GT PUSH2 0xC2 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBB JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x22F DUP5 PUSH2 0x277 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x23E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23A JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CEF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x30F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CEF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2ED PUSH2 0x3A5 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2C8F PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CCF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x30F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CCF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x376 PUSH2 0x3A5 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CAF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2C8F PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x3E9 JUMPI JUMPDEST ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x3D1 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH0 EQ PUSH2 0x449 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x1A4 JUMPI DUP4 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE SLOAD SWAP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x69 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x22 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x2A PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE SELFBALANCE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 SWAP1 LOG2 STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1631 JUMPI POP DUP1 PUSH4 0x8AFF933 EQ PUSH2 0x15DD JUMPI DUP1 PUSH4 0xF052056 EQ PUSH2 0x1423 JUMPI DUP1 PUSH4 0x205E7C06 EQ PUSH2 0x1238 JUMPI DUP1 PUSH4 0x20C5429B EQ PUSH2 0x1155 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1123 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x10BE JUMPI DUP1 PUSH4 0x3411C81C EQ PUSH2 0x1075 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1021 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xFBC JUMPI DUP1 PUSH4 0x46BD0841 EQ PUSH2 0xE8F JUMPI DUP1 PUSH4 0x46E24B08 EQ PUSH2 0xDA1 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0xCCF JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0xC7B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC59 JUMPI DUP1 PUSH4 0x62391520 EQ PUSH2 0xBD3 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0xB8F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB24 JUMPI DUP1 PUSH4 0x8F56015F EQ PUSH2 0xA61 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xA1B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x9D3 JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0xA1EBF35D EQ PUSH2 0x8EF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0xAA787C1E EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xB7563930 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xB779E1C0 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xBA0179B5 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xC13138F1 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x306 JUMPI PUSH4 0xEE0E6F65 EQ PUSH2 0x1EB JUMPI PUSH0 PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x204 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x169E JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP4 PUSH32 0x97A1625FFE5FA52EA35B6D6808A64CF13BB4AB9BDCE9643B7A97F09C8922B933 PUSH2 0x2F5 SWAP4 PUSH2 0x25C PUSH2 0x2EC SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x266 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x26E PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP12 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP1 SWAP7 SWAP1 PUSH2 0x2CA SWAP1 PUSH2 0x2B8 PUSH1 0x64 DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x2C3 CALLDATASIZE DUP9 DUP7 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x1D7D JUMP JUMPDEST SWAP9 DUP10 SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP8 DUP6 PUSH2 0x1B10 JUMP JUMPDEST SUB SWAP1 LOG4 DUP3 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x365 PUSH1 0x4 CALLDATALOAD PUSH2 0x342 PUSH2 0x169E JUMP JUMPDEST SWAP1 PUSH2 0x360 PUSH2 0x35B DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3C1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3E0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3FF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP5 SWAP1 SWAP4 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x421 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP7 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x443 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP6 SWAP1 SWAP2 PUSH2 0x44E PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x456 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x45E PUSH2 0x1D0E JUMP JUMPDEST DUP5 ISZERO PUSH2 0x63F JUMPI DUP2 DUP6 EQ DUP1 ISZERO SWAP1 PUSH2 0x635 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x62B JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x621 JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x48C SWAP8 SWAP4 SWAP8 PUSH2 0x2379 JUMP JUMPDEST SWAP7 PUSH2 0x496 DUP7 PUSH2 0x19C5 JUMP JUMPDEST SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP6 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x4C2 JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP16 DUP3 PUSH2 0x178E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP11 DUP14 DUP16 DUP13 DUP16 DUP13 DUP13 DUP16 SWAP3 DUP13 DUP13 DUP16 SWAP3 DUP9 DUP13 DUP16 DUP16 DUP3 SWAP13 SWAP1 DUP4 DUP16 SWAP7 DUP2 DUP16 SWAP9 DUP16 DUP3 DUP16 DUP16 DUP16 SWAP2 DUP16 SWAP3 DUP5 SWAP16 SWAP3 DUP6 SWAP13 SWAP7 DUP7 SWAP8 SWAP5 DUP16 SWAP6 DUP9 PUSH2 0x4FE DUP2 DUP1 SWAP10 SWAP8 DUP2 SWAP9 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x507 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST SWAP3 PUSH2 0x511 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 PUSH2 0x51B SWAP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP5 PUSH2 0x526 SWAP2 DUP13 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x52F SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP6 PUSH2 0x53A SWAP2 DUP14 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0x545 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x550 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 PUSH2 0x55A SWAP4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x564 DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x56E SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP15 PUSH2 0x579 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x582 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP10 PUSH2 0x58C SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP7 PUSH2 0x597 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x5A0 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST SWAP10 PUSH2 0x5AA SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 PUSH2 0x5B6 SWAP3 SWAP2 SWAP7 PUSH2 0x1A1B JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP10 PUSH2 0x5D2 SWAP6 DUP8 PUSH2 0x1B6E JUMP JUMPDEST SUB PUSH32 0xD1048E3510DFDA1FAA9BDE9BCF936DC0C15B5BB24C1F9B7D795959FB476ECD16 SWAP2 LOG4 PUSH2 0x5FF SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x60A SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4A4 JUMP JUMPDEST PUSH4 0x512509D3 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP DUP7 DUP6 EQ ISZERO PUSH2 0x47D JUMP JUMPDEST POP DUP6 DUP6 EQ ISZERO PUSH2 0x476 JUMP JUMPDEST POP DUP1 DUP6 EQ ISZERO PUSH2 0x46F JUMP JUMPDEST PUSH4 0x7DC57E7B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x667 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x66F PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x677 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x68A PUSH2 0x682 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x71F JUMPI POP DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x6C7 DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP7 DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x6F7 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x2589 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x70F DUP3 DUP8 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE ADD PUSH2 0x6CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75B JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x747 JUMPI SWAP1 JUMPDEST PUSH4 0x2D713973 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 SWAP1 PUSH2 0x732 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x77C PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x7B3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP6 PUSH32 0xD1048E3510DFDA1FAA9BDE9BCF936DC0C15B5BB24C1F9B7D795959FB476ECD16 PUSH2 0x7FB PUSH2 0x2F5 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP6 SWAP1 SWAP8 PUSH2 0x806 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x80E PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x816 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x821 PUSH2 0x2379 JUMP JUMPDEST SWAP8 PUSH2 0x843 PUSH2 0x830 DUP9 DUP7 DUP12 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x83B CALLDATASIZE DUP5 DUP16 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP9 DUP7 PUSH2 0x1FD2 JUMP JUMPDEST SWAP11 DUP12 SWAP8 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP10 DUP8 PUSH2 0x1B6E JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x4BE DUP6 PUSH2 0x8B3 DUP2 DUP8 SUB DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1818 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x89C JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH2 0x93D SWAP1 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH2 0x4BE PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x96F DUP4 PUSH2 0x968 DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x18DD JUMP JUMPDEST SUB DUP5 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP4 PUSH2 0x99B PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST SUB DUP6 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x17C7 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x9EC PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0xA48 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA7D PUSH2 0x1C3A JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 SLOAD DUP2 ISZERO DUP1 ISZERO PUSH2 0xB1B JUMPI JUMPDEST PUSH2 0xB05 JUMPI POP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH32 0x9E0800728E995CA040F68D19B1BCC1B4AE0420ED8190FABB5FA564E2961EB7D5 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAFA PUSH2 0x2379 JUMP JUMPDEST AND SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST SWAP1 PUSH4 0x6A0EE31 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST POP DUP1 DUP3 GT PUSH2 0xABD JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xB3C PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0xB44 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH2 0xB7C PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0xC03 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP1 PUSH2 0xC0C PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xC14 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xC1C PUSH2 0x1D0E JUMP JUMPDEST DUP2 ISZERO PUSH2 0x63F JUMPI PUSH2 0xC2A PUSH2 0x2379 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xC3B JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE STOP JUMPDEST DUP1 PUSH2 0xC53 DUP5 PUSH2 0xC4D PUSH1 0x1 SWAP5 DUP9 DUP8 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD PUSH2 0x21A9 JUMP JUMPDEST ADD PUSH2 0xC2D JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0xC96 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 SLOAD PUSH2 0xD1F DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP6 DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 PUSH2 0xD79 DUP2 PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 PUSH2 0x2589 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0xD91 DUP3 DUP7 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE ADD PUSH2 0xD22 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xDBA PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0xDDC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP5 PUSH32 0xA48C1B3842E6F2C3793E18D2B4FED84FC8C6D18C3687702A2B43492078551EFD SWAP5 PUSH2 0xE25 PUSH2 0x2F5 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP7 SWAP1 SWAP3 PUSH2 0xE30 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xE38 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xE40 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0xE48 PUSH2 0x2379 JUMP JUMPDEST SWAP6 PUSH2 0x2EC PUSH2 0xE6D PUSH2 0xE5A CALLDATASIZE DUP6 DUP11 PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0xE65 CALLDATASIZE DUP14 DUP11 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP8 DUP6 PUSH2 0x1FD2 JUMP JUMPDEST SWAP10 DUP11 SWAP7 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP9 DUP7 PUSH2 0x1AE1 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0xEB3 DUP2 PUSH2 0x195E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 DUP4 DUP3 ADD MSTORE PUSH0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x6 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x71F JUMPI PUSH2 0xEE3 DUP3 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEF0 DUP2 PUSH2 0x195E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 SWAP3 PUSH2 0x4BE SWAP2 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0xF27 DUP4 PUSH2 0x968 DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP3 DUP4 MSTORE PUSH2 0xF9B PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x60 DUP8 ADD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH2 0xF63 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP10 ADD SWAP5 DUP6 MSTORE PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0x20 DUP10 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x20 DUP10 ADD MSTORE MLOAD PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP3 MLOAD ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x17C7 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xFD4 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1012 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH2 0xB7C PUSH2 0x2379 JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x103A PUSH2 0x169E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x104A PUSH2 0x2379 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1066 JUMPI PUSH2 0x365 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x233F JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x108E PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10DA PUSH2 0x169E JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x35B DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10FC DUP2 DUP4 PUSH2 0x2679 JUMP JUMPDEST PUSH2 0x1102 JUMPI STOP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x365 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x279B JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0x114D PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1171 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1179 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1182 DUP2 PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x118A PUSH2 0x2379 JUMP JUMPDEST SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x11B8 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 SWAP4 PUSH1 0x1 SWAP2 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1221 JUMPI PUSH1 0x4 SWAP1 DUP4 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH2 0x11D4 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x259E JUMP JUMPDEST POP DUP4 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH32 0xF0DCA620E2E81F7841D07BCC105E1704FB01475B278A9D4C236E1C62945EDD55 PUSH0 DUP1 LOG3 STOP JUMPDEST POP SWAP1 PUSH4 0xB29436E9 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH2 0x1246 CALLDATASIZE PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP7 SWAP1 SWAP6 SWAP2 PUSH2 0x1253 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x125B PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1263 PUSH2 0x1D0E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x63F JUMPI DUP5 DUP4 EQ DUP1 ISZERO SWAP1 PUSH2 0x1419 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x140F JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x128A SWAP6 SWAP2 SWAP6 PUSH2 0x2379 JUMP JUMPDEST SWAP5 PUSH2 0x1294 DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x12BC JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP14 DUP3 PUSH2 0x178E JUMP JUMPDEST DUP1 DUP8 DUP8 DUP8 DUP16 DUP16 DUP16 DUP7 DUP16 SWAP3 DUP2 DUP5 DUP8 DUP16 DUP16 SWAP1 DUP16 DUP6 DUP12 DUP16 SWAP3 PUSH2 0x12DE DUP4 DUP1 SWAP7 DUP2 SWAP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x12E7 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP7 PUSH2 0x12F1 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x24 DUP8 ADD MSTORE CALLDATALOAD PUSH1 0x44 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE PUSH2 0x1329 PUSH1 0x64 DUP7 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x1333 SWAP2 DUP11 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x133C SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP4 PUSH2 0x1346 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x1351 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 PUSH2 0x135B SWAP3 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x136F SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP7 PUSH2 0x137A SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1383 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP2 DUP7 PUSH2 0x1390 DUP2 DUP14 DUP13 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1399 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP5 PUSH2 0x13A3 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP6 PUSH2 0x13AF SWAP2 DUP11 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP7 SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x13CD SWAP4 SWAP2 DUP6 PUSH2 0x1B10 JUMP JUMPDEST SUB PUSH32 0x97A1625FFE5FA52EA35B6D6808A64CF13BB4AB9BDCE9643B7A97F09C8922B933 SWAP2 LOG4 DUP9 PUSH2 0x13FC DUP3 DUP14 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1407 SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12A2 JUMP JUMPDEST POP DUP4 DUP4 EQ ISZERO PUSH2 0x127B JUMP JUMPDEST POP DUP1 DUP4 EQ ISZERO PUSH2 0x1274 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH2 0x1431 CALLDATASIZE PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x1440 SWAP8 SWAP2 SWAP4 SWAP8 SWAP7 SWAP3 SWAP7 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1448 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1450 PUSH2 0x1D0E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x63F JUMPI DUP5 DUP4 EQ DUP1 ISZERO SWAP1 PUSH2 0x15D3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x15C9 JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x1477 SWAP6 SWAP2 SWAP6 PUSH2 0x2379 JUMP JUMPDEST SWAP5 PUSH2 0x1481 DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x14A9 JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP14 DUP3 PUSH2 0x178E JUMP JUMPDEST DUP8 DUP8 DUP8 DUP8 DUP16 DUP16 DUP16 DUP3 DUP9 DUP13 DUP4 DUP3 DUP15 SWAP7 DUP2 DUP16 DUP10 DUP16 DUP16 DUP5 DUP16 SWAP2 SWAP15 DUP2 SWAP16 DUP12 SWAP7 DUP4 SWAP16 PUSH2 0x14D3 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x14DC SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP9 PUSH2 0x14E6 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP6 PUSH2 0x14F1 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 PUSH2 0x14FD SWAP3 SWAP2 SWAP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 SWAP1 SWAP2 CALLDATASIZE SWAP1 PUSH2 0x150B SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 CALLDATASIZE SWAP1 PUSH2 0x1517 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 PUSH2 0x1521 SWAP4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x152B DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x1535 SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP11 PUSH2 0x1540 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1549 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP6 PUSH2 0x1554 SWAP2 DUP14 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0x155F SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP5 PUSH2 0x156B SWAP3 SWAP2 SWAP9 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP9 PUSH2 0x1587 SWAP5 DUP7 PUSH2 0x1AE1 JUMP JUMPDEST SUB PUSH32 0xA48C1B3842E6F2C3793E18D2B4FED84FC8C6D18C3687702A2B43492078551EFD SWAP2 LOG4 DUP9 PUSH2 0x15B6 DUP3 DUP14 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x15C1 SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x148F JUMP JUMPDEST POP DUP1 DUP4 EQ ISZERO PUSH2 0x1468 JUMP JUMPDEST POP DUP7 DUP4 EQ ISZERO PUSH2 0x1461 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0x1627 PUSH2 0x15FB PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 DUP1 CALLDATALOAD PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x302 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1673 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x168D JUMPI JUMPDEST POP DUP4 PUSH2 0x166C JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x302 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x302 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1724 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1746 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1768 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x302 JUMPI PUSH2 0x178A SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x17B1 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17A4 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x302 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x183B JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x182E JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x6 PUSH0 DUP2 DUP2 MSTORE SWAP2 MUL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x18D3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18BF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18B4 JUMP JUMPDEST PUSH0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x18EC DUP4 PUSH2 0x18A5 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1941 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1908 JUMPI POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1927 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1979 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1979 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19CF DUP3 PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x198D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x19ED PUSH1 0x1F NOT SWAP2 PUSH2 0x19AE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x302 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x302 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1A83 DUP3 PUSH2 0x1A5C JUMP JUMPDEST SWAP2 PUSH2 0x1A91 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x198D JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x302 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x1B0D SWAP6 SWAP4 PUSH2 0x1AFF SWAP3 DUP7 MSTORE PUSH1 0x60 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x1AC1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B0D SWAP5 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH2 0x1B6C SWAP3 SWAP5 SWAP4 DUP1 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x198D JUMP JUMPDEST JUMP JUMPDEST SWAP5 SWAP3 SWAP1 SWAP4 PUSH2 0x1B9C SWAP3 PUSH2 0x1B0D SWAP8 SWAP6 DUP8 MSTORE PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x1AC1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x1BC7 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x59F08E7D7BA1C82EDDC57AFAE67F80DF851BAF38A099607A779825038C3CE5B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C09 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH2 0x1C42 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C84 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH2 0x1CAA PUSH2 0x2379 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CD6 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x1CFF JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ PUSH2 0x1D1F JUMPI PUSH1 0x2 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT PUSH2 0x1D3B JUMPI POP POP POP JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1D73 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D68 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D5D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D54 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1D92 DUP4 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH0 PUSH1 0x20 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP6 ADD SWAP8 DUP9 MSTORE SWAP2 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP8 LT ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x6 SSTORE PUSH2 0x1DE0 DUP8 PUSH2 0x185A JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x1FBF JUMPI MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1979 JUMPI PUSH2 0x1E33 DUP3 PUSH2 0x1E2D DUP6 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP6 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F53 JUMPI DUP3 PUSH1 0x5 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0x1E87 SWAP6 SWAP4 PUSH2 0x1E6C SWAP4 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x3 DUP5 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH2 0x1EB5 DUP2 PUSH2 0x1EAF DUP5 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP5 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1EF5 JUMPI PUSH2 0x1EE6 SWAP3 SWAP4 SWAP5 SWAP6 DUP3 SWAP2 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1F3B JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1F23 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1F04 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FA7 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x5 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0x1E87 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6F JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1F63 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 SWAP4 PUSH1 0x6 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1FE8 DUP5 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 PUSH0 DUP5 MSTORE PUSH1 0xA0 DUP6 ADD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP8 LT ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x6 SSTORE PUSH2 0x2033 DUP8 PUSH2 0x185A JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x1FBF JUMPI MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1979 JUMPI PUSH2 0x2080 DUP3 PUSH2 0x1E2D DUP6 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2156 JUMPI DUP3 PUSH1 0x5 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0x20B8 SWAP6 SWAP4 PUSH2 0x1E6C SWAP4 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH2 0x20E0 DUP2 PUSH2 0x1EAF DUP5 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2111 JUMPI PUSH2 0x1EE6 SWAP3 SWAP4 SWAP5 SWAP6 DUP3 SWAP2 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x213E JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1F23 JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2120 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2191 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x5 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0x20B8 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2166 JUMP JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x22DD JUMP JUMPDEST SWAP2 DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x21E0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 SWAP3 PUSH1 0x1 SWAP2 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x22C7 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x21F9 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x279B JUMP JUMPDEST POP DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 PUSH1 0x4 DUP6 ADD SWAP2 PUSH1 0x1 DUP4 SLOAD ADD DUP1 SWAP4 SSTORE PUSH32 0x5CBE105E36805F7820E291F799D5794FF948AF2A5F664E580382DEFB63390041 PUSH0 DUP1 LOG3 PUSH1 0x7 SLOAD GT ISZERO DUP1 PUSH2 0x22B8 JUMPI JUMPDEST PUSH2 0x2261 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x226B SWAP1 DUP3 PUSH2 0x23D2 JUMP JUMPDEST ISZERO PUSH2 0x2274 JUMPI POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5F226AFD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x22B4 SWAP1 PUSH1 0x64 DUP4 ADD SWAP1 PUSH1 0x2 ADD PUSH2 0x18DD JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND ISZERO PUSH2 0x2258 JUMP JUMPDEST DUP3 PUSH4 0x47B467B9 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x6 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x2316 JUMPI POP PUSH2 0x22F3 DUP3 PUSH2 0x185A JUMP JUMPDEST POP SWAP2 PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND PUSH2 0x2304 JUMPI POP JUMP JUMPDEST PUSH4 0x93FBC709 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x75B JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x747 JUMPI SWAP1 PUSH4 0x2D713973 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH2 0x2349 DUP3 DUP3 PUSH2 0x270E JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2354 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x2375 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x259E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x23C7 JUMPI JUMPDEST ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x747 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x23DB DUP2 PUSH2 0x185A JUMP JUMPDEST POP SWAP2 PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x257F JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR DUP2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH0 SWAP1 DUP1 SLOAD SWAP1 PUSH2 0x241B DUP3 PUSH2 0x18A5 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2568 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2536 JUMPI JUMPDEST POP POP SWAP2 PUSH0 SWAP4 SWAP2 DUP2 DUP6 SWAP5 SUB SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x2531 JUMPI RETURNDATASIZE PUSH2 0x244D DUP2 PUSH2 0x1A5C JUMP JUMPDEST SWAP1 PUSH2 0x245B PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x198D JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x2521 JUMPI POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5445F318F4F5FCFB66592E68E0CC5822AA15664039BD5F0FFDE24C5A8142B1AC PUSH0 DUP1 LOG3 DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x24BE JUMPI POP POP POP PUSH1 0x4 PUSH0 SWAP2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD ISZERO PUSH2 0x1891 JUMPI PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP7 MSTORE SWAP2 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP7 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x1 SWAP3 PUSH2 0x251A SWAP2 PUSH2 0x259E JUMP JUMPDEST POP ADD PUSH2 0x24A9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2465 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2554 JUMPI POP POP DUP3 ADD DUP2 DUP4 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP9 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP4 ADD SWAP1 POP DUP2 DUP4 PUSH2 0x2430 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1891 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP2 PUSH0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP1 ISZERO ISZERO PUSH0 EQ PUSH2 0x2671 JUMPI PUSH0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x747 JUMPI DUP3 SLOAD PUSH0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x747 JUMPI DUP2 DUP2 SUB PUSH2 0x2626 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x2612 JUMPI PUSH0 NOT ADD SWAP1 PUSH2 0x25F3 DUP3 DUP3 PUSH2 0x2589 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x265C PUSH2 0x2636 PUSH2 0x2646 SWAP4 DUP7 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x2589 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x25DA JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2708 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x26D3 PUSH2 0x2379 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2708 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x2766 PUSH2 0x2379 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2708 JUMPI DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x1979 JUMPI DUP3 PUSH2 0x27D3 PUSH2 0x2646 DUP5 PUSH1 0x1 DUP1 SWAP7 ADD DUP6 SSTORE DUP5 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP INVALID 0xE2 DELEGATECALL 0xEA 0xAE BLOBBASEFEE SWAP8 MLOAD 0xE8 GAS RETURNDATACOPY BLOBBASEFEE PUSH28 0x9587827A877F29914755229B07A7B2DA98285F70A264697066735822 SLT KECCAK256 SIGNEXTEND 0x2D SWAP13 EQ PUSH30 0x6C2E67C0DF5428313F0FFB94BCBF214C3C9EA38F7CD4FE7286667B64736F PUSH13 0x634300081C00332F8788117E7E SELFDESTRUCT SAR DUP3 0xE9 0x26 0xEC PUSH26 0x4901D17C78024A50270940304540A733656F0DE2F4EAAE4A9751 0xE8 GAS RETURNDATACOPY BLOBBASEFEE PUSH28 0x9587827A877F29914755229B07A7B2DA98285F70059F08E7D7BA1C82 0xED 0xDC JUMPI 0xAF 0xAE PUSH8 0xF80DF851BAF38A09 SWAP7 SMOD 0xA7 PUSH26 0x825038C3CE5BAD3228B676F7D3CD4284A5443F17F1962B36E491 0xB3 EXP BLOCKHASH 0xB2 BLOCKHASH PC BLOBHASH 0xE5 SWAP8 0xBA PUSH0 0xB5 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800F0 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x7066735822122063E85E 0xE7 0xA8 0x24 BLOBBASEFEE 0xBA 0xD0 ORIGIN 0xB3 0xEC JUMPI CALLDATACOPY 0xE0 0xDF LOG0 DIV DUP7 PUSH26 0x10B45709B67A4CB6E869668264736F6C634300081C0033F0C57E AND DUP5 0xD CREATE BLOCKHASH CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 ","sourceMap":"1575:4932:32:-:0;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;1623:37:1;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;;;;7894:76:2;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;7983:34:2;7979:146;;-1:-1:-1;1575:4932:32;;;;;;;;1623:37:1;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;;;;;7979:146:2;-1:-1:-1;;;;;;1575:4932:32;-1:-1:-1;;;;;1575:4932:32;;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;;;;8085:29:2;;1575:4932:32;;8085:29:2;7979:146;;;7894:76;7936:23;;;-1:-1:-1;7936:23:2;;-1:-1:-1;7936:23:2;1575:4932:32;-1:-1:-1;1575:4932:32;;;;;;-1:-1:-1;1575:4932:32;;;;;-1:-1:-1;1575:4932:32"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2523,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_9345":{"entryPoint":2545,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dynt_uint256t_addresst_bytes32":{"entryPoint":2621,"id":null,"parameterSlots":1,"returnSlots":4},"abi_encode_address_array_address_dyn_uint256_address_bytes32":{"entryPoint":2864,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":2804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_uint256_address_address":{"entryPoint":2929,"id":null,"parameterSlots":5,"returnSlots":1},"bytes_concat_bytes_bytes":{"entryPoint":3954,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2567,"id":null,"parameterSlots":2,"returnSlots":0},"fun_calculateSalt":{"entryPoint":4249,"id":10467,"parameterSlots":1,"returnSlots":1},"fun_checkRole":{"entryPoint":3125,"id":129,"parameterSlots":1,"returnSlots":0},"fun_checkRole_9355":{"entryPoint":2983,"id":129,"parameterSlots":0,"returnSlots":0},"fun_getRoleAdmin":{"entryPoint":null,"id":171,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":3796,"id":315,"parameterSlots":2,"returnSlots":1},"fun_grantRole_9350":{"entryPoint":3217,"id":315,"parameterSlots":1,"returnSlots":1},"fun_grantRole_9351":{"entryPoint":3392,"id":315,"parameterSlots":1,"returnSlots":1},"fun_grantRole_9352":{"entryPoint":3594,"id":315,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":4326,"id":457,"parameterSlots":0,"returnSlots":1},"fun_predictProxyAddress":{"entryPoint":4018,"id":10513,"parameterSlots":3,"returnSlots":1},"fun_revokeRole":{"entryPoint":4080,"id":361,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"376":[{"length":32,"start":547},{"length":32,"start":1397},{"length":32,"start":1476},{"length":32,"start":2125},{"length":32,"start":4329}]},"linkReferences":{},"object":"6080806040526004361015610012575f80fd5b5f905f3560e01c90816301ffc9a71461096e57508063229fff6014610931578063248a9ca3146108f25780632f2ff15d146108a85780632f7efa2f1461080e57806336568abe146107b8578063485cc955146106155780634cd18577146105f8578063572b6c05146105a45780637da0a877146105605780637fe6496d146101d15780638f940f631461019657806391d1485414610140578063a217fddf14610124578063bcbd9edb146101245763d547741f146100ce575f80fd5b346101215760403660031901126101215761011d6004356100ed6109f1565b90610118610113825f525f516020613e835f395f51905f52602052600160405f20015490565b610c35565b610ff0565b5080f35b80fd5b5034610121578060031936011261012157602090604051908152f35b503461012157604036600319011261012157604061015c6109f1565b9160043581525f516020613e835f395f51905f52602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b503461012157806003193601126101215760206040517f3ae60f3cee742e6943392a49179dab2c5e2991d2396b7cf8b808581ecb951bfd8152f35b50346104675761020d61024c61025a61021b6101ec36610a3d565b6101fa969392949196610ba7565b6040519788918887863060208701610b30565b03601f198101885287610a07565b6040519485937f00000000000000000000000000000000000000000000000000000000000000009260208601610b71565b03601f198101835282610a07565b60405190612d0f61026e6020820184610a07565b8083526111546020840139610284838284610fb2565b61028c610ba7565b6001600160a01b03165f8181526001602052604090205490939060ff1661054d57906102ba6102c092611099565b92610f72565b80511561053e576020815191015ff53d151981151661045c576001600160a01b031690811561052f57810361052057805f52600160205260405f20600160ff198254161790556004602060018060a01b035f5416604051928380926398468e5160e01b82525afa90811561045c575f916104de575b506001600160a01b03168015158061046b575b610417575b506001600160a01b0361035e6110e6565b169060405191817fdd4f4edaf8af94a1c44f788ac4e78153a8fe0110733f3090d0c6ac09eab172988580a3600254680100000000000000008110156104035760018101806002558110156103ef576002602094527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01816bffffffffffffffffffffffff60a01b8254161790558152f35b634e487b7160e01b84526032600452602484fd5b634e487b7160e01b84526041600452602484fd5b803b15610467575f8091602460405180948193631105e3d560e31b83528760048401525af1801561045c571561034d576104549192505f90610a07565b5f905f61034d565b6040513d5f823e3d90fd5b5f80fd5b506040516301ffc9a760e01b815263118f21f760e31b6004820152602081602481855afa90811561045c575f916104a3575b50610348565b90506020813d6020116104d6575b816104be60209383610a07565b8101031261046757518015158103610467575f61049d565b3d91506104b1565b90506020813d602011610518575b816104f960209383610a07565b8101031261046757516001600160a01b0381168103610467575f610335565b3d91506104ec565b6335279f5d60e21b5f5260045ffd5b63b06ebf3d60e01b5f5260045ffd5b631328927760e21b5f5260045ffd5b8363d0dc594960e01b5f5260045260245ffd5b34610467575f366003190112610467576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346104675760203660031901126104675760206105bf6109db565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610467575f366003190112610467576020600254604051908152f35b346104675760403660031901126104675761062e6109db565b6106366109f1565b905f516020613ea35f395f51905f52549160ff8360401c16159267ffffffffffffffff8116801590816107b0575b60011490816107a6575b15908161079d575b5061078e5767ffffffffffffffff1981166001175f516020613ea35f395f51905f525583610762575b5060ff5f516020613ea35f395f51905f525460401c161561075357806106c76106d792610c91565b506106d181610d40565b50610e0a565b5060018060a01b03166bffffffffffffffffffffffff60a01b5f5416175f556106fc57005b68ff0000000000000000195f516020613ea35f395f51905f5254165f516020613ea35f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b631afcd79f60e31b5f5260045ffd5b68ffffffffffffffffff191668010000000000000001175f516020613ea35f395f51905f52558361069f565b63f92ee8a960e01b5f5260045ffd5b90501585610676565b303b15915061066e565b859150610664565b34610467576040366003190112610467576107d16109f1565b6001600160a01b036107e16110e6565b166001600160a01b038216036107ff576107fd90600435610ff0565b005b63334bd91960e11b5f5260045ffd5b3461046757602061089661020d61024c61087561084561082d36610a3d565b604096939294919651978891888786308f8701610b30565b6040519485937f0000000000000000000000000000000000000000000000000000000000000000928a8601610b71565b604051612d0f61088786820183610a07565b80825261115486830139610fb2565b6040516001600160a01b039091168152f35b34610467576040366003190112610467576107fd6004356108c76109f1565b906108ed610113825f525f516020613e835f395f51905f52602052600160405f20015490565b610ed4565b346104675760203660031901126104675760206109296004355f525f516020613e835f395f51905f52602052600160405f20015490565b604051908152f35b34610467576020366003190112610467576001600160a01b036109526109db565b165f526001602052602060ff60405f2054166040519015158152f35b34610467576020366003190112610467576004359063ffffffff60e01b82168092036104675760209163291e793360e21b81149081156109b0575b5015158152f35b637965db0b60e01b8114915081156109ca575b50836109a9565b6301ffc9a760e01b149050836109c3565b600435906001600160a01b038216820361046757565b602435906001600160a01b038216820361046757565b90601f8019910116810190811067ffffffffffffffff821117610a2957604052565b634e487b7160e01b5f52604160045260245ffd5b60806003198201126104675760043567ffffffffffffffff811161046757816023820112156104675780600401359167ffffffffffffffff8311610a29578260051b9160405193610a916020850186610a07565b84526024602085019382010191821161046757602401915b818310610ad457509192602435925090506044356001600160a01b0381168103610467579060643590565b82356001600160a01b038116810361046757815260209283019201610aa9565b90602080835192838152019201905f5b818110610b115750505090565b82516001600160a01b0316845260209384019390920191600101610b04565b91610b57906080949796959260018060a01b0316845260a0602085015260a0840190610af4565b60408301969096526001600160a01b031660608201520152565b92610b89606093969592608086526080860190610af4565b60208501969096526001600160a01b03908116604085015216910152565b610baf6110e6565b6001600160a01b0381165f9081527f8f7e9a8734279607aeaac474f24949ddc99eae25c0da72edcf5ad21022be2c9e602052604090205460ff1615610bf15750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004527ffc425f2263d0df187444b70e47283d622c70181c5baebb1306a01edba1ce184c602452604490fd5b610c3d6110e6565b815f525f516020613e835f395f51905f5260205260405f2060018060a01b0382165f5260205260ff60405f20541615610c74575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16610d3b576001600160a01b038181165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260409020805460ff19166001179055610d196110e6565b16906001600160a01b03165f5f516020613e635f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081527fb121b6c2cfb68d56d259fa39abd93d7a85e352365bbcbddf27041e20d031c3d3602052604090205460ff16610d3b576001600160a01b038181165f9081527fb121b6c2cfb68d56d259fa39abd93d7a85e352365bbcbddf27041e20d031c3d360205260409020805460ff19166001179055610dc86110e6565b16906001600160a01b03167fecaefa0171c08a6ded02d98b9432940d3852ef2c7f5007661eb8de37c5a1adc55f516020613e635f395f51905f525f80a4600190565b6001600160a01b0381165f9081527f8f7e9a8734279607aeaac474f24949ddc99eae25c0da72edcf5ad21022be2c9e602052604090205460ff16610d3b576001600160a01b038181165f9081527f8f7e9a8734279607aeaac474f24949ddc99eae25c0da72edcf5ad21022be2c9e60205260409020805460ff19166001179055610e926110e6565b16906001600160a01b03167ffc425f2263d0df187444b70e47283d622c70181c5baebb1306a01edba1ce184c5f516020613e635f395f51905f525f80a4600190565b5f8181525f516020613e835f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16610f6c575f8181525f516020613e835f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff19166001179055610f4a6110e6565b16916001600160a01b0316905f516020613e635f395f51905f525f80a4600190565b50505f90565b610fb0906020808095946040519684889551918291018487015e8401908282015f8152815193849201905e01015f815203601f198101845283610a07565b565b90610fc2906102ba600b94611099565b602081519101209060405191604083015260208201523081520160ff8153605590206001600160a01b031690565b5f8181525f516020613e835f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615610f6c575f8181525f516020613e835f395f51905f52602090815260408083206001600160a01b0386811685529252909120805460ff191690556110646110e6565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b6040516110e06080826020808201953087526040808401528051918291826060860152018484015e5f838284010152601f801991011681010301601f198101835282610a07565b51902090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611148575b15611144576013193601368111611130573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b50601436101561111856fe60a06040523461023a57612d0f8038038061001981610252565b928339810160808282031261023a5781516001600160401b03811161023a5782019080601f8301121561023a578151916001600160401b03831161023e578260051b9060208061006a818501610252565b80968152019282010192831161023a57602001905b828210610222575050506020820151916100a760606100a060408401610277565b9201610277565b60805260016003558151908115801561021a575b8015610211575b6101fa576100cf8161028b565b6101b8575b505f5b818110610146576007849055837f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b036101176103a5565b1692604051908152a260405161283e90816104518239608051818181610ba401528181610c9b015261237c0152f35b82518110156101a457600581901b830160200151600191906001600160a01b031661017081610314565b61017c575b50016100d7565b61019d905f516020612caf5f395f51905f525f528360205260405f206103f4565b505f610175565b634e487b7160e01b5f52603260045260245ffd5b5f805260016020526101f3906001600160a01b03167fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496103f4565b505f6100d4565b50826306a0ee3160e31b5f5260045260245260445ffd5b508184116100c2565b5083156100bb565b6020809161022f84610277565b81520191019061007f565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b0381118382101761023e57604052565b51906001600160a01b038216820361023a57565b6001600160a01b0381165f9081525f516020612cef5f395f51905f52602052604090205460ff1661030f576001600160a01b038181165f9081525f516020612cef5f395f51905f5260205260409020805460ff191660011790556102ed6103a5565b16906001600160a01b03165f5f516020612c8f5f395f51905f528180a4600190565b505f90565b6001600160a01b0381165f9081525f516020612ccf5f395f51905f52602052604090205460ff1661030f576001600160a01b038181165f9081525f516020612ccf5f395f51905f5260205260409020805460ff191660011790556103766103a5565b16906001600160a01b03165f516020612caf5f395f51905f525f516020612c8f5f395f51905f525f80a4600190565b6080516001600160a01b03163314806103e9575b156103e55760131936013681116103d1573560601c90565b634e487b7160e01b5f52601160045260245ffd5b3390565b5060143610156103b9565b6001810190825f528160205260405f2054155f146104495780546801000000000000000081101561023e57600181018083558110156101a4578390825f5260205f20015554915f5260205260405f2055600190565b5050505f9056fe6080806040526004361015610069575b50361561001a575f80fd5b610022611cf3565b61002a612379565b604080513481524760208201526001600160a01b03909216917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159190a2005b5f3560e01c90816301ffc9a7146116315750806308aff933146115dd5780630f05205614611423578063205e7c061461123857806320c5429b14611155578063248a9ca3146111235780632f2ff15d146110be5780633411c81c1461107557806336568abe146110215780633f4ba83a14610fbc57806346bd084114610e8f57806346e24b0814610da157806346f0975a14610ccf578063572b6c0514610c7b5780635c975abb14610c595780636239152014610bd35780637da0a87714610b8f5780638456cb5914610b245780638f56015f14610a615780639010d07c14610a1b57806391d14854146109d35780639ace38c214610916578063a1ebf35d146108ef578063a217fddf146108d5578063a3246ad314610865578063aa787c1e14610763578063b756393014610306578063b779e1c014610691578063ba0179b51461064e578063c13138f114610391578063ca15c87314610367578063d547741f14610323578063dc8452cd146103065763ee0e6f65146101eb575f61000f565b34610302576080366003190112610302576102046116b4565b61020c61169e565b9060443591606435916001600160401b038311610302576020937f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b9336102f59361025c6102ec9636906004016117eb565b9290610266611bbf565b61026e611cf3565b610276611d0e565b61027e612379565b60405163a9059cbb60e01b8b8201526001600160a01b0385166024820152604480820188905281529096906102ca906102b860648261198d565b6102c3368886611a77565b9083611d7d565b98899560405193849360018060a01b03169860018060a01b038b169785611b10565b0390a4826121a9565b6001600355604051908152f35b5f80fd5b34610302575f366003190112610302576020600754604051908152f35b346103025760403660031901126103025761036560043561034261169e565b9061036061035b825f525f602052600160405f20015490565b611ca2565b61233f565b005b34610302576020366003190112610302576004355f526001602052602060405f2054604051908152f35b346103025760a0366003190112610302576004356001600160401b038111610302576103c19036906004016116ca565b6024356001600160401b038111610302576103e09036906004016116ca565b6044356001600160401b038111610302576103ff9036906004016116ca565b9490936064356001600160401b038111610302576104219036906004016116ca565b9290966084356001600160401b038111610302576104439036906004016116ca565b95909161044e611bbf565b610456611cf3565b61045e611d0e565b841561063f57818514801590610635575b801561062b575b8015610621575b6106125761048c979397612379565b96610496866119c5565b996001600160a01b038916955f5b8881106104c2576001600355604051806104be8f8261178e565b0390f35b8a8d8f8c8f8c8c8f928c8c8f92888c8f8f829c90838f96818f988f828f8f8f918f92849f92859c968697948f95886104fe8180999781986119f7565b61050790611baa565b9261051192611a1b565b9061051b92611b34565b94610526918c6119f7565b61052f90611a07565b9561053a918d6119f7565b359361054592611a1b565b369061055092611a77565b9161055a93611fd2565b6105648284611aad565b5261056e91611aad565b519e610579926119f7565b61058290611a07565b9961058c926119f7565b3596610597926119f7565b6105a090611baa565b996105aa92611a1b565b926105b6929196611a1b565b91604051958695600160a01b6001900316996105d29587611b6e565b037fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd1691a46105ff91611aad565b519061060a916121a9565b6001016104a4565b63512509d360e11b5f5260045ffd5b508685141561047d565b5085851415610476565b508085141561046f565b637dc57e7b60e01b5f5260045ffd5b3461030257602036600319011261030257610667611bbf565b61066f611cf3565b610677611d0e565b61068a610682612379565b6004356121a9565b6001600355005b34610302576020366003190112610302576004356006548082101561071f5750805f52600460205260405f20546106c7816119c5565b915f5b8281106106df57604051806104be8682611818565b600190825f5260046020526106f78160405f20612589565b838060a01b0391549060031b1c1661070f8287611aad565b90838060a01b03169052016106ca565b801561075b575f19810190811161074757905b632d71397360e11b5f5260045260245260445ffd5b634e487b7160e01b5f52601160045260245ffd5b505f90610732565b346103025760a03660031901126103025761077c6116b4565b602435906044356001600160e01b031981168103610302576064356001600160401b038111610302576107b39036906004016117eb565b91608435926001600160401b038411610302576020957fd1048e3510dfda1faa9bde9bcf936dc0c15b5bb24c1f9b7d795959fb476ecd166107fb6102f59636906004016117eb565b959097610806611bbf565b61080e611cf3565b610816611d0e565b6102ec610821612379565b9761084361083088868b611b34565b61083b36848f611a77565b908886611fd2565b9a8b9760405195869560018060a01b03169a60018060a01b038d169987611b6e565b34610302576020366003190112610302576004355f52600160205260405f206040519081602082549182815201915f5260205f20905f5b8181106108bf576104be856108b38187038261198d565b60405191829182611818565b825484526020909301926001928301920161089c565b34610302575f3660031901126103025760206040515f8152f35b34610302575f3660031901126103025760206040515f5160206127e95f395f51905f528152f35b34610302576020366003190112610302576004356006548110156103025761093d9061185a565b5060018060a01b038154166104be60018301549260056040519161096f8361096881600285016118dd565b038461198d565b6109b960ff6003830154169361099b60048401549361099460405180978193016118dd565b038561198d565b6040519788978852602088015260c0604088015260c08701906117c7565b9215156060860152608085015283820360a08501526117c7565b34610302576040366003190112610302576109ec61169e565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004355f5260016020526020610a4860405f2060243590612589565b905460405160039290921b1c6001600160a01b03168152f35b3461030257602036600319011261030257600435610a7d611c3a565b5f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df85481158015610b1b575b610b05575060078190557f9e0800728e995ca040f68d19b1bcc1b4ae0420ed8190fabb5fa564e2961eb7d560206001600160a01b03610afa612379565b1692604051908152a2005b906306a0ee3160e31b5f5260045260245260445ffd5b50808211610abd565b34610302575f36600319011261030257610b3c611c3a565b610b44611cf3565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020610b7c612379565b6040516001600160a01b039091168152a1005b34610302575f366003190112610302576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610302576020366003190112610302576004356001600160401b03811161030257610c039036906004016116ca565b90610c0c611bbf565b610c14611cf3565b610c1c611d0e565b811561063f57610c2a612379565b905f5b838110610c3b576001600355005b80610c5384610c4d60019488876119f7565b356121a9565b01610c2d565b34610302575f36600319011261030257602060ff600254166040519015158152f35b34610302576020366003190112610302576020610c966116b4565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610302575f366003190112610302575f5160206127e95f395f51905f525f5260016020527fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df854610d1f816119c5565b905f5b818110610d3757604051806104be8582611818565b5f5160206127e95f395f51905f525f526001602081905290610d79817fb1a26a75446b1d67f01afe7a745dc85c05c9752b7d1cdfcd19e8f115973e8df8612589565b838060a01b0391549060031b1c16610d918286611aad565b90838060a01b0316905201610d22565b3461030257608036600319011261030257610dba6116b4565b6024356044356001600160401b03811161030257610ddc9036906004016117eb565b92606435916001600160401b038311610302576020947fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd94610e256102f59536906004016117eb565b969092610e30611bbf565b610e38611cf3565b610e40611d0e565b610e48612379565b956102ec610e6d610e5a36858a611a77565b610e65368d8a611a77565b908785611fd2565b998a9660405194859460018060a01b03169960018060a01b038c169886611ae1565b3461030257602036600319011261030257600435606060a0604051610eb38161195e565b5f81525f60208201528260408201525f838201525f608082015201526006548082101561071f57610ee38261185a565b50604051610ef08161195e565b81546001600160a01b0316815260018201546020820190815260405190926104be9190600590610f278361096881600285016118dd565b60408501928352610f9b60ff60038301541693606087019415158552610f636004840154936080890194855261099460405180978193016118dd565b60a087019384526040519788976020895260018060a01b0390511660208901525160408801525160c0606088015260e08701906117c7565b9251151560808601525160a085015251838203601f190160c08501526117c7565b34610302575f36600319011261030257610fd4611c3a565b60025460ff8116156110125760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020610b7c612379565b638dfc202b60e01b5f5260045ffd5b346103025760403660031901126103025761103a61169e565b6001600160a01b0361104a612379565b166001600160a01b03821603611066576103659060043561233f565b63334bd91960e11b5f5260045ffd5b346103025760403660031901126103025761108e61169e565b6004355f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610302576040366003190112610302576004356110da61169e565b6110f261035b835f525f602052600160405f20015490565b6110fc8183612679565b61110257005b5f91825260016020526040909120610365916001600160a01b03169061279b565b3461030257602036600319011261030257602061114d6004355f525f602052600160405f20015490565b604051908152f35b3461030257602036600319011261030257600435611171611bbf565b611179611cf3565b611182816122dd565b61118a612379565b90825f5260046020526111b860405f209260018060a01b031680936001915f520160205260405f2054151590565b1561122157600490835f52816020526111d48360405f2061259e565b50835f52600560205260405f20835f5260205260405f2060ff198154169055015f1981540190557ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd555f80a3005b509063b29436e960e01b5f5260045260245260445ffd5b3461030257611246366116fa565b9296909591611253611bbf565b61125b611cf3565b611263611d0e565b821561063f57848314801590611419575b801561140f575b6106125761128a959195612379565b94611294846119c5565b976001600160a01b038716935f5b8681106112bc576001600355604051806104be8d8261178e565b808787878f8f8f868f928184878f8f908f858b8f926112de83809681936119f7565b6112e790611a07565b966112f1926119f7565b60405163a9059cbb60e01b60208201526001600160a01b0396909616602487015235604480870191909152855261132960648661198d565b611333918a6119f7565b61133c90611a07565b9361134692611a1b565b369061135192611a77565b9061135b92611d7d565b6113658284611aad565b5261136f91611aad565b519661137a926119f7565b61138390611a07565b9186611390818d8c6119f7565b61139990611a07565b946113a3926119f7565b35956113af918a611a1b565b6040516001600160a01b0390931696929384936113cd939185611b10565b037f97a1625ffe5fa52ea35b6d6808a64cf13bb4ab9bdce9643b7a97f09c8922b93391a4886113fc828d611aad565b5190611407916121a9565b6001016112a2565b508383141561127b565b5080831415611274565b3461030257611431366116fa565b61144097919397969296611bbf565b611448611cf3565b611450611d0e565b821561063f578483148015906115d3575b80156115c9575b61061257611477959195612379565b94611481846119c5565b976001600160a01b038716935f5b8681106114a9576001600355604051806104be8d8261178e565b878787878f8f8f82888c83828e96818f898f8f848f919e819f8b96839f6114d385809481936119f7565b6114dc90611a07565b986114e6926119f7565b35956114f192611a1b565b926114fd929194611a1b565b929091369061150b92611a77565b91369061151792611a77565b9161152193611fd2565b61152b8284611aad565b5261153591611aad565b519a611540926119f7565b61154990611a07565b95611554918d6119f7565b359361155f92611a1b565b9461156b929198611a1b565b90604051948594600160a01b6001900316986115879486611ae1565b037fa48c1b3842e6f2c3793e18d2b4fed84fc8c6d18c3687702a2b43492078551efd91a4886115b6828d611aad565b51906115c1916121a9565b60010161148f565b5080831415611468565b5086831415611461565b346103025760403660031901126103025760206116276115fb61169e565b600480355f90815290845260408082206001600160a01b03909316825260019092016020522054151590565b6040519015158152f35b34610302576020366003190112610302576004359063ffffffff60e01b821680920361030257602091635a05180f60e01b8114908115611673575b5015158152f35b637965db0b60e01b81149150811561168d575b508361166c565b6301ffc9a760e01b14905083611686565b602435906001600160a01b038216820361030257565b600435906001600160a01b038216820361030257565b9181601f84011215610302578235916001600160401b038311610302576020808501948460051b01011161030257565b6080600319820112610302576004356001600160401b0381116103025781611724916004016116ca565b929092916024356001600160401b0381116103025781611746916004016116ca565b929092916044356001600160401b0381116103025781611768916004016116ca565b92909291606435906001600160401b0382116103025761178a916004016116ca565b9091565b60206040818301928281528451809452019201905f5b8181106117b15750505090565b82518452602093840193909201916001016117a4565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610302578235916001600160401b038311610302576020838186019501011161030257565b60206040818301928281528451809452019201905f5b81811061183b5750505090565b82516001600160a01b031684526020938401939092019160010161182e565b6006548110156118915760065f81815291027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0191565b634e487b7160e01b5f52603260045260245ffd5b90600182811c921680156118d3575b60208310146118bf57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916118b4565b5f92918154916118ec836118a5565b8083529260018116908115611941575060011461190857505050565b5f9081526020812093945091925b838310611927575060209250010190565b600181602092949394548385870101520191019190611916565b915050602093945060ff929192191683830152151560051b010190565b60c081019081106001600160401b0382111761197957604052565b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761197957604052565b6001600160401b0381116119795760051b60200190565b906119cf826119ae565b6119dc604051918261198d565b82815280926119ed601f19916119ae565b0190602036910137565b91908110156118915760051b0190565b356001600160a01b03811681036103025790565b91908110156118915760051b81013590601e19813603018212156103025701908135916001600160401b038311610302576020018236038113610302579190565b6001600160401b03811161197957601f01601f191660200190565b929192611a8382611a5c565b91611a91604051938461198d565b829481845281830111610302578281602093845f960137010152565b80518210156118915760209160051b010190565b908060209392818452848401375f828201840152601f01601f1916010190565b9391611b0d9593611aff928652606060208701526060860191611ac1565b926040818503910152611ac1565b90565b611b0d949260609260018060a01b0316825260208201528160408201520191611ac1565b602490611b6c9294938060405196879363ffffffff60e01b1660208501528484013781015f838201520301601f19810184528361198d565b565b94929093611b9c92611b0d9795875263ffffffff60e01b166020870152608060408701526080860191611ac1565b926060818503910152611ac1565b356001600160e01b0319811681036103025790565b611bc7612379565b6001600160a01b0381165f9081527f059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5b602052604090205460ff1615611c095750565b63e2517d3f60e01b5f9081526001600160a01b03919091166004525f5160206127e95f395f51905f52602452604490fd5b611c42612379565b6001600160a01b0381165f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1615611c845750565b63e2517d3f60e01b5f5260018060a01b03166004525f60245260445ffd5b611caa612379565b5f828152602081815260408083206001600160a01b038516845290915290205460ff1615611cd6575050565b63e2517d3f60e01b5f5260018060a01b031660045260245260445ffd5b60ff60025416611cff57565b63d93c066560e01b5f5260045ffd5b600260035414611d1f576002600355565b633ee5aeb560e01b5f5260045ffd5b601f8211611d3b57505050565b5f5260205f20906020601f840160051c83019310611d73575b601f0160051c01905b818110611d68575050565b5f8155600101611d5d565b9091508190611d54565b929091926006549260405191611d928361195e565b6001600160a01b031682525f6020830181815260408401928352606084018281526080850192835260a08501978852919290600160401b8710156119795760018701600655611de08761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b03821161197957611e3382611e2d85546118a5565b85611d2e565b602090601f8311600114611f535782600597969593611e879593611e6c935f92611eea575b50508160011b915f199060031b1c19161790565b90555b511515600384019060ff801983541691151516179055565b5160048201550192519283516001600160401b03811161197957611eb581611eaf84546118a5565b84611d2e565b602094601f8211600114611ef557611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b9055565b015190505f80611e58565b601f19821695835f52805f20915f5b888110611f3b57508360019596979810611f23575b505050811b019055565b01515f1960f88460031b161c191690555f8080611f19565b91926020600181928685015181550194019201611f04565b90601f19831691845f52815f20925f5b818110611fa7575092600192859260059a999896611e87989610611f8f575b505050811b019055611e6f565b01515f1960f88460031b161c191690555f8080611f82565b92936020600181928786015181550195019301611f63565b634e487b7160e01b5f525f60045260245ffd5b90939192936006549360405192611fe88461195e565b60018060a01b03168352602083019182526040830190815260608301905f825260808401925f845260a08501978852600160401b87101561197957600187016006556120338761185a565b959095611fbf575185546001600160a01b0319166001600160a01b039190911617855551600185015551805160028501916001600160401b0382116119795761208082611e2d85546118a5565b602090601f831160011461215657826005979695936120b89593611e6c935f92611eea5750508160011b915f199060031b1c19161790565b5160048201550192519283516001600160401b038111611979576120e081611eaf84546118a5565b602094601f821160011461211157611ee69293949582915f92611eea5750508160011b915f199060031b1c19161790565b601f19821695835f52805f20915f5b88811061213e57508360019596979810611f2357505050811b019055565b91926020600181928685015181550194019201612120565b90601f19831691845f52815f20925f5b818110612191575092600192859260059a9998966120b8989610611f8f57505050811b019055611e6f565b92936020600181928786015181550195019301612166565b6121b2816122dd565b91815f52600460205260405f206121e060018060a01b03831680926001915f520160205260405f2054151590565b6122c757825f5260046020526121f98160405f2061279b565b50825f52600560205260405f20815f5260205260405f20600160ff1982541617905582600485019160018354018093557f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb633900415f80a36007541115806122b8575b61226157505050565b61226b90826123d2565b15612274575050565b8154604051635f226afd60e11b815260048101929092526001600160a01b03166024820152606060448201529081906122b49060648301906002016118dd565b0390fd5b5060ff60038401541615612258565b826347b467b960e11b5f5260045260245260445ffd5b906006548083101561231657506122f38261185a565b509160ff6003840154166123045750565b6393fbc70960e01b5f5260045260245ffd5b9050801561075b575f1981019081116107475790632d71397360e11b5f5260045260245260445ffd5b612349828261270e565b918261235457505090565b5f91825260016020526040909120612375916001600160a01b03169061259e565b5090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806123c7575b156123c3576013193601368111610747573560601c90565b3390565b5060143610156123ab565b6123db8161185a565b509160038301805460ff811661257f5760019060ff191617815560018060a01b0384541660018501546002860190604051915f9080549061241b826118a5565b91600181169081156125685750600114612536575b5050915f939181859403925af13d15612531573d61244d81611a5c565b9061245b604051928361198d565b81525f60203d92013e5b15612521575081906001600160a01b03167f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac5f80a3805f52600460205260405f20545f5b8181106124be5750505060045f910155600190565b825f52600460205260405f2090815415611891575f9182526020808320548584526005825260408085206001600160a01b03909216808652918352808520805460ff191690558685526004909252922060019261251a9161259e565b50016124a9565b805460ff19169055505f92915050565b612465565b9091505f5260205f205f905b82821061255457505082018183612430565b600181602092548488015201910190612542565b60ff19168652505080151502830190508183612430565b5050505050600190565b8054821015611891575f5260205f2001905f90565b906001820191815f528260205260405f20548015155f14612671575f1981018181116107475782545f1981019190821161074757818103612626575b50505080548015612612575f1901906125f38282612589565b8154905f199060031b1b19169055555f526020525f6040812055600190565b634e487b7160e01b5f52603160045260245ffd5b61265c6126366126469386612589565b90549060031b1c92839286612589565b819391549060031b91821b915f19901b19161790565b90555f528360205260405f20555f80806125da565b505050505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff191660011790556126d3612379565b16916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5f80a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615612708575f818152602081815260408083206001600160a01b0386811685529252909120805460ff19169055612766612379565b16916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b5f80a4600190565b5f82815260018201602052604090205461270857805490600160401b82101561197957826127d3612646846001809601855584612589565b90558054925f520160205260405f205560019056fee2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70a26469706673582212200b2d9c147d6c2e67c0df5428313f0ffb94bcbf214c3c9ea38f7cd4fe7286667b64736f6c634300081c00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0de2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f70059f08e7d7ba1c82eddc57afae67f80df851baf38a099607a779825038c3ce5bad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb52f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a264697066735822122063e85ee7a8244abad032b3ec5737e0dfa004867910b45709b67a4cb6e869668264736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x96E JUMPI POP DUP1 PUSH4 0x229FFF60 EQ PUSH2 0x931 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x8F2 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x8A8 JUMPI DUP1 PUSH4 0x2F7EFA2F EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x4CD18577 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x7FE6496D EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x8F940F63 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xBCBD9EDB EQ PUSH2 0x124 JUMPI PUSH4 0xD547741F EQ PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x11D PUSH1 0x4 CALLDATALOAD PUSH2 0xED PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH2 0x118 PUSH2 0x113 DUP3 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x121 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x40 PUSH2 0x15C PUSH2 0x9F1 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x121 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3AE60F3CEE742E6943392A49179DAB2C5E2991D2396B7CF8B808581ECB951BFD DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x467 JUMPI PUSH2 0x20D PUSH2 0x24C PUSH2 0x25A PUSH2 0x21B PUSH2 0x1EC CALLDATASIZE PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x1FA SWAP7 SWAP4 SWAP3 SWAP5 SWAP2 SWAP7 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP2 DUP9 DUP8 DUP7 ADDRESS PUSH1 0x20 DUP8 ADD PUSH2 0xB30 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP9 MSTORE DUP8 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x0 SWAP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB71 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2D0F PUSH2 0x26E PUSH1 0x20 DUP3 ADD DUP5 PUSH2 0xA07 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1154 PUSH1 0x20 DUP5 ADD CODECOPY PUSH2 0x284 DUP4 DUP3 DUP5 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 SWAP1 PUSH1 0xFF AND PUSH2 0x54D JUMPI SWAP1 PUSH2 0x2BA PUSH2 0x2C0 SWAP3 PUSH2 0x1099 JUMP JUMPDEST SWAP3 PUSH2 0xF72 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x53E JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD PUSH0 CREATE2 RETURNDATASIZE ISZERO NOT DUP2 ISZERO AND PUSH2 0x45C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x52F JUMPI DUP2 SUB PUSH2 0x520 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x98468E51 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x45C JUMPI PUSH0 SWAP2 PUSH2 0x4DE JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO DUP1 PUSH2 0x46B JUMPI JUMPDEST PUSH2 0x417 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x35E PUSH2 0x10E6 JUMP JUMPDEST AND SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP2 PUSH32 0xDD4F4EDAF8AF94A1C44F788AC4E78153A8FE0110733F3090D0C6AC09EAB17298 DUP6 DUP1 LOG3 PUSH1 0x2 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x403 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x2 SSTORE DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x2 PUSH1 0x20 SWAP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1105E3D5 PUSH1 0xE3 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x45C JUMPI ISZERO PUSH2 0x34D JUMPI PUSH2 0x454 SWAP2 SWAP3 POP PUSH0 SWAP1 PUSH2 0xA07 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x118F21F7 PUSH1 0xE3 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x45C JUMPI PUSH0 SWAP2 PUSH2 0x4A3 JUMPI JUMPDEST POP PUSH2 0x348 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4D6 JUMPI JUMPDEST DUP2 PUSH2 0x4BE PUSH1 0x20 SWAP4 DUP4 PUSH2 0xA07 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x467 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x467 JUMPI PUSH0 PUSH2 0x49D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x518 JUMPI JUMPDEST DUP2 PUSH2 0x4F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xA07 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x467 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x467 JUMPI PUSH0 PUSH2 0x335 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4EC JUMP JUMPDEST PUSH4 0x35279F5D PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0xB06EBF3D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x13289277 PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST DUP4 PUSH4 0xD0DC5949 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x20 PUSH2 0x5BF PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH2 0x62E PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x636 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x7B0 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x7A6 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x79D JUMPI JUMPDEST POP PUSH2 0x78E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE DUP4 PUSH2 0x762 JUMPI JUMPDEST POP PUSH1 0xFF PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x753 JUMPI DUP1 PUSH2 0x6C7 PUSH2 0x6D7 SWAP3 PUSH2 0xC91 JUMP JUMPDEST POP PUSH2 0x6D1 DUP2 PUSH2 0xD40 JUMP JUMPDEST POP PUSH2 0xE0A JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH2 0x6FC JUMPI STOP JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD AND PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3EA3 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE DUP4 PUSH2 0x69F JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH2 0x676 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x66E JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x664 JUMP JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH2 0x7D1 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7E1 PUSH2 0x10E6 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x7FF JUMPI PUSH2 0x7FD SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xFF0 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 PUSH2 0x896 PUSH2 0x20D PUSH2 0x24C PUSH2 0x875 PUSH2 0x845 PUSH2 0x82D CALLDATASIZE PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 SWAP7 SWAP4 SWAP3 SWAP5 SWAP2 SWAP7 MLOAD SWAP8 DUP9 SWAP2 DUP9 DUP8 DUP7 ADDRESS DUP16 DUP8 ADD PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x0 SWAP3 DUP11 DUP7 ADD PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0F PUSH2 0x887 DUP7 DUP3 ADD DUP4 PUSH2 0xA07 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH2 0x1154 DUP7 DUP4 ADD CODECOPY PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH2 0x7FD PUSH1 0x4 CALLDATALOAD PUSH2 0x8C7 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH2 0x8ED PUSH2 0x113 DUP3 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xED4 JUMP JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x20 PUSH2 0x929 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x952 PUSH2 0x9DB JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x467 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x467 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x467 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x291E7933 PUSH1 0xE2 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x9B0 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x9CA JUMPI JUMPDEST POP DUP4 PUSH2 0x9A9 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x467 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x467 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA29 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x467 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x467 JUMPI DUP2 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x467 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA29 JUMPI DUP3 PUSH1 0x5 SHL SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xA91 PUSH1 0x20 DUP6 ADD DUP7 PUSH2 0xA07 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP4 DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x467 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xAD4 JUMPI POP SWAP2 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP3 POP SWAP1 POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x467 JUMPI SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x467 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xAA9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB11 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB04 JUMP JUMPDEST SWAP2 PUSH2 0xB57 SWAP1 PUSH1 0x80 SWAP5 SWAP8 SWAP7 SWAP6 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP3 PUSH2 0xB89 PUSH1 0x60 SWAP4 SWAP7 SWAP6 SWAP3 PUSH1 0x80 DUP7 MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xBAF PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8F7E9A8734279607AEAAC474F24949DDC99EAE25C0DA72EDCF5AD21022BE2C9E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBF1 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH32 0xFC425F2263D0DF187444B70E47283D622C70181C5BAEBB1306A01EDBA1CE184C PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0x10E6 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC74 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xD19 PUSH2 0x10E6 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E63 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xB121B6C2CFB68D56D259FA39ABD93D7A85E352365BBCBDDF27041E20D031C3D3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xB121B6C2CFB68D56D259FA39ABD93D7A85E352365BBCBDDF27041E20D031C3D3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDC8 PUSH2 0x10E6 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xECAEFA0171C08A6DED02D98B9432940D3852EF2C7F5007661EB8DE37C5A1ADC5 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E63 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8F7E9A8734279607AEAAC474F24949DDC99EAE25C0DA72EDCF5AD21022BE2C9E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8F7E9A8734279607AEAAC474F24949DDC99EAE25C0DA72EDCF5AD21022BE2C9E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE92 PUSH2 0x10E6 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFC425F2263D0DF187444B70E47283D622C70181C5BAEBB1306A01EDBA1CE184C PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E63 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF6C JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xF4A PUSH2 0x10E6 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E63 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xFB0 SWAP1 PUSH1 0x20 DUP1 DUP1 SWAP6 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP5 DUP9 SWAP6 MLOAD SWAP2 DUP3 SWAP2 ADD DUP5 DUP8 ADD MCOPY DUP5 ADD SWAP1 DUP3 DUP3 ADD PUSH0 DUP2 MSTORE DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD SWAP1 MCOPY ADD ADD PUSH0 DUP2 MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0xA07 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xFC2 SWAP1 PUSH2 0x2BA PUSH1 0xB SWAP5 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF6C JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x3E83 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1064 PUSH2 0x10E6 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E0 PUSH1 0x80 DUP3 PUSH1 0x20 DUP1 DUP3 ADD SWAP6 ADDRESS DUP8 MSTORE PUSH1 0x40 DUP1 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x60 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xA07 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1148 JUMPI JUMPDEST ISZERO PUSH2 0x1144 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x1130 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x1118 JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23A JUMPI PUSH2 0x2D0F DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x252 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x23A JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23A JUMPI DUP3 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x23A JUMPI DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x23E JUMPI DUP3 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 DUP1 PUSH2 0x6A DUP2 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST DUP1 SWAP7 DUP2 MSTORE ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x23A JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x222 JUMPI POP POP POP PUSH1 0x20 DUP3 ADD MLOAD SWAP2 PUSH2 0xA7 PUSH1 0x60 PUSH2 0xA0 PUSH1 0x40 DUP5 ADD PUSH2 0x277 JUMP JUMPDEST SWAP3 ADD PUSH2 0x277 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x3 SSTORE DUP2 MLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x21A JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x1FA JUMPI PUSH2 0xCF DUP2 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x1B8 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x146 JUMPI PUSH1 0x7 DUP5 SWAP1 SSTORE DUP4 PUSH32 0x9E0800728E995CA040F68D19B1BCC1B4AE0420ED8190FABB5FA564E2961EB7D5 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x117 PUSH2 0x3A5 JUMP JUMPDEST AND SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x40 MLOAD PUSH2 0x283E SWAP1 DUP2 PUSH2 0x451 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xBA4 ADD MSTORE DUP2 DUP2 PUSH2 0xC9B ADD MSTORE PUSH2 0x237C ADD MSTORE RETURN JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 DUP2 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x17C JUMPI JUMPDEST POP ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x19D SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CAF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x3F4 JUMP JUMPDEST POP PUSH0 PUSH2 0x175 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1F3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH2 0x3F4 JUMP JUMPDEST POP PUSH0 PUSH2 0xD4 JUMP JUMPDEST POP DUP3 PUSH4 0x6A0EE31 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST POP DUP2 DUP5 GT PUSH2 0xC2 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBB JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x22F DUP5 PUSH2 0x277 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x23E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23A JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CEF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x30F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CEF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2ED PUSH2 0x3A5 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2C8F PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CCF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x30F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CCF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x376 PUSH2 0x3A5 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2CAF PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2C8F PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x3E9 JUMPI JUMPDEST ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x3D1 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH0 EQ PUSH2 0x449 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x1A4 JUMPI DUP4 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SSTORE SLOAD SWAP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x69 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x22 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x2A PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE SELFBALANCE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 SWAP1 LOG2 STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1631 JUMPI POP DUP1 PUSH4 0x8AFF933 EQ PUSH2 0x15DD JUMPI DUP1 PUSH4 0xF052056 EQ PUSH2 0x1423 JUMPI DUP1 PUSH4 0x205E7C06 EQ PUSH2 0x1238 JUMPI DUP1 PUSH4 0x20C5429B EQ PUSH2 0x1155 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1123 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x10BE JUMPI DUP1 PUSH4 0x3411C81C EQ PUSH2 0x1075 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1021 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xFBC JUMPI DUP1 PUSH4 0x46BD0841 EQ PUSH2 0xE8F JUMPI DUP1 PUSH4 0x46E24B08 EQ PUSH2 0xDA1 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0xCCF JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0xC7B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC59 JUMPI DUP1 PUSH4 0x62391520 EQ PUSH2 0xBD3 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0xB8F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB24 JUMPI DUP1 PUSH4 0x8F56015F EQ PUSH2 0xA61 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xA1B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x9D3 JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0xA1EBF35D EQ PUSH2 0x8EF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0xAA787C1E EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xB7563930 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xB779E1C0 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xBA0179B5 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xC13138F1 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x306 JUMPI PUSH4 0xEE0E6F65 EQ PUSH2 0x1EB JUMPI PUSH0 PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x204 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x169E JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP4 PUSH32 0x97A1625FFE5FA52EA35B6D6808A64CF13BB4AB9BDCE9643B7A97F09C8922B933 PUSH2 0x2F5 SWAP4 PUSH2 0x25C PUSH2 0x2EC SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x266 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x26E PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP12 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP1 SWAP7 SWAP1 PUSH2 0x2CA SWAP1 PUSH2 0x2B8 PUSH1 0x64 DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x2C3 CALLDATASIZE DUP9 DUP7 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x1D7D JUMP JUMPDEST SWAP9 DUP10 SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP8 DUP6 PUSH2 0x1B10 JUMP JUMPDEST SUB SWAP1 LOG4 DUP3 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x365 PUSH1 0x4 CALLDATALOAD PUSH2 0x342 PUSH2 0x169E JUMP JUMPDEST SWAP1 PUSH2 0x360 PUSH2 0x35B DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x233F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3C1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3E0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x3FF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP5 SWAP1 SWAP4 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x421 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP7 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x443 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP6 SWAP1 SWAP2 PUSH2 0x44E PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x456 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x45E PUSH2 0x1D0E JUMP JUMPDEST DUP5 ISZERO PUSH2 0x63F JUMPI DUP2 DUP6 EQ DUP1 ISZERO SWAP1 PUSH2 0x635 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x62B JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x621 JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x48C SWAP8 SWAP4 SWAP8 PUSH2 0x2379 JUMP JUMPDEST SWAP7 PUSH2 0x496 DUP7 PUSH2 0x19C5 JUMP JUMPDEST SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP6 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x4C2 JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP16 DUP3 PUSH2 0x178E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP11 DUP14 DUP16 DUP13 DUP16 DUP13 DUP13 DUP16 SWAP3 DUP13 DUP13 DUP16 SWAP3 DUP9 DUP13 DUP16 DUP16 DUP3 SWAP13 SWAP1 DUP4 DUP16 SWAP7 DUP2 DUP16 SWAP9 DUP16 DUP3 DUP16 DUP16 DUP16 SWAP2 DUP16 SWAP3 DUP5 SWAP16 SWAP3 DUP6 SWAP13 SWAP7 DUP7 SWAP8 SWAP5 DUP16 SWAP6 DUP9 PUSH2 0x4FE DUP2 DUP1 SWAP10 SWAP8 DUP2 SWAP9 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x507 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST SWAP3 PUSH2 0x511 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 PUSH2 0x51B SWAP3 PUSH2 0x1B34 JUMP JUMPDEST SWAP5 PUSH2 0x526 SWAP2 DUP13 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x52F SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP6 PUSH2 0x53A SWAP2 DUP14 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0x545 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x550 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 PUSH2 0x55A SWAP4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x564 DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x56E SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP15 PUSH2 0x579 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x582 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP10 PUSH2 0x58C SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP7 PUSH2 0x597 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x5A0 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST SWAP10 PUSH2 0x5AA SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 PUSH2 0x5B6 SWAP3 SWAP2 SWAP7 PUSH2 0x1A1B JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP10 PUSH2 0x5D2 SWAP6 DUP8 PUSH2 0x1B6E JUMP JUMPDEST SUB PUSH32 0xD1048E3510DFDA1FAA9BDE9BCF936DC0C15B5BB24C1F9B7D795959FB476ECD16 SWAP2 LOG4 PUSH2 0x5FF SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x60A SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4A4 JUMP JUMPDEST PUSH4 0x512509D3 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP DUP7 DUP6 EQ ISZERO PUSH2 0x47D JUMP JUMPDEST POP DUP6 DUP6 EQ ISZERO PUSH2 0x476 JUMP JUMPDEST POP DUP1 DUP6 EQ ISZERO PUSH2 0x46F JUMP JUMPDEST PUSH4 0x7DC57E7B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x667 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x66F PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x677 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x68A PUSH2 0x682 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x71F JUMPI POP DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x6C7 DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP7 DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x6F7 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x2589 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x70F DUP3 DUP8 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE ADD PUSH2 0x6CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75B JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x747 JUMPI SWAP1 JUMPDEST PUSH4 0x2D713973 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 SWAP1 PUSH2 0x732 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x77C PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0x7B3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP6 PUSH32 0xD1048E3510DFDA1FAA9BDE9BCF936DC0C15B5BB24C1F9B7D795959FB476ECD16 PUSH2 0x7FB PUSH2 0x2F5 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP6 SWAP1 SWAP8 PUSH2 0x806 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x80E PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x816 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x821 PUSH2 0x2379 JUMP JUMPDEST SWAP8 PUSH2 0x843 PUSH2 0x830 DUP9 DUP7 DUP12 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x83B CALLDATASIZE DUP5 DUP16 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP9 DUP7 PUSH2 0x1FD2 JUMP JUMPDEST SWAP11 DUP12 SWAP8 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP10 DUP8 PUSH2 0x1B6E JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x4BE DUP6 PUSH2 0x8B3 DUP2 DUP8 SUB DUP3 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1818 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x89C JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH2 0x93D SWAP1 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH2 0x4BE PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x96F DUP4 PUSH2 0x968 DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x18DD JUMP JUMPDEST SUB DUP5 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP4 PUSH2 0x99B PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST SUB DUP6 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP3 ISZERO ISZERO PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x17C7 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x9EC PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0xA48 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA7D PUSH2 0x1C3A JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 SLOAD DUP2 ISZERO DUP1 ISZERO PUSH2 0xB1B JUMPI JUMPDEST PUSH2 0xB05 JUMPI POP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH32 0x9E0800728E995CA040F68D19B1BCC1B4AE0420ED8190FABB5FA564E2961EB7D5 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAFA PUSH2 0x2379 JUMP JUMPDEST AND SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST SWAP1 PUSH4 0x6A0EE31 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST POP DUP1 DUP3 GT PUSH2 0xABD JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xB3C PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0xB44 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH2 0xB7C PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0xC03 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP1 PUSH2 0xC0C PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xC14 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xC1C PUSH2 0x1D0E JUMP JUMPDEST DUP2 ISZERO PUSH2 0x63F JUMPI PUSH2 0xC2A PUSH2 0x2379 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xC3B JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE STOP JUMPDEST DUP1 PUSH2 0xC53 DUP5 PUSH2 0xC4D PUSH1 0x1 SWAP5 DUP9 DUP8 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD PUSH2 0x21A9 JUMP JUMPDEST ADD PUSH2 0xC2D JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0xC96 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 SLOAD PUSH2 0xD1F DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP6 DUP3 PUSH2 0x1818 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 PUSH2 0xD79 DUP2 PUSH32 0xB1A26A75446B1D67F01AFE7A745DC85C05C9752B7D1CDFCD19E8F115973E8DF8 PUSH2 0x2589 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0xD91 DUP3 DUP7 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE ADD PUSH2 0xD22 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xDBA PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI PUSH2 0xDDC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 SWAP5 PUSH32 0xA48C1B3842E6F2C3793E18D2B4FED84FC8C6D18C3687702A2B43492078551EFD SWAP5 PUSH2 0xE25 PUSH2 0x2F5 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17EB JUMP JUMPDEST SWAP7 SWAP1 SWAP3 PUSH2 0xE30 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0xE38 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xE40 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0xE48 PUSH2 0x2379 JUMP JUMPDEST SWAP6 PUSH2 0x2EC PUSH2 0xE6D PUSH2 0xE5A CALLDATASIZE DUP6 DUP11 PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0xE65 CALLDATASIZE DUP14 DUP11 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 DUP8 DUP6 PUSH2 0x1FD2 JUMP JUMPDEST SWAP10 DUP11 SWAP7 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP9 DUP7 PUSH2 0x1AE1 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0xEB3 DUP2 PUSH2 0x195E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 DUP4 DUP3 ADD MSTORE PUSH0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x6 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x71F JUMPI PUSH2 0xEE3 DUP3 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEF0 DUP2 PUSH2 0x195E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 SWAP3 PUSH2 0x4BE SWAP2 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0xF27 DUP4 PUSH2 0x968 DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP3 DUP4 MSTORE PUSH2 0xF9B PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP4 PUSH1 0x60 DUP8 ADD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH2 0xF63 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP10 ADD SWAP5 DUP6 MSTORE PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0x20 DUP10 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x20 DUP10 ADD MSTORE MLOAD PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP3 MLOAD ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x17C7 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0xFD4 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1012 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH2 0xB7C PUSH2 0x2379 JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x103A PUSH2 0x169E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x104A PUSH2 0x2379 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1066 JUMPI PUSH2 0x365 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x233F JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH2 0x108E PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10DA PUSH2 0x169E JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x35B DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10FC DUP2 DUP4 PUSH2 0x2679 JUMP JUMPDEST PUSH2 0x1102 JUMPI STOP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x365 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x279B JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0x114D PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1171 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1179 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1182 DUP2 PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x118A PUSH2 0x2379 JUMP JUMPDEST SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x11B8 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 SWAP4 PUSH1 0x1 SWAP2 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1221 JUMPI PUSH1 0x4 SWAP1 DUP4 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH2 0x11D4 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x259E JUMP JUMPDEST POP DUP4 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH32 0xF0DCA620E2E81F7841D07BCC105E1704FB01475B278A9D4C236E1C62945EDD55 PUSH0 DUP1 LOG3 STOP JUMPDEST POP SWAP1 PUSH4 0xB29436E9 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH2 0x1246 CALLDATASIZE PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP7 SWAP1 SWAP6 SWAP2 PUSH2 0x1253 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x125B PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1263 PUSH2 0x1D0E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x63F JUMPI DUP5 DUP4 EQ DUP1 ISZERO SWAP1 PUSH2 0x1419 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x140F JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x128A SWAP6 SWAP2 SWAP6 PUSH2 0x2379 JUMP JUMPDEST SWAP5 PUSH2 0x1294 DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x12BC JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP14 DUP3 PUSH2 0x178E JUMP JUMPDEST DUP1 DUP8 DUP8 DUP8 DUP16 DUP16 DUP16 DUP7 DUP16 SWAP3 DUP2 DUP5 DUP8 DUP16 DUP16 SWAP1 DUP16 DUP6 DUP12 DUP16 SWAP3 PUSH2 0x12DE DUP4 DUP1 SWAP7 DUP2 SWAP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x12E7 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP7 PUSH2 0x12F1 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x24 DUP8 ADD MSTORE CALLDATALOAD PUSH1 0x44 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE PUSH2 0x1329 PUSH1 0x64 DUP7 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x1333 SWAP2 DUP11 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x133C SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP4 PUSH2 0x1346 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x1351 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 PUSH2 0x135B SWAP3 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x136F SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP7 PUSH2 0x137A SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1383 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP2 DUP7 PUSH2 0x1390 DUP2 DUP14 DUP13 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1399 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP5 PUSH2 0x13A3 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP6 PUSH2 0x13AF SWAP2 DUP11 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP7 SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x13CD SWAP4 SWAP2 DUP6 PUSH2 0x1B10 JUMP JUMPDEST SUB PUSH32 0x97A1625FFE5FA52EA35B6D6808A64CF13BB4AB9BDCE9643B7A97F09C8922B933 SWAP2 LOG4 DUP9 PUSH2 0x13FC DUP3 DUP14 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1407 SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12A2 JUMP JUMPDEST POP DUP4 DUP4 EQ ISZERO PUSH2 0x127B JUMP JUMPDEST POP DUP1 DUP4 EQ ISZERO PUSH2 0x1274 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH2 0x1431 CALLDATASIZE PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x1440 SWAP8 SWAP2 SWAP4 SWAP8 SWAP7 SWAP3 SWAP7 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1448 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1450 PUSH2 0x1D0E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x63F JUMPI DUP5 DUP4 EQ DUP1 ISZERO SWAP1 PUSH2 0x15D3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x15C9 JUMPI JUMPDEST PUSH2 0x612 JUMPI PUSH2 0x1477 SWAP6 SWAP2 SWAP6 PUSH2 0x2379 JUMP JUMPDEST SWAP5 PUSH2 0x1481 DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH0 JUMPDEST DUP7 DUP2 LT PUSH2 0x14A9 JUMPI PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BE DUP14 DUP3 PUSH2 0x178E JUMP JUMPDEST DUP8 DUP8 DUP8 DUP8 DUP16 DUP16 DUP16 DUP3 DUP9 DUP13 DUP4 DUP3 DUP15 SWAP7 DUP2 DUP16 DUP10 DUP16 DUP16 DUP5 DUP16 SWAP2 SWAP15 DUP2 SWAP16 DUP12 SWAP7 DUP4 SWAP16 PUSH2 0x14D3 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x14DC SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP9 PUSH2 0x14E6 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP6 PUSH2 0x14F1 SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 PUSH2 0x14FD SWAP3 SWAP2 SWAP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP3 SWAP1 SWAP2 CALLDATASIZE SWAP1 PUSH2 0x150B SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 CALLDATASIZE SWAP1 PUSH2 0x1517 SWAP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP2 PUSH2 0x1521 SWAP4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x152B DUP3 DUP5 PUSH2 0x1AAD JUMP JUMPDEST MSTORE PUSH2 0x1535 SWAP2 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP11 PUSH2 0x1540 SWAP3 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1549 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP6 PUSH2 0x1554 SWAP2 DUP14 PUSH2 0x19F7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0x155F SWAP3 PUSH2 0x1A1B JUMP JUMPDEST SWAP5 PUSH2 0x156B SWAP3 SWAP2 SWAP9 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP9 PUSH2 0x1587 SWAP5 DUP7 PUSH2 0x1AE1 JUMP JUMPDEST SUB PUSH32 0xA48C1B3842E6F2C3793E18D2B4FED84FC8C6D18C3687702A2B43492078551EFD SWAP2 LOG4 DUP9 PUSH2 0x15B6 DUP3 DUP14 PUSH2 0x1AAD JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x15C1 SWAP2 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x148F JUMP JUMPDEST POP DUP1 DUP4 EQ ISZERO PUSH2 0x1468 JUMP JUMPDEST POP DUP7 DUP4 EQ ISZERO PUSH2 0x1461 JUMP JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x20 PUSH2 0x1627 PUSH2 0x15FB PUSH2 0x169E JUMP JUMPDEST PUSH1 0x4 DUP1 CALLDATALOAD PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x302 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x302 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x5A05180F PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1673 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x168D JUMPI JUMPDEST POP DUP4 PUSH2 0x166C JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x302 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x302 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x302 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1724 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1746 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x302 JUMPI DUP2 PUSH2 0x1768 SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP3 SWAP1 SWAP3 SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x302 JUMPI PUSH2 0x178A SWAP2 PUSH1 0x4 ADD PUSH2 0x16CA JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x17B1 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17A4 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x302 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x302 JUMPI JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x183B JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x182E JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x6 PUSH0 DUP2 DUP2 MSTORE SWAP2 MUL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x18D3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18BF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18B4 JUMP JUMPDEST PUSH0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x18EC DUP4 PUSH2 0x18A5 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1941 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1908 JUMPI POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1927 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1979 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1979 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19CF DUP3 PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x198D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x19ED PUSH1 0x1F NOT SWAP2 PUSH2 0x19AE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x302 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x302 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x302 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1A83 DUP3 PUSH2 0x1A5C JUMP JUMPDEST SWAP2 PUSH2 0x1A91 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x198D JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x302 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x1B0D SWAP6 SWAP4 PUSH2 0x1AFF SWAP3 DUP7 MSTORE PUSH1 0x60 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x1AC1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B0D SWAP5 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH2 0x1B6C SWAP3 SWAP5 SWAP4 DUP1 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x198D JUMP JUMPDEST JUMP JUMPDEST SWAP5 SWAP3 SWAP1 SWAP4 PUSH2 0x1B9C SWAP3 PUSH2 0x1B0D SWAP8 SWAP6 DUP8 MSTORE PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x1AC1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x302 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x1BC7 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x59F08E7D7BA1C82EDDC57AFAE67F80DF851BAF38A099607A779825038C3CE5B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C09 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27E9 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH2 0x1C42 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C84 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH2 0x1CAA PUSH2 0x2379 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CD6 JUMPI POP POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x1CFF JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD EQ PUSH2 0x1D1F JUMPI PUSH1 0x2 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT PUSH2 0x1D3B JUMPI POP POP POP JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1D73 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D68 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D5D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D54 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1D92 DUP4 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH0 PUSH1 0x20 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP6 ADD SWAP8 DUP9 MSTORE SWAP2 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP8 LT ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x6 SSTORE PUSH2 0x1DE0 DUP8 PUSH2 0x185A JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x1FBF JUMPI MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1979 JUMPI PUSH2 0x1E33 DUP3 PUSH2 0x1E2D DUP6 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP6 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F53 JUMPI DUP3 PUSH1 0x5 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0x1E87 SWAP6 SWAP4 PUSH2 0x1E6C SWAP4 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x3 DUP5 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH2 0x1EB5 DUP2 PUSH2 0x1EAF DUP5 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP5 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1EF5 JUMPI PUSH2 0x1EE6 SWAP3 SWAP4 SWAP5 SWAP6 DUP3 SWAP2 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1F3B JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1F23 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1F04 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FA7 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x5 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0x1E87 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6F JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1F63 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 SWAP4 PUSH1 0x6 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1FE8 DUP5 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 PUSH0 DUP5 MSTORE PUSH1 0xA0 DUP6 ADD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP8 LT ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 DUP8 ADD PUSH1 0x6 SSTORE PUSH2 0x2033 DUP8 PUSH2 0x185A JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x1FBF JUMPI MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1979 JUMPI PUSH2 0x2080 DUP3 PUSH2 0x1E2D DUP6 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2156 JUMPI DUP3 PUSH1 0x5 SWAP8 SWAP7 SWAP6 SWAP4 PUSH2 0x20B8 SWAP6 SWAP4 PUSH2 0x1E6C SWAP4 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1979 JUMPI PUSH2 0x20E0 DUP2 PUSH2 0x1EAF DUP5 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2111 JUMPI PUSH2 0x1EE6 SWAP3 SWAP4 SWAP5 SWAP6 DUP3 SWAP2 PUSH0 SWAP3 PUSH2 0x1EEA JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x213E JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1F23 JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2120 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2191 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x5 SWAP11 SWAP10 SWAP9 SWAP7 PUSH2 0x20B8 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2166 JUMP JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x22DD JUMP JUMPDEST SWAP2 DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x21E0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 SWAP3 PUSH1 0x1 SWAP2 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x22C7 JUMPI DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x21F9 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x279B JUMP JUMPDEST POP DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 PUSH1 0x4 DUP6 ADD SWAP2 PUSH1 0x1 DUP4 SLOAD ADD DUP1 SWAP4 SSTORE PUSH32 0x5CBE105E36805F7820E291F799D5794FF948AF2A5F664E580382DEFB63390041 PUSH0 DUP1 LOG3 PUSH1 0x7 SLOAD GT ISZERO DUP1 PUSH2 0x22B8 JUMPI JUMPDEST PUSH2 0x2261 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x226B SWAP1 DUP3 PUSH2 0x23D2 JUMP JUMPDEST ISZERO PUSH2 0x2274 JUMPI POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5F226AFD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x22B4 SWAP1 PUSH1 0x64 DUP4 ADD SWAP1 PUSH1 0x2 ADD PUSH2 0x18DD JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND ISZERO PUSH2 0x2258 JUMP JUMPDEST DUP3 PUSH4 0x47B467B9 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x6 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x2316 JUMPI POP PUSH2 0x22F3 DUP3 PUSH2 0x185A JUMP JUMPDEST POP SWAP2 PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND PUSH2 0x2304 JUMPI POP JUMP JUMPDEST PUSH4 0x93FBC709 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x75B JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x747 JUMPI SWAP1 PUSH4 0x2D713973 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH2 0x2349 DUP3 DUP3 PUSH2 0x270E JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2354 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x2375 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x259E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x23C7 JUMPI JUMPDEST ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATASIZE DUP2 GT PUSH2 0x747 JUMPI CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST POP PUSH1 0x14 CALLDATASIZE LT ISZERO PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x23DB DUP2 PUSH2 0x185A JUMP JUMPDEST POP SWAP2 PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x257F JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR DUP2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH0 SWAP1 DUP1 SLOAD SWAP1 PUSH2 0x241B DUP3 PUSH2 0x18A5 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2568 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2536 JUMPI JUMPDEST POP POP SWAP2 PUSH0 SWAP4 SWAP2 DUP2 DUP6 SWAP5 SUB SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x2531 JUMPI RETURNDATASIZE PUSH2 0x244D DUP2 PUSH2 0x1A5C JUMP JUMPDEST SWAP1 PUSH2 0x245B PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x198D JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x2521 JUMPI POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5445F318F4F5FCFB66592E68E0CC5822AA15664039BD5F0FFDE24C5A8142B1AC PUSH0 DUP1 LOG3 DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x24BE JUMPI POP POP POP PUSH1 0x4 PUSH0 SWAP2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD ISZERO PUSH2 0x1891 JUMPI PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP7 MSTORE SWAP2 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP7 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x1 SWAP3 PUSH2 0x251A SWAP2 PUSH2 0x259E JUMP JUMPDEST POP ADD PUSH2 0x24A9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2465 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2554 JUMPI POP POP DUP3 ADD DUP2 DUP4 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP9 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP4 ADD SWAP1 POP DUP2 DUP4 PUSH2 0x2430 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1891 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP2 PUSH0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP1 ISZERO ISZERO PUSH0 EQ PUSH2 0x2671 JUMPI PUSH0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x747 JUMPI DUP3 SLOAD PUSH0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x747 JUMPI DUP2 DUP2 SUB PUSH2 0x2626 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x2612 JUMPI PUSH0 NOT ADD SWAP1 PUSH2 0x25F3 DUP3 DUP3 PUSH2 0x2589 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x265C PUSH2 0x2636 PUSH2 0x2646 SWAP4 DUP7 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x2589 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x25DA JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2708 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x26D3 PUSH2 0x2379 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2708 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x2766 PUSH2 0x2379 JUMP JUMPDEST AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2708 JUMPI DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x1979 JUMPI DUP3 PUSH2 0x27D3 PUSH2 0x2646 DUP5 PUSH1 0x1 DUP1 SWAP7 ADD DUP6 SSTORE DUP5 PUSH2 0x2589 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP INVALID 0xE2 DELEGATECALL 0xEA 0xAE BLOBBASEFEE SWAP8 MLOAD 0xE8 GAS RETURNDATACOPY BLOBBASEFEE PUSH28 0x9587827A877F29914755229B07A7B2DA98285F70A264697066735822 SLT KECCAK256 SIGNEXTEND 0x2D SWAP13 EQ PUSH30 0x6C2E67C0DF5428313F0FFB94BCBF214C3C9EA38F7CD4FE7286667B64736F PUSH13 0x634300081C00332F8788117E7E SELFDESTRUCT SAR DUP3 0xE9 0x26 0xEC PUSH26 0x4901D17C78024A50270940304540A733656F0DE2F4EAAE4A9751 0xE8 GAS RETURNDATACOPY BLOBBASEFEE PUSH28 0x9587827A877F29914755229B07A7B2DA98285F70059F08E7D7BA1C82 0xED 0xDC JUMPI 0xAF 0xAE PUSH8 0xF80DF851BAF38A09 SWAP7 SMOD 0xA7 PUSH26 0x825038C3CE5BAD3228B676F7D3CD4284A5443F17F1962B36E491 0xB3 EXP BLOCKHASH 0xB2 BLOCKHASH PC BLOBHASH 0xE5 SWAP8 0xBA PUSH0 0xB5 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800F0 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x7066735822122063E85E 0xE7 0xA8 0x24 BLOBBASEFEE 0xBA 0xD0 ORIGIN 0xB3 0xEC JUMPI CALLDATACOPY 0xE0 0xDF LOG0 DIV DUP7 PUSH26 0x10B45709B67A4CB6E869668264736F6C634300081C0033000000 ","sourceMap":"1575:4932:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5335:64;1575:4932;5335:64;;;1575:4932;;;;;;;;;;;;;;;;;;;;;;;;;3771:64;1575:4932;3771:64;;;1575:4932;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;5767:26:0;1575:4932:32;;;;:::i;:::-;5737:18:0;3202:4;5737:18;;-1:-1:-1;1575:4932:32;-1:-1:-1;;;;;;;;;;;1575:4932:32;;4919:24:0;1575:4932:32;-1:-1:-1;1575:4932:32;4919:24:0;1575:4932:32;4759:191:0;;5737:18;3202:4;:::i;:::-;5767:26;:::i;:::-;;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;3901:31:0;1575:4932:32;;;;;;-1:-1:-1;1575:4932:32;;;;;;-1:-1:-1;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:28;1575:4932;;;;;;;;3771:64;3876:63;;3771:64;1575:4932;;;:::i;:::-;3202:4:0;;;;;;;;:::i;:::-;1575:4932:32;;3790:4;;;;;;;3771:64;;;;:::i;:::-;;5335;;3771;;;;;;:::i;:::-;1575:4932;;1830:17:1;;;;3876:63:32;3771:64;3876:63;;;:::i;:::-;;5335:64;;3876:63;;;;;;:::i;:::-;1575:4932;;;3978:27;1575:4932;3771:64;3978:27;;1575:4932;;:::i;:::-;3978:27;;;;3771:64;3978:27;;;4094:67;;;;;:::i;:::-;3202:4:0;;:::i;:::-;-1:-1:-1;;;;;1575:4932:32;;;;;;3771:64;1575:4932;;;;;;;;;;5798:114:39;;5937:29;;6008:55;5937:29;;:::i;:::-;6008:55;;:::i;:::-;1575:4932:32;;1459:20:19;1455:80;;3771:64:32;1544:417:19;;;;1575:4932:32;1544:417:19;;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;1974:18:19;;1970:81;;6148:34:39;;6144:93;;1575:4932:32;;;5802:20:39;3771:64:32;1575:4932;;;;5802:20:39;1575:4932:32;;;;;;;;;3771:64;1575:4932;;;;;;;;;;;;;;;;;6802:44:39;;;;;;;;;1575:4932:32;6802:44:39;;;1575:4932:32;-1:-1:-1;;;;;;1575:4932:32;6873:29:39;;;;:135;;1575:4932:32;6856:318:39;;1575:4932:32;-1:-1:-1;;;;;;8030:18:39;;:::i;:::-;1575:4932:32;;;;4403:46;;;;;;4540:9;1575:4932;;;;;;;5802:20:39;1575:4932:32;;;4540:9;1575:4932;;;;;;4540:9;3771:64;1575:4932;;;;1960:40:38;;;;1575:4932:32;;;;;;;;;;-1:-1:-1;;;1575:4932:32;;;;;;;;;-1:-1:-1;;;1575:4932:32;;;;;;;;6856:318:39;7086:77;;;;;1575:4932:32;;;7086:77:39;1575:4932:32;;;;;;;;;7086:77:39;;;1575:4932:32;7086:77:39;;1575:4932:32;7086:77:39;;;;;;;6856:318;7086:77;;;;;1575:4932:32;7086:77:39;;:::i;:::-;1575:4932:32;7086:77:39;;6856:318;;7086:77;1575:4932:32;;;;;;;;;7086:77:39;1575:4932:32;;;6873:135:39;-1:-1:-1;1575:4932:32;;-1:-1:-1;;;6922:86:39;;-1:-1:-1;;;1575:4932:32;6922:86:39;;1575:4932:32;3771:64;1575:4932;6922:86:39;1575:4932:32;6922:86:39;;;;;;;;1575:4932:32;6922:86:39;;;6873:135;;;;6922:86;;;3771:64:32;6922:86:39;;3771:64:32;6922:86:39;;;;;;3771:64:32;6922:86:39;;;:::i;:::-;;;1575:4932:32;;;;;;;;;;;;6922:86:39;;;;;;-1:-1:-1;6922:86:39;;6802:44;;;3771:64:32;6802:44:39;;3771:64:32;6802:44:39;;;;;;3771:64:32;6802:44:39;;;:::i;:::-;;;1575:4932:32;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;6802:44:39;;;;;;-1:-1:-1;6802:44:39;;6144:93;6205:21;;;1575:4932:32;6205:21:39;1575:4932:32;;6205:21:39;1970:81:19;2015:25;;;1575:4932:32;2015:25:19;1575:4932:32;;2015:25:19;1455:80;1502:22;;;1575:4932:32;1502:22:19;1575:4932:32;;1502:22:19;5798:114:39;5862:39;;;;1575:4932:32;5862:39:39;1575:4932:32;;;;5862:39:39;1575:4932:32;;;;;;-1:-1:-1;;1575:4932:32;;;;;;1830:17:1;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;;;:::i;:::-;;;1830:17:1;-1:-1:-1;;;;;1575:4932:32;;;;;2054:31:1;;;;1575:4932:32;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;5834:9;1575:4932;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;;;;;4301:16:2;1575:4932:32;;;;4724:16:2;;:34;;;;1575:4932:32;4803:1:2;4788:16;:50;;;;1575:4932:32;4853:13:2;:30;;;;1575:4932:32;4849:91:2;;;-1:-1:-1;;1575:4932:32;;4803:1:2;1575:4932:32;-1:-1:-1;;;;;;;;;;;1575:4932:32;;4977:67:2;;1575:4932:32;;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;;7148:18:2;7144:73;;3190:45:39;;3324:55;3190:45;;:::i;:::-;;3245:69;;;:::i;:::-;;3324:55;:::i;:::-;;1575:4932:32;;;;;;1960:40:38;;;1575:4932:32;1960:40:38;;;1575:4932:32;1960:40:38;5064:101:2;;1575:4932:32;5064:101:2;1575:4932:32;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;-1:-1:-1;;;;;;;;;;;1575:4932:32;5140:14:2;1575:4932:32;;;4803:1:2;1575:4932:32;;5140:14:2;1575:4932:32;7144:73:2;7189:17;;;1575:4932:32;7189:17:2;1575:4932:32;;7189:17:2;4977:67;-1:-1:-1;;1575:4932:32;;;-1:-1:-1;;;;;;;;;;;1575:4932:32;4977:67:2;;;4849:91;4906:23;;;1575:4932:32;4906:23:2;1575:4932:32;;4906:23:2;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:2;;4724:34;;;-1:-1:-1;4724:34:2;;1575:4932:32;;;;;;-1:-1:-1;;1575:4932:32;;;;;;:::i;:::-;-1:-1:-1;;;;;8030:18:39;;:::i;:::-;1575:4932:32;-1:-1:-1;;;;;1575:4932:32;;6441:34:0;6437:102;;6549:37;1575:4932:32;;;6549:37:0;:::i;:::-;1575:4932:32;6437:102:0;6498:30;;;1575:4932:32;6498:30:0;1575:4932:32;;6498:30:0;1575:4932:32;;;;5335:64;5587:67;5335:64;5440:63;;5335:64;1575:4932;;;:::i;:::-;;;;;;;;;5354:4;;;;;;;5335:64;;;;:::i;:::-;1575:4932;;1830:17:1;;;;5440:63:32;;;;;:::i;:::-;1575:4932;;5542:27;1575:4932;5542:27;;;1575:4932;;:::i;:::-;5542:27;;;;;;;;5587:67;:::i;:::-;1575:4932;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;5350:25:0;1575:4932:32;;;;:::i;:::-;5320:18:0;3202:4;5320:18;;-1:-1:-1;1575:4932:32;-1:-1:-1;;;;;;;;;;;1575:4932:32;;4919:24:0;1575:4932:32;-1:-1:-1;1575:4932:32;4919:24:0;1575:4932:32;4759:191:0;;3202:4;5350:25;:::i;1575:4932:32:-;;;;;;-1:-1:-1;;1575:4932:32;;;;;;;;-1:-1:-1;1575:4932:32;-1:-1:-1;;;;;;;;;;;1575:4932:32;;4919:24:0;1575:4932:32;-1:-1:-1;1575:4932:32;4919:24:0;1575:4932:32;4759:191:0;;1575:4932:32;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;-1:-1:-1;;;;;1575:4932:32;;:::i;:::-;;;;2530:92:39;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6409:49:32;;;:89;;;;1575:4932;;;;;;;6409:89;-1:-1:-1;;;3551:47:0;;;-1:-1:-1;3551:87:0;;;;6409:89:32;;;;;3551:87:0;-1:-1:-1;;;1134:40:4;;-1:-1:-1;3551:87:0;;;1575:4932:32;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;:::o;:::-;;;5335:64;;1575:4932;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1575:4932:32;;;;;-1:-1:-1;1575:4932:32;;;-1:-1:-1;;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1575:4932:32;;;;;-1:-1:-1;1575:4932:32;-1:-1:-1;1575:4932:32;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1575:4932:32;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;:::o;4148:103:0:-;8030:18:39;;:::i;:::-;-1:-1:-1;;;;;1575:4932:32;;-1:-1:-1;1575:4932:32;;;;;;;;;;;;4468:23:0;4464:108;;4148:103;:::o;4464:108::-;-1:-1:-1;;;;4514:47:0;;;-1:-1:-1;;;;;1575:4932:32;;;;4514:47:0;1575:4932:32;1730:26:38;1575:4932:32;;;;4514:47:0;4148:103;8030:18:39;;:::i;:::-;1575:4932:32;-1:-1:-1;1575:4932:32;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;-1:-1:-1;1575:4932:32;;;;;;;;-1:-1:-1;1575:4932:32;;;;;-1:-1:-1;1575:4932:32;;;4468:23:0;4464:108;;4148:103;;:::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:0;1575:4932:32;;;;;;4514:47:0;1575:4932:32;;;;-1:-1:-1;4514:47:0;7270:387;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;8030:18:39;;:::i;:::-;1575:4932:32;;-1:-1:-1;;;;;1575:4932:32;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;7532:40:0;7509:4;7586:11;:::o;7432:219::-;7628:12;1575:4932:32;7628:12:0;:::o;7270:387::-;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;8030:18:39;;:::i;:::-;1575:4932:32;;-1:-1:-1;;;;;1575:4932:32;1960:40:38;-1:-1:-1;;;;;;;;;;;1575:4932:32;;7532:40:0;7509:4;7586:11;:::o;7270:387::-;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;8030:18:39;;:::i;:::-;1575:4932:32;;-1:-1:-1;;;;;1575:4932:32;1730:26:38;-1:-1:-1;;;;;;;;;;;1575:4932:32;;7532:40:0;7509:4;7586:11;:::o;7270:387::-;1575:4932:32;;;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;;;8030:18:39;;:::i;:::-;1575:4932:32;;-1:-1:-1;;;;;1575:4932:32;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;7532:40:0;7509:4;7586:11;:::o;7432:219::-;7628:12;;1575:4932:32;7628:12:0;:::o;1575:4932:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1575:4932:32;;;;;;;;;;;;-1:-1:-1;1575:4932:32;;;5335:64;;1575:4932;;;;;;:::i;:::-;:::o;4380:538:39:-;;4710:55;4380:538;4639:29;2794:1663:19;4380:538:39;4639:29;:::i;4710:55::-;1575:4932:32;;;;;4798:27:39;2794:1663:19;;;;;;;;1575:4932:32;2794:1663:19;;;4905:4:39;2794:1663:19;;;;;;;;;-1:-1:-1;;;;;2794:1663:19;;4380:538:39:o;7894:388:0:-;1575:4932:32;;;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1575:4932:32;;;;;;;;-1:-1:-1;;;;;1575:4932:32;;;;;;;;;;;;-1:-1:-1;;1575:4932:32;;;8030:18:39;;:::i;:::-;1575:4932:32;;-1:-1:-1;;;;;1575:4932:32;;8157:40:0;1575:4932:32;;8157:40:0;1575:4932:32;8211:11:0;:::o;3718:159:39:-;1575:4932:32;;3829:40:39;1575:4932:32;3829:40:39;;;;;3848:4;;1575:4932:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1575:4932:32;;;;;;;5335:64;;1575:4932;;;;;3829:40:39;;5335:64:32;;3829:40:39;;;;;;:::i;:::-;1575:4932:32;3819:51:39;;3718:159;:::o;2329:429:1:-;2545:10;1830:17;-1:-1:-1;;;;;1575:4932:32;2054:31:1;;2526:71;;2329:429;2522:230;;;1575:4932:32;;2435:8:1;1575:4932:32;2435:8:1;1575:4932:32;;;;;;;;2613:72:1:o;1575:4932:32:-;;;;;;;;;;;;2522:230:1;2545:10;2716:25;:::o;2526:71::-;2435:8;3606:2;2435:8;2560:37;;2526:71;"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","allVaultsLength()":"4cd18577","atkVaultImplementation()":"bcbd9edb","createVault(address[],uint256,address,bytes32)":"7fe6496d","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address)":"485cc955","isFactorySystemAddon(address)":"229fff60","isTrustedForwarder(address)":"572b6c05","predictVaultAddress(address[],uint256,address,bytes32)":"2f7efa2f","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","trustedForwarder()":"7da0a877","typeId()":"8f940f63"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"name\":\"AddressAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyCreationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"ATKVaultCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allVaultsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atkVaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialAdmin_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddonAddress\",\"type\":\"address\"}],\"name\":\"isFactorySystemAddon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isFactorySystemAddon\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"predictVaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"predictedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Key features of this factory: - **Deployment of Proxies**: Provides a `createVault` function to deploy new `ATKVaultProxy` instances,   which point to a shared `ATKVault` implementation. - **CREATE2**: Leverages `CREATE2` for deploying proxies, allowing their addresses to be pre-calculated. - **Implementation Management**: Deploys an initial implementation and allows the owner to update it. - **Authorization**: The `createVault` function requires the `DEPLOYER_ROLE` for proper access control. - **Registry**: Maintains an array `allVaults` to keep track of all vault proxies created. - **Meta-transactions**: Inherits `ERC2771Context` to support gasless operations if a trusted forwarder is configured.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ATKVaultCreated(address,address)\":{\"params\":{\"creator\":\"Address of the account that created the vault\",\"vault\":\"Address of the newly created vault\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"atkVaultImplementation()\":{\"details\":\"Since we deploy ATKVault contracts directly, this returns address(0).\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createVault(address[],uint256,address,bytes32)\":{\"details\":\"This function performs the following steps: 1. **Authorization Check**: Verifies the caller has the `DEPLOYER_ROLE`. 2. **Salt Generation**: Computes a unique `salt` for CREATE2. 3. **Constructor Arguments**: Prepares the constructor arguments for the ATKVault contract. 4. **Vault Deployment**: Deploys an `ATKVault` using CREATE2. 5. **Event Emission**: Emits `ATKVaultCreated`. 6. **Registry Update**: Adds the new vault to `allVaults`.\",\"params\":{\"initialOwner\":\"Address that will have admin role\",\"required\":\"Number of confirmations required to execute a transaction\",\"salt\":\"Salt value for deterministic address generation\",\"signers\":\"Array of initial signer addresses\"},\"returns\":{\"contractAddress\":\"Address of the newly created vault\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address)\":{\"details\":\"Initializes the factory and sets up support for meta-transactions via ERC2771Context.\",\"params\":{\"initialAdmin_\":\"The address of the initial admin.\",\"systemAddress_\":\"The address of the `IATKSystem` contract.\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"predictVaultAddress(address[],uint256,address,bytes32)\":{\"params\":{\"initialOwner\":\"Address that will have admin role\",\"required\":\"Number of confirmations required to execute a transaction\",\"salt\":\"Salt value for deterministic address generation\",\"signers\":\"Array of initial signer addresses\"},\"returns\":{\"predictedAddress\":\"The predicted address of the vault\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"title\":\"Factory for Creating ATKVault Proxies\",\"version\":1},\"userdoc\":{\"errors\":{\"AddressAlreadyDeployed(address)\":[{\"notice\":\"Error thrown when a CREATE2 address is already deployed.\"}],\"ProxyCreationFailed()\":[{\"notice\":\"Error thrown when proxy creation fails.\"}]},\"events\":{\"ATKVaultCreated(address,address)\":{\"notice\":\"Emitted when a new ATK Vault contract is created\"}},\"kind\":\"user\",\"methods\":{\"allVaultsLength()\":{\"notice\":\"Returns the total number of vault contracts created by this factory.\"},\"atkVaultImplementation()\":{\"notice\":\"Returns the address of the ATKVault implementation (not used in this pattern).\"},\"createVault(address[],uint256,address,bytes32)\":{\"notice\":\"Creates and deploys a new `ATKVault` contract for a given configuration.\"},\"initialize(address,address)\":{\"notice\":\"Initializes the `ATKVaultFactory`.\"},\"isFactorySystemAddon(address)\":{\"notice\":\"Mapping indicating whether an system addon address was deployed by this factory.\"},\"predictVaultAddress(address[],uint256,address,bytes32)\":{\"notice\":\"Predicts the address where an ATK Vault contract would be deployed\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if a contract supports a given interface.\"},\"typeId()\":{\"notice\":\"Returns a unique identifier for the type of this contract.\"}},\"notice\":\"This contract serves as a factory to deploy new UUPS proxy instances of `ATKVault` contracts. It manages a single implementation contract and allows for updating this implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/vault/ATKVaultFactoryImplementation.sol\":\"ATKVaultFactoryImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0x9e4c7633cf75fad6f1719558c4031217bfc925cf62778eabb7c114cb9a2ac525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f90d4223161ed133f2e64ca2f2abcaaa2b4624bc803bd676b3078744a509c322\",\"dweb:/ipfs/QmTzoz1b6UXpUWzF6Tsq7WL4QE7nPz4YgmFT9hK1qH575k\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/addons/vault/ATKVault.sol\":{\"keccak256\":\"0x86d8321671eed655a5fe3ca153e909672fbf6bede675fa630546da1f08061b8b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://5697585f61d0672fb3a9bf7cedd988cdbd95871e4cc1e7c3d1994bf0f00629df\",\"dweb:/ipfs/QmWwpBUKpEpW68Hyb72EWYyg5Gs8ai6Nvn3hdURa21DVco\"]},\"contracts/addons/vault/ATKVaultFactoryImplementation.sol\":{\"keccak256\":\"0x2b83184ed1dbe158877991ce17d6008d85f1309aac65dc8295cda8dbbddac412\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://045e7b7c875ffc0a626cdbd85ee22e685113adae185651b62092f7898697afb6\",\"dweb:/ipfs/QmWWssejgu92s9DnzKT6h59HYcvVx8S9TyCWu3ZrBbmWYw\"]},\"contracts/addons/vault/IATKVaultFactory.sol\":{\"keccak256\":\"0xaa110f92d24cf1233330e75199395ff7edfcc5f20064312db4e62e6fe1b33027\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f9b8e52b36523b008424e182a63649ff651622aeebc84a9831fe64ccb582602e\",\"dweb:/ipfs/QmNSx6F4uGnq6oH2uhCrFhF2VSN82Tha7b84UNCEn8j4Ue\"]},\"contracts/system/ATKSystemRoles.sol\":{\"keccak256\":\"0x7c5a50fcea7ee061d1bf5451217fbf83cfbc42cae638a0de4b8fc41fa5d7d980\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://8dc4128ddb017dfd71ff70bd4b292bcf5e60ae6f81a07b1ceb15439607bb93c0\",\"dweb:/ipfs/QmWJpzgR3YuLvRXZPdFzvyZ1mHAyV3fhSUMcdFG4QJ3xzx\"]},\"contracts/system/AbstractATKSystemAddonFactoryImplementation.sol\":{\"keccak256\":\"0x9db979423f96599c45a8a53f5348f672b59afe4453d12975e2c299e1bdb10a3d\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://22a85d50427789fb8b4a958666031b545453c0aa07fc3f52c63f5ae72712dcf7\",\"dweb:/ipfs/QmbGm3w3tQvFDhNfUYfhTQXfpzJExgMZdyGnjkBtJHXuYS\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x7b73d0d749af9b20cd90386faeec76ba4c07caddad3156583aebedd4ac8607ca\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://134f12d8f281615b7997c659a77723e6d29312b01fe09dfa2e02b39b39ec3ad9\",\"dweb:/ipfs/QmSPTaTr2vQDZCjVaPBazLXbA3YsYb6bKn2c52RawZbo2g\"]},\"contracts/system/IWithTypeIdentifier.sol\":{\"keccak256\":\"0x5daeff2cd8e4fdd75391e29db38bce1dce171216a0155fba695e0b7d5cabd4ee\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ea7a2fb858b8c9a05d6e67791264656a7577f1642a3a4310bd35164d73794764\",\"dweb:/ipfs/QmNnL4GMCsa7p1TBkbC43g7jcDNoUJNRdHe5CpJrTZTQTY\"]},\"contracts/system/compliance/IATKComplianceBypassList.sol\":{\"keccak256\":\"0x5b3d452616a287e6232fb66301b06c53663e0d19588b0cb9fa04a8be9001e4ee\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://9103ec8fd0709a1696269ca441c0ec3f2b88141973d301c7656ae405d75c7b77\",\"dweb:/ipfs/QmbgrEKtfZ3HTBpGugibrMq2DmdoowK5rb2zV1WLLpcfFc\"]}},\"version\":1}"}},"contracts/addons/vault/ATKVaultFactoryProxy.sol":{"ATKVaultFactoryProxy":{"abi":[{"inputs":[{"internalType":"address","name":"systemAddress","type":"address"},{"internalType":"address","name":"forwarder_","type":"address"},{"internalType":"address","name":"initialAdmin_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":689,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":654,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a0806040523461023257606081610493803803809161001f828561028e565b83398101031261023257610032816102b1565b61004a6040610043602085016102b1565b93016102b1565b906001600160a01b0316801561024957602081602492608052604051928380926370aaa33360e11b82527fc957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d960048301525afa90811561023e575f91610200575b506001600160a01b038116156101af5760405163485cc95560e01b602082019081526001600160a01b0394851660248301529390921660448084019190915282525f9283926100fa60648261028e565b51915af43d156101aa573d6001600160401b038111610196576040519061012b601f8201601f19166020018361028e565b81525f60203d92013e5b15610151576040516101cd90816102c682396080518160b50152f35b60405162461bcd60e51b815260206004820152601560248201527f496e697469616c697a6174696f6e206661696c656400000000000000000000006044820152606490fd5b634e487b7160e01b5f52604160045260245ffd5b610135565b60405162461bcd60e51b8152602060048201526024808201527f5661756c7420666163746f727920696d706c656d656e746174696f6e206e6f74604482015263081cd95d60e21b6064820152608490fd5b90506020813d602011610236575b8161021b6020938361028e565b810103126102325761022c906102b1565b5f6100aa565b5f80fd5b3d915061020e565b6040513d5f823e3d90fd5b60405162461bcd60e51b815260206004820152601660248201527f496e76616c69642073797374656d2061646472657373000000000000000000006044820152606490fd5b601f909101601f19168101906001600160401b0382119082101761019657604052565b51906001600160a01b03821682036102325756fe60806040523661007257610072565b90601f8019910116810190811067ffffffffffffffff82111761003057604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261006357516001600160a01b03811681036100635790565b5f80fd5b6040513d5f823e3d90fd5b6040516370aaa33360e11b81527fc957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d960048201526020816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610192575f91610163575b506001600160a01b03811615610112575f8091368280378136915af43d5f803e1561010e573d5ff35b3d5ffd5b60405162461bcd60e51b8152602060048201526024808201527f5661756c7420666163746f727920696d706c656d656e746174696f6e206e6f74604482015263081cd95d60e21b6064820152608490fd5b610185915060203d60201161018b575b61017d818361000e565b810190610044565b5f6100e5565b503d610173565b61006756fea2646970667358221220e4cf2c044af88a31a0cf1a1249439b7907d269dc7a12370c825cfff3fa784c5e64736f6c634300081c0033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x60 DUP2 PUSH2 0x493 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1F DUP3 DUP6 PUSH2 0x28E JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x232 JUMPI PUSH2 0x32 DUP2 PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x4A PUSH1 0x40 PUSH2 0x43 PUSH1 0x20 DUP6 ADD PUSH2 0x2B1 JUMP JUMPDEST SWAP4 ADD PUSH2 0x2B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x20 DUP2 PUSH1 0x24 SWAP3 PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70AAA333 PUSH1 0xE1 SHL DUP3 MSTORE PUSH32 0xC957105032E204887BEC07551590F4BB855CC985EDD07408ED15736BBBF595D9 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23E JUMPI PUSH0 SWAP2 PUSH2 0x200 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x44 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MSTORE PUSH0 SWAP3 DUP4 SWAP3 PUSH2 0xFA PUSH1 0x64 DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP2 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x1AA JUMPI RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x196 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x12B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x28E JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP1 DUP2 PUSH2 0x2C6 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH1 0xB5 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5661756C7420666163746F727920696D706C656D656E746174696F6E206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x81CD95D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x236 JUMPI JUMPDEST DUP2 PUSH2 0x21B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x28E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x232 JUMPI PUSH2 0x22C SWAP1 PUSH2 0x2B1 JUMP JUMPDEST PUSH0 PUSH2 0xAA JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073797374656D206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x196 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x232 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x72 JUMPI PUSH2 0x72 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x30 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x63 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x63 JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70AAA333 PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0xC957105032E204887BEC07551590F4BB855CC985EDD07408ED15736BBBF595D9 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x192 JUMPI PUSH0 SWAP2 PUSH2 0x163 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x112 JUMPI PUSH0 DUP1 SWAP2 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0x10E JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5661756C7420666163746F727920696D706C656D656E746174696F6E206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x81CD95D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x185 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18B JUMPI JUMPDEST PUSH2 0x17D DUP2 DUP4 PUSH2 0xE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x44 JUMP JUMPDEST PUSH0 PUSH2 0xE5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x173 JUMP JUMPDEST PUSH2 0x67 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xCF 0x2C DIV BLOBBASEFEE 0xF8 DUP11 BALANCE LOG0 0xCF BYTE SLT BLOBHASH NUMBER SWAP12 PUSH26 0x7D269DC7A12370C825CFFF3FA784C5E64736F6C634300081C00 CALLER ","sourceMap":"431:2855:33:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;431:2855:33;942:27;;938:65;;431:2855;1013:35;1142:54;1013:35;;;431:2855;;;;;;;;;1142:54;;1170:25;1142:54;;;431:2855;1142:54;;;;;;;-1:-1:-1;1142:54:33;;;-1:-1:-1;;;;;;;431:2855:33;;1210:28;1206:80;;431:2855;;-1:-1:-1;;;431:2855:33;1397:87;;;;;-1:-1:-1;;;;;431:2855:33;;;1142:54;1397:87;;431:2855;;;;;;;;;;;;;1397:87;;-1:-1:-1;;;;1397:87:33;;431:2855;1397:87;:::i;:::-;1356:138;;;;431:2855;;;;;-1:-1:-1;;;;;431:2855:33;;;;;;;;1397:87;431:2855;;-1:-1:-1;;431:2855:33;;;;;:::i;:::-;;;-1:-1:-1;431:2855:33;;;;;;1508:8;1504:45;;431:2855;;;;;;;;1013:35;431:2855;;;;;;1504:45;431:2855;;-1:-1:-1;;;1518:31:33;;431:2855;1142:54;1518:31;;431:2855;;1142:54;431:2855;;;;;;;;1397:87;;1518:31;431:2855;;;;-1:-1:-1;431:2855:33;;1142:54;431:2855;1142:54;-1:-1:-1;431:2855:33;;;;1206:80;431:2855;;-1:-1:-1;;;1240:46:33;;431:2855;1142:54;1240:46;;431:2855;1142:54;431:2855;;;;;;;;;-1:-1:-1;;;431:2855:33;;;;1240:46;;;1142:54;;;431:2855;1142:54;;431:2855;1142:54;;;;;;431:2855;1142:54;;;:::i;:::-;;;431:2855;;;;;;;:::i;:::-;1142:54;;;431:2855;-1:-1:-1;431:2855:33;;1142:54;;;-1:-1:-1;1142:54:33;;;431:2855;;;-1:-1:-1;431:2855:33;;;;;938:65;431:2855;;-1:-1:-1;;;971:32:33;;431:2855;971:32;;;431:2855;;;;;;;;;;;971:32;;;431:2855;;;;;-1:-1:-1;;431:2855:33;;;;-1:-1:-1;;;;;431:2855:33;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;431:2855:33;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":68,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_5e4a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":14,"id":null,"parameterSlots":2,"returnSlots":0},"fun":{"entryPoint":114,"id":9857,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":103,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"9736":[{"length":32,"start":181}]},"linkReferences":{},"object":"60806040523661007257610072565b90601f8019910116810190811067ffffffffffffffff82111761003057604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261006357516001600160a01b03811681036100635790565b5f80fd5b6040513d5f823e3d90fd5b6040516370aaa33360e11b81527fc957105032e204887bec07551590f4bb855cc985edd07408ed15736bbbf595d960048201526020816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610192575f91610163575b506001600160a01b03811615610112575f8091368280378136915af43d5f803e1561010e573d5ff35b3d5ffd5b60405162461bcd60e51b8152602060048201526024808201527f5661756c7420666163746f727920696d706c656d656e746174696f6e206e6f74604482015263081cd95d60e21b6064820152608490fd5b610185915060203d60201161018b575b61017d818361000e565b810190610044565b5f6100e5565b503d610173565b61006756fea2646970667358221220e4cf2c044af88a31a0cf1a1249439b7907d269dc7a12370c825cfff3fa784c5e64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x72 JUMPI PUSH2 0x72 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x30 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x63 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x63 JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70AAA333 PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0xC957105032E204887BEC07551590F4BB855CC985EDD07408ED15736BBBF595D9 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x192 JUMPI PUSH0 SWAP2 PUSH2 0x163 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x112 JUMPI PUSH0 DUP1 SWAP2 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0x10E JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5661756C7420666163746F727920696D706C656D656E746174696F6E206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x81CD95D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x185 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x18B JUMPI JUMPDEST PUSH2 0x17D DUP2 DUP4 PUSH2 0xE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x44 JUMP JUMPDEST PUSH0 PUSH2 0xE5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x173 JUMP JUMPDEST PUSH2 0x67 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xCF 0x2C DIV BLOBBASEFEE 0xF8 DUP11 BALANCE LOG0 0xCF BYTE SLT BLOBHASH NUMBER SWAP12 PUSH26 0x7D269DC7A12370C825CFFF3FA784C5E64736F6C634300081C00 CALLER ","sourceMap":"431:2855:33:-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;431:2855:33;;;;;-1:-1:-1;431:2855:33;;;;;;;;;;;-1:-1:-1;;;;;431:2855:33;;;;;;;:::o;:::-;-1:-1:-1;431:2855:33;;;;;;;;;;;;2524:760;431:2855;;-1:-1:-1;;;2586:54:33;;2614:25;2586:54;;;431:2855;2586:54;431:2855;;;-1:-1:-1;;;;;2586:7:33;431:2855;2586:54;;;;;;;-1:-1:-1;2586:54:33;;;2524:760;-1:-1:-1;;;;;;431:2855:33;;2654:28;2650:80;;-1:-1:-1;2741:537:33;;;;;;;;;;;;-1:-1:-1;2741:537:33;;;;;;-1:-1:-1;2741:537:33;;;-1:-1:-1;2741:537:33;2650:80;431:2855;;-1:-1:-1;;;2684:46:33;;431:2855;2586:54;2684:46;;431:2855;;;;;;;;;;;-1:-1:-1;;;431:2855:33;;;;;;2684:46;2586:54;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialAdmin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract serves as a proxy to the ATK Vault Factory implementation\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"forwarder_\":\"Address of the trusted forwarder for meta-transactions\",\"initialAdmin_\":\"Address that will have admin role\",\"systemAddress\":\"Address of the ATK System contract\"}}},\"title\":\"ATKVaultFactoryProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the ATKVaultFactoryProxy\"}},\"notice\":\"Proxy contract for the ATK Vault Factory addon\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/vault/ATKVaultFactoryProxy.sol\":\"ATKVaultFactoryProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/addons/vault/ATKVaultFactoryProxy.sol\":{\"keccak256\":\"0x565714509dfdeca46904ed160af4fc7d3f82909274c285c851704f6a47e3522b\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://6e8b7207f310a43b519c9ae502a5ce53760ea4b54f35ce90e0827aba0ccd5a8f\",\"dweb:/ipfs/QmTwZM7ydrmypcWbNxLNDCnRiCBRJHVdy1LKqxdSDAQ9BX\"]},\"contracts/addons/vault/IATKVaultFactory.sol\":{\"keccak256\":\"0xaa110f92d24cf1233330e75199395ff7edfcc5f20064312db4e62e6fe1b33027\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f9b8e52b36523b008424e182a63649ff651622aeebc84a9831fe64ccb582602e\",\"dweb:/ipfs/QmNSx6F4uGnq6oH2uhCrFhF2VSN82Tha7b84UNCEn8j4Ue\"]},\"contracts/system/ATKSystemAddonProxy.sol\":{\"keccak256\":\"0x623cd7515dce5623946a16238fe489da8558bac88450a917ed2ba59a668fecb0\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://80d505e355d44eb8e1481d14ef96fd0140c6d62ed25bac289277256a3bd4d3db\",\"dweb:/ipfs/QmQVkJEzkVkW528WFUbvZt5jpSpiDN9zcF6zh4bB73TAdb\"]},\"contracts/system/ATKSystemErrors.sol\":{\"keccak256\":\"0x85d02e1d6fb4ee127073c8cfc6effadb23579771aa5ebb0a09abc736b30a2cf2\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://95d385cbab46aecdd99df43c550212fa82e36e45fa32b4d5dde79ba46e142503\",\"dweb:/ipfs/QmT8vANsK8VjU14ZLzEvvGfXePeYThqP9wosD58APn5vCD\"]},\"contracts/system/ATKSystemProxy.sol\":{\"keccak256\":\"0x12c010a68ad78794ba027937670830daf64096a0679935f905aba52d6f59fcbd\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://7ff81a994ac5b99823ffe2a52f9474561719c9e33edf133c637388e6b5ab8790\",\"dweb:/ipfs/QmdjMocxoF2HCMpmpz37HgL2MMLYW69ZFbRYhQeF9wZ7wZ\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x7b73d0d749af9b20cd90386faeec76ba4c07caddad3156583aebedd4ac8607ca\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://134f12d8f281615b7997c659a77723e6d29312b01fe09dfa2e02b39b39ec3ad9\",\"dweb:/ipfs/QmSPTaTr2vQDZCjVaPBazLXbA3YsYb6bKn2c52RawZbo2g\"]}},\"version\":1}"}},"contracts/addons/vault/IATKVaultFactory.sol":{"IATKVaultFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"vault","type":"address"},{"indexed":true,"internalType":"address","name":"creator","type":"address"}],"name":"ATKVaultCreated","type":"event"},{"inputs":[],"name":"atkVaultImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"signers","type":"address[]"},{"internalType":"uint256","name":"required","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"createVault","outputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder_","type":"address"},{"internalType":"address","name":"initialAdmin_","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"signers","type":"address[]"},{"internalType":"uint256","name":"required","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"predictVaultAddress","outputs":[{"internalType":"address","name":"predictedAddress","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"atkVaultImplementation()":"bcbd9edb","createVault(address[],uint256,address,bytes32)":"7fe6496d","initialize(address,address)":"485cc955","predictVaultAddress(address[],uint256,address,bytes32)":"2f7efa2f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"ATKVaultCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"atkVaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialAdmin_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"predictVaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"predictedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Defines the functions for creating and managing ATK Vault contracts\",\"events\":{\"ATKVaultCreated(address,address)\":{\"params\":{\"creator\":\"Address of the account that created the vault\",\"vault\":\"Address of the newly created vault\"}}},\"kind\":\"dev\",\"methods\":{\"atkVaultImplementation()\":{\"details\":\"This function is expected to be available on the factory contract.\"},\"createVault(address[],uint256,address,bytes32)\":{\"params\":{\"initialOwner\":\"Address that will have admin role\",\"required\":\"Number of confirmations required to execute a transaction\",\"salt\":\"Salt value for deterministic address generation\",\"signers\":\"Array of initial signer addresses\"},\"returns\":{\"contractAddress\":\"Address of the newly created vault\"}},\"initialize(address,address)\":{\"params\":{\"forwarder_\":\"Address of the trusted forwarder for meta-transactions\",\"initialAdmin_\":\"Address that will have admin role\"}},\"predictVaultAddress(address[],uint256,address,bytes32)\":{\"params\":{\"initialOwner\":\"Address that will have admin role\",\"required\":\"Number of confirmations required to execute a transaction\",\"salt\":\"Salt value for deterministic address generation\",\"signers\":\"Array of initial signer addresses\"},\"returns\":{\"predictedAddress\":\"The predicted address of the vault\"}}},\"title\":\"IATKVaultFactory Interface\",\"version\":1},\"userdoc\":{\"events\":{\"ATKVaultCreated(address,address)\":{\"notice\":\"Emitted when a new ATK Vault contract is created\"}},\"kind\":\"user\",\"methods\":{\"atkVaultImplementation()\":{\"notice\":\"Returns the address of the current ATKVault logic contract (implementation).\"},\"createVault(address[],uint256,address,bytes32)\":{\"notice\":\"Creates a new ATK Vault contract\"},\"initialize(address,address)\":{\"notice\":\"Initializes the factory contract\"},\"predictVaultAddress(address[],uint256,address,bytes32)\":{\"notice\":\"Predicts the address where an ATK Vault contract would be deployed\"}},\"notice\":\"Interface for the ATK Vault Factory contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/addons/vault/IATKVaultFactory.sol\":\"IATKVaultFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/addons/vault/IATKVaultFactory.sol\":{\"keccak256\":\"0xaa110f92d24cf1233330e75199395ff7edfcc5f20064312db4e62e6fe1b33027\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://f9b8e52b36523b008424e182a63649ff651622aeebc84a9831fe64ccb582602e\",\"dweb:/ipfs/QmNSx6F4uGnq6oH2uhCrFhF2VSN82Tha7b84UNCEn8j4Ue\"]}},\"version\":1}"}},"contracts/system/ATKSystemAddonProxy.sol":{"ATKSystemAddonProxy":{"abi":[{"inputs":[{"internalType":"address","name":"systemAddress","type":"address"},{"internalType":"bytes32","name":"addonTypeHash","type":"bytes32"},{"internalType":"bytes","name":"initializeData","type":"bytes"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes32","name":"addonTypeHash","type":"bytes32"}],"name":"AddonImplementationNotSet","type":"error"},{"inputs":[],"name":"ETHTransfersNotAllowed","type":"error"},{"inputs":[],"name":"InitializationWithZeroAddress","type":"error"},{"inputs":[],"name":"InvalidSystemAddress","type":"error"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_fromMemory_1178":{"entryPoint":266,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":308,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_ATKSystemAddonProxy":{"entryPoint":335,"id":9997,"parameterSlots":3,"returnSlots":0},"convert_address_to_contract_IATKSystem":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":231,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_1177":{"entryPoint":188,"id":null,"parameterSlots":1,"returnSlots":0},"fun_getSpecificImplementationAddress":{"entryPoint":635,"id":10034,"parameterSlots":1,"returnSlots":1},"fun_performInitializationDelegatecall":{"entryPoint":804,"id":10255,"parameterSlots":2,"returnSlots":0},"fun_setAddonTypeHash":{"entryPoint":null,"id":9950,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":168,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_forward":{"entryPoint":624,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052346100a45761056d803803809161001a826100bc565b60803960608160800191126100a45761003161010a565b60a05160c05192916001600160401b0384116100a45782609f850112156100a457836080015161006081610134565b9361006e60405195866100e7565b81855260a082870101116100a4576020815f9260a061009598018388015e8501015261014f565b60405161019b90816103928239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176100e257604052565b6100a8565b601f909101601f19168101906001600160401b038211908210176100e257604052565b608051906001600160a01b03821682036100a457565b51906001600160a01b03821682036100a457565b6001600160401b0381116100e257601f01601f191660200190565b9091906001600160a01b03811680159081156101e6575b506101d7575f51602061054d5f395f51905f5280546001600160a01b0319166001600160a01b039092169190911790556101d5916101af905f51602061052d5f395f51905f5255565b5f51602061054d5f395f51905f52546101d0906001600160a01b031661027b565b610324565b565b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815263b04c0eef60e01b60048201529150602090829060249082905afa908115610253575f91610224575b50155f610166565b610246915060203d60201161024c575b61023e81836100e7565b810190610258565b5f61021c565b503d610234565b610270565b908160209103126100a4575180151581036100a45790565b6040513d5f823e3d90fd5b5f51602061052d5f395f51905f52546040516370aaa33360e11b81526004810182905291602090839060249082906001600160a01b03165afa918215610253575f926102e8575b506001600160a01b038216156102d6575090565b632c35636160e11b5f5260045260245ffd5b9091506020813d60201161031c575b81610304602093836100e7565b810103126100a45761031590610120565b905f6102c2565b3d91506102f7565b6001600160a01b0381161561038257815f929160208493519201905af43d1561037a573d9061035282610134565b9161036060405193846100e7565b82523d5f602084013e5b156103725750565b602081519101fd5b60609061036a565b63ee0a129760e01b5f5260045ffdfe608060405236156100dc5760018060a01b037f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d35416602060806024817ee3e0cec59b60132eea2c7a5f5ee6f561df7478627a471ef97f7437cc141bee54946370aaa33360e11b8252856084525afa9081156100d1575f916100a2575b6001600160a01b0382161561009057506100eb565b632c35636160e11b5f5260045260245ffd5b905060203d6020116100ca575b806100bc6100c492610108565b60800161013f565b9061007b565b503d6100af565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b601f80199101166080016080811067ffffffffffffffff82111761012b57604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f190112610161576080516001600160a01b03811681036101615790565b5f80fdfea264697066735822122072f7f93bca40d31f0473c35fa91deb113e07604351bdffe06594d7f47a78ca9464736f6c634300081c003300e3e0cec59b60132eea2c7a5f5ee6f561df7478627a471ef97f7437cc141bee4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d3","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xA4 JUMPI PUSH2 0x56D DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1A DUP3 PUSH2 0xBC JUMP JUMPDEST PUSH1 0x80 CODECOPY PUSH1 0x60 DUP2 PUSH1 0x80 ADD SWAP2 SLT PUSH2 0xA4 JUMPI PUSH2 0x31 PUSH2 0x10A JUMP JUMPDEST PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0xA4 JUMPI DUP3 PUSH1 0x9F DUP6 ADD SLT ISZERO PUSH2 0xA4 JUMPI DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x60 DUP2 PUSH2 0x134 JUMP JUMPDEST SWAP4 PUSH2 0x6E PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0xE7 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0xA0 DUP3 DUP8 ADD ADD GT PUSH2 0xA4 JUMPI PUSH1 0x20 DUP2 PUSH0 SWAP3 PUSH1 0xA0 PUSH2 0x95 SWAP9 ADD DUP4 DUP9 ADD MCOPY DUP6 ADD ADD MSTORE PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP1 DUP2 PUSH2 0x392 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xE2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xE2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA4 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA4 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1E6 JUMPI JUMPDEST POP PUSH2 0x1D7 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x54D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1D5 SWAP2 PUSH2 0x1AF SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x52D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SSTORE JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x54D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH2 0x1D0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x27B JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x3F997A37 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0xB04C0EEF PUSH1 0xE0 SHL PUSH1 0x4 DUP3 ADD MSTORE SWAP2 POP PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x253 JUMPI PUSH0 SWAP2 PUSH2 0x224 JUMPI JUMPDEST POP ISZERO PUSH0 PUSH2 0x166 JUMP JUMPDEST PUSH2 0x246 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x24C JUMPI JUMPDEST PUSH2 0x23E DUP2 DUP4 PUSH2 0xE7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x258 JUMP JUMPDEST PUSH0 PUSH2 0x21C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x234 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xA4 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xA4 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x52D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70AAA333 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x253 JUMPI PUSH0 SWAP3 PUSH2 0x2E8 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x2D6 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x2C356361 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x31C JUMPI JUMPDEST DUP2 PUSH2 0x304 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA4 JUMPI PUSH2 0x315 SWAP1 PUSH2 0x120 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2C2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x382 JUMPI DUP2 PUSH0 SWAP3 SWAP2 PUSH1 0x20 DUP5 SWAP4 MLOAD SWAP3 ADD SWAP1 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x37A JUMPI RETURNDATASIZE SWAP1 PUSH2 0x352 DUP3 PUSH2 0x134 JUMP JUMPDEST SWAP2 PUSH2 0x360 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xE7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x372 JUMPI POP JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH4 0xEE0A1297 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0xDC JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH32 0x4EC051ECF420FD16E0DB567197DA76EC7F1F5F47763970D604B97E75CB0064D3 SLOAD AND PUSH1 0x20 PUSH1 0x80 PUSH1 0x24 DUP2 PUSH31 0xE3E0CEC59B60132EEA2C7A5F5EE6F561DF7478627A471EF97F7437CC141BEE SLOAD SWAP5 PUSH4 0x70AAA333 PUSH1 0xE1 SHL DUP3 MSTORE DUP6 PUSH1 0x84 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD1 JUMPI PUSH0 SWAP2 PUSH2 0xA2 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x90 JUMPI POP PUSH2 0xEB JUMP JUMPDEST PUSH4 0x2C356361 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCA JUMPI JUMPDEST DUP1 PUSH2 0xBC PUSH2 0xC4 SWAP3 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x80 ADD PUSH2 0x13F JUMP JUMPDEST SWAP1 PUSH2 0x7B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x5D82995B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 SWAP2 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0x104 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND PUSH1 0x80 ADD PUSH1 0x80 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x161 JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xF7F93BCA40D31F0473C35FA91DEB113E076043 MLOAD 0xBD SELFDESTRUCT 0xE0 PUSH6 0x94D7F47A78CA SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER STOP 0xE3 0xE0 0xCE 0xC5 SWAP12 PUSH1 0x13 0x2E 0xEA 0x2C PUSH27 0x5F5EE6F561DF7478627A471EF97F7437CC141BEE4EC051ECF420FD AND 0xE0 0xDB JUMP PUSH18 0x97DA76EC7F1F5F47763970D604B97E75CB00 PUSH5 0xD300000000 ","sourceMap":"772:2588:35:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;772:2588:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;772:2588:35;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;772:2588:35;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;772:2588:35;;;;-1:-1:-1;;;;;772:2588:35;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;-1:-1:-1;;772:2588:35;;;;-1:-1:-1;;;;;772:2588:35;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;772:2588:35;;;;;;:::o;:::-;;;-1:-1:-1;;;;;772:2588:35;;;;;;:::o;:::-;-1:-1:-1;;;;;772:2588:35;;;;;;-1:-1:-1;;772:2588:35;;;;:::o;2189:406::-;;;;-1:-1:-1;;;;;772:2588:35;;2533:28:37;;;:104;;;;2189:406:35;2529:164:37;;;-1:-1:-1;;;;;;;;;;;1502:66:37;;-1:-1:-1;;;;;;1502:66:37;-1:-1:-1;;;;;772:2588:35;;;1502:66:37;;;;;;2573:14:35;;2376:13;;-1:-1:-1;;;;;;;;;;;952:66:35;1025:149;2376:13;-1:-1:-1;;;;;;;;;;;772:2588:35;2469:42;;-1:-1:-1;;;;;772:2588:35;2469:42;:::i;:::-;2573:14;:::i;:::-;2189:406::o;2529:164:37:-;2660:22;;;2559:1;2660:22;;2559:1;2660:22;2533:104;772:2588:35;;-1:-1:-1;;;2566:71:37;;-1:-1:-1;;;2566:71:37;;;772:2588:35;;-1:-1:-1;2566:71:37;;772:2588:35;;;;;;2566:71:37;;;;;;;2559:1;2566:71;;;2533:104;2565:72;;2533:104;;;2566:71;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;772:2588:35:-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;2973:385;-1:-1:-1;;;;;;;;;;;772:2588:35;;;-1:-1:-1;;;3164:41:35;;;;;772:2588;;;;;;;;3164:41;;772:2588;;-1:-1:-1;;;;;772:2588:35;3164:41;;;;;;;-1:-1:-1;3164:41:35;;;2973:385;-1:-1:-1;;;;;;772:2588:35;;3219:28;3215:106;;3330:21;2973:385;:::o;3215:106::-;-1:-1:-1;;;;3270:40:35;3164:41;772:2588;;-1:-1:-1;3270:40:35;3164:41;;;;772:2588;3164:41;;772:2588;3164:41;;;;;;772:2588;3164:41;;;:::i;:::-;;;772:2588;;;;;;;:::i;:::-;3164:41;;;;;;;-1:-1:-1;3164:41:35;;3922:471:37;-1:-1:-1;;;;;772:2588:35;;4049:35:37;4045:104;;4200:50;4082:1;4200:50;;;;;;;;;;;772:2588:35;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4082:1:37;4200:50;772:2588:35;;;;4264:8:37;4260:127;;3922:471;:::o;4260:127::-;4200:50;4288:89;;;;;772:2588:35;;;;;4045:104:37;4107:31;;;4082:1;4107:31;;4082:1;4107:31"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":264,"id":null,"parameterSlots":1,"returnSlots":0},"fun_delegate":{"entryPoint":235,"id":1670,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060405236156100dc5760018060a01b037f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d35416602060806024817ee3e0cec59b60132eea2c7a5f5ee6f561df7478627a471ef97f7437cc141bee54946370aaa33360e11b8252856084525afa9081156100d1575f916100a2575b6001600160a01b0382161561009057506100eb565b632c35636160e11b5f5260045260245ffd5b905060203d6020116100ca575b806100bc6100c492610108565b60800161013f565b9061007b565b503d6100af565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b601f80199101166080016080811067ffffffffffffffff82111761012b57604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f190112610161576080516001600160a01b03811681036101615790565b5f80fdfea264697066735822122072f7f93bca40d31f0473c35fa91deb113e07604351bdffe06594d7f47a78ca9464736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0xDC JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH32 0x4EC051ECF420FD16E0DB567197DA76EC7F1F5F47763970D604B97E75CB0064D3 SLOAD AND PUSH1 0x20 PUSH1 0x80 PUSH1 0x24 DUP2 PUSH31 0xE3E0CEC59B60132EEA2C7A5F5EE6F561DF7478627A471EF97F7437CC141BEE SLOAD SWAP5 PUSH4 0x70AAA333 PUSH1 0xE1 SHL DUP3 MSTORE DUP6 PUSH1 0x84 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD1 JUMPI PUSH0 SWAP2 PUSH2 0xA2 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x90 JUMPI POP PUSH2 0xEB JUMP JUMPDEST PUSH4 0x2C356361 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCA JUMPI JUMPDEST DUP1 PUSH2 0xBC PUSH2 0xC4 SWAP3 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x80 ADD PUSH2 0x13F JUMP JUMPDEST SWAP1 PUSH2 0x7B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x5D82995B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 DUP1 SWAP2 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY ISZERO PUSH2 0x104 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND PUSH1 0x80 ADD PUSH1 0x80 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x161 JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xF7F93BCA40D31F0473C35FA91DEB113E076043 MLOAD 0xBD SELFDESTRUCT 0xE0 PUSH6 0x94D7F47A78CA SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"772:2588:35:-:0;;;;;;;1502:66:37;;;;;;;;772:2588:35;;3164:41;952:66;;;772:2588;;;;3164:41;;772:2588;3164:41;772:2588;3164:41;;;;;;;-1:-1:-1;3164:41:35;;;-1:-1:-1;;;;;;1502:66:37;;3219:28:35;3215:106;;2381:17:13;;:::i;3215:106:35:-;-1:-1:-1;;;;3270:40:35;3164:41;772:2588;;-1:-1:-1;3270:40:35;3164:41;;;772:2588;3164:41;772:2588;3164:41;;;;;;;;;:::i;:::-;772:2588;3164:41;;:::i;:::-;;;;;-1:-1:-1;3164:41:35;;;;772:2588;;;-1:-1:-1;772:2588:35;;;;;;5238:24:37;;;;;;;;949:895:13;1019:819;949:895;;1019:819;;;;;;;;;;;;;;;;;;;;;;;772:2588:35;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;772:2588:35;;;;;-1:-1:-1;772:2588:35;;;;;;;;;;;;-1:-1:-1;;;;;1502:66:37;;772:2588:35;;;;;:::o;:::-;-1:-1:-1;772:2588:35;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"addonTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initializeData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"addonTypeHash\",\"type\":\"bytes32\"}],\"name\":\"AddonImplementationNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransfersNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializationWithZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSystemAddress\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddonImplementationNotSet(bytes32)\":[{\"details\":\"This error is thrown if an operation requires the system addon implementation, but its logic contract address is zero or has not been configured in the `SMARTSystem`.\"}],\"ETHTransfersNotAllowed()\":[{\"details\":\"Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent loss of funds or unexpected behavior.\"}],\"InitializationWithZeroAddress()\":[{\"details\":\"This typically occurs in proxy constructors if the logic contract address fetched from the system is address(0).\"}],\"InvalidSystemAddress()\":[{\"details\":\"This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"This function is called only once when the proxy contract is deployed. It performs critical setup steps: 1. Stores the `systemAddress` (handled by `ATKSystemProxy` constructor). 2. Retrieves the initial `ATKSystemAddonImplementation` address from the `IATKSystem` contract. 3. Ensures this retrieved implementation address is not the zero address. 4. Executes a `delegatecall` to the `initialize` function of the `ATKSystemAddonImplementation` contract    via `_performInitializationDelegatecall`.\",\"params\":{\"addonTypeHash\":\"The hash of the addon type.\",\"initializeData\":\"The encoded function call to initialize the proxy (e.g., abi.encodeWithSelector(...)).\",\"systemAddress\":\"The address of the `IATKSystem` contract.\"}}},\"title\":\"Proxy contract for ATK System Addon.\",\"version\":1},\"userdoc\":{\"errors\":{\"AddonImplementationNotSet(bytes32)\":[{\"notice\":\"Error indicating that the system addon implementation address has not been set.\"}],\"ETHTransfersNotAllowed()\":[{\"notice\":\"Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it.\"}],\"InitializationWithZeroAddress()\":[{\"notice\":\"Error indicating that an attempt was made to initialize a component with a zero address for its implementation.\"}],\"InvalidSystemAddress()\":[{\"notice\":\"Error indicating that an invalid system address was provided or encountered.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor for the `ATKSystemAddonProxy`.\"}},\"notice\":\"This contract serves as a proxy to the ATK System Addon implementation, allowing for upgradeability of the system addon logic. It retrieves the implementation address from the IATKSystem contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/ATKSystemAddonProxy.sol\":\"ATKSystemAddonProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/system/ATKSystemAddonProxy.sol\":{\"keccak256\":\"0x623cd7515dce5623946a16238fe489da8558bac88450a917ed2ba59a668fecb0\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://80d505e355d44eb8e1481d14ef96fd0140c6d62ed25bac289277256a3bd4d3db\",\"dweb:/ipfs/QmQVkJEzkVkW528WFUbvZt5jpSpiDN9zcF6zh4bB73TAdb\"]},\"contracts/system/ATKSystemErrors.sol\":{\"keccak256\":\"0x85d02e1d6fb4ee127073c8cfc6effadb23579771aa5ebb0a09abc736b30a2cf2\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://95d385cbab46aecdd99df43c550212fa82e36e45fa32b4d5dde79ba46e142503\",\"dweb:/ipfs/QmT8vANsK8VjU14ZLzEvvGfXePeYThqP9wosD58APn5vCD\"]},\"contracts/system/ATKSystemProxy.sol\":{\"keccak256\":\"0x12c010a68ad78794ba027937670830daf64096a0679935f905aba52d6f59fcbd\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://7ff81a994ac5b99823ffe2a52f9474561719c9e33edf133c637388e6b5ab8790\",\"dweb:/ipfs/QmdjMocxoF2HCMpmpz37HgL2MMLYW69ZFbRYhQeF9wZ7wZ\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x7b73d0d749af9b20cd90386faeec76ba4c07caddad3156583aebedd4ac8607ca\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://134f12d8f281615b7997c659a77723e6d29312b01fe09dfa2e02b39b39ec3ad9\",\"dweb:/ipfs/QmSPTaTr2vQDZCjVaPBazLXbA3YsYb6bKn2c52RawZbo2g\"]}},\"version\":1}"}},"contracts/system/ATKSystemProxy.sol":{"ATKSystemProxy":{"abi":[{"inputs":[],"name":"ETHTransfersNotAllowed","type":"error"},{"inputs":[],"name":"InvalidSystemAddress","type":"error"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ETHTransfersNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSystemAddress\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"Child contracts must:      1. Provide their unique storage slot for the IATKSystem address via the constructor.      2. Implement `_getSpecificImplementationAddress` to fetch their logic contract address from IATKSystem         and revert with a specific error if not found.      3. In their own constructor, fetch the implementation address, prepare initialization data,         and then call `_performInitializationDelegatecall`.\",\"errors\":{\"ETHTransfersNotAllowed()\":[{\"details\":\"Many contracts are not designed to receive or hold Ether directly, and will revert such transactions to prevent loss of funds or unexpected behavior.\"}],\"InvalidSystemAddress()\":[{\"details\":\"This typically means an address expected to be a core system component (like a module proxy or implementation) was found to be the zero address or an otherwise incorrect address during a critical operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Validates and stores the `systemAddress_`.\",\"params\":{\"systemAddress_\":\"The address of the IATKSystem contract.\"}}},\"stateVariables\":{\"_ATK_SYSTEM_ADDRESS_SLOT\":{\"details\":\"Fixed storage slot for the IATKSystem address. Value: keccak256(\\\"org.smart.contracts.proxy.ATKSystemProxy.systemAddress\\\")\"}},\"title\":\"Abstract Base Proxy for ATK System Components\",\"version\":1},\"userdoc\":{\"errors\":{\"ETHTransfersNotAllowed()\":[{\"notice\":\"Error indicating that an attempt was made to send Ether to a contract that does not allow or expect it.\"}],\"InvalidSystemAddress()\":[{\"notice\":\"Error indicating that an invalid system address was provided or encountered.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs the ATKSystemProxy.\"}},\"notice\":\"Provides common functionality for proxy contracts that interact with an IATKSystem contract         to determine their implementation address and handle initialization.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/ATKSystemProxy.sol\":\"ATKSystemProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/system/ATKSystemErrors.sol\":{\"keccak256\":\"0x85d02e1d6fb4ee127073c8cfc6effadb23579771aa5ebb0a09abc736b30a2cf2\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://95d385cbab46aecdd99df43c550212fa82e36e45fa32b4d5dde79ba46e142503\",\"dweb:/ipfs/QmT8vANsK8VjU14ZLzEvvGfXePeYThqP9wosD58APn5vCD\"]},\"contracts/system/ATKSystemProxy.sol\":{\"keccak256\":\"0x12c010a68ad78794ba027937670830daf64096a0679935f905aba52d6f59fcbd\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://7ff81a994ac5b99823ffe2a52f9474561719c9e33edf133c637388e6b5ab8790\",\"dweb:/ipfs/QmdjMocxoF2HCMpmpz37HgL2MMLYW69ZFbRYhQeF9wZ7wZ\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x7b73d0d749af9b20cd90386faeec76ba4c07caddad3156583aebedd4ac8607ca\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://134f12d8f281615b7997c659a77723e6d29312b01fe09dfa2e02b39b39ec3ad9\",\"dweb:/ipfs/QmSPTaTr2vQDZCjVaPBazLXbA3YsYb6bKn2c52RawZbo2g\"]}},\"version\":1}"}},"contracts/system/ATKSystemRoles.sol":{"ATKSystemRoles":{"abi":[{"inputs":[],"name":"BYPASS_LIST_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLAIM_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPLOYER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IDENTITY_ISSUER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IMPLEMENTATION_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANAGE_REGISTRIES_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REGISTRAR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STORAGE_MODIFIER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_IDENTITY_ISSUER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346019576102f4908161001e823930815050f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081635a129a8a1461028b575080639f4530df14610256578063a217fddf14610241578063a7da5cd51461020c578063aa683370146101d7578063c34e09f0146101a2578063c65490d21461016d578063c958113714610138578063ecd0026114610103578063f68e9553146100ce5763fd27264614610095575f80fd5b5f3660031901126100ca5760206040517ff926905b211c4fe59c7d68bb001aa504586558fd2888c1ea46e1b382450050cf8152f35b5f80fd5b5f3660031901126100ca5760206040517fedcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c3092388152f35b5f3660031901126100ca5760206040517ffc425f2263d0df187444b70e47283d622c70181c5baebb1306a01edba1ce184c8152f35b5f3660031901126100ca5760206040517feca77a5bbbcf8baa6d8f93054311a3e6672f982247f67ba40cb896ecf1992aec8152f35b5f3660031901126100ca5760206040517f3878ec43b99c41b142f55c5c47e7aa371ea82865d891af952bc6234dbce14f188152f35b5f3660031901126100ca5760206040517fab55121422db2e83f3da68f1a86ef03984cbd0d4c289dad3bc39e9ccee18e4118152f35b5f3660031901126100ca5760206040517f5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb858152f35b5f3660031901126100ca5760206040517f7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb8152f35b5f3660031901126100ca5760206040515f8152f35b5f3660031901126100ca5760206040517feaeeb45c1b9029a6e392e1e7aa6f4af6bd8111f85c32809598bc9903a16227a38152f35b5f3660031901126100ca57807fecaefa0171c08a6ded02d98b9432940d3852ef2c7f5007661eb8de37c5a1adc560209252f3fea264697066735822122019d8fd52c6daddce393cdf27ffa9ef724f6da9e40cb82496c3f707fa67aed95f64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x19 JUMPI PUSH2 0x2F4 SWAP1 DUP2 PUSH2 0x1E DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5A129A8A EQ PUSH2 0x28B JUMPI POP DUP1 PUSH4 0x9F4530DF EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xA7DA5CD5 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xAA683370 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xC34E09F0 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xC65490D2 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xC9581137 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xECD00261 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xF68E9553 EQ PUSH2 0xCE JUMPI PUSH4 0xFD272646 EQ PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xF926905B211C4FE59C7D68BB001AA504586558FD2888C1EA46E1B382450050CF DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEDCC084D3DCD65A1F7F23C65C46722FACA6953D28E43150A467CF43E5C309238 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xFC425F2263D0DF187444B70E47283D622C70181C5BAEBB1306A01EDBA1CE184C DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xECA77A5BBBCF8BAA6D8F93054311A3E6672F982247F67BA40CB896ECF1992AEC DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3878EC43B99C41B142F55C5C47E7AA371EA82865D891AF952BC6234DBCE14F18 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xAB55121422DB2E83F3DA68F1A86EF03984CBD0D4C289DAD3BC39E9CCEE18E411 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x5D6FB899EA6F7759B4C48CAF04DE64C7C9BD9CBB87888FA6007ADFFAFE90BB85 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7C42E8DFFC95F75177E883DDC14F7ED7CAA053D3F0D4E84D6B7F0B0033223DCB DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEAEEB45C1B9029A6E392E1E7AA6F4AF6BD8111F85C32809598BC9903A16227A3 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI DUP1 PUSH32 0xECAEFA0171C08A6DED02D98B9432940D3852EF2C7F5007661EB8DE37C5A1ADC5 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xD8 REVERT MSTORE 0xC6 0xDA 0xDD 0xCE CODECOPY EXTCODECOPY 0xDF 0x27 SELFDESTRUCT 0xA9 0xEF PUSH19 0x4F6DA9E40CB82496C3F707FA67AED95F64736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"253:3408:38:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080806040526004361015610012575f80fd5b5f3560e01c9081635a129a8a1461028b575080639f4530df14610256578063a217fddf14610241578063a7da5cd51461020c578063aa683370146101d7578063c34e09f0146101a2578063c65490d21461016d578063c958113714610138578063ecd0026114610103578063f68e9553146100ce5763fd27264614610095575f80fd5b5f3660031901126100ca5760206040517ff926905b211c4fe59c7d68bb001aa504586558fd2888c1ea46e1b382450050cf8152f35b5f80fd5b5f3660031901126100ca5760206040517fedcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c3092388152f35b5f3660031901126100ca5760206040517ffc425f2263d0df187444b70e47283d622c70181c5baebb1306a01edba1ce184c8152f35b5f3660031901126100ca5760206040517feca77a5bbbcf8baa6d8f93054311a3e6672f982247f67ba40cb896ecf1992aec8152f35b5f3660031901126100ca5760206040517f3878ec43b99c41b142f55c5c47e7aa371ea82865d891af952bc6234dbce14f188152f35b5f3660031901126100ca5760206040517fab55121422db2e83f3da68f1a86ef03984cbd0d4c289dad3bc39e9ccee18e4118152f35b5f3660031901126100ca5760206040517f5d6fb899ea6f7759b4c48caf04de64c7c9bd9cbb87888fa6007adffafe90bb858152f35b5f3660031901126100ca5760206040517f7c42e8dffc95f75177e883ddc14f7ed7caa053d3f0d4e84d6b7f0b0033223dcb8152f35b5f3660031901126100ca5760206040515f8152f35b5f3660031901126100ca5760206040517feaeeb45c1b9029a6e392e1e7aa6f4af6bd8111f85c32809598bc9903a16227a38152f35b5f3660031901126100ca57807fecaefa0171c08a6ded02d98b9432940d3852ef2c7f5007661eb8de37c5a1adc560209252f3fea264697066735822122019d8fd52c6daddce393cdf27ffa9ef724f6da9e40cb82496c3f707fa67aed95f64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5A129A8A EQ PUSH2 0x28B JUMPI POP DUP1 PUSH4 0x9F4530DF EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xA7DA5CD5 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xAA683370 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xC34E09F0 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xC65490D2 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xC9581137 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xECD00261 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xF68E9553 EQ PUSH2 0xCE JUMPI PUSH4 0xFD272646 EQ PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xF926905B211C4FE59C7D68BB001AA504586558FD2888C1EA46E1B382450050CF DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEDCC084D3DCD65A1F7F23C65C46722FACA6953D28E43150A467CF43E5C309238 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xFC425F2263D0DF187444B70E47283D622C70181C5BAEBB1306A01EDBA1CE184C DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xECA77A5BBBCF8BAA6D8F93054311A3E6672F982247F67BA40CB896ECF1992AEC DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3878EC43B99C41B142F55C5C47E7AA371EA82865D891AF952BC6234DBCE14F18 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xAB55121422DB2E83F3DA68F1A86EF03984CBD0D4C289DAD3BC39E9CCEE18E411 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x5D6FB899EA6F7759B4C48CAF04DE64C7C9BD9CBB87888FA6007ADFFAFE90BB85 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7C42E8DFFC95F75177E883DDC14F7ED7CAA053D3F0D4E84D6B7F0B0033223DCB DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEAEEB45C1B9029A6E392E1E7AA6F4AF6BD8111F85C32809598BC9903A16227A3 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCA JUMPI DUP1 PUSH32 0xECAEFA0171C08A6DED02D98B9432940D3852EF2C7F5007661EB8DE37C5A1ADC5 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xD8 REVERT MSTORE 0xC6 0xDA 0xDD 0xCE CODECOPY EXTCODECOPY 0xDF 0x27 SELFDESTRUCT 0xA9 0xEF PUSH19 0x4F6DA9E40CB82496C3F707FA67AED95F64736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"253:3408:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;253:3408:38;;;;;;;2557:34;253:3408;;;;;;;;;;-1:-1:-1;;253:3408:38;;;;;;;658:27;253:3408;;;;;;-1:-1:-1;;253:3408:38;;;;;;;1730:26;253:3408;;;;;;-1:-1:-1;;253:3408:38;;;;;;;850:31;253:3408;;;;;;-1:-1:-1;;253:3408:38;;;;;;;3292:35;253:3408;;;;;;-1:-1:-1;;253:3408:38;;;;;;;1526:45;253:3408;;;;;;-1:-1:-1;;253:3408:38;;;;;;;1062:33;253:3408;;;;;;-1:-1:-1;;253:3408:38;;;;;;;1282:39;253:3408;;;;;;-1:-1:-1;;253:3408:38;;;;;;;;;;;;;;-1:-1:-1;;253:3408:38;;;;;;;3621:37;253:3408;;;;;;-1:-1:-1;;253:3408:38;;;;;1960:40;253:3408;;;"},"methodIdentifiers":{"BYPASS_LIST_MANAGER_ROLE()":"9f4530df","CLAIM_MANAGER_ROLE()":"c9581137","DEFAULT_ADMIN_ROLE()":"a217fddf","DEPLOYER_ROLE()":"ecd00261","IDENTITY_ISSUER_ROLE()":"aa683370","IMPLEMENTATION_MANAGER_ROLE()":"5a129a8a","MANAGE_REGISTRIES_ROLE()":"c65490d2","REGISTRAR_ROLE()":"f68e9553","STORAGE_MODIFIER_ROLE()":"fd272646","TOKEN_IDENTITY_ISSUER_ADMIN_ROLE()":"c34e09f0","TOKEN_IDENTITY_ISSUER_ROLE()":"a7da5cd5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BYPASS_LIST_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLAIM_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPLOYER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IDENTITY_ISSUER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IMPLEMENTATION_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGE_REGISTRIES_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRAR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STORAGE_MODIFIER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_IDENTITY_ISSUER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These roles are used with OpenZeppelin's AccessControl contract\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"BYPASS_LIST_MANAGER_ROLE\":{\"details\":\"This role allows adding/removing addresses from the bypass list that can bypass compliance checks\"},\"CLAIM_MANAGER_ROLE\":{\"details\":\"Assigned to entities responsible for handling token claims\"},\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Matches the default admin role in OpenZeppelin's AccessControl\"},\"DEPLOYER_ROLE\":{\"details\":\"Assigned to entities responsible for deploying new tokens\"},\"IDENTITY_ISSUER_ROLE\":{\"details\":\"Assigned to entities responsible for handling identity issuers\"},\"IMPLEMENTATION_MANAGER_ROLE\":{\"details\":\"Assigned to entities responsible for managing implementation addresses\"},\"MANAGE_REGISTRIES_ROLE\":{\"details\":\"Addresses holding this role can call `bindIdentityRegistry` to authorize a new registry contract and `unbindIdentityRegistry` to revoke authorization from an existing one. This role is crucial for controlling which external contracts can write to this storage. It is typically assigned to a high-level system management contract (e.g., `ATKSystem` or an identity factory contract). The value is calculated as `keccak256(\\\"MANAGE_REGISTRIES_ROLE\\\")`.\"},\"REGISTRAR_ROLE\":{\"details\":\"Assigned to entities responsible for user registration\"},\"STORAGE_MODIFIER_ROLE\":{\"details\":\"This role is typically granted to `ATKIdentityRegistry` contracts that are \\\"bound\\\" to this storage. Only addresses holding this role can call functions like `addIdentityToStorage`, `removeIdentityFromStorage`, `modifyStoredIdentity`, and `modifyStoredInvestorCountry`. The value is calculated as `keccak256(\\\"STORAGE_MODIFIER_ROLE\\\")`.\"},\"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE\":{\"details\":\"Assigned to entities responsible for managing token identity issuers\"},\"TOKEN_IDENTITY_ISSUER_ROLE\":{\"details\":\"Assigned to entities responsible for issuing new token identities\"}},\"title\":\"ATKSystemRoles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BYPASS_LIST_MANAGER_ROLE()\":{\"notice\":\"Role identifier for addresses that can manage the compliance bypass list\"},\"CLAIM_MANAGER_ROLE()\":{\"notice\":\"Role for managing claims\"},\"DEFAULT_ADMIN_ROLE()\":{\"notice\":\"The default admin role that can grant and revoke other roles\"},\"DEPLOYER_ROLE()\":{\"notice\":\"Role for token deployers\"},\"IDENTITY_ISSUER_ROLE()\":{\"notice\":\"Role for managing identity issuers\"},\"IMPLEMENTATION_MANAGER_ROLE()\":{\"notice\":\"Role for managing implementation addresses\"},\"MANAGE_REGISTRIES_ROLE()\":{\"notice\":\"A unique identifier (hash) for the role that grants permission to manage the list of bound identity registry contracts.\"},\"REGISTRAR_ROLE()\":{\"notice\":\"Role for managing registration operations\"},\"STORAGE_MODIFIER_ROLE()\":{\"notice\":\"A unique identifier (hash) for the role that grants permission to modify the data stored in this contract.\"},\"TOKEN_IDENTITY_ISSUER_ADMIN_ROLE()\":{\"notice\":\"Role for managing token identity issuers\"},\"TOKEN_IDENTITY_ISSUER_ROLE()\":{\"notice\":\"Role for token identity issuers\"}},\"notice\":\"Library defining role constants for the ATK protocol's access control system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/ATKSystemRoles.sol\":\"ATKSystemRoles\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/system/ATKSystemRoles.sol\":{\"keccak256\":\"0x7c5a50fcea7ee061d1bf5451217fbf83cfbc42cae638a0de4b8fc41fa5d7d980\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://8dc4128ddb017dfd71ff70bd4b292bcf5e60ae6f81a07b1ceb15439607bb93c0\",\"dweb:/ipfs/QmWJpzgR3YuLvRXZPdFzvyZ1mHAyV3fhSUMcdFG4QJ3xzx\"]}},\"version\":1}"}},"contracts/system/AbstractATKSystemAddonFactoryImplementation.sol":{"AbstractATKSystemAddonFactoryImplementation":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"deployedAddress","type":"address"}],"name":"AddressAlreadyDeployed","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ProxyCreationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"systemAddonAddress","type":"address"}],"name":"isFactorySystemAddon","outputs":[{"internalType":"bool","name":"isFactorySystemAddon","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"typeId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isFactorySystemAddon(address)":"229fff60","isTrustedForwarder(address)":"572b6c05","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","trustedForwarder()":"7da0a877","typeId()":"8f940f63"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"name\":\"AddressAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyCreationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"systemAddonAddress\",\"type\":\"address\"}],\"name\":\"isFactorySystemAddon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isFactorySystemAddon\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Key features of this abstract factory: - **Implementation Management**: Manages implementation contracts and allows for updating them. - **CREATE2 Support**: Provides utilities for CREATE2 deployment and address prediction. - **Authorization**: Access control with role-based permissions. - **Registry**: Maintains tracking of deployed system addon contracts. - **Meta-transactions**: Inherits `ERC2771Context` to support gasless operations.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interface identifier.\"},\"returns\":{\"_0\":\"bool True if the contract supports the interface, false otherwise.\"}},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"isFactorySystemAddon\":{\"details\":\"Stores a boolean value for each system addon address, true if deployed by this factory.\"}},\"title\":\"Abstract Factory for Creating ATK System Addon Proxies\",\"version\":1},\"userdoc\":{\"errors\":{\"AddressAlreadyDeployed(address)\":[{\"notice\":\"Error thrown when a CREATE2 address is already deployed.\"}],\"ProxyCreationFailed()\":[{\"notice\":\"Error thrown when proxy creation fails.\"}]},\"kind\":\"user\",\"methods\":{\"isFactorySystemAddon(address)\":{\"notice\":\"Mapping indicating whether an system addon address was deployed by this factory.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if a contract supports a given interface.\"},\"typeId()\":{\"notice\":\"Returns a unique identifier for the type of this contract.\"}},\"notice\":\"This abstract contract provides common functionality for system addon factory implementations. It manages implementation contracts and provides CREATE2 address prediction capabilities.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/AbstractATKSystemAddonFactoryImplementation.sol\":\"AbstractATKSystemAddonFactoryImplementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x290ba719fd784ff406a8de038c10dc2d0914794c8b016781712fcbb36ca7bffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b5764ef1dab80c115c14e307c5cbd5845320a653a2d8a3658d20dfba6bc7758\",\"dweb:/ipfs/QmSPSasRTVtYyAEnEVCBPZwoQzgKU7gu7q8NeT9AMMpmmx\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/system/ATKSystemRoles.sol\":{\"keccak256\":\"0x7c5a50fcea7ee061d1bf5451217fbf83cfbc42cae638a0de4b8fc41fa5d7d980\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://8dc4128ddb017dfd71ff70bd4b292bcf5e60ae6f81a07b1ceb15439607bb93c0\",\"dweb:/ipfs/QmWJpzgR3YuLvRXZPdFzvyZ1mHAyV3fhSUMcdFG4QJ3xzx\"]},\"contracts/system/AbstractATKSystemAddonFactoryImplementation.sol\":{\"keccak256\":\"0x9db979423f96599c45a8a53f5348f672b59afe4453d12975e2c299e1bdb10a3d\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://22a85d50427789fb8b4a958666031b545453c0aa07fc3f52c63f5ae72712dcf7\",\"dweb:/ipfs/QmbGm3w3tQvFDhNfUYfhTQXfpzJExgMZdyGnjkBtJHXuYS\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x7b73d0d749af9b20cd90386faeec76ba4c07caddad3156583aebedd4ac8607ca\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://134f12d8f281615b7997c659a77723e6d29312b01fe09dfa2e02b39b39ec3ad9\",\"dweb:/ipfs/QmSPTaTr2vQDZCjVaPBazLXbA3YsYb6bKn2c52RawZbo2g\"]},\"contracts/system/IWithTypeIdentifier.sol\":{\"keccak256\":\"0x5daeff2cd8e4fdd75391e29db38bce1dce171216a0155fba695e0b7d5cabd4ee\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ea7a2fb858b8c9a05d6e67791264656a7577f1642a3a4310bd35164d73794764\",\"dweb:/ipfs/QmNnL4GMCsa7p1TBkbC43g7jcDNoUJNRdHe5CpJrTZTQTY\"]},\"contracts/system/compliance/IATKComplianceBypassList.sol\":{\"keccak256\":\"0x5b3d452616a287e6232fb66301b06c53663e0d19588b0cb9fa04a8be9001e4ee\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://9103ec8fd0709a1696269ca441c0ec3f2b88141973d301c7656ae405d75c7b77\",\"dweb:/ipfs/QmbgrEKtfZ3HTBpGugibrMq2DmdoowK5rb2zV1WLLpcfFc\"]}},\"version\":1}"}},"contracts/system/IATKSystem.sol":{"IATKSystem":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"complianceProxy","type":"address"},{"indexed":true,"internalType":"address","name":"identityRegistryProxy","type":"address"},{"indexed":false,"internalType":"address","name":"identityRegistryStorageProxy","type":"address"},{"indexed":false,"internalType":"address","name":"trustedIssuersRegistryProxy","type":"address"},{"indexed":false,"internalType":"address","name":"topicSchemeRegistryProxy","type":"address"},{"indexed":false,"internalType":"address","name":"identityFactoryProxy","type":"address"},{"indexed":false,"internalType":"address","name":"identityVerificationModule","type":"address"}],"name":"Bootstrapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"ComplianceImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"IdentityFactoryImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"IdentityImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"IdentityRegistryImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"IdentityRegistryStorageImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"implementation","type":"address"},{"indexed":false,"internalType":"bytes","name":"initializationData","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SystemAddonCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"TokenAccessManagerImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"implementationAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokenFactoryCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"TokenIdentityImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"TopicSchemeRegistryImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"TrustedIssuersRegistryImplementationUpdated","type":"event"},{"inputs":[{"internalType":"bytes32","name":"addonTypeHash","type":"bytes32"}],"name":"addonImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"addonTypeHash","type":"bytes32"}],"name":"addonProxy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bootstrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"complianceImplementation","outputs":[{"internalType":"address","name":"complianceImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"complianceProxy","outputs":[{"internalType":"address","name":"complianceProxyAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"initializationData","type":"bytes"}],"name":"createSystemAddon","outputs":[{"internalType":"address","name":"proxyAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_factoryImplementation","type":"address"},{"internalType":"address","name":"_tokenImplementation","type":"address"}],"name":"createTokenFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"identityFactoryImplementation","outputs":[{"internalType":"address","name":"identityFactoryImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityFactoryProxy","outputs":[{"internalType":"address","name":"identityFactoryProxyAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityImplementation","outputs":[{"internalType":"address","name":"identityImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityRegistryImplementation","outputs":[{"internalType":"address","name":"identityRegistryImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityRegistryProxy","outputs":[{"internalType":"address","name":"identityRegistryProxyAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityRegistryStorageImplementation","outputs":[{"internalType":"address","name":"identityRegistryStorageImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityRegistryStorageProxy","outputs":[{"internalType":"address","name":"identityRegistryStorageProxyAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"identityVerificationModule","outputs":[{"internalType":"address","name":"identityVerificationModuleAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenAccessManagerImplementation","outputs":[{"internalType":"address","name":"tokenAccessManagerImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"factoryTypeHash","type":"bytes32"}],"name":"tokenFactoryImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"factoryTypeHash","type":"bytes32"}],"name":"tokenFactoryProxy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenIdentityImplementation","outputs":[{"internalType":"address","name":"tokenIdentityImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"topicSchemeRegistryImplementation","outputs":[{"internalType":"address","name":"topicSchemeRegistryImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"topicSchemeRegistryProxy","outputs":[{"internalType":"address","name":"topicSchemeRegistryProxyAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedIssuersRegistryImplementation","outputs":[{"internalType":"address","name":"trustedIssuersRegistryImplementationAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedIssuersRegistryProxy","outputs":[{"internalType":"address","name":"trustedIssuersRegistryProxyAddress","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addonImplementation(bytes32)":"e1554666","addonProxy(bytes32)":"b00a0fdc","bootstrap()":"fb969b0a","complianceImplementation()":"917fc629","complianceProxy()":"98468e51","createSystemAddon(string,address,bytes)":"157f1181","createTokenFactory(string,address,address)":"e277d07d","identityFactoryImplementation()":"e32d4b67","identityFactoryProxy()":"78e72222","identityImplementation()":"6d7203cb","identityRegistryImplementation()":"a18dd9ea","identityRegistryProxy()":"d62def8f","identityRegistryStorageImplementation()":"6dbe06f5","identityRegistryStorageProxy()":"72b3f57e","identityVerificationModule()":"c8b5d911","supportsInterface(bytes4)":"01ffc9a7","tokenAccessManagerImplementation()":"44eecc17","tokenFactoryImplementation(bytes32)":"1cece55f","tokenFactoryProxy(bytes32)":"139aca99","tokenIdentityImplementation()":"3cdbceda","topicSchemeRegistryImplementation()":"588aa306","topicSchemeRegistryProxy()":"7d6b252e","trustedIssuersRegistryImplementation()":"39b14cdf","trustedIssuersRegistryProxy()":"d907c456"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"complianceProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"identityRegistryStorageProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"topicSchemeRegistryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"identityFactoryProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"identityVerificationModule\",\"type\":\"address\"}],\"name\":\"Bootstrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ComplianceImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"IdentityFactoryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"IdentityImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"IdentityRegistryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"IdentityRegistryStorageImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"initializationData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SystemAddonCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TokenAccessManagerImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokenFactoryCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TokenIdentityImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TopicSchemeRegistryImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistryImplementationUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"addonTypeHash\",\"type\":\"bytes32\"}],\"name\":\"addonImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"addonTypeHash\",\"type\":\"bytes32\"}],\"name\":\"addonProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bootstrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complianceImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"complianceImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complianceProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"complianceProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializationData\",\"type\":\"bytes\"}],\"name\":\"createSystemAddon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_factoryImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenImplementation\",\"type\":\"address\"}],\"name\":\"createTokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityFactoryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityFactoryImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityFactoryProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityFactoryProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityRegistryImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistryProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityRegistryProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistryStorageImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityRegistryStorageImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistryStorageProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityRegistryStorageProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityVerificationModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"identityVerificationModuleAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAccessManagerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAccessManagerImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"factoryTypeHash\",\"type\":\"bytes32\"}],\"name\":\"tokenFactoryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"factoryTypeHash\",\"type\":\"bytes32\"}],\"name\":\"tokenFactoryProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIdentityImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenIdentityImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicSchemeRegistryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"topicSchemeRegistryImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicSchemeRegistryProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"topicSchemeRegistryProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedIssuersRegistryImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trustedIssuersRegistryImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedIssuersRegistryProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trustedIssuersRegistryProxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"The ATK System contract serves as the main hub and discovery point for various modules and features within the ATK Protocol. It allows other contracts and external users to find the addresses of crucial components like compliance modules, identity registries, and their corresponding proxy contracts. These proxies are important because they enable these components to be upgraded in the future without altering the addresses that other parts of the system use to interact with them, ensuring stability and maintainability.\",\"events\":{\"Bootstrapped(address,address,address,address,address,address,address,address)\":{\"params\":{\"complianceProxy\":\"The address of the deployed ATKComplianceProxy contract.\",\"identityFactoryProxy\":\"The address of the deployed ATKIdentityFactoryProxy contract.\",\"identityRegistryProxy\":\"The address of the deployed ATKIdentityRegistryProxy contract.\",\"identityRegistryStorageProxy\":\"The address of the deployed ATKIdentityRegistryStorageProxy contract.\",\"identityVerificationModule\":\"The address of the deployed IdentityVerificationModule contract.\",\"sender\":\"The address that called the `bootstrap` function.\",\"topicSchemeRegistryProxy\":\"The address of the deployed ATKTopicSchemeRegistryProxy contract.\",\"trustedIssuersRegistryProxy\":\"The address of the deployed ATKTrustedIssuersRegistryProxy contract.\"}},\"ComplianceImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new compliance module implementation contract.\",\"sender\":\"The address that called the `updateComplianceImplementation` function.\"}},\"IdentityFactoryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new identity factory module implementation contract.\",\"sender\":\"The address that called the `updateIdentityFactoryImplementation` function.\"}},\"IdentityImplementationUpdated(address,address)\":{\"details\":\"Standard identity contracts are typically used to represent users or general entities.\",\"params\":{\"newImplementation\":\"The address of the new standard identity module implementation contract.\",\"sender\":\"The address that called the `updateIdentityImplementation` function.\"}},\"IdentityRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new identity registry module implementation contract.\",\"sender\":\"The address that called the `updateIdentityRegistryImplementation` function.\"}},\"IdentityRegistryStorageImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new identity registry storage module implementation contract.\",\"sender\":\"The address that called the `updateIdentityRegistryStorageImplementation` function.\"}},\"SystemAddonCreated(address,string,bytes32,address,address,bytes,uint256)\":{\"params\":{\"implementation\":\"The address of the deployed system addon implementation.\",\"initializationData\":\"The encoded function call to initialize the system addon.\",\"name\":\"The human-readable name of the system addon.\",\"proxyAddress\":\"The address of the deployed system addon proxy.\",\"sender\":\"The address that created the system addon.\",\"timestamp\":\"The timestamp of the system addon creation.\",\"typeId\":\"The type identifier of the system addon.\"}},\"TokenAccessManagerImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new token access manager module implementation contract.\",\"sender\":\"The address that called the `updateTokenAccessManagerImplementation` function.\"}},\"TokenFactoryCreated(address,string,bytes32,address,address,uint256)\":{\"params\":{\"implementationAddress\":\"The address of the deployed token factory implementation.\",\"name\":\"The human-readable name of the token factory.\",\"proxyAddress\":\"The address of the deployed token factory proxy.\",\"sender\":\"The address that registered the token factory.\",\"timestamp\":\"The timestamp of the token factory creation.\",\"typeId\":\"The type identifier of the token factory.\"}},\"TokenIdentityImplementationUpdated(address,address)\":{\"details\":\"Token identity contracts might be specialized identities associated with specific tokens.\",\"params\":{\"newImplementation\":\"The address of the new token identity module implementation contract.\",\"sender\":\"The address that called the `updateTokenIdentityImplementation` function.\"}},\"TopicSchemeRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new topic scheme registry module implementation contract.\",\"sender\":\"The address that called the `updateTopicSchemeRegistryImplementation` function.\"}},\"TrustedIssuersRegistryImplementationUpdated(address,address)\":{\"params\":{\"newImplementation\":\"The address of the new trusted issuers registry module implementation contract.\",\"sender\":\"The address that called the `updateTrustedIssuersRegistryImplementation` function.\"}}},\"kind\":\"dev\",\"methods\":{\"addonImplementation(bytes32)\":{\"params\":{\"addonTypeHash\":\"The hash of the addon type.\"},\"returns\":{\"_0\":\"The address of the system addon implementation contract.\"}},\"addonProxy(bytes32)\":{\"params\":{\"addonTypeHash\":\"The hash of the addon type.\"},\"returns\":{\"_0\":\"The address of the system addon proxy contract.\"}},\"bootstrap()\":{\"details\":\"This function is responsible for the initial deployment and configuration of the ATK Protocol. This involves deploying necessary smart contracts, setting initial parameters, and defining the relationships and connections between different components of the system. It is critically important that this function is called only ONCE during the very first deployment of the protocol. Attempting to call it more than once could result in severe errors, misconfigurations, or unpredictable behavior in the protocol's operation.\"},\"complianceImplementation()\":{\"details\":\"Compliance modules are responsible for enforcing rules and restrictions on token transfers, account interactions, or other operations within the ATK Protocol. For example, they might check if a transfer is allowed based on regulatory requirements. This function returns the specific address of the contract that holds the actual programming code (the \\\"logic\\\") for these compliance checks. It's important to note that this address can change if the compliance logic is updated or upgraded to a new version.\",\"returns\":{\"complianceImplementationAddress\":\"The blockchain address of the smart contract containing the compliance logic.\"}},\"complianceProxy()\":{\"details\":\"A proxy contract is an intermediary contract that delegates all function calls it receives to another contract, known as the implementation contract (which contains the actual logic). The primary benefit of using a proxy is that the underlying logic (implementation) can be upgraded without changing the address that other contracts or users interact with. This provides flexibility and allows for bug fixes or feature additions without disrupting the ecosystem. This function returns the stable, unchanging address of the compliance module's proxy contract. All interactions with the compliance module should go through this proxy address.\",\"returns\":{\"complianceProxyAddress\":\"The blockchain address of the compliance module's proxy contract.\"}},\"createSystemAddon(string,address,bytes)\":{\"params\":{\"implementation\":\"The address of the logic contract to use for the proxy.\",\"initializationData\":\"Encoded function call to initialize the proxy (e.g., abi.encodeWithSelector(...)).\",\"name\":\"A human-readable identifier (e.g., \\\"Swap\\\", \\\"YieldContract\\\").\"},\"returns\":{\"proxyAddress\":\"The address of the newly deployed proxy.\"}},\"createTokenFactory(string,address,address)\":{\"params\":{\"_factoryImplementation\":\"The address of the token factory implementation contract.\",\"_name\":\"The human-readable name of the token factory.\",\"_tokenImplementation\":\"The address of the token implementation contract.\"}},\"identityFactoryImplementation()\":{\"details\":\"Identity factories are responsible for the creation of new identity contracts or records within the ATK Protocol. They provide a standardized way to onboard new users or entities and associate them with an on-chain identity. This function returns the specific address of the contract that holds the actual programming code (the \\\"logic\\\") for this identity creation process. This address can change if the identity factory's logic is upgraded.\",\"returns\":{\"identityFactoryImplementationAddress\":\"The blockchain address of the smart contract containing the identity factory logic.\"}},\"identityFactoryProxy()\":{\"details\":\"This function returns the stable, unchanging address of the identity factory's proxy contract. To create new identities within the ATK Protocol, you should interact with this proxy address. It will delegate the identity creation requests to the current active logic implementation of the identity factory.\",\"returns\":{\"identityFactoryProxyAddress\":\"The blockchain address of the identity factory module's proxy contract.\"}},\"identityImplementation()\":{\"details\":\"Standard identity contracts are the actual on-chain representations of individual users, organizations, or entities within the ATK Protocol. These contracts typically hold claims and attributes related to an identity. This function returns the address of the base implementation (template) contract that new standard identity contracts will be created from (often via a proxy pattern). This address can change if the underlying logic for standard identity contracts is upgraded.\",\"returns\":{\"identityImplementationAddress\":\"The blockchain address of the smart contract containing the standard identity logic.\"}},\"identityRegistryImplementation()\":{\"details\":\"Identity registries are a core component for managing information about users, organizations, or any entity interacting with ATK tokens. This can include details like Know Your Customer (KYC) / Anti-Money Laundering (AML) status, investor qualifications, country of residence, or other relevant identity attributes. This function returns the specific address of the contract that holds the actual programming code (the \\\"logic\\\") for the identity registry. Similar to other modules, this address can change if the identity registry's logic is upgraded.\",\"returns\":{\"identityRegistryImplementationAddress\":\"The blockchain address of the smart contract containing the identity registry logic.\"}},\"identityRegistryProxy()\":{\"details\":\"Similar to the compliance proxy, this function returns the stable, unchanging address of the identity registry's proxy contract. To interact with the identity registry (e.g., to query identity information or register a new identity, depending on its features), you should use this proxy address. It will automatically forward your requests to the current logic implementation contract.\",\"returns\":{\"identityRegistryProxyAddress\":\"The blockchain address of the identity registry module's proxy contract.\"}},\"identityRegistryStorageImplementation()\":{\"details\":\"Identity registry storage modules are dedicated to securely and efficiently storing the data associated with the identities managed by the identity registry. This separation of logic and storage can enhance security and upgradeability. This function returns the specific address of the contract that holds the actual programming code (the \\\"logic\\\") for managing this identity data storage. This address may change if the storage management logic is upgraded or if data is migrated to a new storage system.\",\"returns\":{\"identityRegistryStorageImplementationAddress\":\"The blockchain address of the smart contract containing the identity registry storage logic.\"}},\"identityRegistryStorageProxy()\":{\"details\":\"This function returns the stable, unchanging address of the identity registry storage's proxy contract. All interactions related to storing or retrieving identity data should go through this proxy address. It ensures that calls are directed to the current logic implementation for identity data management.\",\"returns\":{\"identityRegistryStorageProxyAddress\":\"The blockchain address of the identity registry storage module's proxy contract.\"}},\"identityVerificationModule()\":{\"details\":\"This function returns the stable, unchanging address of the identity verification module's proxy contract. To interact with the identity verification module (e.g., to verify an identity or check verification status), you should use this proxy address. It will forward calls to the current logic implementation.\",\"returns\":{\"identityVerificationModuleAddress\":\"The blockchain address of the identity verification module's proxy.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenAccessManagerImplementation()\":{\"details\":\"Token access managers are responsible for managing access control for tokens. This function returns the address of the base implementation (template) contract that new token access managers will be created from. This address can change if the underlying logic for token access managers is upgraded.\",\"returns\":{\"tokenAccessManagerImplementationAddress\":\"The blockchain address of the smart contract containing the\"}},\"tokenFactoryImplementation(bytes32)\":{\"params\":{\"factoryTypeHash\":\"The hash of the factory type.\"},\"returns\":{\"_0\":\"The address of the token factory implementation contract.\"}},\"tokenFactoryProxy(bytes32)\":{\"params\":{\"factoryTypeHash\":\"The hash of the factory type.\"},\"returns\":{\"_0\":\"The address of the token factory proxy contract.\"}},\"tokenIdentityImplementation()\":{\"details\":\"Token identity contracts are a specialized type of identity contract that might be specifically linked to certain tokens, tokenized assets, or have features tailored for token interactions. This function returns the address of the base implementation (template) contract that new token identity contracts will be created from. This address can change if the underlying logic for token identity contracts is upgraded.\",\"returns\":{\"tokenIdentityImplementationAddress\":\"The blockchain address of the smart contract containing the token identity logic.\"}},\"topicSchemeRegistryImplementation()\":{\"details\":\"Topic scheme registries manage the registration and lifecycle of topic schemes used for claim data structures. They store mapping between topic IDs and their corresponding signatures for encoding/decoding claim data. This function returns the specific address of the contract that holds the actual programming code (the \\\"logic\\\") for managing topic schemes. This address can change if the topic scheme registry's logic is upgraded.\",\"returns\":{\"topicSchemeRegistryImplementationAddress\":\"The blockchain address of the smart contract containing the topic scheme registry logic.\"}},\"topicSchemeRegistryProxy()\":{\"details\":\"This function returns the stable, unchanging address of the topic scheme registry's proxy contract. To interact with the topic scheme registry (e.g., to register topic schemes or retrieve topic signatures), you should use this proxy address. It will forward calls to the current logic implementation.\",\"returns\":{\"topicSchemeRegistryProxyAddress\":\"The blockchain address of the topic scheme registry module's proxy.\"}},\"trustedIssuersRegistryImplementation()\":{\"details\":\"Trusted issuers registries play a crucial role in decentralized identity systems. They maintain a list of entities (known as \\\"issuers,\\\" such as KYC providers, accreditation bodies, etc.) that are authorized and trusted to make verifiable claims or attestations about identities (e.g., \\\"User X is KYC verified,\\\" \\\"Entity Y is an accredited investor\\\"). This function returns the specific address of the contract that holds the actual programming code (the \\\"logic\\\") for managing this list of trusted issuers. This address can change if the trusted issuers registry's logic is upgraded.\",\"returns\":{\"trustedIssuersRegistryImplementationAddress\":\"The blockchain address of the smart contract containing the trusted issuers registry logic.\"}},\"trustedIssuersRegistryProxy()\":{\"details\":\"This function returns the stable, unchanging address of the trusted issuers registry's proxy contract. To interact with the trusted issuers registry (e.g., to check if an issuer is trusted or to add/remove issuers, depending on its features), you should use this proxy address. It will forward calls to the current logic implementation.\",\"returns\":{\"trustedIssuersRegistryProxyAddress\":\"The blockchain address of the trusted issuers registry module's proxy.\"}}},\"title\":\"IATKSystem Interface\",\"version\":1},\"userdoc\":{\"events\":{\"Bootstrapped(address,address,address,address,address,address,address,address)\":{\"notice\":\"Emitted when the `bootstrap` function has been successfully executed, creating and linking proxy contracts for all core modules of the ATKSystem.\"},\"ComplianceImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the compliance module is updated.\"},\"IdentityFactoryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the identity factory module is updated.\"},\"IdentityImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the standard identity module is updated.\"},\"IdentityRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the identity registry module is updated.\"},\"IdentityRegistryStorageImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the identity registry storage module is updated.\"},\"SystemAddonCreated(address,string,bytes32,address,address,bytes,uint256)\":{\"notice\":\"Emitted when a system addon is created.\"},\"TokenAccessManagerImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the token access manager module is updated.\"},\"TokenFactoryCreated(address,string,bytes32,address,address,uint256)\":{\"notice\":\"Emitted when a ATKTokenFactory is registered.\"},\"TokenIdentityImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the token identity module is updated.\"},\"TopicSchemeRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the topic scheme registry module is updated.\"},\"TrustedIssuersRegistryImplementationUpdated(address,address)\":{\"notice\":\"Emitted when the implementation (logic contract) for the trusted issuers registry module is updated.\"}},\"kind\":\"user\",\"methods\":{\"addonImplementation(bytes32)\":{\"notice\":\"Returns the address of the current system addon implementation.\"},\"addonProxy(bytes32)\":{\"notice\":\"Returns the address of the system addon proxy.\"},\"bootstrap()\":{\"notice\":\"Initializes and sets up the entire ATK Protocol system.\"},\"complianceImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the compliance module's logic.\"},\"complianceProxy()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the compliance module.\"},\"createSystemAddon(string,address,bytes)\":{\"notice\":\"Deploys and registers a new system addon with a proxy and initializer.\"},\"createTokenFactory(string,address,address)\":{\"notice\":\"Creates a new token factory implementation and proxy.\"},\"identityFactoryImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the identity factory module's logic.\"},\"identityFactoryProxy()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the identity factory module.\"},\"identityImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the standard identity contract's logic.\"},\"identityRegistryImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the identity registry module's logic.\"},\"identityRegistryProxy()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the identity registry module.\"},\"identityRegistryStorageImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the identity registry storage module's logic.\"},\"identityRegistryStorageProxy()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the identity registry storage module.\"},\"identityVerificationModule()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the identity verification module.\"},\"tokenAccessManagerImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the token access manager contract's logic.\"},\"tokenFactoryImplementation(bytes32)\":{\"notice\":\"Returns the address of the current token registry implementation.\"},\"tokenFactoryProxy(bytes32)\":{\"notice\":\"Returns the address of the token factory proxy.\"},\"tokenIdentityImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the token identity contract's logic.\"},\"topicSchemeRegistryImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the topic scheme registry module's logic.\"},\"topicSchemeRegistryProxy()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the topic scheme registry module.\"},\"trustedIssuersRegistryImplementation()\":{\"notice\":\"Retrieves the current, active smart contract address of the trusted issuers registry module's logic.\"},\"trustedIssuersRegistryProxy()\":{\"notice\":\"Retrieves the smart contract address of the proxy for the trusted issuers registry module.\"}},\"notice\":\"This interface outlines the essential functions for interacting with the ATK Protocol's central system contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/IATKSystem.sol\":\"IATKSystem\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/system/IATKSystem.sol\":{\"keccak256\":\"0x7b73d0d749af9b20cd90386faeec76ba4c07caddad3156583aebedd4ac8607ca\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://134f12d8f281615b7997c659a77723e6d29312b01fe09dfa2e02b39b39ec3ad9\",\"dweb:/ipfs/QmSPTaTr2vQDZCjVaPBazLXbA3YsYb6bKn2c52RawZbo2g\"]}},\"version\":1}"}},"contracts/system/IWithTypeIdentifier.sol":{"IWithTypeIdentifier":{"abi":[{"inputs":[],"name":"typeId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"typeId()":"8f940f63"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"typeId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is used to identify the type of a contract.      It is used to identify the type of a contract.      It is used to identify the type of a contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IWithTypeIdentifier\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"typeId()\":{\"notice\":\"Returns a unique identifier for the type of this contract.\"}},\"notice\":\"Interface for contracts that have a unique type identifier.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/IWithTypeIdentifier.sol\":\"IWithTypeIdentifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/system/IWithTypeIdentifier.sol\":{\"keccak256\":\"0x5daeff2cd8e4fdd75391e29db38bce1dce171216a0155fba695e0b7d5cabd4ee\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://ea7a2fb858b8c9a05d6e67791264656a7577f1642a3a4310bd35164d73794764\",\"dweb:/ipfs/QmNnL4GMCsa7p1TBkbC43g7jcDNoUJNRdHe5CpJrTZTQTY\"]}},\"version\":1}"}},"contracts/system/compliance/IATKComplianceBypassList.sol":{"IATKComplianceBypassList":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressAlreadyOnBypassList","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressNotOnBypassList","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"manager","type":"address"}],"name":"AddressAddedToBypassList","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"manager","type":"address"}],"name":"AddressRemovedFromBypassList","type":"event"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"addMultipleToBypassList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addToBypassList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isBypassed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeFromBypassList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"removeMultipleFromBypassList","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addMultipleToBypassList(address[])":"03792104","addToBypassList(address)":"882f1ea8","isBypassed(address)":"204b6001","removeFromBypassList(address)":"8a668634","removeMultipleFromBypassList(address[])":"ad02d621"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressAlreadyOnBypassList\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressNotOnBypassList\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddressAddedToBypassList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddressRemovedFromBypassList\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"addMultipleToBypassList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBypassList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBypassed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBypassList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"removeMultipleFromBypassList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SettleMint Tokenization Services\",\"details\":\"This interface defines the standard functions for managing addresses that bypass compliance checks.\",\"events\":{\"AddressAddedToBypassList(address,address)\":{\"params\":{\"account\":\"The address that was added to the bypass list.\",\"manager\":\"The address that performed the addition.\"}},\"AddressRemovedFromBypassList(address,address)\":{\"params\":{\"account\":\"The address that was removed from the bypass list.\",\"manager\":\"The address that performed the removal.\"}}},\"kind\":\"dev\",\"methods\":{\"addMultipleToBypassList(address[])\":{\"details\":\"Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function. This is a gas-efficient way to add multiple addresses to the bypass list at once.\",\"params\":{\"accounts\":\"Array of addresses to add to the bypass list.\"}},\"addToBypassList(address)\":{\"details\":\"Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function. Addresses on the bypass list can bypass compliance checks in canTransfer function.\",\"params\":{\"account\":\"The address to add to the bypass list.\"}},\"isBypassed(address)\":{\"params\":{\"account\":\"The address to check.\"},\"returns\":{\"_0\":\"True if the address is on the bypass list, false otherwise.\"}},\"removeFromBypassList(address)\":{\"details\":\"Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\",\"params\":{\"account\":\"The address to remove from the bypass list.\"}},\"removeMultipleFromBypassList(address[])\":{\"details\":\"Only addresses with BYPASS_LIST_MANAGER_ROLE can call this function.\",\"params\":{\"accounts\":\"Array of addresses to remove from the bypass list.\"}}},\"title\":\"ATK Compliance Bypass List Interface\",\"version\":1},\"userdoc\":{\"errors\":{\"AddressAlreadyOnBypassList(address)\":[{\"notice\":\"Error thrown when trying to add an address that is already on the bypass list.\"}],\"AddressNotOnBypassList(address)\":[{\"notice\":\"Error thrown when trying to remove an address that is not on the bypass list.\"}]},\"events\":{\"AddressAddedToBypassList(address,address)\":{\"notice\":\"Emitted when an address is added to the compliance bypass list.\"},\"AddressRemovedFromBypassList(address,address)\":{\"notice\":\"Emitted when an address is removed from the compliance bypass list.\"}},\"kind\":\"user\",\"methods\":{\"addMultipleToBypassList(address[])\":{\"notice\":\"Adds multiple addresses to the compliance bypass list in a single transaction.\"},\"addToBypassList(address)\":{\"notice\":\"Adds an address to the compliance bypass list.\"},\"isBypassed(address)\":{\"notice\":\"Checks if an address is on the bypass list.\"},\"removeFromBypassList(address)\":{\"notice\":\"Removes an address from the compliance bypass list.\"},\"removeMultipleFromBypassList(address[])\":{\"notice\":\"Removes multiple addresses from the compliance bypass list in a single transaction.\"}},\"notice\":\"Interface for managing the compliance bypass list functionality.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/compliance/IATKComplianceBypassList.sol\":\"IATKComplianceBypassList\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/system/compliance/IATKComplianceBypassList.sol\":{\"keccak256\":\"0x5b3d452616a287e6232fb66301b06c53663e0d19588b0cb9fa04a8be9001e4ee\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://9103ec8fd0709a1696269ca441c0ec3f2b88141973d301c7656ae405d75c7b77\",\"dweb:/ipfs/QmbgrEKtfZ3HTBpGugibrMq2DmdoowK5rb2zV1WLLpcfFc\"]}},\"version\":1}"}}}}}