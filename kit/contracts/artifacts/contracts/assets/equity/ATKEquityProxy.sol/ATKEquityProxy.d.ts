// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type {
  AbiParameterToPrimitiveType,
  GetContractReturnType,
} from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface ATKEquityProxy$Type {
  _format: "hh-sol-artifact-1";
  contractName: "ATKEquityProxy";
  sourceName: "contracts/assets/equity/ATKEquityProxy.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "address";
          name: "tokenFactoryAddress";
          type: "address";
        },
        {
          internalType: "string";
          name: "name_";
          type: "string";
        },
        {
          internalType: "string";
          name: "symbol_";
          type: "string";
        },
        {
          internalType: "uint8";
          name: "decimals_";
          type: "uint8";
        },
        {
          internalType: "address";
          name: "onchainID_";
          type: "address";
        },
        {
          components: [
            {
              internalType: "address";
              name: "module";
              type: "address";
            },
            {
              internalType: "bytes";
              name: "params";
              type: "bytes";
            },
          ];
          internalType: "struct SMARTComplianceModuleParamPair[]";
          name: "initialModulePairs_";
          type: "tuple[]";
        },
        {
          internalType: "address";
          name: "identityRegistry_";
          type: "address";
        },
        {
          internalType: "address";
          name: "compliance_";
          type: "address";
        },
        {
          internalType: "address";
          name: "accessManager_";
          type: "address";
        },
      ];
      stateMutability: "payable";
      type: "constructor";
    },
    {
      inputs: [];
      name: "ETHTransfersNotAllowed";
      type: "error";
    },
    {
      inputs: [];
      name: "InitializationWithZeroAddress";
      type: "error";
    },
    {
      inputs: [];
      name: "InvalidTokenFactoryAddress";
      type: "error";
    },
    {
      inputs: [];
      name: "TokenImplementationNotSet";
      type: "error";
    },
    {
      stateMutability: "payable";
      type: "fallback";
    },
    {
      stateMutability: "payable";
      type: "receive";
    },
  ];
  bytecode: "0x60806040526107c38038038091610015826100f1565b6080396101208160800191126100d95761002d61015a565b60a0516001600160401b0381116100d9578261004b916080016101d5565b60c0516001600160401b0381116100d95783610069916080016101d5565b61007360e06101f2565b61007e610100610170565b610120516001600160401b0381116100d9576100ca966100a091608001610200565b916100ac610140610170565b936100b8610160610170565b956100c4610180610170565b976103e9565b60405161017290816106318239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b0382119082101761011757604052565b6100dd565b604081019081106001600160401b0382111761011757604052565b601f909101601f19168101906001600160401b0382119082101761011757604052565b608051906001600160a01b03821682036100d957565b51906001600160a01b03821682036100d957565b6001600160401b03811161011757601f01601f191660200190565b9291926101ab82610184565b916101b96040519384610137565b8294818452818301116100d9578281602093845f96015e010152565b9080601f830112156100d95781516101ef9260200161019f565b90565b519060ff821682036100d957565b9080601f830112156100d9578151916001600160401b038311610117578260051b91604051936102336020850186610137565b8452602080850193830101918183116100d95760208101935b83851061025b57505050505090565b84516001600160401b0381116100d9578201906040828503601f1901126100d957604051916102898361011c565b61029560208201610170565b835260408101516001600160401b0381116100d95760209101019084601f830112156100d9576020926102ce868486809651910161019f565b8382015281520194019361024c565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b959897969493916103309061032260ff936101008a526101008a01906102dd565b9088820360208a01526102dd565b921660408601526001600160a01b03166060850152838103608085015281518082526020600582901b83018101938101925f918101905b8383106103a457505050506001600160a01b0396871660a085015250941660c08201526103a2919060e0906001600160a01b03909216910152565b565b90919293946020806103da600193601f198682030187526040838b51878060a01b038151168452015191818582015201906102dd565b97019301930191939290610367565b92959791969093949760018060a01b0384168015908115610492575b50610483576103a29861047e9661044b6104709660018060a01b031660018060a01b03195f5160206107a35f395f51905f525416175f5160206107a35f395f51905f5255565b610453610527565b986040519a8b986329a50b7560e21b60208b015260248a01610301565b03601f198101845283610137565b6105c3565b63fd360a1d60e01b5f5260045ffd5b6040516301ffc9a760e01b8152634ea2ccdd60e01b60048201529150602090829060249082905afa9081156104ff575f916104d0575b50155f610405565b6104f2915060203d6020116104f8575b6104ea8183610137565b810190610504565b5f6104c8565b503d6104e0565b61051c565b908160209103126100d9575180151581036100d95790565b6040513d5f823e3d90fd5b5f5160206107a35f395f51905f5254604051632f3a3d5d60e01b815290602090829060049082906001600160a01b03165afa9081156104ff575f91610589575b506001600160a01b0381161561057a5790565b63daa2f31f60e01b5f5260045ffd5b90506020813d6020116105bb575b816105a460209383610137565b810103126100d9576105b590610170565b5f610567565b3d9150610597565b6001600160a01b0381161561062157815f929160208493519201905af43d15610619573d906105f182610184565b916105ff6040519384610137565b82523d5f602084013e5b156106115750565b602081519101fd5b606090610609565b63ee0a129760e01b5f5260045ffdfe608060405236156100a8577f1515746737424785433e0dda020fe774d11e0fab6d980530d355fada133c3c705460209060809060049082906001600160a01b0316632f3a3d5d60e01b82525afa80156100a3575f90610076575b6001600160a01b03811661011f5763daa2f31f60e01b5f5260045ffd5b5060203d60201161009c575b8061008f610097926100b7565b6080016100ee565b610059565b503d610082565b610114565b635d82995b60e01b5f5260045ffd5b601f80199101166080016080811067ffffffffffffffff8211176100da57604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f190112610110576080516001600160a01b03811681036101105790565b5f80fd5b6040513d5f823e3d90fd5b5f8091368280378136915af43d5f803e15610138573d5ff35b3d5ffdfea26469706673582212202bde5e510c2f31262de1c748b69f9f4088e1d2358da74c31bcd438f12111d81364736f6c634300081c00331515746737424785433e0dda020fe774d11e0fab6d980530d355fada133c3c70";
  deployedBytecode: "0x608060405236156100a8577f1515746737424785433e0dda020fe774d11e0fab6d980530d355fada133c3c705460209060809060049082906001600160a01b0316632f3a3d5d60e01b82525afa80156100a3575f90610076575b6001600160a01b03811661011f5763daa2f31f60e01b5f5260045ffd5b5060203d60201161009c575b8061008f610097926100b7565b6080016100ee565b610059565b503d610082565b610114565b635d82995b60e01b5f5260045ffd5b601f80199101166080016080811067ffffffffffffffff8211176100da57604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f190112610110576080516001600160a01b03811681036101105790565b5f80fd5b6040513d5f823e3d90fd5b5f8091368280378136915af43d5f803e15610138573d5ff35b3d5ffdfea26469706673582212202bde5e510c2f31262de1c748b69f9f4088e1d2358da74c31bcd438f12111d81364736f6c634300081c0033";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "ATKEquityProxy",
    constructorArgs: [
      tokenFactoryAddress: AbiParameterToPrimitiveType<{
        name: "tokenFactoryAddress";
        type: "address";
      }>,
      name_: AbiParameterToPrimitiveType<{ name: "name_"; type: "string" }>,
      symbol_: AbiParameterToPrimitiveType<{ name: "symbol_"; type: "string" }>,
      decimals_: AbiParameterToPrimitiveType<{
        name: "decimals_";
        type: "uint8";
      }>,
      onchainID_: AbiParameterToPrimitiveType<{
        name: "onchainID_";
        type: "address";
      }>,
      initialModulePairs_: AbiParameterToPrimitiveType<{
        name: "initialModulePairs_";
        type: "tuple[]";
      }>,
      identityRegistry_: AbiParameterToPrimitiveType<{
        name: "identityRegistry_";
        type: "address";
      }>,
      compliance_: AbiParameterToPrimitiveType<{
        name: "compliance_";
        type: "address";
      }>,
      accessManager_: AbiParameterToPrimitiveType<{
        name: "accessManager_";
        type: "address";
      }>,
    ],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKEquityProxy$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/assets/equity/ATKEquityProxy.sol:ATKEquityProxy",
    constructorArgs: [
      tokenFactoryAddress: AbiParameterToPrimitiveType<{
        name: "tokenFactoryAddress";
        type: "address";
      }>,
      name_: AbiParameterToPrimitiveType<{ name: "name_"; type: "string" }>,
      symbol_: AbiParameterToPrimitiveType<{ name: "symbol_"; type: "string" }>,
      decimals_: AbiParameterToPrimitiveType<{
        name: "decimals_";
        type: "uint8";
      }>,
      onchainID_: AbiParameterToPrimitiveType<{
        name: "onchainID_";
        type: "address";
      }>,
      initialModulePairs_: AbiParameterToPrimitiveType<{
        name: "initialModulePairs_";
        type: "tuple[]";
      }>,
      identityRegistry_: AbiParameterToPrimitiveType<{
        name: "identityRegistry_";
        type: "address";
      }>,
      compliance_: AbiParameterToPrimitiveType<{
        name: "compliance_";
        type: "address";
      }>,
      accessManager_: AbiParameterToPrimitiveType<{
        name: "accessManager_";
        type: "address";
      }>,
    ],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKEquityProxy$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "ATKEquityProxy",
    constructorArgs: [
      tokenFactoryAddress: AbiParameterToPrimitiveType<{
        name: "tokenFactoryAddress";
        type: "address";
      }>,
      name_: AbiParameterToPrimitiveType<{ name: "name_"; type: "string" }>,
      symbol_: AbiParameterToPrimitiveType<{ name: "symbol_"; type: "string" }>,
      decimals_: AbiParameterToPrimitiveType<{
        name: "decimals_";
        type: "uint8";
      }>,
      onchainID_: AbiParameterToPrimitiveType<{
        name: "onchainID_";
        type: "address";
      }>,
      initialModulePairs_: AbiParameterToPrimitiveType<{
        name: "initialModulePairs_";
        type: "tuple[]";
      }>,
      identityRegistry_: AbiParameterToPrimitiveType<{
        name: "identityRegistry_";
        type: "address";
      }>,
      compliance_: AbiParameterToPrimitiveType<{
        name: "compliance_";
        type: "address";
      }>,
      accessManager_: AbiParameterToPrimitiveType<{
        name: "accessManager_";
        type: "address";
      }>,
    ],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKEquityProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/assets/equity/ATKEquityProxy.sol:ATKEquityProxy",
    constructorArgs: [
      tokenFactoryAddress: AbiParameterToPrimitiveType<{
        name: "tokenFactoryAddress";
        type: "address";
      }>,
      name_: AbiParameterToPrimitiveType<{ name: "name_"; type: "string" }>,
      symbol_: AbiParameterToPrimitiveType<{ name: "symbol_"; type: "string" }>,
      decimals_: AbiParameterToPrimitiveType<{
        name: "decimals_";
        type: "uint8";
      }>,
      onchainID_: AbiParameterToPrimitiveType<{
        name: "onchainID_";
        type: "address";
      }>,
      initialModulePairs_: AbiParameterToPrimitiveType<{
        name: "initialModulePairs_";
        type: "tuple[]";
      }>,
      identityRegistry_: AbiParameterToPrimitiveType<{
        name: "identityRegistry_";
        type: "address";
      }>,
      compliance_: AbiParameterToPrimitiveType<{
        name: "compliance_";
        type: "address";
      }>,
      accessManager_: AbiParameterToPrimitiveType<{
        name: "accessManager_";
        type: "address";
      }>,
    ],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKEquityProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "ATKEquityProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKEquityProxy$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/assets/equity/ATKEquityProxy.sol:ATKEquityProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKEquityProxy$Type["abi"]>>;
}
