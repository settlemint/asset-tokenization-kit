// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface ATKVestingAirdropProxy$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "ATKVestingAirdropProxy",
  "sourceName": "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropProxy.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vestingStrategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initializationDeadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ETHTransfersNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ImplementationNotSetInFactory",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializationWithZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFactoryAddress",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x608060405234610087576104e9388190036080601f8201601f19168101906001600160401b0382119082101761008b5760c0928291604052608039126100875761007861004a6100c2565b61005460a06100d8565b60c05161006160e06100d8565b9061006d6101006100d8565b92610120519461010f565b60405161017290816103578239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b601f909101601f19168101906001600160401b0382119082101761008b57604052565b608051906001600160a01b038216820361008757565b51906001600160a01b038216820361008757565b90816020910312610087575180151581036100875790565b6040513d5f823e3d90fd5b9193916001600160a01b03811680156101fb576040516301ffc9a760e01b8152637b309ba960e11b600482015290602090829060249082905afa908115610239575f9161020a575b50156101fb575f5160206104c95f395f51905f5280546001600160a01b0319166001600160a01b039092169190911790556101f9946101f4926101e6919061019d61023e565b6040516338c38a3d60e21b60208201526001600160a01b03958616602482015260448101989098529584166064880152909216608486015260a4850191909152839060c4820190565b03601f19810184528361009f565b6102da565b565b635c7bfbe960e01b5f5260045ffd5b61022c915060203d602011610232575b610224818361009f565b8101906100ec565b5f610157565b503d61021a565b610104565b5f5160206104c95f395f51905f525460405163434b6d0b60e01b815290602090829060049082906001600160a01b03165afa908115610239575f916102a0575b506001600160a01b038116156102915790565b63489aaf0d60e11b5f5260045ffd5b90506020813d6020116102d2575b816102bb6020938361009f565b81010312610087576102cc906100d8565b5f61027e565b3d91506102ae565b6001600160a01b0381161561034757815f929160208493519201905af43d1561033f573d906001600160401b03821161008b5760405191610325601f8201601f19166020018461009f565b82523d5f602084013e5b156103375750565b602081519101fd5b60609061032f565b63ee0a129760e01b5f5260045ffdfe608060405236156100a8577f7b8e0b8c3f6d4e8a9c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b5460209060809060049082906001600160a01b031663434b6d0b60e01b82525afa80156100a3575f90610076575b6001600160a01b0381166100b75763489aaf0d60e11b5f5260045ffd5b5060203d60201161009c575b8061008f610097926100d4565b60800161010b565b610059565b503d610082565b610131565b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e156100d0573d5ff35b3d5ffd5b601f80199101166080016080811067ffffffffffffffff8211176100f757604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f19011261012d576080516001600160a01b038116810361012d5790565b5f80fd5b6040513d5f823e3d90fdfea2646970667358221220df67066518b5ed4c376e2ba30ebcd824b884cd85a4c3dd2ff4444d0c34d1421164736f6c634300081c00337b8e0b8c3f6d4e8a9c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b",
  "deployedBytecode": "0x608060405236156100a8577f7b8e0b8c3f6d4e8a9c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b5460209060809060049082906001600160a01b031663434b6d0b60e01b82525afa80156100a3575f90610076575b6001600160a01b0381166100b75763489aaf0d60e11b5f5260045ffd5b5060203d60201161009c575b8061008f610097926100d4565b60800161010b565b610059565b503d610082565b610131565b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e156100d0573d5ff35b3d5ffd5b601f80199101166080016080811067ffffffffffffffff8211176100f757604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f19011261012d576080516001600160a01b038116810361012d5790565b5f80fd5b6040513d5f823e3d90fdfea2646970667358221220df67066518b5ed4c376e2ba30ebcd824b884cd85a4c3dd2ff4444d0c34d1421164736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropProxy.sol:ATKVestingAirdropProxy",
    constructorArgs: [factoryAddress: AbiParameterToPrimitiveType<{"name":"factoryAddress","type":"address"}>, token: AbiParameterToPrimitiveType<{"name":"token","type":"address"}>, root: AbiParameterToPrimitiveType<{"name":"root","type":"bytes32"}>, owner: AbiParameterToPrimitiveType<{"name":"owner","type":"address"}>, vestingStrategy: AbiParameterToPrimitiveType<{"name":"vestingStrategy","type":"address"}>, initializationDeadline: AbiParameterToPrimitiveType<{"name":"initializationDeadline","type":"uint256"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKVestingAirdropProxy$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropProxy.sol:ATKVestingAirdropProxy",
    constructorArgs: [factoryAddress: AbiParameterToPrimitiveType<{"name":"factoryAddress","type":"address"}>, token: AbiParameterToPrimitiveType<{"name":"token","type":"address"}>, root: AbiParameterToPrimitiveType<{"name":"root","type":"bytes32"}>, owner: AbiParameterToPrimitiveType<{"name":"owner","type":"address"}>, vestingStrategy: AbiParameterToPrimitiveType<{"name":"vestingStrategy","type":"address"}>, initializationDeadline: AbiParameterToPrimitiveType<{"name":"initializationDeadline","type":"uint256"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKVestingAirdropProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "contracts/addons/airdrop/vesting-airdrop/ATKVestingAirdropProxy.sol:ATKVestingAirdropProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKVestingAirdropProxy$Type["abi"]>>;
}
