// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IATKAirdrop$Type {
  _format: "hh-sol-artifact-1";
  contractName: "IATKAirdrop";
  sourceName: "contracts/addons/airdrop/IATKAirdrop.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "uint256[]";
          name: "indices";
          type: "uint256[]";
        },
        {
          internalType: "uint256[]";
          name: "totalAmounts";
          type: "uint256[]";
        },
        {
          internalType: "bytes32[][]";
          name: "merkleProofs";
          type: "bytes32[][]";
        },
      ];
      name: "batchClaim";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "uint256";
          name: "index";
          type: "uint256";
        },
        {
          internalType: "uint256";
          name: "totalAmount";
          type: "uint256";
        },
        {
          internalType: "bytes32[]";
          name: "merkleProof";
          type: "bytes32[]";
        },
      ];
      name: "claim";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [];
      name: "claimTracker";
      outputs: [
        {
          internalType: "contract IATKClaimTracker";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "uint256";
          name: "index";
          type: "uint256";
        },
      ];
      name: "getClaimedAmount";
      outputs: [
        {
          internalType: "uint256";
          name: "";
          type: "uint256";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "uint256";
          name: "index";
          type: "uint256";
        },
        {
          internalType: "uint256";
          name: "totalAmount";
          type: "uint256";
        },
      ];
      name: "isClaimed";
      outputs: [
        {
          internalType: "bool";
          name: "";
          type: "bool";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "merkleRoot";
      outputs: [
        {
          internalType: "bytes32";
          name: "";
          type: "bytes32";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "token";
      outputs: [
        {
          internalType: "contract IERC20";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "to";
          type: "address";
        },
      ];
      name: "withdrawTokens";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
  ];
  bytecode: "0x";
  deployedBytecode: "0x";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "contracts/addons/airdrop/IATKAirdrop.sol:IATKAirdrop",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IATKAirdrop$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "contracts/addons/airdrop/IATKAirdrop.sol:IATKAirdrop",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IATKAirdrop$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "contracts/addons/airdrop/IATKAirdrop.sol:IATKAirdrop",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IATKAirdrop$Type["abi"]>>;
}
