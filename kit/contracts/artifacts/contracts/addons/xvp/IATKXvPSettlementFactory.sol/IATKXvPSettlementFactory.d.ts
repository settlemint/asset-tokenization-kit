// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IATKXvPSettlementFactory$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "IATKXvPSettlementFactory",
  "sourceName": "contracts/addons/xvp/IATKXvPSettlementFactory.sol",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IATKXvPSettlement.Flow[]",
          "name": "flows",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "cutoffDate",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "autoExecute",
          "type": "bool"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialAdmin",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "settlement",
          "type": "address"
        }
      ],
      "name": "isAddressDeployed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IATKXvPSettlement.Flow[]",
          "name": "flows",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "cutoffDate",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "autoExecute",
          "type": "bool"
        }
      ],
      "name": "predictAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "predicted",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typeId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xvpSettlementImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "IATKXvPSettlementFactory",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IATKXvPSettlementFactory$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/addons/xvp/IATKXvPSettlementFactory.sol:IATKXvPSettlementFactory",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IATKXvPSettlementFactory$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "IATKXvPSettlementFactory",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IATKXvPSettlementFactory$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/addons/xvp/IATKXvPSettlementFactory.sol:IATKXvPSettlementFactory",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IATKXvPSettlementFactory$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "IATKXvPSettlementFactory",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IATKXvPSettlementFactory$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/addons/xvp/IATKXvPSettlementFactory.sol:IATKXvPSettlementFactory",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IATKXvPSettlementFactory$Type["abi"]>>;
}
