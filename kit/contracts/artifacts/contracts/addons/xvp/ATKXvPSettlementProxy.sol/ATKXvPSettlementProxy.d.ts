// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type {
  AbiParameterToPrimitiveType,
  GetContractReturnType,
} from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface ATKXvPSettlementProxy$Type {
  _format: "hh-sol-artifact-1";
  contractName: "ATKXvPSettlementProxy";
  sourceName: "contracts/addons/xvp/ATKXvPSettlementProxy.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "address";
          name: "factoryAddress";
          type: "address";
        },
        {
          internalType: "uint256";
          name: "cutoffDate";
          type: "uint256";
        },
        {
          internalType: "bool";
          name: "autoExecute";
          type: "bool";
        },
        {
          components: [
            {
              internalType: "address";
              name: "asset";
              type: "address";
            },
            {
              internalType: "address";
              name: "from";
              type: "address";
            },
            {
              internalType: "address";
              name: "to";
              type: "address";
            },
            {
              internalType: "uint256";
              name: "amount";
              type: "uint256";
            },
          ];
          internalType: "struct IATKXvPSettlement.Flow[]";
          name: "flows";
          type: "tuple[]";
        },
      ];
      stateMutability: "nonpayable";
      type: "constructor";
    },
    {
      inputs: [];
      name: "ETHTransfersNotAllowed";
      type: "error";
    },
    {
      inputs: [];
      name: "ImplementationNotSetInFactory";
      type: "error";
    },
    {
      inputs: [];
      name: "InitializationWithZeroAddress";
      type: "error";
    },
    {
      inputs: [];
      name: "InvalidFactoryAddress";
      type: "error";
    },
    {
      stateMutability: "payable";
      type: "fallback";
    },
    {
      stateMutability: "payable";
      type: "receive";
    },
  ];
  bytecode: "0x60806040523461012257610622803803809161001a8261013a565b60803980608001608082126101225761003161019e565b60a05161003e60c06101c8565b60e051939092906001600160401b0385116101225780609f86011215610122576080850151956001600160401b038711610126576040519561008660208960051b018861017b565b87875260a0602088019860071b8201019283116101225760a001965b8288106100c5575050506100b69450610276565b60405161017290816104908239f35b60808089840301126101225760206080916040516100e281610160565b6100eb8b6101b4565b81526100f8838c016101b4565b8382015261010860408c016101b4565b604082015260608b015160608201528152019701966100a2565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b0382119082101761012657604052565b608081019081106001600160401b0382111761012657604052565b601f909101601f19168101906001600160401b0382119082101761012657604052565b608051906001600160a01b038216820361012257565b51906001600160a01b038216820361012257565b5190811515820361012257565b90816020910312610122576101e9906101c8565b90565b6040513d5f823e3d90fd5b6080906020929360608201948252151583820152606060408201528451809452019201905f5b81811061022a5750505090565b825180516001600160a01b03908116865260208281015182168188015260408084015190921691870191909152606091820151918601919091526080909401939092019160010161021d565b9092906001600160a01b0381168015610334576040516301ffc9a760e01b815263e5a9470560e01b600482015290602090829060249082905afa908115610372575f91610343575b5015610334575f5160206106025f395f51905f5280546001600160a01b0319166001600160a01b039092169190911790556103329261032d9061031f610302610377565b936040519586936321c912bb60e01b6020860152602485016101f7565b03601f19810184528361017b565b610413565b565b635c7bfbe960e01b5f5260045ffd5b610365915060203d60201161036b575b61035d818361017b565b8101906101d5565b5f6102be565b503d610353565b6101ec565b5f5160206106025f395f51905f52546040516330e6fa3d60e11b815290602090829060049082906001600160a01b03165afa908115610372575f916103d9575b506001600160a01b038116156103ca5790565b63489aaf0d60e11b5f5260045ffd5b90506020813d60201161040b575b816103f46020938361017b565b8101031261012257610405906101b4565b5f6103b7565b3d91506103e7565b6001600160a01b0381161561048057815f929160208493519201905af43d15610478573d906001600160401b038211610126576040519161045e601f8201601f19166020018461017b565b82523d5f602084013e5b156104705750565b602081519101fd5b606090610468565b63ee0a129760e01b5f5260045ffdfe608060405236156100a8577f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b5460209060809060049082906001600160a01b03166330e6fa3d60e11b82525afa80156100a3575f90610076575b6001600160a01b0381166100b75763489aaf0d60e11b5f5260045ffd5b5060203d60201161009c575b8061008f610097926100d4565b60800161010b565b610059565b503d610082565b610131565b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e156100d0573d5ff35b3d5ffd5b601f80199101166080016080811067ffffffffffffffff8211176100f757604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f19011261012d576080516001600160a01b038116810361012d5790565b5f80fd5b6040513d5f823e3d90fdfea26469706673582212207a1d18f7a5f5c1463757d5aafe190e7ee96472c0a61931cee1d14475fc2653b964736f6c634300081c00331a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b";
  deployedBytecode: "0x608060405236156100a8577f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b5460209060809060049082906001600160a01b03166330e6fa3d60e11b82525afa80156100a3575f90610076575b6001600160a01b0381166100b75763489aaf0d60e11b5f5260045ffd5b5060203d60201161009c575b8061008f610097926100d4565b60800161010b565b610059565b503d610082565b610131565b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e156100d0573d5ff35b3d5ffd5b601f80199101166080016080811067ffffffffffffffff8211176100f757604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f19011261012d576080516001600160a01b038116810361012d5790565b5f80fd5b6040513d5f823e3d90fdfea26469706673582212207a1d18f7a5f5c1463757d5aafe190e7ee96472c0a61931cee1d14475fc2653b964736f6c634300081c0033";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "ATKXvPSettlementProxy",
    constructorArgs: [
      factoryAddress: AbiParameterToPrimitiveType<{
        name: "factoryAddress";
        type: "address";
      }>,
      cutoffDate: AbiParameterToPrimitiveType<{
        name: "cutoffDate";
        type: "uint256";
      }>,
      autoExecute: AbiParameterToPrimitiveType<{
        name: "autoExecute";
        type: "bool";
      }>,
      flows: AbiParameterToPrimitiveType<{ name: "flows"; type: "tuple[]" }>,
    ],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKXvPSettlementProxy$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/addons/xvp/ATKXvPSettlementProxy.sol:ATKXvPSettlementProxy",
    constructorArgs: [
      factoryAddress: AbiParameterToPrimitiveType<{
        name: "factoryAddress";
        type: "address";
      }>,
      cutoffDate: AbiParameterToPrimitiveType<{
        name: "cutoffDate";
        type: "uint256";
      }>,
      autoExecute: AbiParameterToPrimitiveType<{
        name: "autoExecute";
        type: "bool";
      }>,
      flows: AbiParameterToPrimitiveType<{ name: "flows"; type: "tuple[]" }>,
    ],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKXvPSettlementProxy$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "ATKXvPSettlementProxy",
    constructorArgs: [
      factoryAddress: AbiParameterToPrimitiveType<{
        name: "factoryAddress";
        type: "address";
      }>,
      cutoffDate: AbiParameterToPrimitiveType<{
        name: "cutoffDate";
        type: "uint256";
      }>,
      autoExecute: AbiParameterToPrimitiveType<{
        name: "autoExecute";
        type: "bool";
      }>,
      flows: AbiParameterToPrimitiveType<{ name: "flows"; type: "tuple[]" }>,
    ],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKXvPSettlementProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/addons/xvp/ATKXvPSettlementProxy.sol:ATKXvPSettlementProxy",
    constructorArgs: [
      factoryAddress: AbiParameterToPrimitiveType<{
        name: "factoryAddress";
        type: "address";
      }>,
      cutoffDate: AbiParameterToPrimitiveType<{
        name: "cutoffDate";
        type: "uint256";
      }>,
      autoExecute: AbiParameterToPrimitiveType<{
        name: "autoExecute";
        type: "bool";
      }>,
      flows: AbiParameterToPrimitiveType<{ name: "flows"; type: "tuple[]" }>,
    ],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKXvPSettlementProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "ATKXvPSettlementProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKXvPSettlementProxy$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/addons/xvp/ATKXvPSettlementProxy.sol:ATKXvPSettlementProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKXvPSettlementProxy$Type["abi"]>>;
}
