// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface ISMARTComplianceModule$Type {
  _format: "hh-sol-artifact-1";
  contractName: "ISMARTComplianceModule";
  sourceName: "contracts/smart/interface/ISMARTComplianceModule.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "string";
          name: "reason";
          type: "string";
        },
      ];
      name: "ComplianceCheckFailed";
      type: "error";
    },
    {
      inputs: [
        {
          internalType: "string";
          name: "reason";
          type: "string";
        },
      ];
      name: "InvalidParameters";
      type: "error";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_token";
          type: "address";
        },
        {
          internalType: "address";
          name: "_from";
          type: "address";
        },
        {
          internalType: "address";
          name: "_to";
          type: "address";
        },
        {
          internalType: "uint256";
          name: "_value";
          type: "uint256";
        },
        {
          internalType: "bytes";
          name: "_params";
          type: "bytes";
        },
      ];
      name: "canTransfer";
      outputs: [];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_token";
          type: "address";
        },
        {
          internalType: "address";
          name: "_to";
          type: "address";
        },
        {
          internalType: "uint256";
          name: "_value";
          type: "uint256";
        },
        {
          internalType: "bytes";
          name: "_params";
          type: "bytes";
        },
      ];
      name: "created";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_token";
          type: "address";
        },
        {
          internalType: "address";
          name: "_from";
          type: "address";
        },
        {
          internalType: "uint256";
          name: "_value";
          type: "uint256";
        },
        {
          internalType: "bytes";
          name: "_params";
          type: "bytes";
        },
      ];
      name: "destroyed";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [];
      name: "name";
      outputs: [
        {
          internalType: "string";
          name: "";
          type: "string";
        },
      ];
      stateMutability: "pure";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes4";
          name: "interfaceId";
          type: "bytes4";
        },
      ];
      name: "supportsInterface";
      outputs: [
        {
          internalType: "bool";
          name: "";
          type: "bool";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_token";
          type: "address";
        },
        {
          internalType: "address";
          name: "_from";
          type: "address";
        },
        {
          internalType: "address";
          name: "_to";
          type: "address";
        },
        {
          internalType: "uint256";
          name: "_value";
          type: "uint256";
        },
        {
          internalType: "bytes";
          name: "_params";
          type: "bytes";
        },
      ];
      name: "transferred";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes";
          name: "_params";
          type: "bytes";
        },
      ];
      name: "validateParameters";
      outputs: [];
      stateMutability: "view";
      type: "function";
    },
  ];
  bytecode: "0x";
  deployedBytecode: "0x";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "ISMARTComplianceModule",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ISMARTComplianceModule$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/smart/interface/ISMARTComplianceModule.sol:ISMARTComplianceModule",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ISMARTComplianceModule$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "ISMARTComplianceModule",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ISMARTComplianceModule$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/smart/interface/ISMARTComplianceModule.sol:ISMARTComplianceModule",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ISMARTComplianceModule$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "ISMARTComplianceModule",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ISMARTComplianceModule$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/smart/interface/ISMARTComplianceModule.sol:ISMARTComplianceModule",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ISMARTComplianceModule$Type["abi"]>>;
}
