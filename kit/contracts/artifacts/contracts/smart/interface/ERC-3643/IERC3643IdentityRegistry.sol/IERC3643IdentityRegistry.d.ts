// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IERC3643IdentityRegistry$Type {
  _format: "hh-sol-artifact-1";
  contractName: "IERC3643IdentityRegistry";
  sourceName: "contracts/smart/interface/ERC-3643/IERC3643IdentityRegistry.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "address[]";
          name: "_userAddresses";
          type: "address[]";
        },
        {
          internalType: "contract IIdentity[]";
          name: "_identities";
          type: "address[]";
        },
        {
          internalType: "uint16[]";
          name: "_countries";
          type: "uint16[]";
        },
      ];
      name: "batchRegisterIdentity";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_userAddress";
          type: "address";
        },
      ];
      name: "contains";
      outputs: [
        {
          internalType: "bool";
          name: "";
          type: "bool";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_userAddress";
          type: "address";
        },
      ];
      name: "deleteIdentity";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_userAddress";
          type: "address";
        },
      ];
      name: "identity";
      outputs: [
        {
          internalType: "contract IIdentity";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "identityStorage";
      outputs: [
        {
          internalType: "contract IERC3643IdentityRegistryStorage";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_userAddress";
          type: "address";
        },
      ];
      name: "investorCountry";
      outputs: [
        {
          internalType: "uint16";
          name: "";
          type: "uint16";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_userAddress";
          type: "address";
        },
      ];
      name: "isVerified";
      outputs: [
        {
          internalType: "bool";
          name: "";
          type: "bool";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "issuersRegistry";
      outputs: [
        {
          internalType: "contract IERC3643TrustedIssuersRegistry";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_userAddress";
          type: "address";
        },
        {
          internalType: "contract IIdentity";
          name: "_identity";
          type: "address";
        },
        {
          internalType: "uint16";
          name: "_country";
          type: "uint16";
        },
      ];
      name: "registerIdentity";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_claimTopicsRegistry";
          type: "address";
        },
      ];
      name: "setClaimTopicsRegistry";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_identityRegistryStorage";
          type: "address";
        },
      ];
      name: "setIdentityRegistryStorage";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_trustedIssuersRegistry";
          type: "address";
        },
      ];
      name: "setTrustedIssuersRegistry";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [];
      name: "topicsRegistry";
      outputs: [
        {
          internalType: "contract IERC3643ClaimTopicsRegistry";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_userAddress";
          type: "address";
        },
        {
          internalType: "uint16";
          name: "_country";
          type: "uint16";
        },
      ];
      name: "updateCountry";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "address";
          name: "_userAddress";
          type: "address";
        },
        {
          internalType: "contract IIdentity";
          name: "_identity";
          type: "address";
        },
      ];
      name: "updateIdentity";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
  ];
  bytecode: "0x";
  deployedBytecode: "0x";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "IERC3643IdentityRegistry",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IERC3643IdentityRegistry$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/smart/interface/ERC-3643/IERC3643IdentityRegistry.sol:IERC3643IdentityRegistry",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IERC3643IdentityRegistry$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "IERC3643IdentityRegistry",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IERC3643IdentityRegistry$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/smart/interface/ERC-3643/IERC3643IdentityRegistry.sol:IERC3643IdentityRegistry",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IERC3643IdentityRegistry$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "IERC3643IdentityRegistry",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IERC3643IdentityRegistry$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/smart/interface/ERC-3643/IERC3643IdentityRegistry.sol:IERC3643IdentityRegistry",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IERC3643IdentityRegistry$Type["abi"]>>;
}
