// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IWithTypeIdentifier$Type {
  _format: "hh-sol-artifact-1";
  contractName: "IWithTypeIdentifier";
  sourceName: "contracts/system/IWithTypeIdentifier.sol";
  abi: [
    {
      inputs: [];
      name: "typeId";
      outputs: [
        {
          internalType: "bytes32";
          name: "";
          type: "bytes32";
        },
      ];
      stateMutability: "pure";
      type: "function";
    },
  ];
  bytecode: "0x";
  deployedBytecode: "0x";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "IWithTypeIdentifier",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IWithTypeIdentifier$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/system/IWithTypeIdentifier.sol:IWithTypeIdentifier",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IWithTypeIdentifier$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "IWithTypeIdentifier",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IWithTypeIdentifier$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/system/IWithTypeIdentifier.sol:IWithTypeIdentifier",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IWithTypeIdentifier$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "IWithTypeIdentifier",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IWithTypeIdentifier$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/system/IWithTypeIdentifier.sol:IWithTypeIdentifier",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IWithTypeIdentifier$Type["abi"]>>;
}
