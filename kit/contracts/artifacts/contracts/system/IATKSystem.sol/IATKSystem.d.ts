// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IATKSystem$Type {
  _format: "hh-sol-artifact-1";
  contractName: "IATKSystem";
  sourceName: "contracts/system/IATKSystem.sol";
  abi: [
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "bytes32";
          name: "addonTypeHash";
          type: "bytes32";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "AddonImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "complianceProxy";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "identityRegistryProxy";
          type: "address";
        },
        {
          indexed: false;
          internalType: "address";
          name: "identityRegistryStorageProxy";
          type: "address";
        },
        {
          indexed: false;
          internalType: "address";
          name: "trustedIssuersRegistryProxy";
          type: "address";
        },
        {
          indexed: false;
          internalType: "address";
          name: "topicSchemeRegistryProxy";
          type: "address";
        },
        {
          indexed: false;
          internalType: "address";
          name: "identityFactoryProxy";
          type: "address";
        },
        {
          indexed: false;
          internalType: "address";
          name: "identityVerificationModule";
          type: "address";
        },
      ];
      name: "Bootstrapped";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "ComplianceImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "IdentityFactoryImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "IdentityImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "IdentityRegistryImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "IdentityRegistryStorageImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: false;
          internalType: "string";
          name: "name";
          type: "string";
        },
        {
          indexed: false;
          internalType: "bytes32";
          name: "typeId";
          type: "bytes32";
        },
        {
          indexed: false;
          internalType: "address";
          name: "proxyAddress";
          type: "address";
        },
        {
          indexed: false;
          internalType: "address";
          name: "implementation";
          type: "address";
        },
        {
          indexed: false;
          internalType: "bytes";
          name: "initializationData";
          type: "bytes";
        },
        {
          indexed: false;
          internalType: "uint256";
          name: "timestamp";
          type: "uint256";
        },
      ];
      name: "SystemAddonCreated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "TokenAccessManagerImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: false;
          internalType: "string";
          name: "name";
          type: "string";
        },
        {
          indexed: false;
          internalType: "bytes32";
          name: "typeId";
          type: "bytes32";
        },
        {
          indexed: false;
          internalType: "address";
          name: "proxyAddress";
          type: "address";
        },
        {
          indexed: false;
          internalType: "address";
          name: "implementationAddress";
          type: "address";
        },
        {
          indexed: false;
          internalType: "uint256";
          name: "timestamp";
          type: "uint256";
        },
      ];
      name: "TokenFactoryCreated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "bytes32";
          name: "factoryTypeHash";
          type: "bytes32";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "TokenFactoryImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "TokenIdentityImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "TopicSchemeRegistryImplementationUpdated";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "address";
          name: "sender";
          type: "address";
        },
        {
          indexed: true;
          internalType: "address";
          name: "newImplementation";
          type: "address";
        },
      ];
      name: "TrustedIssuersRegistryImplementationUpdated";
      type: "event";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "addonTypeHash";
          type: "bytes32";
        },
      ];
      name: "addonImplementation";
      outputs: [
        {
          internalType: "address";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "addonTypeHash";
          type: "bytes32";
        },
      ];
      name: "addonProxy";
      outputs: [
        {
          internalType: "address";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "bootstrap";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [];
      name: "complianceImplementation";
      outputs: [
        {
          internalType: "address";
          name: "complianceImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "complianceProxy";
      outputs: [
        {
          internalType: "address";
          name: "complianceProxyAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "string";
          name: "name";
          type: "string";
        },
        {
          internalType: "address";
          name: "implementation";
          type: "address";
        },
        {
          internalType: "bytes";
          name: "initializationData";
          type: "bytes";
        },
      ];
      name: "createSystemAddon";
      outputs: [
        {
          internalType: "address";
          name: "proxyAddress";
          type: "address";
        },
      ];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "string";
          name: "_name";
          type: "string";
        },
        {
          internalType: "address";
          name: "_factoryImplementation";
          type: "address";
        },
        {
          internalType: "address";
          name: "_tokenImplementation";
          type: "address";
        },
      ];
      name: "createTokenFactory";
      outputs: [
        {
          internalType: "address";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [];
      name: "identityFactoryImplementation";
      outputs: [
        {
          internalType: "address";
          name: "identityFactoryImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "identityFactoryProxy";
      outputs: [
        {
          internalType: "address";
          name: "identityFactoryProxyAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "identityImplementation";
      outputs: [
        {
          internalType: "address";
          name: "identityImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "identityRegistryImplementation";
      outputs: [
        {
          internalType: "address";
          name: "identityRegistryImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "identityRegistryProxy";
      outputs: [
        {
          internalType: "address";
          name: "identityRegistryProxyAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "identityRegistryStorageImplementation";
      outputs: [
        {
          internalType: "address";
          name: "identityRegistryStorageImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "identityRegistryStorageProxy";
      outputs: [
        {
          internalType: "address";
          name: "identityRegistryStorageProxyAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "identityVerificationModule";
      outputs: [
        {
          internalType: "address";
          name: "identityVerificationModuleAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "addonTypeHash";
          type: "bytes32";
        },
        {
          internalType: "address";
          name: "implementation";
          type: "address";
        },
      ];
      name: "setAddonImplementation";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "factoryTypeHash";
          type: "bytes32";
        },
        {
          internalType: "address";
          name: "implementation";
          type: "address";
        },
      ];
      name: "setTokenFactoryImplementation";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes4";
          name: "interfaceId";
          type: "bytes4";
        },
      ];
      name: "supportsInterface";
      outputs: [
        {
          internalType: "bool";
          name: "";
          type: "bool";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "tokenAccessManagerImplementation";
      outputs: [
        {
          internalType: "address";
          name: "tokenAccessManagerImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "factoryTypeHash";
          type: "bytes32";
        },
      ];
      name: "tokenFactoryImplementation";
      outputs: [
        {
          internalType: "address";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "factoryTypeHash";
          type: "bytes32";
        },
      ];
      name: "tokenFactoryProxy";
      outputs: [
        {
          internalType: "address";
          name: "";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "tokenIdentityImplementation";
      outputs: [
        {
          internalType: "address";
          name: "tokenIdentityImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "topicSchemeRegistryImplementation";
      outputs: [
        {
          internalType: "address";
          name: "topicSchemeRegistryImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "topicSchemeRegistryProxy";
      outputs: [
        {
          internalType: "address";
          name: "topicSchemeRegistryProxyAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "trustedIssuersRegistryImplementation";
      outputs: [
        {
          internalType: "address";
          name: "trustedIssuersRegistryImplementationAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [];
      name: "trustedIssuersRegistryProxy";
      outputs: [
        {
          internalType: "address";
          name: "trustedIssuersRegistryProxyAddress";
          type: "address";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
  ];
  bytecode: "0x";
  deployedBytecode: "0x";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "IATKSystem",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IATKSystem$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/system/IATKSystem.sol:IATKSystem",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IATKSystem$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "IATKSystem",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IATKSystem$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/system/IATKSystem.sol:IATKSystem",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IATKSystem$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "IATKSystem",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IATKSystem$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/system/IATKSystem.sol:IATKSystem",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IATKSystem$Type["abi"]>>;
}
