// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type {
  AbiParameterToPrimitiveType,
  GetContractReturnType,
} from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface ATKTokenFactoryProxy$Type {
  _format: "hh-sol-artifact-1";
  contractName: "ATKTokenFactoryProxy";
  sourceName: "contracts/system/token-factory/ATKTokenFactoryProxy.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "address";
          name: "systemAddress";
          type: "address";
        },
        {
          internalType: "address";
          name: "initialAdmin";
          type: "address";
        },
        {
          internalType: "bytes32";
          name: "factoryTypeHash";
          type: "bytes32";
        },
        {
          internalType: "address";
          name: "tokenImplementation";
          type: "address";
        },
        {
          internalType: "address";
          name: "identityVerificationModule";
          type: "address";
        },
      ];
      stateMutability: "nonpayable";
      type: "constructor";
    },
    {
      inputs: [];
      name: "ETHTransfersNotAllowed";
      type: "error";
    },
    {
      inputs: [];
      name: "InitializationWithZeroAddress";
      type: "error";
    },
    {
      inputs: [];
      name: "InvalidSystemAddress";
      type: "error";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "registryTypeHash";
          type: "bytes32";
        },
      ];
      name: "TokenFactoryImplementationNotSet";
      type: "error";
    },
    {
      stateMutability: "payable";
      type: "fallback";
    },
    {
      stateMutability: "payable";
      type: "receive";
    },
  ];
  bytecode: "0x60806040523461008257610552388190036080601f8201601f19168101906001600160401b038211908210176100865760a0928291604052608039126100825761007361004a6100bd565b61005460a06100d3565b60c05161006160e06100d3565b9161006d6101006100d3565b93610109565b60405161019c90816103968239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b601f909101601f19168101906001600160401b0382119082101761008657604052565b608051906001600160a01b038216820361008257565b51906001600160a01b038216820361008257565b90816020910312610082576100fb906100d3565b90565b6040513d5f823e3d90fd5b9493906101158661024b565b61013d837f17947bca0d2c81fdff72d848cf07e6794554f6987d19e262fbc8ebfe6c58aef455565b5f5160206105325f395f51905f525461016c90610160906001600160a01b031681565b6001600160a01b031690565b604051631cece55f60e01b8152600481018590529390602090859060249082905afa938415610246575f94610215575b506001600160a01b038416156102035750604051637c643b2f60e11b60208201526001600160a01b0396871660248201529386166044850152851660648401529093166084808301919091528152909161020191906101fc60a48361009a565b610319565b565b630cc8ce1560e11b5f5260045260245ffd5b61023891945060203d60201161023f575b610230818361009a565b8101906100e7565b925f61019c565b503d610226565b6100fe565b6001600160a01b03811680159081156102a0575b50610291575f5160206105325f395f51905f5280546001600160a01b0319166001600160a01b03909216919091179055565b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815263d0f808eb60e01b60048201529150602090829060249082905afa908115610246575f916102de575b50155f61025f565b90506020813d602011610311575b816102f96020938361009a565b8101031261008257518015158103610082575f6102d6565b3d91506102ec565b6001600160a01b0381161561038657815f929160208493519201905af43d1561037e573d906001600160401b0382116100865760405191610364601f8201601f19166020018461009a565b82523d5f602084013e5b156103765750565b602081519101fd5b60609061036e565b63ee0a129760e01b5f5260045ffdfe608060405236156100dd5760018060a01b037f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d35416602060806024817f17947bca0d2c81fdff72d848cf07e6794554f6987d19e262fbc8ebfe6c58aef45494631cece55f60e01b8252856084525afa9081156100d2575f916100a3575b6001600160a01b0382161561009157506100ec565b630cc8ce1560e11b5f5260045260245ffd5b905060203d6020116100cb575b806100bd6100c592610109565b608001610140565b9061007c565b503d6100b0565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610105573d5ff35b3d5ffd5b601f80199101166080016080811067ffffffffffffffff82111761012c57604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f190112610162576080516001600160a01b03811681036101625790565b5f80fdfea2646970667358221220499ac0e9cf5c4d6828d8dae0abf553541fb8776e32088cbbae955e906f05045464736f6c634300081c00334ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d3";
  deployedBytecode: "0x608060405236156100dd5760018060a01b037f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d35416602060806024817f17947bca0d2c81fdff72d848cf07e6794554f6987d19e262fbc8ebfe6c58aef45494631cece55f60e01b8252856084525afa9081156100d2575f916100a3575b6001600160a01b0382161561009157506100ec565b630cc8ce1560e11b5f5260045260245ffd5b905060203d6020116100cb575b806100bd6100c592610109565b608001610140565b9061007c565b503d6100b0565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610105573d5ff35b3d5ffd5b601f80199101166080016080811067ffffffffffffffff82111761012c57604052565b634e487b7160e01b5f52604160045260245ffd5b602090607f190112610162576080516001600160a01b03811681036101625790565b5f80fdfea2646970667358221220499ac0e9cf5c4d6828d8dae0abf553541fb8776e32088cbbae955e906f05045464736f6c634300081c0033";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "ATKTokenFactoryProxy",
    constructorArgs: [
      systemAddress: AbiParameterToPrimitiveType<{
        name: "systemAddress";
        type: "address";
      }>,
      initialAdmin: AbiParameterToPrimitiveType<{
        name: "initialAdmin";
        type: "address";
      }>,
      factoryTypeHash: AbiParameterToPrimitiveType<{
        name: "factoryTypeHash";
        type: "bytes32";
      }>,
      tokenImplementation: AbiParameterToPrimitiveType<{
        name: "tokenImplementation";
        type: "address";
      }>,
      identityVerificationModule: AbiParameterToPrimitiveType<{
        name: "identityVerificationModule";
        type: "address";
      }>,
    ],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKTokenFactoryProxy$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/system/token-factory/ATKTokenFactoryProxy.sol:ATKTokenFactoryProxy",
    constructorArgs: [
      systemAddress: AbiParameterToPrimitiveType<{
        name: "systemAddress";
        type: "address";
      }>,
      initialAdmin: AbiParameterToPrimitiveType<{
        name: "initialAdmin";
        type: "address";
      }>,
      factoryTypeHash: AbiParameterToPrimitiveType<{
        name: "factoryTypeHash";
        type: "bytes32";
      }>,
      tokenImplementation: AbiParameterToPrimitiveType<{
        name: "tokenImplementation";
        type: "address";
      }>,
      identityVerificationModule: AbiParameterToPrimitiveType<{
        name: "identityVerificationModule";
        type: "address";
      }>,
    ],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKTokenFactoryProxy$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "ATKTokenFactoryProxy",
    constructorArgs: [
      systemAddress: AbiParameterToPrimitiveType<{
        name: "systemAddress";
        type: "address";
      }>,
      initialAdmin: AbiParameterToPrimitiveType<{
        name: "initialAdmin";
        type: "address";
      }>,
      factoryTypeHash: AbiParameterToPrimitiveType<{
        name: "factoryTypeHash";
        type: "bytes32";
      }>,
      tokenImplementation: AbiParameterToPrimitiveType<{
        name: "tokenImplementation";
        type: "address";
      }>,
      identityVerificationModule: AbiParameterToPrimitiveType<{
        name: "identityVerificationModule";
        type: "address";
      }>,
    ],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKTokenFactoryProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/system/token-factory/ATKTokenFactoryProxy.sol:ATKTokenFactoryProxy",
    constructorArgs: [
      systemAddress: AbiParameterToPrimitiveType<{
        name: "systemAddress";
        type: "address";
      }>,
      initialAdmin: AbiParameterToPrimitiveType<{
        name: "initialAdmin";
        type: "address";
      }>,
      factoryTypeHash: AbiParameterToPrimitiveType<{
        name: "factoryTypeHash";
        type: "bytes32";
      }>,
      tokenImplementation: AbiParameterToPrimitiveType<{
        name: "tokenImplementation";
        type: "address";
      }>,
      identityVerificationModule: AbiParameterToPrimitiveType<{
        name: "identityVerificationModule";
        type: "address";
      }>,
    ],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKTokenFactoryProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "ATKTokenFactoryProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKTokenFactoryProxy$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/system/token-factory/ATKTokenFactoryProxy.sol:ATKTokenFactoryProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKTokenFactoryProxy$Type["abi"]>>;
}
