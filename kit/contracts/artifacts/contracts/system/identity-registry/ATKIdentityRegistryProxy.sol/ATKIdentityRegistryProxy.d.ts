// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type {
  AbiParameterToPrimitiveType,
  GetContractReturnType,
} from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface ATKIdentityRegistryProxy$Type {
  _format: "hh-sol-artifact-1";
  contractName: "ATKIdentityRegistryProxy";
  sourceName: "contracts/system/identity-registry/ATKIdentityRegistryProxy.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "address";
          name: "systemAddress";
          type: "address";
        },
        {
          internalType: "address";
          name: "initialAdmin";
          type: "address";
        },
        {
          internalType: "address";
          name: "identityStorage";
          type: "address";
        },
        {
          internalType: "address";
          name: "trustedIssuersRegistry";
          type: "address";
        },
        {
          internalType: "address";
          name: "topicSchemeRegistry";
          type: "address";
        },
      ];
      stateMutability: "payable";
      type: "constructor";
    },
    {
      inputs: [];
      name: "ETHTransfersNotAllowed";
      type: "error";
    },
    {
      inputs: [];
      name: "IdentityRegistryImplementationNotSet";
      type: "error";
    },
    {
      inputs: [];
      name: "InitializationWithZeroAddress";
      type: "error";
    },
    {
      inputs: [];
      name: "InvalidSystemAddress";
      type: "error";
    },
    {
      stateMutability: "payable";
      type: "fallback";
    },
    {
      stateMutability: "payable";
      type: "receive";
    },
  ];
  bytecode: "0x608060405260a06104c48038038091610017826101bb565b608039126101a357610027610209565b61003160a061021f565b61003b60c061021f565b9061004660e061021f565b9061005261010061021f565b906001600160a01b0385168015908115610131575b50610122577f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d380546001600160a01b0319166001600160a01b039690961695861790556101139461010e92610100916100bf90610256565b604051637c643b2f60e11b60208201526001600160a01b039485166024820152968416604488015294831660648701529091166084850152839060a4820190565b03601f1981018452836101e6565b6102e3565b60405161016490816103608239f35b633f997a3760e01b5f5260045ffd5b6040516301ffc9a760e01b815263d0f808eb60e01b60048201529150602090829060249082905afa90811561019e575f9161016f575b50155f610067565b610191915060203d602011610197575b61018981836101e6565b810190610233565b5f610167565b503d61017f565b61024b565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6080601f91909101601f19168101906001600160401b038211908210176101e157604052565b6101a7565b601f909101601f19168101906001600160401b038211908210176101e157604052565b608051906001600160a01b03821682036101a357565b51906001600160a01b03821682036101a357565b908160209103126101a3575180151581036101a35790565b6040513d5f823e3d90fd5b6040516350c6ecf560e11b815290602090829060049082906001600160a01b03165afa90811561019e575f916102a9575b506001600160a01b0381161561029a5790565b6397a22d9360e01b5f5260045ffd5b90506020813d6020116102db575b816102c4602093836101e6565b810103126101a3576102d59061021f565b5f610287565b3d91506102b7565b6001600160a01b0381161561035057815f929160208493519201905af43d15610348573d906001600160401b0382116101e1576040519161032e601f8201601f1916602001846101e6565b82523d5f602084013e5b156103405750565b602081519101fd5b606090610338565b63ee0a129760e01b5f5260045ffdfe608060405236156100dc577f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d3546350c6ecf560e11b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb576397a22d9360e01b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea26469706673582212207b4465df7ea3c6a61e912549f67e714662e3f9c7d8beb8c0df731cb4e2fd9f2564736f6c634300081c0033";
  deployedBytecode: "0x608060405236156100dc577f4ec051ecf420fd16e0db567197da76ec7f1f5f47763970d604b97e75cb0064d3546350c6ecf560e11b608090815260209160049082906001600160a01b03165afa80156100d1575f90610076575b6001600160a01b0381166100eb576397a22d9360e01b5f5260045ffd5b5060203d6020116100ca575b601f19601f820116608001906080821067ffffffffffffffff8311176100b6576100b191604052608001610108565b610059565b634e487b7160e01b5f52604160045260245ffd5b503d610082565b6040513d5f823e3d90fd5b635d82995b60e01b5f5260045ffd5b5f8091368280378136915af43d5f803e15610104573d5ff35b3d5ffd5b602090607f19011261012a576080516001600160a01b038116810361012a5790565b5f80fdfea26469706673582212207b4465df7ea3c6a61e912549f67e714662e3f9c7d8beb8c0df731cb4e2fd9f2564736f6c634300081c0033";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "ATKIdentityRegistryProxy",
    constructorArgs: [
      systemAddress: AbiParameterToPrimitiveType<{
        name: "systemAddress";
        type: "address";
      }>,
      initialAdmin: AbiParameterToPrimitiveType<{
        name: "initialAdmin";
        type: "address";
      }>,
      identityStorage: AbiParameterToPrimitiveType<{
        name: "identityStorage";
        type: "address";
      }>,
      trustedIssuersRegistry: AbiParameterToPrimitiveType<{
        name: "trustedIssuersRegistry";
        type: "address";
      }>,
      topicSchemeRegistry: AbiParameterToPrimitiveType<{
        name: "topicSchemeRegistry";
        type: "address";
      }>,
    ],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKIdentityRegistryProxy$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/system/identity-registry/ATKIdentityRegistryProxy.sol:ATKIdentityRegistryProxy",
    constructorArgs: [
      systemAddress: AbiParameterToPrimitiveType<{
        name: "systemAddress";
        type: "address";
      }>,
      initialAdmin: AbiParameterToPrimitiveType<{
        name: "initialAdmin";
        type: "address";
      }>,
      identityStorage: AbiParameterToPrimitiveType<{
        name: "identityStorage";
        type: "address";
      }>,
      trustedIssuersRegistry: AbiParameterToPrimitiveType<{
        name: "trustedIssuersRegistry";
        type: "address";
      }>,
      topicSchemeRegistry: AbiParameterToPrimitiveType<{
        name: "topicSchemeRegistry";
        type: "address";
      }>,
    ],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ATKIdentityRegistryProxy$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "ATKIdentityRegistryProxy",
    constructorArgs: [
      systemAddress: AbiParameterToPrimitiveType<{
        name: "systemAddress";
        type: "address";
      }>,
      initialAdmin: AbiParameterToPrimitiveType<{
        name: "initialAdmin";
        type: "address";
      }>,
      identityStorage: AbiParameterToPrimitiveType<{
        name: "identityStorage";
        type: "address";
      }>,
      trustedIssuersRegistry: AbiParameterToPrimitiveType<{
        name: "trustedIssuersRegistry";
        type: "address";
      }>,
      topicSchemeRegistry: AbiParameterToPrimitiveType<{
        name: "topicSchemeRegistry";
        type: "address";
      }>,
    ],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKIdentityRegistryProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/system/identity-registry/ATKIdentityRegistryProxy.sol:ATKIdentityRegistryProxy",
    constructorArgs: [
      systemAddress: AbiParameterToPrimitiveType<{
        name: "systemAddress";
        type: "address";
      }>,
      initialAdmin: AbiParameterToPrimitiveType<{
        name: "initialAdmin";
        type: "address";
      }>,
      identityStorage: AbiParameterToPrimitiveType<{
        name: "identityStorage";
        type: "address";
      }>,
      trustedIssuersRegistry: AbiParameterToPrimitiveType<{
        name: "trustedIssuersRegistry";
        type: "address";
      }>,
      topicSchemeRegistry: AbiParameterToPrimitiveType<{
        name: "topicSchemeRegistry";
        type: "address";
      }>,
    ],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ATKIdentityRegistryProxy$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "ATKIdentityRegistryProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKIdentityRegistryProxy$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/system/identity-registry/ATKIdentityRegistryProxy.sol:ATKIdentityRegistryProxy",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ATKIdentityRegistryProxy$Type["abi"]>>;
}
