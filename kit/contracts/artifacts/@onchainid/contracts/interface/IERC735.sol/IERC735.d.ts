// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IERC735$Type {
  _format: "hh-sol-artifact-1";
  contractName: "IERC735";
  sourceName: "@onchainid/contracts/interface/IERC735.sol";
  abi: [
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "bytes32";
          name: "claimId";
          type: "bytes32";
        },
        {
          indexed: true;
          internalType: "uint256";
          name: "topic";
          type: "uint256";
        },
        {
          indexed: false;
          internalType: "uint256";
          name: "scheme";
          type: "uint256";
        },
        {
          indexed: true;
          internalType: "address";
          name: "issuer";
          type: "address";
        },
        {
          indexed: false;
          internalType: "bytes";
          name: "signature";
          type: "bytes";
        },
        {
          indexed: false;
          internalType: "bytes";
          name: "data";
          type: "bytes";
        },
        {
          indexed: false;
          internalType: "string";
          name: "uri";
          type: "string";
        },
      ];
      name: "ClaimAdded";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "bytes32";
          name: "claimId";
          type: "bytes32";
        },
        {
          indexed: true;
          internalType: "uint256";
          name: "topic";
          type: "uint256";
        },
        {
          indexed: false;
          internalType: "uint256";
          name: "scheme";
          type: "uint256";
        },
        {
          indexed: true;
          internalType: "address";
          name: "issuer";
          type: "address";
        },
        {
          indexed: false;
          internalType: "bytes";
          name: "signature";
          type: "bytes";
        },
        {
          indexed: false;
          internalType: "bytes";
          name: "data";
          type: "bytes";
        },
        {
          indexed: false;
          internalType: "string";
          name: "uri";
          type: "string";
        },
      ];
      name: "ClaimChanged";
      type: "event";
    },
    {
      anonymous: false;
      inputs: [
        {
          indexed: true;
          internalType: "bytes32";
          name: "claimId";
          type: "bytes32";
        },
        {
          indexed: true;
          internalType: "uint256";
          name: "topic";
          type: "uint256";
        },
        {
          indexed: false;
          internalType: "uint256";
          name: "scheme";
          type: "uint256";
        },
        {
          indexed: true;
          internalType: "address";
          name: "issuer";
          type: "address";
        },
        {
          indexed: false;
          internalType: "bytes";
          name: "signature";
          type: "bytes";
        },
        {
          indexed: false;
          internalType: "bytes";
          name: "data";
          type: "bytes";
        },
        {
          indexed: false;
          internalType: "string";
          name: "uri";
          type: "string";
        },
      ];
      name: "ClaimRemoved";
      type: "event";
    },
    {
      inputs: [
        {
          internalType: "uint256";
          name: "_topic";
          type: "uint256";
        },
        {
          internalType: "uint256";
          name: "_scheme";
          type: "uint256";
        },
        {
          internalType: "address";
          name: "issuer";
          type: "address";
        },
        {
          internalType: "bytes";
          name: "_signature";
          type: "bytes";
        },
        {
          internalType: "bytes";
          name: "_data";
          type: "bytes";
        },
        {
          internalType: "string";
          name: "_uri";
          type: "string";
        },
      ];
      name: "addClaim";
      outputs: [
        {
          internalType: "bytes32";
          name: "claimRequestId";
          type: "bytes32";
        },
      ];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "_claimId";
          type: "bytes32";
        },
      ];
      name: "getClaim";
      outputs: [
        {
          internalType: "uint256";
          name: "topic";
          type: "uint256";
        },
        {
          internalType: "uint256";
          name: "scheme";
          type: "uint256";
        },
        {
          internalType: "address";
          name: "issuer";
          type: "address";
        },
        {
          internalType: "bytes";
          name: "signature";
          type: "bytes";
        },
        {
          internalType: "bytes";
          name: "data";
          type: "bytes";
        },
        {
          internalType: "string";
          name: "uri";
          type: "string";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "uint256";
          name: "_topic";
          type: "uint256";
        },
      ];
      name: "getClaimIdsByTopic";
      outputs: [
        {
          internalType: "bytes32[]";
          name: "claimIds";
          type: "bytes32[]";
        },
      ];
      stateMutability: "view";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "_claimId";
          type: "bytes32";
        },
      ];
      name: "removeClaim";
      outputs: [
        {
          internalType: "bool";
          name: "success";
          type: "bool";
        },
      ];
      stateMutability: "nonpayable";
      type: "function";
    },
  ];
  bytecode: "0x";
  deployedBytecode: "0x";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "IERC735",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IERC735$Type["abi"]>>;
  export function deployContract(
    contractName: "@onchainid/contracts/interface/IERC735.sol:IERC735",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IERC735$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "IERC735",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IERC735$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "@onchainid/contracts/interface/IERC735.sol:IERC735",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IERC735$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "IERC735",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IERC735$Type["abi"]>>;
  export function getContractAt(
    contractName: "@onchainid/contracts/interface/IERC735.sol:IERC735",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IERC735$Type["abi"]>>;
}
