{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "tokenAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "root", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_distributionCap",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "trustedForwarder",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_BATCH_SIZE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batchDistribute",
      "inputs": [
        {
          "name": "recipients",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "amounts", "type": "uint256[]", "internalType": "uint256[]" },
        {
          "name": "merkleProofs",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distribute",
      "inputs": [
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distributed",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "distributionCap",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDistributed",
      "inputs": [
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        { "name": "forwarder", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "markAsDistributed",
      "inputs": [
        {
          "name": "recipients",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "merkleRoot",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "token",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC20" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalDistributed",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateDistributionCap",
      "inputs": [
        { "name": "newCap", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateMerkleRoot",
      "inputs": [
        { "name": "newRoot", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawTokens",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "BatchDistributed",
      "inputs": [
        {
          "name": "recipientCount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "totalAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DistributionCapUpdated",
      "inputs": [
        {
          "name": "oldCap",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newCap",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MerkleRootUpdated",
      "inputs": [
        {
          "name": "oldRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensDistributed",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensWithdrawn",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AlreadyDistributed", "inputs": [] },
    { "type": "error", "name": "ArrayLengthMismatch", "inputs": [] },
    { "type": "error", "name": "BatchSizeTooLarge", "inputs": [] },
    { "type": "error", "name": "DistributionActive", "inputs": [] },
    { "type": "error", "name": "DistributionCapExceeded", "inputs": [] },
    { "type": "error", "name": "FailedTransfer", "inputs": [] },
    { "type": "error", "name": "InvalidMerkleProof", "inputs": [] },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "ZeroAddress", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60c03461014b57601f610e5f38819003918201601f19168301916001600160401b038311848410176101505780849260a09460405283398101031261014b5761004781610166565b90602081015161005960408301610166565b9261006b608060608501519401610166565b6001600160a01b0390941693841561013557600080546001600160a01b031981168717825560405196916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556080526001600160a01b031680156101245760a052600255600555610ce4908161017b82396080518181816106ef015281816107d60152610c81015260a05181818160f8015281816102f2015281816104d801526108520152f35b63d92e233d60e01b60005260046000fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361014b5756fe6080604052600436101561001257600080fd5b60003560e01c80630d575402146109885780632eb4a7ab1461096a5780633ebf6474146107775780634783f0ef1461092057806349df728c1461080a578063572b6c05146107b6578063578bcf3514610777578063715018a61461071e5780637da0a877146106d957806389cc643a1461042f5780638da5cb5b146104065780638fbb2e0a1461036b578063ab1089be1461020d578063cd63d930146101ef578063cfdbf254146101d3578063efca2eed146101b5578063f2fde38b1461012c5763fc0c546a146100e257600080fd5b34610127576000366003190112610127576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600080fd5b34610127576020366003190112610127576101456109db565b61014d610a8b565b6001600160a01b0316801561019f57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b34610127576000366003190112610127576020600454604051908152f35b3461012757600036600319011261012757602060405160648152f35b34610127576000366003190112610127576020600554604051908152f35b34610127576060366003190112610127576102266109db565b60243560443567ffffffffffffffff8111610127576102499036906004016109f1565b9290610253610a8b565b61025b610b6c565b6001600160a01b03821660008181526003602052604090205490949060ff1661035a57610289918484610b8e565b15610349576005548015159081610334575b5061032357816103167f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c9360209386600052600385526040600020600160ff198254161790556102ed82600454610a7e565b6004557f0000000000000000000000000000000000000000000000000000000000000000610ad3565b604051908152a260018055005b636fd8707b60e11b60005260046000fd5b905061034283600454610a7e565b118461029b565b63582f497d60e11b60005260046000fd5b63cce553a960e01b60005260046000fd5b346101275760203660031901126101275760043567ffffffffffffffff81116101275761039c9036906004016109f1565b906103a5610a8b565b606482116103f55760005b8281106103b957005b6001906001600160a01b036103d76103d2838787610a5a565b610a6a565b16600052600360205260406000208260ff19825416179055016103b0565b631e80759560e21b60005260046000fd5b34610127576000366003190112610127576000546040516001600160a01b039091168152602090f35b346101275760603660031901126101275760043567ffffffffffffffff8111610127576104609036906004016109f1565b9060243567ffffffffffffffff8111610127576104819036906004016109f1565b60449391933567ffffffffffffffff8111610127576104a49036906004016109f1565b6104af959195610a8b565b6104b7610b6c565b606484116103f5578284148015906106cf575b6106be5760009492859686917f000000000000000000000000000000000000000000000000000000000000000096601e1983360301935b818110610576578a8a6005548015159081610561575b50610323577f9da086e067c0984a7c98ca182f45b6ce3054f5a9074fe7ecb0fac722d60bc9ab918161054d604093600454610a7e565b60045582519182526020820152a160018055005b905061056f82600454610a7e565b1183610517565b6105846103d282848b610a5a565b9961059082858a610a5a565b359b878310156106a8578260051b860135878112156101275786019182359267ffffffffffffffff841161012757602001928060051b36038413610127576001600160a01b038e1660008181526003602052604090205490949060ff1661069957908f918f926105ff93610b8e565b1561068c578d610627918460005260036020526040600020600160ff19825416179055610a7e565b9b60001982146106765760018e92019d610641918d610ad3565b60405190815260207f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c91a26001905b01610501565b634e487b7160e01b600052601160045260246000fd5b9b509b5050600190610670565b50509b509b5050600190610670565b634e487b7160e01b600052603260045260246000fd5b63512509d360e11b60005260046000fd5b50808314156104ca565b34610127576000366003190112610127576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012757600036600319011261012757610737610a8b565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610127576020366003190112610127576001600160a01b036107986109db565b166000526003602052602060ff604060002054166040519015158152f35b346101275760203660031901126101275760206107d16109db565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610127576020366003190112610127576108236109db565b61082b610a8b565b6001600160a01b03811690811561090f576040516370a0823160e01b8152306004820152907f00000000000000000000000000000000000000000000000000000000000000006020836024816001600160a01b0385165afa928315610903576000936108cb575b50916108c2816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b95610ad3565b604051908152a2005b9250906020833d6020116108fb575b816108e760209383610a22565b8101031261012757915191906108c2610892565b3d91506108da565b6040513d6000823e3d90fd5b63d92e233d60e01b60005260046000fd5b346101275760203660031901126101275760043561093c610a8b565b806002547ffd69edeceaf1d6832d935be1fba54ca93bf17e71520c6c9ffc08d6e9529f8757600080a3600255005b34610127576000366003190112610127576020600254604051908152f35b34610127576020366003190112610127576004356109a4610a8b565b7f64687926ea82d024193ae2d49d2c6e63089c2caf9cba13ff897d094f1526f01760406005548151908152836020820152a1600555005b600435906001600160a01b038216820361012757565b9181601f840112156101275782359167ffffffffffffffff8311610127576020808501948460051b01011161012757565b90601f8019910116810190811067ffffffffffffffff821117610a4457604052565b634e487b7160e01b600052604160045260246000fd5b91908110156106a85760051b0190565b356001600160a01b03811681036101275790565b9190820180921161067657565b6000546001600160a01b0390811690610aa2610c7e565b1603610aaa57565b610ab2610c7e565b63118cdaa760e01b60009081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448201949094529092600091610b1a81606481015b03601f198101835282610a22565b519082855af115610903576000513d610b6357506001600160a01b0381163b155b610b425750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415610b3b565b600260015414610b7d576002600155565b633ee5aeb560e01b60005260046000fd5b604080516001600160a01b03909216602083019081529082019290925292939192610bbc8160608101610b0c565b5190206040516020810191825260208152610bd8604082610a22565b5190206002549267ffffffffffffffff8511610a44578460051b60405195610c036020830188610a22565b8652602086019082019136831161012757905b828210610c6e57505050906000915b8451831015610c6657604060019160009060208660051b8901015190818110600014610c5a578252602052205b920191610c25565b90825260205220610c52565b915092501490565b8135815260209182019101610c16565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610ccc575b15610cc8576013193601368111610676573560601c90565b3390565b506014361015610cb056fea164736f6c634300081c000a",
    "sourceMap": "804:9131:16:-:0;;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;-1:-1:-1;;;;;804:9131:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;804:9131:16;;;;1273:26:33;;1269:95;;-1:-1:-1;804:9131:16;;-1:-1:-1;;;;;;804:9131:16;;;;;;;;;;-1:-1:-1;;;;;804:9131:16;;;;3052:40:33;;-1:-1:-1;3052:40:33;804:9131:16;;;;1500:37:47;-1:-1:-1;;;;;804:9131:16;2745:26;;2741:52;;804:9131;2803:28;2841:17;804:9131;2868:34;804:9131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2741:52;2780:13;;;-1:-1:-1;2780:13:16;;-1:-1:-1;2780:13:16;1269:95:33;1322:31;;;-1:-1:-1;1322:31:33;-1:-1:-1;1322:31:33;804:9131:16;;-1:-1:-1;1322:31:33;804:9131:16;-1:-1:-1;804:9131:16;;;;;;-1:-1:-1;804:9131:16;;;;;-1:-1:-1;804:9131:16;;;;-1:-1:-1;;;;;804:9131:16;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b60003560e01c80630d575402146109885780632eb4a7ab1461096a5780633ebf6474146107775780634783f0ef1461092057806349df728c1461080a578063572b6c05146107b6578063578bcf3514610777578063715018a61461071e5780637da0a877146106d957806389cc643a1461042f5780638da5cb5b146104065780638fbb2e0a1461036b578063ab1089be1461020d578063cd63d930146101ef578063cfdbf254146101d3578063efca2eed146101b5578063f2fde38b1461012c5763fc0c546a146100e257600080fd5b34610127576000366003190112610127576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600080fd5b34610127576020366003190112610127576101456109db565b61014d610a8b565b6001600160a01b0316801561019f57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b34610127576000366003190112610127576020600454604051908152f35b3461012757600036600319011261012757602060405160648152f35b34610127576000366003190112610127576020600554604051908152f35b34610127576060366003190112610127576102266109db565b60243560443567ffffffffffffffff8111610127576102499036906004016109f1565b9290610253610a8b565b61025b610b6c565b6001600160a01b03821660008181526003602052604090205490949060ff1661035a57610289918484610b8e565b15610349576005548015159081610334575b5061032357816103167f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c9360209386600052600385526040600020600160ff198254161790556102ed82600454610a7e565b6004557f0000000000000000000000000000000000000000000000000000000000000000610ad3565b604051908152a260018055005b636fd8707b60e11b60005260046000fd5b905061034283600454610a7e565b118461029b565b63582f497d60e11b60005260046000fd5b63cce553a960e01b60005260046000fd5b346101275760203660031901126101275760043567ffffffffffffffff81116101275761039c9036906004016109f1565b906103a5610a8b565b606482116103f55760005b8281106103b957005b6001906001600160a01b036103d76103d2838787610a5a565b610a6a565b16600052600360205260406000208260ff19825416179055016103b0565b631e80759560e21b60005260046000fd5b34610127576000366003190112610127576000546040516001600160a01b039091168152602090f35b346101275760603660031901126101275760043567ffffffffffffffff8111610127576104609036906004016109f1565b9060243567ffffffffffffffff8111610127576104819036906004016109f1565b60449391933567ffffffffffffffff8111610127576104a49036906004016109f1565b6104af959195610a8b565b6104b7610b6c565b606484116103f5578284148015906106cf575b6106be5760009492859686917f000000000000000000000000000000000000000000000000000000000000000096601e1983360301935b818110610576578a8a6005548015159081610561575b50610323577f9da086e067c0984a7c98ca182f45b6ce3054f5a9074fe7ecb0fac722d60bc9ab918161054d604093600454610a7e565b60045582519182526020820152a160018055005b905061056f82600454610a7e565b1183610517565b6105846103d282848b610a5a565b9961059082858a610a5a565b359b878310156106a8578260051b860135878112156101275786019182359267ffffffffffffffff841161012757602001928060051b36038413610127576001600160a01b038e1660008181526003602052604090205490949060ff1661069957908f918f926105ff93610b8e565b1561068c578d610627918460005260036020526040600020600160ff19825416179055610a7e565b9b60001982146106765760018e92019d610641918d610ad3565b60405190815260207f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c91a26001905b01610501565b634e487b7160e01b600052601160045260246000fd5b9b509b5050600190610670565b50509b509b5050600190610670565b634e487b7160e01b600052603260045260246000fd5b63512509d360e11b60005260046000fd5b50808314156104ca565b34610127576000366003190112610127576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012757600036600319011261012757610737610a8b565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610127576020366003190112610127576001600160a01b036107986109db565b166000526003602052602060ff604060002054166040519015158152f35b346101275760203660031901126101275760206107d16109db565b6040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169216919091148152f35b34610127576020366003190112610127576108236109db565b61082b610a8b565b6001600160a01b03811690811561090f576040516370a0823160e01b8152306004820152907f00000000000000000000000000000000000000000000000000000000000000006020836024816001600160a01b0385165afa928315610903576000936108cb575b50916108c2816020937f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b95610ad3565b604051908152a2005b9250906020833d6020116108fb575b816108e760209383610a22565b8101031261012757915191906108c2610892565b3d91506108da565b6040513d6000823e3d90fd5b63d92e233d60e01b60005260046000fd5b346101275760203660031901126101275760043561093c610a8b565b806002547ffd69edeceaf1d6832d935be1fba54ca93bf17e71520c6c9ffc08d6e9529f8757600080a3600255005b34610127576000366003190112610127576020600254604051908152f35b34610127576020366003190112610127576004356109a4610a8b565b7f64687926ea82d024193ae2d49d2c6e63089c2caf9cba13ff897d094f1526f01760406005548151908152836020820152a1600555005b600435906001600160a01b038216820361012757565b9181601f840112156101275782359167ffffffffffffffff8311610127576020808501948460051b01011161012757565b90601f8019910116810190811067ffffffffffffffff821117610a4457604052565b634e487b7160e01b600052604160045260246000fd5b91908110156106a85760051b0190565b356001600160a01b03811681036101275790565b9190820180921161067657565b6000546001600160a01b0390811690610aa2610c7e565b1603610aaa57565b610ab2610c7e565b63118cdaa760e01b60009081526001600160a01b0391909116600452602490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448201949094529092600091610b1a81606481015b03601f198101835282610a22565b519082855af115610903576000513d610b6357506001600160a01b0381163b155b610b425750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415610b3b565b600260015414610b7d576002600155565b633ee5aeb560e01b60005260046000fd5b604080516001600160a01b03909216602083019081529082019290925292939192610bbc8160608101610b0c565b5190206040516020810191825260208152610bd8604082610a22565b5190206002549267ffffffffffffffff8511610a44578460051b60405195610c036020830188610a22565b8652602086019082019136831161012757905b828210610c6e57505050906000915b8451831015610c6657604060019160009060208660051b8901015190818110600014610c5a578252602052205b920191610c25565b90825260205220610c52565b915092501490565b8135815260209182019101610c16565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610ccc575b15610cc8576013193601368111610676573560601c90565b3390565b506014361015610cb056fea164736f6c634300081c000a",
    "sourceMap": "804:9131:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;;935:29;-1:-1:-1;;;;;804:9131:16;;;;;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;;:::i;:::-;1500:62:33;;:::i;:::-;-1:-1:-1;;;;;804:9131:16;2627:22:33;;2623:91;;804:9131:16;;;-1:-1:-1;;;;;;804:9131:16;;;;;;-1:-1:-1;;;;;804:9131:16;;3052:40:33;;804:9131:16;3052:40:33;804:9131:16;2623:91:33;2672:31;;;804:9131:16;2672:31:33;804:9131:16;;;;;2672:31:33;804:9131:16;;;;;;-1:-1:-1;;804:9131:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;;;1426:3;804:9131;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;1291:30;804:9131;;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:33;;;;:::i;:::-;2466:103:69;;:::i;:::-;-1:-1:-1;;;;;804:9131:16;;;;;;4118:11;804:9131;;;;;;;;;;;4114:55;;4216:50;;;;;:::i;:::-;4215:51;4211:109;;4368:15;804:9131;4368:19;;;:66;;;;804:9131;4364:129;;;804:9131;4704:6;4727:36;804:9131;;;;;;4118:11;804:9131;;;;;;;;;;;;;;4610:26;804:9131;;;4610:26;:::i;:::-;804:9131;;4674:5;4704:6;:::i;:::-;804:9131;;;;;4727:36;804:9131;;;;4364:129;6766:25;;;804:9131;4457:25;804:9131;;4457:25;4368:66;804:9131;;4391:25;804:9131;;;4391:25;:::i;:::-;:43;4368:66;;;4211:109;4289:20;;;804:9131;4289:20;804:9131;;4289:20;4114:55;4149:20;;;804:9131;4149:20;804:9131;;4149:20;804:9131;;;;;;-1:-1:-1;;804:9131:16;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:33;;;:::i;:::-;1426:3:16;7441:34;;7437:66;;804:9131;7534:21;;;;;;804:9131;7557:3;804:9131;;-1:-1:-1;;;;;7588:13:16;;804:9131;7588:13;;;:::i;:::-;;:::i;:::-;804:9131;;;7576:11;804:9131;;;;;;;;;;;;;;;7519:13;;7437:66;5470:19;;;804:9131;7484:19;804:9131;;7484:19;804:9131;;;;;;-1:-1:-1;;804:9131:16;;;;;;;;-1:-1:-1;;;;;804:9131:16;;;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:33;;;;;:::i;:::-;2466:103:69;;:::i;:::-;1426:3:16;5427:34;;5423:66;;5559:35;;;;;:76;;;804:9131;5555:135;;804:9131;5700:22;;5732:28;5813:13;;6505:5;;804:9131;;;;;;;5808:801;5828:21;;;;;;804:9131;;;;6687:19;;;:70;;;;5808:801;6683:108;;;6884:46;804:9131;;6838:30;804:9131;;;;6838:30;:::i;:::-;804:9131;;;;;;;;;;;6884:46;804:9131;;;;6687:70;804:9131;;6710:29;804:9131;;;6710:29;:::i;:::-;:47;6687:70;;;5851:3;5890:13;;;;;;:::i;:::-;5934:10;;;;;;:::i;:::-;804:9131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;804:9131:16;;;;;;6068:11;804:9131;;;;;;;;;;;6064:69;;6187:50;;;;;;;;:::i;:::-;6186:51;6182:98;;804:9131;6407:20;804:9131;;;;6068:11;804:9131;;;;;;;;;;;;;;6407:20;:::i;:::-;804:9131;-1:-1:-1;;804:9131:16;;;;;;;;6535:6;;;;;:::i;:::-;804:9131;;;;;;6562:36;;;804:9131;5851:3;5813:13;804:9131;5813:13;;804:9131;;;;;;;;;;;;6182:98;6257:8;;;;;804:9131;6257:8;;;6064:69;6110:8;;;;;;;804:9131;6110:8;;;804:9131;;;;;;;;;;;;5555:135;5658:21;;;804:9131;5658:21;804:9131;;5658:21;5559:76;5598:37;;;;;5559:76;;804:9131;;;;;;-1:-1:-1;;804:9131:16;;;;;;1707:17:47;-1:-1:-1;;;;;804:9131:16;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;1500:62:33;;:::i;:::-;804:9131:16;;;-1:-1:-1;;;;;;804:9131:16;;;;-1:-1:-1;;;;;804:9131:16;3052:40:33;804:9131:16;;3052:40:33;804:9131:16;;;;;;;-1:-1:-1;;804:9131:16;;;;-1:-1:-1;;;;;804:9131:16;;:::i;:::-;;;;1107:43;804:9131;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;;;:::i;:::-;;;1707:17:47;-1:-1:-1;;;;;804:9131:16;;;;;1931:31:47;;;;804:9131:16;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;;:::i;:::-;1500:62:33;;:::i;:::-;-1:-1:-1;;;;;804:9131:16;;;7885:16;;7881:42;;804:9131;;-1:-1:-1;;;7951:30:16;;7975:4;804:9131;7951:30;;804:9131;;7951:5;804:9131;;7951:30;804:9131;-1:-1:-1;;;;;804:9131:16;;7951:30;;;;;;;804:9131;7951:30;;;804:9131;8014:7;;;;804:9131;8014:7;8037:28;8014:7;;:::i;:::-;804:9131;;;;;8037:28;804:9131;7951:30;;;;804:9131;7951:30;;804:9131;7951:30;;;;;;804:9131;7951:30;;;:::i;:::-;;;804:9131;;;;;;;7951:30;8014:7;7951:30;;;;;-1:-1:-1;7951:30:16;;;804:9131;;;;;;;;;7881:42;7910:13;;;804:9131;7910:13;804:9131;;7910:13;804:9131;;;;;;-1:-1:-1;;804:9131:16;;;;;;1500:62:33;;:::i;:::-;804:9131:16;3155:10;804:9131;3137:38;804:9131;3137:38;;3155:10;804:9131;;;;;;;;-1:-1:-1;;804:9131:16;;;;;1015:25;804:9131;;;;;;;;;;;;;-1:-1:-1;;804:9131:16;;;;;;1500:62:33;;:::i;:::-;3468:47:16;804:9131;3491:15;804:9131;;;;;;;;;;;3468:47;3491:15;804:9131;;;;;;-1:-1:-1;;;;;804:9131:16;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;804:9131:16;;;;;-1:-1:-1;804:9131:16;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;804:9131:16;;;;;;;:::o;:::-;;;;;;;;;;:::o;1796:162:33:-;1710:6;804:9131:16;-1:-1:-1;;;;;804:9131:16;;;;9366:27;;:::i;:::-;804:9131;1855:23:33;1851:101;;1796:162::o;1851:101::-;9366:27:16;;:::i;:::-;-1:-1:-1;;;1710:6:33;1901:40;;;-1:-1:-1;;;;;804:9131:16;;;;1901:40:33;804:9131:16;;;1901:40:33;1219:160:62;804:9131:16;;-1:-1:-1;;;1328:43:62;;;;;;;-1:-1:-1;;;;;804:9131:16;;;1328:43:62;;;804:9131:16;;;;;;;;1219:160:62;;-1:-1:-1;;1328:43:62;804:9131:16;;;;1328:43:62;;804:9131:16;;1328:43:62;;;;;;:::i;:::-;7823:421;;;;;;;;;-1:-1:-1;7823:421:62;;8258:15;;-1:-1:-1;;;;;;804:9131:16;;8276:26:62;:31;8258:68;8254:146;;1219:160;:::o;8254:146::-;-1:-1:-1;;;;8349:40:62;;;-1:-1:-1;;;;;804:9131:16;;;;8349:40:62;804:9131:16;1328:43:62;;8349:40;8258:68;8325:1;8310:16;;8258:68;;2575:307:69;1899:1;2702:7;804:9131:16;2702:18:69;2698:86;;1899:1;2702:7;804:9131:16;2575:307:69:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:69;;-1:-1:-1;2743:30:69;8358:424:16;804:9131;;;-1:-1:-1;;;;;804:9131:16;;;8677:29;;;804:9131;;;;;;;;;;8358:424;;;;8677:29;804:9131;;;;8677:29;804:9131;8677:29;804:9131;8667:40;;804:9131;;8677:29;8656:52;;804:9131;;;8677:29;8656:52;;;804:9131;8656:52;;:::i;:::-;804:9131;8646:63;;8758:10;804:9131;;;;;;;;;;;;;;8677:29;804:9131;;;;:::i;:::-;;;8677:29;804:9131;;;;;;;;;;;;;;;;;;2559:27:76;;;2601:13;-1:-1:-1;2596:134:76;2634:3;804:9131:16;;2616:16:76;;;;;804:9131:16;;;-1:-1:-1;804:9131:16;8677:29;804:9131;;;;;;;605:61:75;:5;;;:61;:5;;;891:135;;8677:29:16;891:135:75;;605:61;2634:3:76;804:9131:16;2601:13:76;;;605:61:75;891:135;;;8677:29:16;891:135:75;;605:61;;2616:16:76;;;;;2016:33;8358:424:16;:::o;804:9131::-;;;;;8677:29;804:9131;;;;;;;2206:429:47;2422:10;1707:17;-1:-1:-1;;;;;804:9131:16;1931:31:47;;2403:71;;2206:429;2399:230;;;804:9131:16;;2312:8:47;804:9131:16;2312:8:47;804:9131:16;;;;;;;;2490:72:47:o;2399:230::-;2422:10;2593:25;:::o;2403:71::-;2312:8;3483:2;2312:8;2437:37;;2403:71;",
    "linkReferences": {},
    "immutableReferences": {
      "14829": [
        { "start": 1775, "length": 32 },
        { "start": 2006, "length": 32 },
        { "start": 3201, "length": 32 }
      ],
      "6625": [
        { "start": 248, "length": 32 },
        { "start": 754, "length": 32 },
        { "start": 1240, "length": 32 },
        { "start": 2130, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_BATCH_SIZE()": "cfdbf254",
    "batchDistribute(address[],uint256[],bytes32[][])": "89cc643a",
    "distribute(address,uint256,bytes32[])": "ab1089be",
    "distributed(address)": "578bcf35",
    "distributionCap()": "cd63d930",
    "isDistributed(address)": "3ebf6474",
    "isTrustedForwarder(address)": "572b6c05",
    "markAsDistributed(address[])": "8fbb2e0a",
    "merkleRoot()": "2eb4a7ab",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "token()": "fc0c546a",
    "totalDistributed()": "efca2eed",
    "transferOwnership(address)": "f2fde38b",
    "trustedForwarder()": "7da0a877",
    "updateDistributionCap(uint256)": "0d575402",
    "updateMerkleRoot(bytes32)": "4783f0ef",
    "withdrawTokens(address)": "49df728c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_distributionCap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyDistributed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BatchSizeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributionActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributionCapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"BatchDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"DistributionCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"oldRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchDistribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"distributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"isDistributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"}],\"name\":\"markAsDistributed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"updateDistributionCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"name\":\"updateMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for admin-initiated token distributions with Merkle proof verification This allows project owners to push tokens to recipients in batches.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"batchDistribute(address[],uint256[],bytes32[][])\":{\"details\":\"Only callable by the contract ownerLimited to MAX_BATCH_SIZE recipients per transaction to prevent gas issues\",\"params\":{\"amounts\":\"The amounts to distribute to each address\",\"merkleProofs\":\"The proofs for each distribution\",\"recipients\":\"The addresses to receive tokens\"}},\"constructor\":{\"details\":\"Creates a new push airdrop contract\",\"params\":{\"_distributionCap\":\"Maximum tokens that can be distributed (0 for no cap)\",\"initialOwner\":\"The admin who can initiate distributions\",\"root\":\"The Merkle root of the distribution list\",\"tokenAddress\":\"The token to be distributed\",\"trustedForwarder\":\"The address of the trusted forwarder for ERC2771\"}},\"distribute(address,uint256,bytes32[])\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"amount\":\"The amount of tokens to distribute\",\"merkleProof\":\"The proof verifying this distribution\",\"recipient\":\"The address to receive tokens\"}},\"isDistributed(address)\":{\"params\":{\"recipient\":\"The address to check\"},\"returns\":{\"_0\":\"Whether the address has already received tokens\"}},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"markAsDistributed(address[])\":{\"details\":\"Useful for tracking addresses that have received tokens through other meansOnly callable by the contract ownerLimited to MAX_BATCH_SIZE recipients per transaction to prevent gas issues\",\"params\":{\"recipients\":\"The addresses to mark as distributed\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"},\"updateDistributionCap(uint256)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"newCap\":\"The new distribution cap (0 for no cap)\"}},\"updateMerkleRoot(bytes32)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"newRoot\":\"The new Merkle root\"}},\"withdrawTokens(address)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"to\":\"The address to send the tokens to\"}}},\"title\":\"PushAirdrop\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchDistribute(address[],uint256[],bytes32[][])\":{\"notice\":\"Distributes tokens to multiple recipients in a batch\"},\"distribute(address,uint256,bytes32[])\":{\"notice\":\"Distributes tokens to a single recipient with Merkle proof verification\"},\"isDistributed(address)\":{\"notice\":\"Checks if a recipient has already received their distribution\"},\"markAsDistributed(address[])\":{\"notice\":\"Marks multiple addresses as distributed without sending tokens\"},\"updateDistributionCap(uint256)\":{\"notice\":\"Updates the distribution cap\"},\"updateMerkleRoot(bytes32)\":{\"notice\":\"Updates the Merkle root\"},\"withdrawTokens(address)\":{\"notice\":\"Allows the owner to withdraw tokens from the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PushAirdrop.sol\":\"PushAirdrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/\",\":@ethereum-attestation-service/eas-contracts/=dependencies/eas-contracts-1.4.0/contracts/\",\":@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/\",\":@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\",\":@openzeppelin/contracts-upgradeable/=dependencies/openzeppelin-community-contracts-0.0.1/lib/@openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.2.0/\",\":eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/\",\":forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/\",\":forge-std/=dependencies/forge-std-1.9.5/src/\",\":openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/PushAirdrop.sol\":{\"keccak256\":\"0x00b9d6fcbadb1896804dcad60c44ac19c74e871e53c8df6f25b3101dfc4fcfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6542f9b6bb8e0a9de8e4aeee5c696395ec7ed6296ca32205efbbb1491c8ace61\",\"dweb:/ipfs/QmYzQRpm5f7HU2VmUNGntoiYZpJpQLKENMVFaLUkA4TUSw\"]},\"dependencies/@openzeppelin-contracts-5.2.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"dependencies/@openzeppelin-contracts-5.2.0/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"dependencies/@openzeppelin-contracts-5.2.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"dependencies/@openzeppelin-contracts-5.2.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            { "internalType": "bytes32", "name": "root", "type": "bytes32" },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_distributionCap",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trustedForwarder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "AlreadyDistributed" },
        { "inputs": [], "type": "error", "name": "ArrayLengthMismatch" },
        { "inputs": [], "type": "error", "name": "BatchSizeTooLarge" },
        { "inputs": [], "type": "error", "name": "DistributionActive" },
        { "inputs": [], "type": "error", "name": "DistributionCapExceeded" },
        { "inputs": [], "type": "error", "name": "FailedTransfer" },
        { "inputs": [], "type": "error", "name": "InvalidMerkleProof" },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        { "inputs": [], "type": "error", "name": "ZeroAddress" },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "recipientCount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldCap",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newCap",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DistributionCapUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "oldRoot",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MerkleRootUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BATCH_SIZE",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "recipients",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "merkleProofs",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchDistribute"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distribute"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "distributed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributionCap",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDistributed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "recipients",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "markAsDistributed"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            { "internalType": "contract IERC20", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDistributed",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "newCap", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDistributionCap"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "newRoot", "type": "bytes32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMerkleRoot"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchDistribute(address[],uint256[],bytes32[][])": {
            "details": "Only callable by the contract ownerLimited to MAX_BATCH_SIZE recipients per transaction to prevent gas issues",
            "params": {
              "amounts": "The amounts to distribute to each address",
              "merkleProofs": "The proofs for each distribution",
              "recipients": "The addresses to receive tokens"
            }
          },
          "constructor": {
            "details": "Creates a new push airdrop contract",
            "params": {
              "_distributionCap": "Maximum tokens that can be distributed (0 for no cap)",
              "initialOwner": "The admin who can initiate distributions",
              "root": "The Merkle root of the distribution list",
              "tokenAddress": "The token to be distributed",
              "trustedForwarder": "The address of the trusted forwarder for ERC2771"
            }
          },
          "distribute(address,uint256,bytes32[])": {
            "details": "Only callable by the contract owner",
            "params": {
              "amount": "The amount of tokens to distribute",
              "merkleProof": "The proof verifying this distribution",
              "recipient": "The address to receive tokens"
            }
          },
          "isDistributed(address)": {
            "params": { "recipient": "The address to check" },
            "returns": {
              "_0": "Whether the address has already received tokens"
            }
          },
          "isTrustedForwarder(address)": {
            "details": "Indicates whether any particular address is the trusted forwarder."
          },
          "markAsDistributed(address[])": {
            "details": "Useful for tracking addresses that have received tokens through other meansOnly callable by the contract ownerLimited to MAX_BATCH_SIZE recipients per transaction to prevent gas issues",
            "params": { "recipients": "The addresses to mark as distributed" }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "trustedForwarder()": {
            "details": "Returns the address of the trusted forwarder."
          },
          "updateDistributionCap(uint256)": {
            "details": "Only callable by the contract owner",
            "params": { "newCap": "The new distribution cap (0 for no cap)" }
          },
          "updateMerkleRoot(bytes32)": {
            "details": "Only callable by the contract owner",
            "params": { "newRoot": "The new Merkle root" }
          },
          "withdrawTokens(address)": {
            "details": "Only callable by the contract owner",
            "params": { "to": "The address to send the tokens to" }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchDistribute(address[],uint256[],bytes32[][])": {
            "notice": "Distributes tokens to multiple recipients in a batch"
          },
          "distribute(address,uint256,bytes32[])": {
            "notice": "Distributes tokens to a single recipient with Merkle proof verification"
          },
          "isDistributed(address)": {
            "notice": "Checks if a recipient has already received their distribution"
          },
          "markAsDistributed(address[])": {
            "notice": "Marks multiple addresses as distributed without sending tokens"
          },
          "updateDistributionCap(uint256)": {
            "notice": "Updates the distribution cap"
          },
          "updateMerkleRoot(bytes32)": { "notice": "Updates the Merkle root" },
          "withdrawTokens(address)": {
            "notice": "Allows the owner to withdraw tokens from the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/",
        "@ethereum-attestation-service/eas-contracts/=dependencies/eas-contracts-1.4.0/contracts/",
        "@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/",
        "@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/",
        "@openzeppelin/contracts-upgradeable/=dependencies/openzeppelin-community-contracts-0.0.1/lib/@openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.2.0/",
        "eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/",
        "forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/",
        "forge-std/=dependencies/forge-std-1.9.5/src/",
        "openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "contracts/PushAirdrop.sol": "PushAirdrop" },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/PushAirdrop.sol": {
        "keccak256": "0x00b9d6fcbadb1896804dcad60c44ac19c74e871e53c8df6f25b3101dfc4fcfbb",
        "urls": [
          "bzz-raw://6542f9b6bb8e0a9de8e4aeee5c696395ec7ed6296ca32205efbbb1491c8ace61",
          "dweb:/ipfs/QmYzQRpm5f7HU2VmUNGntoiYZpJpQLKENMVFaLUkA4TUSw"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/metatx/ERC2771Context.sol": {
        "keccak256": "0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99",
        "urls": [
          "bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8",
          "dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf",
        "urls": [
          "bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329",
          "dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/ReentrancyGuard.sol": {
        "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
        "urls": [
          "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
          "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/Hashes.sol": {
        "keccak256": "0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7",
        "urls": [
          "bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9",
          "dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134",
        "urls": [
          "bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6",
          "dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 16
}
