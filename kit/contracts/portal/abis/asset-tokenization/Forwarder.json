{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        { "name": "fields", "type": "bytes1", "internalType": "bytes1" },
        { "name": "name", "type": "string", "internalType": "string" },
        { "name": "version", "type": "string", "internalType": "string" },
        { "name": "chainId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "verifyingContract",
          "type": "address",
          "internalType": "address"
        },
        { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "extensions",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            { "name": "from", "type": "address", "internalType": "address" },
            { "name": "to", "type": "address", "internalType": "address" },
            { "name": "value", "type": "uint256", "internalType": "uint256" },
            { "name": "gas", "type": "uint256", "internalType": "uint256" },
            { "name": "deadline", "type": "uint48", "internalType": "uint48" },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "executeBatch",
      "inputs": [
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
          "components": [
            { "name": "from", "type": "address", "internalType": "address" },
            { "name": "to", "type": "address", "internalType": "address" },
            { "name": "value", "type": "uint256", "internalType": "uint256" },
            { "name": "gas", "type": "uint256", "internalType": "uint256" },
            { "name": "deadline", "type": "uint48", "internalType": "uint48" },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "refundReceiver",
          "type": "address",
          "internalType": "address payable"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "nonces",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verify",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct ERC2771Forwarder.ForwardRequestData",
          "components": [
            { "name": "from", "type": "address", "internalType": "address" },
            { "name": "to", "type": "address", "internalType": "address" },
            { "name": "value", "type": "uint256", "internalType": "uint256" },
            { "name": "gas", "type": "uint256", "internalType": "uint256" },
            { "name": "deadline", "type": "uint48", "internalType": "uint48" },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "EIP712DomainChanged",
      "inputs": [],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExecutedForwardRequest",
      "inputs": [
        {
          "name": "signer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "success",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderExpiredRequest",
      "inputs": [
        { "name": "deadline", "type": "uint48", "internalType": "uint48" }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderInvalidSigner",
      "inputs": [
        { "name": "signer", "type": "address", "internalType": "address" },
        { "name": "from", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771ForwarderMismatchedValue",
      "inputs": [
        {
          "name": "requestedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "msgValue", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC2771UntrustfulTarget",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" },
        { "name": "forwarder", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "FailedCall", "inputs": [] },
    {
      "type": "error",
      "name": "InsufficientBalance",
      "inputs": [
        { "name": "balance", "type": "uint256", "internalType": "uint256" },
        { "name": "needed", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidAccountNonce",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "currentNonce", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "InvalidShortString", "inputs": [] },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [{ "name": "str", "type": "string", "internalType": "string" }]
    }
  ],
  "bytecode": {
    "object": "0x6101606040523461013d57604051610018604082610142565b601a815260208101907f4173736574546f6b656e697a6174696f6e466f72776172646572000000000000825260405191610053604084610142565b600183526020830191603160f81b835261006c8161017b565b610120526100798461033d565b61014052519020918260e05251902080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526100e260c082610142565b5190206080523060c052604051610e3a90816104dc823960805181610cb5015260a05181610d72015260c05181610c7f015260e05181610d0401526101005181610d2a0152610120518161051e015261014051816105470152f35b600080fd5b601f909101601f19168101906001600160401b0382119082101761016557604052565b634e487b7160e01b600052604160045260246000fd5b90815160208110600014610213575090601f8151116101b75760208151910151602082106101a7571790565b6000198260200360031b1b161790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b8381106101fb5750508160006044809484010152601f80199101168101030190fd5b602082820181015160448784010152859350016101d9565b6001600160401b03811161016557600054600181811c91168015610333575b602082101461031d57601f81116102e8575b50602092601f82116001146102845792819293600092610279575b50508160011b916000199060031b1c19161760005560ff90565b01519050388061025f565b601f1982169360008052806000209160005b8681106102d057508360019596106102b7575b505050811b0160005560ff90565b015160001960f88460031b161c191690553880806102a9565b91926020600181928685015181550194019201610296565b60008052601f6020600020910160051c810190601f830160051c015b8181106103115750610244565b60008155600101610304565b634e487b7160e01b600052602260045260246000fd5b90607f1690610232565b908151602081106000146103c5575090601f8151116103695760208151910151602082106101a7571790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b8381106103ad5750508160006044809484010152601f80199101168101030190fd5b6020828201810151604487840101528593500161038b565b6001600160401b03811161016557600154600181811c911680156104d1575b602082101461031d57601f811161049b575b50602092601f8211600114610436579281929360009261042b575b50508160011b916000199060031b1c19161760015560ff90565b015190503880610411565b601f198216936001600052806000209160005b868110610483575083600195961061046a575b505050811b0160015560ff90565b015160001960f88460031b161c1916905538808061045c565b91926020600181928685015181550194019201610449565b6001600052601f6020600020910160051c810190601f830160051c015b8181106104c557506103f6565b600081556001016104b8565b90607f16906103e456fe6080604052600436101561001257600080fd5b60003560e01c806319d8d38c146106495780637ecebe001461060257806384b0196e14610505578063ccf96b4a146102455763df905caf1461005357600080fd5b61005c3661068b565b60408101359081340361022c57600091610075826107ba565b92919082156101fb5781156101d35780156101a4578261019c575b5081610194575b506100b8575b505050156100a757005b63d6bda27560e01b60005260046000fd5b9091925060018060a01b03169081600052600260205260008060408120928354936001850190556060860135956100f160208201610793565b916101116101496014602061010960a08701876109bc565b949096610793565b9360405194818692848401998a378201906bffffffffffffffffffffffff199060601b16838201520301600b19810184520182610700565b519288f192603f5a9104116101925760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a238808061009d565bfe5b905038610097565b915038610090565b836101ae87610793565b636422d02b60e11b60009081526001600160a01b039283166004529116602452604490fd5b65ffffffffffff6101e6608088016107a7565b634a777ac560e11b6000521660045260246000fd5b61020760208701610793565b63d2650cd160e01b60009081526001600160a01b039190911660045230602452604490fd5b506370647f7960e01b6000526004523460245260446000fd5b60403660031901126105005760043567ffffffffffffffff811161050057366023820112156105005780600401359067ffffffffffffffff8211610500576024810190602436918460051b010111610500576024356001600160a01b0381169190829003610500578115926000916000946000925b80841061035d57505050503481036103455750816102d457005b81471061032c57600080809381935af13d15610324573d906102f5826109ef565b916103036040519384610700565b82523d6000602084013e5b1561031557005b8051156100a757805190602001fd5b60609061030e565b504763cf47918160e01b60005260045260245260446000fd5b6370647f7960e01b6000526004523460245260446000fd5b9091929361037a906040610372878588610738565b013590610770565b93610386818386610738565b60009084610393826107ba565b936104c6575b826104be575b50816104b6575b506103db575b5050156103bf575b6001019291906102ba565b956103d360019160406103728a8689610738565b9690506103b4565b90915060018060a01b03168060005260026020526040600020805490600182019055600080606085013594604061041460208301610793565b61042160a08401846109bc565b61046b6014602061043488979597610793565b938551948186928484019a8b378201906bffffffffffffffffffffffff199060601b16838201520301600b19810184520182610700565b519301359088f192603f5a9104116101925760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a288806103ac565b90508b6103a6565b91508c61039f565b82156104f45781156104e1578061039957836101ae86610793565b65ffffffffffff6101e6608087016107a7565b61020760208601610793565b600080fd5b34610500576000366003190112610500576105a46105427f0000000000000000000000000000000000000000000000000000000000000000610a42565b61056b7f0000000000000000000000000000000000000000000000000000000000000000610b6e565b60206105b26040519261057e8385610700565b600084526000368137604051958695600f60f81b875260e08588015260e08701906106bf565b9085820360408701526106bf565b466060850152306080850152600060a085015283810360c085015281808451928381520193019160005b8281106105eb57505050500390f35b8351855286955093810193928101926001016105dc565b34610500576020366003190112610500576004356001600160a01b0381168103610500576001600160a01b0316600090815260026020908152604090912054604051908152f35b3461050057602061066161065c3661068b565b6107ba565b509082610683575b508161067b575b506040519015158152f35b905082610670565b915083610669565b6020600319820112610500576004359067ffffffffffffffff82116105005760e09082900360031901126105005760040190565b919082519283825260005b8481106106eb575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016106ca565b90601f8019910116810190811067ffffffffffffffff82111761072257604052565b634e487b7160e01b600052604160045260246000fd5b919081101561075a5760051b8101359060de1981360301821215610500570190565b634e487b7160e01b600052603260045260246000fd5b9190820180921161077d57565b634e487b7160e01b600052601160045260246000fd5b356001600160a01b03811681036105005790565b3565ffffffffffff811681036105005790565b906107c482610793565b60208301916108e960426107d785610793565b936107ff6107e488610793565b6001600160a01b031660009081526002602052604090205490565b94608088019565ffffffffffff610815886107a7565b61082c61082560a08d018d6109bc565b3691610a0b565b60208151910120926040519460208601967f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac885260018060a01b0316604087015260018060a01b0316606086015260408c0135608086015260608c013560a086015260c08501521660e083015261010082015261010081526108b061012082610700565b5190206108bb610c7c565b906040519161190160f01b835260028301526022820152206108e361082560c08801886109bc565b90610c40565b5060048194929410156109a65760006109056020921596610793565b6040518381019063572b6c0560e01b82523060248201526024815261092b604482610700565b51915afa903d600051908361099a575b508261098e575b5061094c906107a7565b9484610966575b509365ffffffffffff4291161015929190565b9093506001600160a01b039061097b90610793565b166001600160a01b038316149238610953565b1515915061094c610942565b6020111592503861093b565b634e487b7160e01b600052602160045260246000fd5b903590601e1981360301821215610500570180359067ffffffffffffffff82116105005760200191813603831361050057565b67ffffffffffffffff811161072257601f01601f191660200190565b929192610a17826109ef565b91610a256040519384610700565b829481845281830111610500578281602093846000960137010152565b60ff8114610a8c5760ff811690601f8211610a7b576040805192610a668285610700565b6020808552840191601f190136833783525290565b632cd44ac360e21b60005260046000fd5b5060405160008054908160011c91600181168015610b64575b602084108114610b50578385528492918115610b315750600114610ad3575b610ad092500382610700565b90565b50600080805290917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b818310610b15575050906020610ad092820101610ac4565b6020919350806001915483858801015201910190918392610afd565b60209250610ad094915060ff191682840152151560051b820101610ac4565b634e487b7160e01b83526022600452602483fd5b92607f1692610aa5565b60ff8114610b925760ff811690601f8211610a7b576040805192610a668285610700565b506040516000600154908160011c91600181168015610c36575b602084108114610b50578385528492918115610b315750600114610bd657610ad092500382610700565b506001600090815290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b818310610c1a575050906020610ad092820101610ac4565b6020919350806001915483858801015201910190918392610c02565b92607f1692610bac565b8151919060418303610c7157610c6a92506020820151906060604084015193015160001a90610d98565b9192909190565b505060009160029190565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610d6f575b15610cd7577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610d6960c082610700565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610cae565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e21579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15610e15576000516001600160a01b03811615610e095790600090600090565b50600090600190600090565b6040513d6000823e3d90fd5b5050506000916003919056fea164736f6c634300081c000a",
    "sourceMap": "155:111:13:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;155:111:13;;3401:45:74;;;:::i;:::-;3393:53;;3467:51;;;:::i;:::-;3456:62;;155:111:13;3542:22:74;;3528:36;;;;155:111:13;3591:25:74;;3574:42;;;3644:13;3627:30;;155:111:13;;4204:80:74;155:111:13;4204:80:74;;2079:95;;;;155:111:13;2079:95:74;;;;;;;3644:13;2079:95;;;;4278:4;3627:30;2079:95;;;3627:30;4204:80;;;;;;:::i;:::-;155:111:13;4194:91:74;;2079:95;3667:48;4278:4;4204:80;3725:27;155:111:13;;;;;;;;2079:95:74;155:111:13;;;;;3627:30:74;155:111:13;;;;;4204:80:74;155:111:13;;;;;3528:36:74;155:111:13;;;;;3574:42:74;155:111:13;;;;;3393:53:74;155:111:13;;;;;3456:62:74;155:111:13;;;;;;;;;;;;;;;-1:-1:-1;;155:111:13;;;;-1:-1:-1;;;;;155:111:13;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;155:111:13;;;;;-1:-1:-1;155:111:13;2887:340:70;;155:111:13;;3032:2:70;3010:24;;3006:215;3032:2;;;155:111:13;;1854:2:70;155:111:13;;1840:16:70;1836:72;;3032:2;155:111:13;;;;2079:95:74;3032:2:70;155:111:13;;;;1949:36:70;3050:27;:::o;155:111:13:-;;;;3032:2:70;155:111:13;;;;;1949:36:70;3050:27;:::o;1836:72::-;155:111:13;;1879:18:70;;;;;;3032:2;1879:18;;;155:111:13;;;;;;;;;;3432:13:74;155:111:13;;;;;;;;;3432:13:74;155:111:13;;;;;;;1854:2:70;155:111:13;;;;;;;1879:18:70;;;;155:111:13;3032:2:70;155:111:13;;;;;;;;;;;;;;-1:-1:-1;155:111:13;;;3006:215:70;-1:-1:-1;;;;;155:111:13;;;;3432:13:74;155:111:13;;;;;;;;;;;3006:215:70;3032:2;155:111:13;;;;;;;;;;3006:215:70;155:111:13;3032:2:70;155:111:13;;;;;;;;;;;;3432:13:74;155:111:13;;;;;;;;;;;;;;;;;;;3432:13:74;155:111:13;1390:66:70;3168:42;:::o;155:111:13:-;;;;-1:-1:-1;155:111:13;;;;;;;;;;3432:13:74;155:111:13;;;3432:13:74;155:111:13;;3432:13:74;155:111:13;;;;;;;;;;;;;;;;;;;;;3432:13:74;155:111:13;1390:66:70;3168:42;:::o;155:111:13:-;;;;;;;;;;;;;;;;;;;;;;;3032:2:70;155:111:13;;;;;;;;;;;;;;;;;3432:13:74;155:111:13;;;3032:2:70;3432:13:74;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;3432:13:74;155:111:13;;;;;;;;;;3432:13:74;155:111:13;;;;;3432:13:74;155:111:13;;;;;;;;2887:340:70;;155:111:13;;3032:2:70;3010:24;;3006:215;3032:2;;;155:111:13;;1854:2:70;155:111:13;;1840:16:70;1836:72;;3032:2;155:111:13;;;;2079:95:74;3032:2:70;155:111:13;;;;1949:36:70;3050:27;:::o;1836:72::-;155:111:13;;1879:18:70;;;;;;3032:2;1879:18;;;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:2:70;155:111:13;;;;;;;1879:18:70;;;;155:111:13;3032:2:70;155:111:13;;;;;;;;;;;;;;-1:-1:-1;155:111:13;;;3006:215:70;-1:-1:-1;;;;;155:111:13;;;;;;;;;;;;;;;;3006:215:70;3032:2;155:111:13;;;;;;;;;;3006:215:70;155:111:13;3032:2:70;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:70;3168:42;:::o;155:111:13:-;;;;-1:-1:-1;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:70;3168:42;:::o;155:111:13:-;;;;;;;;;;;;;;;;;;;;;;;3032:2:70;155:111:13;;;;;;;;;;;;;;;;;;;;;3032:2:70;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b60003560e01c806319d8d38c146106495780637ecebe001461060257806384b0196e14610505578063ccf96b4a146102455763df905caf1461005357600080fd5b61005c3661068b565b60408101359081340361022c57600091610075826107ba565b92919082156101fb5781156101d35780156101a4578261019c575b5081610194575b506100b8575b505050156100a757005b63d6bda27560e01b60005260046000fd5b9091925060018060a01b03169081600052600260205260008060408120928354936001850190556060860135956100f160208201610793565b916101116101496014602061010960a08701876109bc565b949096610793565b9360405194818692848401998a378201906bffffffffffffffffffffffff199060601b16838201520301600b19810184520182610700565b519288f192603f5a9104116101925760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a238808061009d565bfe5b905038610097565b915038610090565b836101ae87610793565b636422d02b60e11b60009081526001600160a01b039283166004529116602452604490fd5b65ffffffffffff6101e6608088016107a7565b634a777ac560e11b6000521660045260246000fd5b61020760208701610793565b63d2650cd160e01b60009081526001600160a01b039190911660045230602452604490fd5b506370647f7960e01b6000526004523460245260446000fd5b60403660031901126105005760043567ffffffffffffffff811161050057366023820112156105005780600401359067ffffffffffffffff8211610500576024810190602436918460051b010111610500576024356001600160a01b0381169190829003610500578115926000916000946000925b80841061035d57505050503481036103455750816102d457005b81471061032c57600080809381935af13d15610324573d906102f5826109ef565b916103036040519384610700565b82523d6000602084013e5b1561031557005b8051156100a757805190602001fd5b60609061030e565b504763cf47918160e01b60005260045260245260446000fd5b6370647f7960e01b6000526004523460245260446000fd5b9091929361037a906040610372878588610738565b013590610770565b93610386818386610738565b60009084610393826107ba565b936104c6575b826104be575b50816104b6575b506103db575b5050156103bf575b6001019291906102ba565b956103d360019160406103728a8689610738565b9690506103b4565b90915060018060a01b03168060005260026020526040600020805490600182019055600080606085013594604061041460208301610793565b61042160a08401846109bc565b61046b6014602061043488979597610793565b938551948186928484019a8b378201906bffffffffffffffffffffffff199060601b16838201520301600b19810184520182610700565b519301359088f192603f5a9104116101925760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a288806103ac565b90508b6103a6565b91508c61039f565b82156104f45781156104e1578061039957836101ae86610793565b65ffffffffffff6101e6608087016107a7565b61020760208601610793565b600080fd5b34610500576000366003190112610500576105a46105427f0000000000000000000000000000000000000000000000000000000000000000610a42565b61056b7f0000000000000000000000000000000000000000000000000000000000000000610b6e565b60206105b26040519261057e8385610700565b600084526000368137604051958695600f60f81b875260e08588015260e08701906106bf565b9085820360408701526106bf565b466060850152306080850152600060a085015283810360c085015281808451928381520193019160005b8281106105eb57505050500390f35b8351855286955093810193928101926001016105dc565b34610500576020366003190112610500576004356001600160a01b0381168103610500576001600160a01b0316600090815260026020908152604090912054604051908152f35b3461050057602061066161065c3661068b565b6107ba565b509082610683575b508161067b575b506040519015158152f35b905082610670565b915083610669565b6020600319820112610500576004359067ffffffffffffffff82116105005760e09082900360031901126105005760040190565b919082519283825260005b8481106106eb575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016106ca565b90601f8019910116810190811067ffffffffffffffff82111761072257604052565b634e487b7160e01b600052604160045260246000fd5b919081101561075a5760051b8101359060de1981360301821215610500570190565b634e487b7160e01b600052603260045260246000fd5b9190820180921161077d57565b634e487b7160e01b600052601160045260246000fd5b356001600160a01b03811681036105005790565b3565ffffffffffff811681036105005790565b906107c482610793565b60208301916108e960426107d785610793565b936107ff6107e488610793565b6001600160a01b031660009081526002602052604090205490565b94608088019565ffffffffffff610815886107a7565b61082c61082560a08d018d6109bc565b3691610a0b565b60208151910120926040519460208601967f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac885260018060a01b0316604087015260018060a01b0316606086015260408c0135608086015260608c013560a086015260c08501521660e083015261010082015261010081526108b061012082610700565b5190206108bb610c7c565b906040519161190160f01b835260028301526022820152206108e361082560c08801886109bc565b90610c40565b5060048194929410156109a65760006109056020921596610793565b6040518381019063572b6c0560e01b82523060248201526024815261092b604482610700565b51915afa903d600051908361099a575b508261098e575b5061094c906107a7565b9484610966575b509365ffffffffffff4291161015929190565b9093506001600160a01b039061097b90610793565b166001600160a01b038316149238610953565b1515915061094c610942565b6020111592503861093b565b634e487b7160e01b600052602160045260246000fd5b903590601e1981360301821215610500570180359067ffffffffffffffff82116105005760200191813603831361050057565b67ffffffffffffffff811161072257601f01601f191660200190565b929192610a17826109ef565b91610a256040519384610700565b829481845281830111610500578281602093846000960137010152565b60ff8114610a8c5760ff811690601f8211610a7b576040805192610a668285610700565b6020808552840191601f190136833783525290565b632cd44ac360e21b60005260046000fd5b5060405160008054908160011c91600181168015610b64575b602084108114610b50578385528492918115610b315750600114610ad3575b610ad092500382610700565b90565b50600080805290917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b818310610b15575050906020610ad092820101610ac4565b6020919350806001915483858801015201910190918392610afd565b60209250610ad094915060ff191682840152151560051b820101610ac4565b634e487b7160e01b83526022600452602483fd5b92607f1692610aa5565b60ff8114610b925760ff811690601f8211610a7b576040805192610a668285610700565b506040516000600154908160011c91600181168015610c36575b602084108114610b50578385528492918115610b315750600114610bd657610ad092500382610700565b506001600090815290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b818310610c1a575050906020610ad092820101610ac4565b6020919350806001915483858801015201910190918392610c02565b92607f1692610bac565b8151919060418303610c7157610c6a92506020820151906060604084015193015160001a90610d98565b9192909190565b505060009160029190565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610d6f575b15610cd7577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610d6960c082610700565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610cae565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e21579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15610e15576000516001600160a01b03811615610e095790600090600090565b50600090600190600090565b6040513d6000823e3d90fd5b5050506000916003919056fea164736f6c634300081c000a",
    "sourceMap": "155:111:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5956:13:48;;155:111:13;5943:9:48;;;:26;5939:121;;155:111:13;11291:18:48;;;;:::i;:::-;11546:19;;;;;11542:115;;11675:7;;11671:101;;11790:12;;11786:109;;11992:33;;;155:111:13;11992:43:48;;;;155:111:13;11988:728:48;;;155:111:13;6074:24:48;;;;6070:81;;155:111:13;6070:81:48;6010:19:63;;;155:111:13;6121:19:48;155:111:13;;6121:19:48;11988:728;155:111:13;;;;;;;;;;;;;;1121:7:66;155:111:13;;;;;;;;;;;6093:4:48;155:111:13;;;;12208:11:48;;;155:111:13;12246:10:48;;155:111:13;12246:10:48;;;:::i;:::-;12350:12;12364;12333:44;155:111:13;;12350:12:48;;;;;;:::i;:::-;12364;;;;:::i;:::-;155:111:13;;;12333:44:48;;;;;;;155:111:13;;;;;;;;;12208:11:48;155:111:13;;;;;;12333:44:48;;;;;;;;;;;:::i;:::-;12422:160;;;;;16401:2;12422:160;155:111:13;;-1:-1:-1;16373:423:48;;155:111:13;12652:53:48;155:111:13;;;;;;;;;;;;;12652:53:48;11988:728;;;;;16373:423;16720:66;11992:43;;;;;;:33;;-1:-1:-1;11992:33:48;;;11786:109;11867:12;;;;:::i;:::-;-1:-1:-1;;;155:111:13;11829:51:48;;;-1:-1:-1;;;;;155:111:13;;;;;;;;;;;11829:51:48;11671:101;155:111:13;11740:16:48;;;;;:::i;:::-;11709:48;;;155:111:13;11709:48:48;155:111:13;;;;;11709:48:48;11542:115;11616:10;;;;;:::i;:::-;-1:-1:-1;;;155:111:13;11592:50:48;;;-1:-1:-1;;;;;155:111:13;;;;;;11636:4:48;155:111:13;;;;11592:50:48;5939:121;8257:57;;;;155:111:13;5992:57:48;155:111:13;;5943:9:48;155:111:13;;;;5992:57:48;155:111:13;;;-1:-1:-1;;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;155:111:13;;;;;;;;;7721:28:48;;7760:21;155:111:13;7791:19:48;155:111:13;7826:9:48;155:111:13;7821:251:48;7837:19;;;;;;8225:9;;;;;8208:26;;8204:121;;8492:16;;8488:328;;155:111:13;8488:328:48;1375:21:63;;:30;1371:125;;155:111:13;1548:33:63;;;;;;;155:111:13;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;1595:8:63;1591:58;;155:111:13;1591:58:63;155:111:13;;5690:21:63;:17;;5815:158;;;155:111:13;5815:158:63;;155:111:13;;;;;1371:125:63;1455:21;;1428:57;;;155:111:13;1428:57:63;155:111:13;;;;;;1428:57:63;8204:121:48;8257:57;;;155:111:13;8257:57:48;155:111:13;;8225:9:48;155:111:13;;;;8257:57:48;7858:3;7894:11;;;;7877:34;7894:11;155:111:13;7894:11:48;;;;;:::i;:::-;:17;155:111:13;7877:34:48;;:::i;:::-;7949:11;;;;;;:::i;:::-;155:111:13;11291:18:48;;;;;:::i;:::-;11503:402;;;7858:3;11992:33;;;7858:3;11992:43;;;;7858:3;11988:728;;;7858:3;7987:8;;;7983:79;;7858:3;155:111:13;;7826:9:48;;;;;7983:79;8030:11;8015:32;155:111:13;8030:11:48;155:111:13;8030:11:48;;;;;:::i;8015:32::-;7983:79;;;;;11988:728;155:111:13;;;;;;;;;;;;1121:7:66;155:111:13;;;;;;;;;;;;;;12208:11:48;;;;155:111:13;12246:10:48;155:111:13;12246:10:48;155:111:13;12246:10:48;;;:::i;:::-;12350:12;;;;;;:::i;:::-;12333:44;155:111:13;;12364:12:48;;;;;;:::i;:::-;155:111:13;;;12333:44:48;;;;;;;155:111:13;;;;;;;;;12208:11:48;155:111:13;;;;;;12333:44:48;;;;;;;;;;;:::i;:::-;12422:160;12286:13;;155:111:13;12422:160:48;;;;16401:2;12422:160;155:111:13;;-1:-1:-1;16373:423:48;;155:111:13;12652:53:48;155:111:13;;;;;;;;;;;;;12652:53:48;11988:728;;;;11992:43;;;;;;:33;;-1:-1:-1;11992:33:48;;;11503:402;11546:19;;11542:115;;11675:7;;11671:101;;11790:12;11503:402;11786:109;11867:12;;;;:::i;11671:101::-;155:111:13;11740:16:48;;;;;:::i;11542:115::-;11616:10;155:111:13;11616:10:48;;;:::i;155:111:13:-;;;;;;;;;;-1:-1:-1;;155:111:13;;;;;6099:41:74;:5;:41;:::i;:::-;6554:47;:8;:47;:::i;:::-;155:111:13;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5590:13:74;155:111:13;;;;5625:4:74;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;155:111:13;;;;;;;;6584:16:74;155:111:13;;;;;;;;;-1:-1:-1;;155:111:13;;;;;;-1:-1:-1;;;;;155:111:13;;;;;;-1:-1:-1;;;;;155:111:13;-1:-1:-1;155:111:13;;;624:7:66;155:111:13;;;;;;;;;;;;;;;;;;;;5049:18:48;155:111:13;;;:::i;:::-;5049:18:48;:::i;:::-;5084:28;;;;;155:111:13;5084:43:48;;;;155:111:13;;;;;;;;;;5084:43:48;;;;;;:28;;-1:-1:-1;5084:28:48;;;155:111:13;;-1:-1:-1;;155:111:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;155:111:13;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;155:111:13;;;;;;;;;-1:-1:-1;155:111:13;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;155:111:13;;;;;-1:-1:-1;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;155:111:13;;;;;;;:::o;:::-;;;;;;;;;;:::o;9006:457:48:-;;10099:12;;;:::i;:::-;10133:10;;;;9963:445;3445:249:77;10133:10:48;;;:::i;:::-;10240:12;10233:20;10240:12;;;:::i;:::-;-1:-1:-1;;;;;155:111:13;-1:-1:-1;155:111:13;;;624:7:66;155:111:13;;;;;;;538:107:66;10233:20:48;10275:16;;;;;155:111:13;10275:16:48;;;:::i;:::-;3115:141;10323:12;;;;;;:::i;:::-;3115:141;;;:::i;:::-;10133:10;155:111:13;;;;10313:23:48;155:111:13;10165:13:48;155:111:13;10020:334:48;10133:10;10020:334;;155:111:13;3115:141:48;155:111:13;;;;;;;;10165:13:48;3115:141;;155:111:13;;;;;;;10200:11:48;3115:141;;155:111:13;10165:13:48;;;155:111:13;10275:16:48;3115:141;;155:111:13;10200:11:48;;;155:111:13;10323:12:48;3115:141;;155:111:13;3115:141:48;;;155:111:13;;3115:141:48;;;155:111:13;3115:141:48;;;155:111:13;3115:141:48;10020:334;;;;;;:::i;:::-;155:111:13;9993:375:48;;5053:20:74;;:::i;:::-;3445:249:77;10165:13:48;3445:249:77;;-1:-1:-1;;;3445:249:77;;;;;;;;;;;3115:141:48;10390:17;3115:141;10390:17;;;;:::i;3115:141::-;9963:445;;:::i;:::-;3115:141;;;;;;;;;;-1:-1:-1;9313:10:48;10133;10427:33;;9313:10;;:::i;:::-;10165:13;155:111:13;13056:66:48;;;;;;;;;13115:4;13056:66;;;155:111:13;13056:66:48;;;;;;;:::i;:::-;13212:739;;;;;;-1:-1:-1;13212:739:48;13968:29;;;;9006:457;13968:48;;;;9006:457;9338:16;;;;:::i;:::-;9387:36;;;;9006:457;9273:183;9358:15;155:111:13;9358:15:48;155:111:13;;9338:35:48;;9273:183;;9006:457;:::o;9387:36::-;155:111:13;;-1:-1:-1;;;;;;155:111:13;9411:12:48;;;:::i;:::-;155:111:13;-1:-1:-1;;;;;155:111:13;;9398:25:48;;9387:36;;;13968:48;14001:15;;;-1:-1:-1;9338:16:48;13968:48;;:29;10133:10;-1:-1:-1;13979:18:48;;-1:-1:-1;13968:29:48;;;3115:141;155:111:13;;;-1:-1:-1;3115:141:48;;;;;-1:-1:-1;3115:141:48;155:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;155:111:13;;;;:::o;3115:141:48:-;;;;;;;:::i;:::-;155:111:13;;;;;;;:::i;:::-;3115:141:48;;;;;;;;;;;;;;;;-1:-1:-1;3115:141:48;;155:111:13;;;;3115:141:48:o;3358:267:70:-;1390:66;3481:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;155:111:13;;;;;;;;:::i;:::-;2311:2:70;155:111:13;;;;;;-1:-1:-1;;155:111:13;;;;2324:106:70;;;3543:22;:::o;2675:69::-;2713:20;;;155:111:13;2713:20:70;;155:111:13;2713:20:70;3477:142;155:111:13;;;;1390:66:70;;;;;;;;;;;;;;3477:142;1390:66;;;;;;;155:111:13;;;;;;1390:66:70;;;;;;;;;;;;;;;;:::i;:::-;3596:12;:::o;1390:66::-;-1:-1:-1;155:111:13;1390:66:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:111:13;;;1390:66:70;;;;;;;;;;;-1:-1:-1;;;1390:66:70;;;;;;155:111:13;1390:66:70;;;;;;;;3358:267;1390:66;3481:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;155:111:13;;;;;;;;:::i;3477:142:70:-;155:111:13;;;-1:-1:-1;6584:16:74;1390:66:70;;;6584:16:74;1390:66:70;;6584:16:74;1390:66:70;;;;;;3477:142;1390:66;;;;;;;155:111:13;;;;;;1390:66:70;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6584:16:74;-1:-1:-1;1390:66:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6584:16:74;1390:66:70;;;;;;;;;;;;;;;;;;;;;;;;2129:778:73;155:111:13;;;2129:778:73;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:73;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;3845:262:74:-;3929:4;3938:11;-1:-1:-1;;;;;155:111:13;3921:28:74;;:63;;3845:262;3917:184;;;4007:22;4000:29;:::o;3917:184::-;155:111:13;;4204:80:74;;;155:111:13;2079:95:74;155:111:13;;4226:11:74;155:111:13;2079:95:74;;155:111:13;4239:14:74;2079:95;;;155:111:13;4255:13:74;2079:95;;;155:111:13;3929:4:74;2079:95;;;155:111:13;2079:95:74;4204:80;;;;;;:::i;:::-;155:111:13;4194:91:74;;4060:30;:::o;3921:63::-;3970:14;;3953:13;:31;3921:63;;5203:1551:73;;;6283:66;6270:79;;6266:164;;155:111:13;;;;;;-1:-1:-1;155:111:13;;;;;;;;;;;;;;;;;;;6541:24:73;;;;;;;;;-1:-1:-1;6541:24:73;-1:-1:-1;;;;;155:111:13;;6579:20:73;6575:113;;6698:49;-1:-1:-1;6698:49:73;-1:-1:-1;5203:1551:73;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:73;6541:24;6615:62;-1:-1:-1;6615:62:73;:::o;6541:24::-;155:111:13;;;-1:-1:-1;155:111:13;;;;;6266:164:73;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "19718": [{ "start": 3253, "length": 32 }],
      "19720": [{ "start": 3442, "length": 32 }],
      "19722": [{ "start": 3199, "length": 32 }],
      "19724": [{ "start": 3332, "length": 32 }],
      "19726": [{ "start": 3370, "length": 32 }],
      "19729": [{ "start": 1310, "length": 32 }],
      "19732": [{ "start": 1351, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "eip712Domain()": "84b0196e",
    "execute((address,address,uint256,uint256,uint48,bytes,bytes))": "df905caf",
    "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": "ccf96b4a",
    "nonces(address)": "7ecebe00",
    "verify((address,address,uint256,uint256,uint48,bytes,bytes))": "19d8d38c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Forwarder.sol\":\"Forwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/\",\":@ethereum-attestation-service/eas-contracts/=dependencies/eas-contracts-1.4.0/contracts/\",\":@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/\",\":@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\",\":@openzeppelin/contracts-upgradeable/=dependencies/openzeppelin-community-contracts-0.0.1/lib/@openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.2.0/\",\":eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/\",\":forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/\",\":forge-std/=dependencies/forge-std-1.9.5/src/\",\":openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/Forwarder.sol\":{\"keccak256\":\"0xfc9cb816e1f9f64a93ee80274925bc6a69b7622743fb0d4fd387194ba504edd2\",\"license\":\"FSL-1.1-MIT\",\"urls\":[\"bzz-raw://20d1461e7ab9f010bc3482e92c99e5d098a392afeafc900dbce049ec28d06c4f\",\"dweb:/ipfs/QmNVYYG7b4mjZjkwdTvPhVwwDUrncmsRiJ5rDTzrjrGfZP\"]},\"dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"dependencies/@openzeppelin-contracts-5.2.0/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"dependencies/@openzeppelin-contracts-5.2.0/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0xa0c3017faa0f4f681f16c53a7c9a16bc8cbebb3f08759ded959bd14877f02a2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9b3a599a06af81da55f162e95a48bb34eee44dffea3ff11c42155858fd72f23\",\"dweb:/ipfs/QmUtx25tYPgnbzjbVrNnhkzhY8NXRgaa1wFJAnQiNqRhnK\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"dependencies/@openzeppelin-contracts-5.2.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "uint48", "name": "deadline", "type": "uint48" }
          ],
          "type": "error",
          "name": "ERC2771ForwarderExpiredRequest"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "signer", "type": "address" },
            { "internalType": "address", "name": "from", "type": "address" }
          ],
          "type": "error",
          "name": "ERC2771ForwarderInvalidSigner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestedValue",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "msgValue", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC2771ForwarderMismatchedValue"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2771UntrustfulTarget"
        },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "balance", "type": "uint256" },
            { "internalType": "uint256", "name": "needed", "type": "uint256" }
          ],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "uint256",
              "name": "currentNonce",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidAccountNonce"
        },
        { "inputs": [], "type": "error", "name": "InvalidShortString" },
        {
          "inputs": [
            { "internalType": "string", "name": "str", "type": "string" }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutedForwardRequest",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            { "internalType": "bytes1", "name": "fields", "type": "bytes1" },
            { "internalType": "string", "name": "name", "type": "string" },
            { "internalType": "string", "name": "version", "type": "string" },
            { "internalType": "uint256", "name": "chainId", "type": "uint256" },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                { "internalType": "address", "name": "to", "type": "address" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "gas", "type": "uint256" },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                { "internalType": "address", "name": "to", "type": "address" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "gas", "type": "uint256" },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC2771Forwarder.ForwardRequestData",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                { "internalType": "address", "name": "to", "type": "address" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "gas", "type": "uint256" },
                {
                  "internalType": "uint48",
                  "name": "deadline",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "eip712Domain()": { "details": "See {IERC-5267}." },
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}."
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "details": "Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting."
          },
          "nonces(address)": {
            "details": "Returns the next unused nonce for an address."
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "details": "Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@axelar-network/axelar-gmp-sdk-solidity/=dependencies/openzeppelin-community-contracts-0.0.1/node_modules/@axelar-network/axelar-gmp-sdk-solidity/",
        "@ethereum-attestation-service/eas-contracts/=dependencies/eas-contracts-1.4.0/contracts/",
        "@openzeppelin-contracts-5.2.0/=dependencies/@openzeppelin-contracts-5.2.0/",
        "@openzeppelin/community-contracts/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/",
        "@openzeppelin/contracts-upgradeable/=dependencies/openzeppelin-community-contracts-0.0.1/lib/@openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.2.0/",
        "eas-contracts-1.4.0/=dependencies/eas-contracts-1.4.0/contracts/",
        "forge-std-1.9.5/=dependencies/forge-std-1.9.5/src/",
        "forge-std/=dependencies/forge-std-1.9.5/src/",
        "openzeppelin-community-contracts-0.0.1/=dependencies/openzeppelin-community-contracts-0.0.1/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "contracts/Forwarder.sol": "Forwarder" },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/Forwarder.sol": {
        "keccak256": "0xfc9cb816e1f9f64a93ee80274925bc6a69b7622743fb0d4fd387194ba504edd2",
        "urls": [
          "bzz-raw://20d1461e7ab9f010bc3482e92c99e5d098a392afeafc900dbce049ec28d06c4f",
          "dweb:/ipfs/QmNVYYG7b4mjZjkwdTvPhVwwDUrncmsRiJ5rDTzrjrGfZP"
        ],
        "license": "FSL-1.1-MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/interfaces/IERC5267.sol": {
        "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
        "urls": [
          "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
          "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/metatx/ERC2771Context.sol": {
        "keccak256": "0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99",
        "urls": [
          "bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8",
          "dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/metatx/ERC2771Forwarder.sol": {
        "keccak256": "0xa0c3017faa0f4f681f16c53a7c9a16bc8cbebb3f08759ded959bd14877f02a2a",
        "urls": [
          "bzz-raw://e9b3a599a06af81da55f162e95a48bb34eee44dffea3ff11c42155858fd72f23",
          "dweb:/ipfs/QmUtx25tYPgnbzjbVrNnhkzhY8NXRgaa1wFJAnQiNqRhnK"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/Address.sol": {
        "keccak256": "0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c",
        "urls": [
          "bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e",
          "dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/Nonces.sol": {
        "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
        "urls": [
          "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
          "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/ShortStrings.sol": {
        "keccak256": "0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549",
        "urls": [
          "bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a",
          "dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/Strings.sol": {
        "keccak256": "0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c",
        "urls": [
          "bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251",
          "dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/EIP712.sol": {
        "keccak256": "0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d",
        "urls": [
          "bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c",
          "dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/cryptography/MessageHashUtils.sol": {
        "keccak256": "0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575",
        "urls": [
          "bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e",
          "dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/math/Math.sol": {
        "keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
        "urls": [
          "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
          "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "dependencies/@openzeppelin-contracts-5.2.0/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 13
}
