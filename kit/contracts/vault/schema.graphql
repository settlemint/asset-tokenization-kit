type ConfirmTransaction @entity(immutable: true) {
  id: Bytes!
  signer: Bytes! # address
  txIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposit @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  value: BigInt! # uint256
  balance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ExecuteTransaction @entity(immutable: true) {
  id: Bytes!
  signer: Bytes! # address
  txIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequirementChanged @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  required: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevokeConfirmation @entity(immutable: true) {
  id: Bytes!
  signer: Bytes! # address
  txIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SubmitContractCallTransaction @entity(immutable: true) {
  id: Bytes!
  signer: Bytes! # address
  txIndex: BigInt! # uint256
  target: Bytes! # address
  value: BigInt! # uint256
  selector: Bytes! # bytes4
  abiEncodedArguments: Bytes! # bytes
  comment: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SubmitERC20TransferTransaction @entity(immutable: true) {
  id: Bytes!
  signer: Bytes! # address
  txIndex: BigInt! # uint256
  token: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  comment: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SubmitTransaction @entity(immutable: true) {
  id: Bytes!
  signer: Bytes! # address
  txIndex: BigInt! # uint256
  to: Bytes! # address
  value: BigInt! # uint256
  data: Bytes! # bytes
  comment: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransactionExecutionFailed @entity(immutable: true) {
  id: Bytes!
  txIndex: BigInt! # uint256
  to: Bytes! # address
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
