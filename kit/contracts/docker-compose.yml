services:
  besu:
    image: hyperledger/besu:25.6.0
    container_name: atk-besu
    restart: unless-stopped
    command: ["--config-file=/opt/besu/config.toml", "--identity=atk"]
    volumes:
      - ./tools/docker/besu/config.toml:/opt/besu/config.toml:ro
      - ./tools/docker/besu/genesis.json:/opt/besu/genesis.json:ro
      - ./tools/docker/besu/anvil-test-key:/opt/besu/key:ro

  txsigner:
    image: ghcr.io/settlemint/btp-signer:7.13.0
    container_name: atk-txsigner
    restart: unless-stopped
    environment:
      MODE: "standalone"
      RPC_ENDPOINT: "http://besu:8545"
      DB_CONNECTION_STRING: "postgresql://${TXSIGNER_DB_USER:-txsigner}:${TXSIGNER_DB_PASSWORD:-txsigner}@postgres:5432/${TXSIGNER_DB_NAME:-txsigner}?sslmode=disable"
      PRIVATE_KEY_MNEMONIC:
        ${PRIVATE_KEY_MNEMONIC:-"gate yellow grunt wrestle disease obtain mixed
        nature mansion tape purchase awful"}
      PRIVATE_KEY_DERIVATION_PATH: "m/44'/60'/0'/0/0"
      TX_SIGNER_PORT: 3000
      TX_SIGNER_METRICS_PORT: 3001
      TX_SIGNER_RPC_URL: "http://besu:8545"
      TX_SIGNER_CHAIN_ID: ${CHAIN_ID:-1337}
      TX_SIGNER_LOG_LEVEL: ${LOG_LEVEL:-info}
      TX_SIGNER_DEBUG: ${DEBUG:-false}
      TX_SIGNER_SIGNING_STRATEGY: local
      DATABASE_URL: "postgresql://${TXSIGNER_DB_USER:-txsigner}:${TXSIGNER_DB_PASSWORD:-txsigner}@postgres:5432/${TXSIGNER_DB_NAME:-txsigner}?sslmode=disable"
      TX_SIGNER_RATE_LIMIT_ENABLED: true
      TX_SIGNER_RATE_LIMIT_MAX_REQUESTS_PER_MINUTE: ${RATE_LIMIT_PER_MINUTE:-60}
      TX_SIGNER_RATE_LIMIT_MAX_REQUESTS_PER_HOUR: ${RATE_LIMIT_PER_HOUR:-1000}
      TX_SIGNER_QUEUE_MAX_SIZE: ${QUEUE_MAX_SIZE:-1000}
      TX_SIGNER_QUEUE_PROCESSING_INTERVAL: ${QUEUE_PROCESSING_INTERVAL:-1000}
      TX_SIGNER_GAS_PRICE_STRATEGY: ${GAS_PRICE_STRATEGY:-estimator}
      TX_SIGNER_GAS_FIXED_PRICE: ${GAS_FIXED_PRICE:-20}
      TX_SIGNER_GAS_LIMIT: ${GAS_LIMIT:-9007199254740991}
      TX_SIGNER_GAS_MULTIPLIER: ${GAS_MULTIPLIER:-1.1}
      TX_SIGNER_NONCE_STRATEGY: sequential
      TX_SIGNER_NONCE_MAX_PENDING: ${NONCE_MAX_PENDING:-10}
      TX_SIGNER_AUDIT_ENABLED: true
      TX_SIGNER_AUDIT_RETENTION_DAYS: ${AUDIT_RETENTION_DAYS:-30}
      TX_SIGNER_CORS_ENABLED: ${CORS_ENABLED:-false}
      TX_SIGNER_CORS_METHODS: ${CORS_METHODS:-GET,POST}
      TX_SIGNER_CORS_HEADERS: ${CORS_HEADERS:-Content-Type,Authorization}
    ports:
      - "8545:3000"

  postgres:
    image: postgres:17.5-alpine
    container_name: atk-postgres
    restart: unless-stopped
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements",
        "-cmax_connections=200",
        "-clog_statement=all",
        "-clog_duration=on",
        "-clog_min_duration_statement=1000",
      ]
    volumes:
      - ./tools/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"

  portal:
    image: ghcr.io/settlemint/btp-scs-portal:8.5.6
    container_name: atk-portal
    restart: unless-stopped
    volumes:
      - ./portal:/abis:ro
    environment:
      BLOCKCHAIN_JSON_RPC_ENDPOINT: http://txsigner:8545
      BLOCKCHAIN_NETWORK_ID: "${CHAIN_ID:-1337}"
      BLOCKCHAIN_NETWORK_NAME: ${NETWORK_NAME:-ATK}
      CONTRACT_ABI_PATH: /abis
      GRAPHQL_PORT: "3001"
      PORT: "3000"
      POSTGRES_CONNECTION_STRING: postgresql://${PORTAL_DB_USER:-portal}:${PORTAL_DB_PASSWORD:-portal}@postgres:5432/${PORTAL_DB_NAME:-portal}?sslmode=disable
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD:-shared}
      REDIS_PORT: "6379"
      REDIS_USERNAME: ${REDIS_USERNAME:-default}
    ports:
      - "9000:3000"
      - "9001:3001"

  redis:
    image: redis:8.0.2-alpine
    container_name: atk-redis
    restart: unless-stopped
    command:
      redis-server --requirepass ${REDIS_PASSWORD:-shared} --save 60 1
      --loglevel warning --maxmemory 256mb --maxmemory-policy allkeys-lru

  hasura:
    image: hasura/graphql-engine:v2.46.0
    restart: unless-stopped
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${HASURA_DB_USER:-hasura}:${HASURA_DB_PASSWORD:-hasura}@postgres:5432/hasura
      PG_DATABASE_URL: postgres://${HASURA_DB_USER:-hasura}:${HASURA_DB_PASSWORD:-hasura}@postgres:5432/hasura
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES:
        startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET:-hasura}
    ports:
      - "8080:8080"

  graph-node:
    image: graphprotocol/graph-node:v0.39.1
    restart: unless-stopped
    platform: linux/amd64
    ports:
      - "8000:8000" # GraphQL HTTP
      - "8001:8001" # Admin
      - "8020:8020" # Index Node
      - "8030:8030" # Query Node
      - "8040:8040" # Subgraph
    environment:
      postgres_host: postgres
      postgres_user: thegraph
      postgres_pass: thegraph
      postgres_db: thegraph
      ipfs: "https://ipfs.console.settlemint.com"
      ethereum: "settlemint:http://besu:8545"
      GRAPH_ETHEREUM_REQUEST_RETRIES: 10
      ETHEREUM_POLLING_INTERVAL: 1000
      GRAPH_IPFS_TIMEOUT: 60
      GRAPH_MAX_IPFS_FILE_BYTES: 52428800
      GRAPH_IPFS_REQUEST_RETRIES: 10
