/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'Boolean_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'Boolean_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; }; defaultValue: null }]; };
    'Float': unknown;
    'Int': unknown;
    'Int_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; defaultValue: null }]; };
    'String': unknown;
    'String_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_ilike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_iregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_like'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nilike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_niregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nlike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nsimilar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_regex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_similar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'account': { kind: 'OBJECT'; name: 'account'; fields: { 'accessToken': { name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'accessTokenExpiresAt': { name: 'accessTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'accountId': { name: 'accountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'idToken': { name: 'idToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'providerId': { name: 'providerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refreshTokenExpiresAt': { name: 'refreshTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'scope': { name: 'scope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; } }; 'userId': { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'account_aggregate': { kind: 'OBJECT'; name: 'account_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'account_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'account'; ofType: null; }; }; }; } }; }; };
    'account_aggregate_fields': { kind: 'OBJECT'; name: 'account_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'account_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'account_min_fields'; ofType: null; } }; }; };
    'account_bool_exp': { kind: 'INPUT_OBJECT'; name: 'account_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'account_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'account_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'account_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'accessToken'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'accessTokenExpiresAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'accountId'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'idToken'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'providerId'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'refreshToken'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'refreshTokenExpiresAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'scope'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'account_constraint': { name: 'account_constraint'; enumValues: 'account_pkey'; };
    'account_insert_input': { kind: 'INPUT_OBJECT'; name: 'account_insert_input'; isOneOf: false; inputFields: [{ name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accessTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'accountId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'idToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'providerId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'refreshTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'scope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'account_max_fields': { kind: 'OBJECT'; name: 'account_max_fields'; fields: { 'accessToken': { name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'accessTokenExpiresAt': { name: 'accessTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'accountId': { name: 'accountId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'idToken': { name: 'idToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'providerId': { name: 'providerId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refreshTokenExpiresAt': { name: 'refreshTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'scope': { name: 'scope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'account_min_fields': { kind: 'OBJECT'; name: 'account_min_fields'; fields: { 'accessToken': { name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'accessTokenExpiresAt': { name: 'accessTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'accountId': { name: 'accountId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'idToken': { name: 'idToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'providerId': { name: 'providerId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refreshTokenExpiresAt': { name: 'refreshTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'scope': { name: 'scope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'account_mutation_response': { kind: 'OBJECT'; name: 'account_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'account'; ofType: null; }; }; }; } }; }; };
    'account_on_conflict': { kind: 'INPUT_OBJECT'; name: 'account_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'account_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'account_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'account_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'account_order_by': { kind: 'INPUT_OBJECT'; name: 'account_order_by'; isOneOf: false; inputFields: [{ name: 'accessToken'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'accessTokenExpiresAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'accountId'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'idToken'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'providerId'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'refreshToken'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'refreshTokenExpiresAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'scope'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'account_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'account_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'account_select_column': { name: 'account_select_column'; enumValues: 'accessToken' | 'accessTokenExpiresAt' | 'accountId' | 'createdAt' | 'id' | 'idToken' | 'password' | 'providerId' | 'refreshToken' | 'refreshTokenExpiresAt' | 'scope' | 'updatedAt' | 'userId'; };
    'account_set_input': { kind: 'INPUT_OBJECT'; name: 'account_set_input'; isOneOf: false; inputFields: [{ name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accessTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'accountId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'idToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'providerId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'refreshTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'scope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'account_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'account_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'account_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'account_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'account_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accessTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'accountId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'idToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'providerId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'refreshTokenExpiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'scope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'account_update_column': { name: 'account_update_column'; enumValues: 'accessToken' | 'accessTokenExpiresAt' | 'accountId' | 'createdAt' | 'id' | 'idToken' | 'password' | 'providerId' | 'refreshToken' | 'refreshTokenExpiresAt' | 'scope' | 'updatedAt' | 'userId'; };
    'account_updates': { kind: 'INPUT_OBJECT'; name: 'account_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'account_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'account_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'cursor_ordering': { name: 'cursor_ordering'; enumValues: 'ASC' | 'DESC'; };
    'mutation_root': { kind: 'OBJECT'; name: 'mutation_root'; fields: { 'delete_account': { name: 'delete_account'; type: { kind: 'OBJECT'; name: 'account_mutation_response'; ofType: null; } }; 'delete_account_by_pk': { name: 'delete_account_by_pk'; type: { kind: 'OBJECT'; name: 'account'; ofType: null; } }; 'delete_passkey': { name: 'delete_passkey'; type: { kind: 'OBJECT'; name: 'passkey_mutation_response'; ofType: null; } }; 'delete_passkey_by_pk': { name: 'delete_passkey_by_pk'; type: { kind: 'OBJECT'; name: 'passkey'; ofType: null; } }; 'delete_session': { name: 'delete_session'; type: { kind: 'OBJECT'; name: 'session_mutation_response'; ofType: null; } }; 'delete_session_by_pk': { name: 'delete_session_by_pk'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'delete_user': { name: 'delete_user'; type: { kind: 'OBJECT'; name: 'user_mutation_response'; ofType: null; } }; 'delete_user_by_pk': { name: 'delete_user_by_pk'; type: { kind: 'OBJECT'; name: 'user'; ofType: null; } }; 'delete_verification': { name: 'delete_verification'; type: { kind: 'OBJECT'; name: 'verification_mutation_response'; ofType: null; } }; 'delete_verification_by_pk': { name: 'delete_verification_by_pk'; type: { kind: 'OBJECT'; name: 'verification'; ofType: null; } }; 'insert_account': { name: 'insert_account'; type: { kind: 'OBJECT'; name: 'account_mutation_response'; ofType: null; } }; 'insert_account_one': { name: 'insert_account_one'; type: { kind: 'OBJECT'; name: 'account'; ofType: null; } }; 'insert_passkey': { name: 'insert_passkey'; type: { kind: 'OBJECT'; name: 'passkey_mutation_response'; ofType: null; } }; 'insert_passkey_one': { name: 'insert_passkey_one'; type: { kind: 'OBJECT'; name: 'passkey'; ofType: null; } }; 'insert_session': { name: 'insert_session'; type: { kind: 'OBJECT'; name: 'session_mutation_response'; ofType: null; } }; 'insert_session_one': { name: 'insert_session_one'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'insert_user': { name: 'insert_user'; type: { kind: 'OBJECT'; name: 'user_mutation_response'; ofType: null; } }; 'insert_user_one': { name: 'insert_user_one'; type: { kind: 'OBJECT'; name: 'user'; ofType: null; } }; 'insert_verification': { name: 'insert_verification'; type: { kind: 'OBJECT'; name: 'verification_mutation_response'; ofType: null; } }; 'insert_verification_one': { name: 'insert_verification_one'; type: { kind: 'OBJECT'; name: 'verification'; ofType: null; } }; 'update_account': { name: 'update_account'; type: { kind: 'OBJECT'; name: 'account_mutation_response'; ofType: null; } }; 'update_account_by_pk': { name: 'update_account_by_pk'; type: { kind: 'OBJECT'; name: 'account'; ofType: null; } }; 'update_account_many': { name: 'update_account_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'account_mutation_response'; ofType: null; }; } }; 'update_passkey': { name: 'update_passkey'; type: { kind: 'OBJECT'; name: 'passkey_mutation_response'; ofType: null; } }; 'update_passkey_by_pk': { name: 'update_passkey_by_pk'; type: { kind: 'OBJECT'; name: 'passkey'; ofType: null; } }; 'update_passkey_many': { name: 'update_passkey_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'passkey_mutation_response'; ofType: null; }; } }; 'update_session': { name: 'update_session'; type: { kind: 'OBJECT'; name: 'session_mutation_response'; ofType: null; } }; 'update_session_by_pk': { name: 'update_session_by_pk'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'update_session_many': { name: 'update_session_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'session_mutation_response'; ofType: null; }; } }; 'update_user': { name: 'update_user'; type: { kind: 'OBJECT'; name: 'user_mutation_response'; ofType: null; } }; 'update_user_by_pk': { name: 'update_user_by_pk'; type: { kind: 'OBJECT'; name: 'user'; ofType: null; } }; 'update_user_many': { name: 'update_user_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'user_mutation_response'; ofType: null; }; } }; 'update_verification': { name: 'update_verification'; type: { kind: 'OBJECT'; name: 'verification_mutation_response'; ofType: null; } }; 'update_verification_by_pk': { name: 'update_verification_by_pk'; type: { kind: 'OBJECT'; name: 'verification'; ofType: null; } }; 'update_verification_many': { name: 'update_verification_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'verification_mutation_response'; ofType: null; }; } }; }; };
    'order_by': { name: 'order_by'; enumValues: 'asc' | 'asc_nulls_first' | 'asc_nulls_last' | 'desc' | 'desc_nulls_first' | 'desc_nulls_last'; };
    'passkey': { kind: 'OBJECT'; name: 'passkey'; fields: { 'backedUp': { name: 'backedUp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'counter': { name: 'counter'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'deviceType': { name: 'deviceType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicKey': { name: 'publicKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transports': { name: 'transports'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webauthnUserID': { name: 'webauthnUserID'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'passkey_aggregate': { kind: 'OBJECT'; name: 'passkey_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'passkey_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'passkey'; ofType: null; }; }; }; } }; }; };
    'passkey_aggregate_fields': { kind: 'OBJECT'; name: 'passkey_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'passkey_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'passkey_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'passkey_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'passkey_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'passkey_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'passkey_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'passkey_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'passkey_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'passkey_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'passkey_variance_fields'; ofType: null; } }; }; };
    'passkey_avg_fields': { kind: 'OBJECT'; name: 'passkey_avg_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'passkey_bool_exp': { kind: 'INPUT_OBJECT'; name: 'passkey_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'passkey_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'passkey_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'passkey_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'backedUp'; type: { kind: 'INPUT_OBJECT'; name: 'Boolean_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'counter'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'deviceType'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'publicKey'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'transports'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'webauthnUserID'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'passkey_constraint': { name: 'passkey_constraint'; enumValues: 'passkey_pkey'; };
    'passkey_inc_input': { kind: 'INPUT_OBJECT'; name: 'passkey_inc_input'; isOneOf: false; inputFields: [{ name: 'counter'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'passkey_insert_input': { kind: 'INPUT_OBJECT'; name: 'passkey_insert_input'; isOneOf: false; inputFields: [{ name: 'backedUp'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'counter'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'deviceType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'publicKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'transports'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'webauthnUserID'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'passkey_max_fields': { kind: 'OBJECT'; name: 'passkey_max_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'deviceType': { name: 'deviceType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicKey': { name: 'publicKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transports': { name: 'transports'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webauthnUserID': { name: 'webauthnUserID'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'passkey_min_fields': { kind: 'OBJECT'; name: 'passkey_min_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'deviceType': { name: 'deviceType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicKey': { name: 'publicKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transports': { name: 'transports'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webauthnUserID': { name: 'webauthnUserID'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'passkey_mutation_response': { kind: 'OBJECT'; name: 'passkey_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'passkey'; ofType: null; }; }; }; } }; }; };
    'passkey_on_conflict': { kind: 'INPUT_OBJECT'; name: 'passkey_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'passkey_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'passkey_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'passkey_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'passkey_order_by': { kind: 'INPUT_OBJECT'; name: 'passkey_order_by'; isOneOf: false; inputFields: [{ name: 'backedUp'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'counter'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'deviceType'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'publicKey'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'transports'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'webauthnUserID'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'passkey_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'passkey_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'passkey_select_column': { name: 'passkey_select_column'; enumValues: 'backedUp' | 'counter' | 'createdAt' | 'deviceType' | 'id' | 'name' | 'publicKey' | 'transports' | 'userId' | 'webauthnUserID'; };
    'passkey_set_input': { kind: 'INPUT_OBJECT'; name: 'passkey_set_input'; isOneOf: false; inputFields: [{ name: 'backedUp'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'counter'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'deviceType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'publicKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'transports'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'webauthnUserID'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'passkey_stddev_fields': { kind: 'OBJECT'; name: 'passkey_stddev_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'passkey_stddev_pop_fields': { kind: 'OBJECT'; name: 'passkey_stddev_pop_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'passkey_stddev_samp_fields': { kind: 'OBJECT'; name: 'passkey_stddev_samp_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'passkey_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'passkey_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'passkey_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'passkey_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'passkey_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'backedUp'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'counter'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'deviceType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'publicKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'transports'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'webauthnUserID'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'passkey_sum_fields': { kind: 'OBJECT'; name: 'passkey_sum_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'passkey_update_column': { name: 'passkey_update_column'; enumValues: 'backedUp' | 'counter' | 'createdAt' | 'deviceType' | 'id' | 'name' | 'publicKey' | 'transports' | 'userId' | 'webauthnUserID'; };
    'passkey_updates': { kind: 'INPUT_OBJECT'; name: 'passkey_updates'; isOneOf: false; inputFields: [{ name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'passkey_inc_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'passkey_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'passkey_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'passkey_var_pop_fields': { kind: 'OBJECT'; name: 'passkey_var_pop_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'passkey_var_samp_fields': { kind: 'OBJECT'; name: 'passkey_var_samp_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'passkey_variance_fields': { kind: 'OBJECT'; name: 'passkey_variance_fields'; fields: { 'counter': { name: 'counter'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'query_root': { kind: 'OBJECT'; name: 'query_root'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'account'; ofType: null; }; }; }; } }; 'account_aggregate': { name: 'account_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'account_aggregate'; ofType: null; }; } }; 'account_by_pk': { name: 'account_by_pk'; type: { kind: 'OBJECT'; name: 'account'; ofType: null; } }; 'passkey': { name: 'passkey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'passkey'; ofType: null; }; }; }; } }; 'passkey_aggregate': { name: 'passkey_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'passkey_aggregate'; ofType: null; }; } }; 'passkey_by_pk': { name: 'passkey_by_pk'; type: { kind: 'OBJECT'; name: 'passkey'; ofType: null; } }; 'session': { name: 'session'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; 'session_aggregate': { name: 'session_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session_aggregate'; ofType: null; }; } }; 'session_by_pk': { name: 'session_by_pk'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user'; ofType: null; }; }; }; } }; 'user_aggregate': { name: 'user_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_aggregate'; ofType: null; }; } }; 'user_by_pk': { name: 'user_by_pk'; type: { kind: 'OBJECT'; name: 'user'; ofType: null; } }; 'verification': { name: 'verification'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'verification'; ofType: null; }; }; }; } }; 'verification_aggregate': { name: 'verification_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'verification_aggregate'; ofType: null; }; } }; 'verification_by_pk': { name: 'verification_by_pk'; type: { kind: 'OBJECT'; name: 'verification'; ofType: null; } }; }; };
    'session': { kind: 'OBJECT'; name: 'session'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'impersonatedBy': { name: 'impersonatedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ipAddress': { name: 'ipAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; } }; 'userAgent': { name: 'userAgent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'session_aggregate': { kind: 'OBJECT'; name: 'session_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'session_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; }; };
    'session_aggregate_fields': { kind: 'OBJECT'; name: 'session_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'session_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'session_min_fields'; ofType: null; } }; }; };
    'session_bool_exp': { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'impersonatedBy'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'ipAddress'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'token'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'userAgent'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'session_constraint': { name: 'session_constraint'; enumValues: 'session_pkey' | 'session_token_unique'; };
    'session_insert_input': { kind: 'INPUT_OBJECT'; name: 'session_insert_input'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'impersonatedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ipAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'userAgent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'session_max_fields': { kind: 'OBJECT'; name: 'session_max_fields'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'impersonatedBy': { name: 'impersonatedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ipAddress': { name: 'ipAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'userAgent': { name: 'userAgent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'session_min_fields': { kind: 'OBJECT'; name: 'session_min_fields'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'impersonatedBy': { name: 'impersonatedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ipAddress': { name: 'ipAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'userAgent': { name: 'userAgent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'session_mutation_response': { kind: 'OBJECT'; name: 'session_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; }; };
    'session_on_conflict': { kind: 'INPUT_OBJECT'; name: 'session_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'session_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'session_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'session_order_by': { kind: 'INPUT_OBJECT'; name: 'session_order_by'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'impersonatedBy'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'ipAddress'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'token'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'userAgent'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'session_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'session_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'session_select_column': { name: 'session_select_column'; enumValues: 'createdAt' | 'expiresAt' | 'id' | 'impersonatedBy' | 'ipAddress' | 'token' | 'updatedAt' | 'userAgent' | 'userId'; };
    'session_set_input': { kind: 'INPUT_OBJECT'; name: 'session_set_input'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'impersonatedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ipAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'userAgent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'session_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'session_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'session_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'session_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'session_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'impersonatedBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ipAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'userAgent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'session_update_column': { name: 'session_update_column'; enumValues: 'createdAt' | 'expiresAt' | 'id' | 'impersonatedBy' | 'ipAddress' | 'token' | 'updatedAt' | 'userAgent' | 'userId'; };
    'session_updates': { kind: 'INPUT_OBJECT'; name: 'session_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'session_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'subscription_root': { kind: 'OBJECT'; name: 'subscription_root'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'account'; ofType: null; }; }; }; } }; 'account_aggregate': { name: 'account_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'account_aggregate'; ofType: null; }; } }; 'account_by_pk': { name: 'account_by_pk'; type: { kind: 'OBJECT'; name: 'account'; ofType: null; } }; 'account_stream': { name: 'account_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'account'; ofType: null; }; }; }; } }; 'passkey': { name: 'passkey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'passkey'; ofType: null; }; }; }; } }; 'passkey_aggregate': { name: 'passkey_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'passkey_aggregate'; ofType: null; }; } }; 'passkey_by_pk': { name: 'passkey_by_pk'; type: { kind: 'OBJECT'; name: 'passkey'; ofType: null; } }; 'passkey_stream': { name: 'passkey_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'passkey'; ofType: null; }; }; }; } }; 'session': { name: 'session'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; 'session_aggregate': { name: 'session_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session_aggregate'; ofType: null; }; } }; 'session_by_pk': { name: 'session_by_pk'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'session_stream': { name: 'session_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user'; ofType: null; }; }; }; } }; 'user_aggregate': { name: 'user_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_aggregate'; ofType: null; }; } }; 'user_by_pk': { name: 'user_by_pk'; type: { kind: 'OBJECT'; name: 'user'; ofType: null; } }; 'user_stream': { name: 'user_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user'; ofType: null; }; }; }; } }; 'verification': { name: 'verification'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'verification'; ofType: null; }; }; }; } }; 'verification_aggregate': { name: 'verification_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'verification_aggregate'; ofType: null; }; } }; 'verification_by_pk': { name: 'verification_by_pk'; type: { kind: 'OBJECT'; name: 'verification'; ofType: null; } }; 'verification_stream': { name: 'verification_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'verification'; ofType: null; }; }; }; } }; }; };
    'timestamp': unknown;
    'timestamp_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; }; }; defaultValue: null }]; };
    'user': { kind: 'OBJECT'; name: 'user'; fields: { 'banExpires': { name: 'banExpires'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'banReason': { name: 'banReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'banned': { name: 'banned'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'emailVerified': { name: 'emailVerified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'normalizedEmail': { name: 'normalizedEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; } }; 'wallet': { name: 'wallet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'user_aggregate': { kind: 'OBJECT'; name: 'user_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'user_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user'; ofType: null; }; }; }; } }; }; };
    'user_aggregate_fields': { kind: 'OBJECT'; name: 'user_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'user_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'user_min_fields'; ofType: null; } }; }; };
    'user_bool_exp': { kind: 'INPUT_OBJECT'; name: 'user_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'user_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'user_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'user_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'banExpires'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'banReason'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'banned'; type: { kind: 'INPUT_OBJECT'; name: 'Boolean_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'emailVerified'; type: { kind: 'INPUT_OBJECT'; name: 'Boolean_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'normalizedEmail'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'role'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'wallet'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'user_constraint': { name: 'user_constraint'; enumValues: 'user_email_unique' | 'user_normalizedEmail_unique' | 'user_pkey' | 'user_wallet_unique'; };
    'user_insert_input': { kind: 'INPUT_OBJECT'; name: 'user_insert_input'; isOneOf: false; inputFields: [{ name: 'banExpires'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'banReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'banned'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'emailVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'normalizedEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'role'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'wallet'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'user_max_fields': { kind: 'OBJECT'; name: 'user_max_fields'; fields: { 'banExpires': { name: 'banExpires'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'banReason': { name: 'banReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'normalizedEmail': { name: 'normalizedEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'wallet': { name: 'wallet'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'user_min_fields': { kind: 'OBJECT'; name: 'user_min_fields'; fields: { 'banExpires': { name: 'banExpires'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'banReason': { name: 'banReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'normalizedEmail': { name: 'normalizedEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'wallet': { name: 'wallet'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'user_mutation_response': { kind: 'OBJECT'; name: 'user_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user'; ofType: null; }; }; }; } }; }; };
    'user_on_conflict': { kind: 'INPUT_OBJECT'; name: 'user_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'user_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'user_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'user_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'user_order_by': { kind: 'INPUT_OBJECT'; name: 'user_order_by'; isOneOf: false; inputFields: [{ name: 'banExpires'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'banReason'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'banned'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'emailVerified'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'normalizedEmail'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'role'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'wallet'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'user_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'user_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'user_select_column': { name: 'user_select_column'; enumValues: 'banExpires' | 'banReason' | 'banned' | 'createdAt' | 'email' | 'emailVerified' | 'id' | 'image' | 'name' | 'normalizedEmail' | 'role' | 'updatedAt' | 'wallet'; };
    'user_set_input': { kind: 'INPUT_OBJECT'; name: 'user_set_input'; isOneOf: false; inputFields: [{ name: 'banExpires'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'banReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'banned'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'emailVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'normalizedEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'role'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'wallet'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'user_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'user_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'user_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'user_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'user_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'banExpires'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'banReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'banned'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'emailVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'normalizedEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'role'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'wallet'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'user_update_column': { name: 'user_update_column'; enumValues: 'banExpires' | 'banReason' | 'banned' | 'createdAt' | 'email' | 'emailVerified' | 'id' | 'image' | 'name' | 'normalizedEmail' | 'role' | 'updatedAt' | 'wallet'; };
    'user_updates': { kind: 'INPUT_OBJECT'; name: 'user_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'user_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'user_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'verification': { kind: 'OBJECT'; name: 'verification'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'identifier': { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'verification_aggregate': { kind: 'OBJECT'; name: 'verification_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'verification_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'verification'; ofType: null; }; }; }; } }; }; };
    'verification_aggregate_fields': { kind: 'OBJECT'; name: 'verification_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'verification_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'verification_min_fields'; ofType: null; } }; }; };
    'verification_bool_exp': { kind: 'INPUT_OBJECT'; name: 'verification_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'verification_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'verification_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'verification_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'identifier'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'verification_constraint': { name: 'verification_constraint'; enumValues: 'verification_pkey'; };
    'verification_insert_input': { kind: 'INPUT_OBJECT'; name: 'verification_insert_input'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'verification_max_fields': { kind: 'OBJECT'; name: 'verification_max_fields'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'identifier': { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'verification_min_fields': { kind: 'OBJECT'; name: 'verification_min_fields'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'identifier': { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'verification_mutation_response': { kind: 'OBJECT'; name: 'verification_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'verification'; ofType: null; }; }; }; } }; }; };
    'verification_on_conflict': { kind: 'INPUT_OBJECT'; name: 'verification_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'verification_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'verification_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'verification_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'verification_order_by': { kind: 'INPUT_OBJECT'; name: 'verification_order_by'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'identifier'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'verification_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'verification_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'verification_select_column': { name: 'verification_select_column'; enumValues: 'createdAt' | 'expiresAt' | 'id' | 'identifier' | 'updatedAt' | 'value'; };
    'verification_set_input': { kind: 'INPUT_OBJECT'; name: 'verification_set_input'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'verification_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'verification_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'verification_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'verification_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'verification_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'verification_update_column': { name: 'verification_update_column'; enumValues: 'createdAt' | 'expiresAt' | 'id' | 'identifier' | 'updatedAt' | 'value'; };
    'verification_updates': { kind: 'INPUT_OBJECT'; name: 'verification_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'verification_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'verification_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'hasura';
  query: 'query_root';
  mutation: 'mutation_root';
  subscription: 'subscription_root';
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';
