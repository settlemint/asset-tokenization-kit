/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'ConstructorArguments': unknown;
    'Contract': { kind: 'OBJECT'; name: 'Contract'; fields: { 'abiName': { name: 'abiName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address': { name: 'address'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionOutput'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ContractDeployStatus': { kind: 'OBJECT'; name: 'ContractDeployStatus'; fields: { 'abiName': { name: 'abiName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address': { name: 'address'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deployedAt': { name: 'deployedAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertedAt': { name: 'revertedAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionOutput'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ContractDeploymentTransactionOutput': { kind: 'OBJECT'; name: 'ContractDeploymentTransactionOutput'; fields: { 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ContractsDeployStatusPaginatedOutput': { kind: 'OBJECT'; name: 'ContractsDeployStatusPaginatedOutput'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'records': { name: 'records'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContractDeployStatus'; ofType: null; }; }; }; } }; }; };
    'ContractsPaginatedOutput': { kind: 'OBJECT'; name: 'ContractsPaginatedOutput'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'records': { name: 'records'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Contract'; ofType: null; }; }; }; } }; }; };
    'CreateWalletInfoInput': { kind: 'INPUT_OBJECT'; name: 'CreateWalletInfoInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateWalletOutput': { kind: 'OBJECT'; name: 'CreateWalletOutput'; fields: { 'address': { name: 'address'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'derivationPath': { name: 'derivationPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreateWalletVerificationInput': { kind: 'INPUT_OBJECT'; name: 'CreateWalletVerificationInput'; isOneOf: false; inputFields: [{ name: 'otp'; type: { kind: 'INPUT_OBJECT'; name: 'OTPSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'pincode'; type: { kind: 'INPUT_OBJECT'; name: 'PincodeSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'secretCodes'; type: { kind: 'INPUT_OBJECT'; name: 'SecretCodesSettingsInput'; ofType: null; }; defaultValue: null }]; };
    'CreateWalletVerificationOutput': { kind: 'OBJECT'; name: 'CreateWalletVerificationOutput'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'parameters': { name: 'parameters'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'verificationType': { name: 'verificationType'; type: { kind: 'ENUM'; name: 'WalletVerificationType'; ofType: null; } }; }; };
    'DeleteWalletVerificationOutput': { kind: 'OBJECT'; name: 'DeleteWalletVerificationOutput'; fields: { 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'Int': unknown;
    'JSON': unknown;
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'DeployContract': { name: 'DeployContract'; type: { kind: 'OBJECT'; name: 'ContractDeploymentTransactionOutput'; ofType: null; } }; 'createWallet': { name: 'createWallet'; type: { kind: 'OBJECT'; name: 'CreateWalletOutput'; ofType: null; } }; 'createWalletVerification': { name: 'createWalletVerification'; type: { kind: 'OBJECT'; name: 'CreateWalletVerificationOutput'; ofType: null; } }; 'createWalletVerificationChallenges': { name: 'createWalletVerificationChallenges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WalletVerificationChallenge'; ofType: null; }; }; } }; 'deleteWalletVerification': { name: 'deleteWalletVerification'; type: { kind: 'OBJECT'; name: 'DeleteWalletVerificationOutput'; ofType: null; } }; 'verifyWalletVerificationChallenge': { name: 'verifyWalletVerificationChallenge'; type: { kind: 'OBJECT'; name: 'VerifyWalletVerificationChallengeOutput'; ofType: null; } }; }; };
    'OTPAlgorithm': { name: 'OTPAlgorithm'; enumValues: 'SHA1' | 'SHA3_224' | 'SHA3_256' | 'SHA3_384' | 'SHA3_512' | 'SHA224' | 'SHA256' | 'SHA384' | 'SHA512'; };
    'OTPSettingsInput': { kind: 'INPUT_OBJECT'; name: 'OTPSettingsInput'; isOneOf: false; inputFields: [{ name: 'algorithm'; type: { kind: 'ENUM'; name: 'OTPAlgorithm'; ofType: null; }; defaultValue: null }, { name: 'digits'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'issuer'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'period'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'PincodeSettingsInput': { kind: 'INPUT_OBJECT'; name: 'PincodeSettingsInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'pincode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'getContracts': { name: 'getContracts'; type: { kind: 'OBJECT'; name: 'ContractsPaginatedOutput'; ofType: null; } }; 'getContractsDeployStatus': { name: 'getContractsDeployStatus'; type: { kind: 'OBJECT'; name: 'ContractsDeployStatusPaginatedOutput'; ofType: null; } }; 'getPendingAndRecentlyProcessedTransactions': { name: 'getPendingAndRecentlyProcessedTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getPendingTransactions': { name: 'getPendingTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getProcessedTransactions': { name: 'getProcessedTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getTransaction': { name: 'getTransaction'; type: { kind: 'OBJECT'; name: 'TransactionOutput'; ofType: null; } }; 'getTransactionsTimeline': { name: 'getTransactionsTimeline'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionTimelineOutput'; ofType: null; }; }; } }; 'getWalletVerifications': { name: 'getWalletVerifications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WalletVerification'; ofType: null; }; }; } }; }; };
    'SecretCodesSettingsInput': { kind: 'INPUT_OBJECT'; name: 'SecretCodesSettingsInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'String': unknown;
    'Subscription': { kind: 'OBJECT'; name: 'Subscription'; fields: { 'getContractsDeployStatus': { name: 'getContractsDeployStatus'; type: { kind: 'OBJECT'; name: 'ContractsDeployStatusPaginatedOutput'; ofType: null; } }; 'getPendingAndRecentlyProcessedTransactions': { name: 'getPendingAndRecentlyProcessedTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getPendingTransactions': { name: 'getPendingTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getProcessedTransactions': { name: 'getProcessedTransactions'; type: { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; ofType: null; } }; 'getTransaction': { name: 'getTransaction'; type: { kind: 'OBJECT'; name: 'TransactionOutput'; ofType: null; } }; }; };
    'TransactionOutput': { kind: 'OBJECT'; name: 'TransactionOutput'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'functionName': { name: 'functionName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isContract': { name: 'isContract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'receipt': { name: 'receipt'; type: { kind: 'OBJECT'; name: 'TransactionReceiptOutput'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionReceiptOutput': { kind: 'OBJECT'; name: 'TransactionReceiptOutput'; fields: { 'blobGasPrice': { name: 'blobGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blobGasUsed': { name: 'blobGasUsed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cumulativeGasUsed': { name: 'cumulativeGasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'logs': { name: 'logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'logsBloom': { name: 'logsBloom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertReasonDecoded': { name: 'revertReasonDecoded'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'root': { name: 'root'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionReceiptStatus'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'userOperationReceipts': { name: 'userOperationReceipts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserOperationReceipt'; ofType: null; }; }; } }; }; };
    'TransactionReceiptStatus': { name: 'TransactionReceiptStatus'; enumValues: 'Reverted' | 'Success'; };
    'TransactionTimelineGranularity': { name: 'TransactionTimelineGranularity'; enumValues: 'DAY' | 'HOUR' | 'MONTH' | 'YEAR'; };
    'TransactionTimelineOutput': { kind: 'OBJECT'; name: 'TransactionTimelineOutput'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'end': { name: 'end'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'start': { name: 'start'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionsPaginatedOutput': { kind: 'OBJECT'; name: 'TransactionsPaginatedOutput'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'records': { name: 'records'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionOutput'; ofType: null; }; }; }; } }; }; };
    'UserOperationReceipt': { kind: 'OBJECT'; name: 'UserOperationReceipt'; fields: { 'actualGasCost': { name: 'actualGasCost'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'actualGasUsed': { name: 'actualGasUsed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'entryPoint': { name: 'entryPoint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'logs': { name: 'logs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'nonce': { name: 'nonce'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sender': { name: 'sender'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userOpHash': { name: 'userOpHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VerifyWalletVerificationChallengeOutput': { kind: 'OBJECT'; name: 'VerifyWalletVerificationChallengeOutput'; fields: { 'verified': { name: 'verified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'WalletVerification': { kind: 'OBJECT'; name: 'WalletVerification'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationType': { name: 'verificationType'; type: { kind: 'ENUM'; name: 'WalletVerificationType'; ofType: null; } }; }; };
    'WalletVerificationChallenge': { kind: 'OBJECT'; name: 'WalletVerificationChallenge'; fields: { 'challenge': { name: 'challenge'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationType': { name: 'verificationType'; type: { kind: 'ENUM'; name: 'WalletVerificationType'; ofType: null; } }; }; };
    'WalletVerificationType': { name: 'WalletVerificationType'; enumValues: 'OTP' | 'PINCODE' | 'SECRET_CODES'; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'portal';
  query: 'Query';
  mutation: 'Mutation';
  subscription: 'Subscription';
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';
