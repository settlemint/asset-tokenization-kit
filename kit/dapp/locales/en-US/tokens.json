{
  "actions": {
    "addCompliance": {
      "description": "Add a new compliance module to enforce additional rules.",
      "label": "Add Compliance Module",
      "messages": {
        "error": "An error occurred while adding module",
        "failed": "Failed to add compliance module",
        "preparing": "Preparing to add compliance module...",
        "submitting": "Submitting module addition...",
        "success": "Compliance module added successfully"
      },
      "submit": "Add Module",
      "submitting": "Adding module...",
      "title": "Add Compliance Module"
    },
    "addressCopied": "Token address copied to clipboard",
    "approve": {
      "description": "Allow another address to spend tokens on your behalf.",
      "label": "Approve Spending",
      "messages": {
        "error": "An error occurred while approving",
        "failed": "Failed to approve spending",
        "preparing": "Preparing approval...",
        "submitting": "Submitting approval transaction...",
        "success": "Approval granted successfully"
      },
      "submit": "Approve",
      "submitting": "Approving...",
      "title": "Approve Token Spending"
    },
    "burn": {
      "description": "Permanently remove tokens from circulation",
      "label": "Burn Tokens",
      "messages": {
        "error": "An error occurred while burning tokens",
        "failed": "Failed to burn tokens",
        "preparing": "Preparing to burn tokens...",
        "submitting": "Submitting burn transaction...",
        "success": "Tokens burned successfully"
      },
      "reviewTitle": "Review burn",
      "addresses": "Addresses",
      "submit": "Confirm burn",
      "submitting": "Burning...",
      "title": "Burn tokens",
      "form": {
        "addresses": "Addresses",
        "addressLabel": "Address",
        "amountLabel": "Amount",
        "addAddress": "Add address",
        "max": "Max: {{max}}",
        "hint": "Only available balance can be burned",
        "total": "Total"
      }
    },
    "copyAddress": "Copy Address",
    "create": {
      "creating": "Creating {{type}} token...",
      "error": {
        "default": "An error occurred while creating the token"
      },
      "failed": "Failed to create {{type}} token",
      "messages": {
        "error": "Failed to create {{type}} token",
        "pending": "Creating {{type}} token...",
        "success": "{{type}} token created successfully"
      },
      "preparing": "Preparing to create {{type}} token...",
      "success": "{{type}} token created successfully"
    },
    "createToken": "Create Token",
    "forcedRecover": {
      "description": "Forcibly recover tokens from an address (requires special permissions).",
      "label": "Force Recovery",
      "messages": {
        "error": "An error occurred during recovery",
        "failed": "Failed to recover tokens",
        "preparing": "Preparing forced recovery...",
        "submitting": "Submitting recovery transaction...",
        "success": "Tokens recovered successfully"
      },
      "submit": "Force Recovery",
      "submitting": "Recovering...",
      "title": "Force Token Recovery"
    },
    "forcedTransfer": {
      "messages": {
        "error": "An error occurred during forced transfer",
        "failed": "Failed to complete forced transfer",
        "preparing": "Preparing forced transfer...",
        "submitting": "Submitting forced transfer transaction...",
        "success": "Forced transfer completed successfully"
      }
    },
    "freeze": {
      "description": "Prevent an address from performing any token transfers.",
      "label": "Freeze Address",
      "messages": {
        "error": "An error occurred while freezing address",
        "failed": "Failed to freeze address",
        "preparing": "Preparing to freeze address...",
        "submitting": "Submitting freeze transaction...",
        "success": "Address frozen successfully"
      },
      "submit": "Freeze",
      "submitting": "Freezing...",
      "title": "Freeze Address"
    },
    "freezePartial": {
      "description": "Freeze a specific amount of tokens for an address, preventing those tokens from being transferred.",
      "label": "Freeze Partial Balance",
      "messages": {
        "error": "An error occurred while freezing partial balance",
        "failed": "Failed to freeze partial balance",
        "preparing": "Preparing to freeze partial balance...",
        "submitting": "Submitting partial freeze transaction...",
        "success": "Partial balance frozen successfully"
      },
      "submit": "Freeze Tokens",
      "submitting": "Freezing tokens...",
      "title": "Freeze Partial Balance",
      "reviewTitle": "Review Token Freeze",
      "confirmationNote": "This will freeze the specified amount of tokens for the selected address, preventing them from being transferred until unfrozen.",
      "form": {
        "addressLabel": "Address to freeze",
        "addressDescription": "The address whose tokens will be frozen",
        "amountLabel": "Amount to freeze",
        "amountDescription": "The number of tokens to freeze for this address"
      }
    },
    "mature": {
      "description": "Mature this bond to make it redeemable by holders. This action requires sufficient denomination assets and verification.",
      "label": "Mature Bond",
      "messages": {
        "error": "An error occurred while maturing the bond",
        "failed": "Failed to mature bond",
        "preparing": "Preparing to mature bond...",
        "submitting": "Submitting mature transaction...",
        "success": "Bond '{{name}} ({{symbol}})' matured successfully"
      },
      "submit": "Mature Bond",
      "submitting": "Maturing...",
      "title": "Mature Bond"
    },
    "mint": {
      "description": "Create new tokens and assign to addresses",
      "label": "Mint Tokens",
      "messages": {
        "error": "An error occurred while minting tokens",
        "failed": "Failed to mint tokens",
        "failedBatch": "Failed to mint tokens to recipients",
        "preparing": "Preparing to mint tokens...",
        "preparingBatch": "Preparing to mint tokens to multiple recipients...",
        "submitting": "Submitting mint transaction...",
        "submittingBatch": "Submitting batch mint transaction...",
        "success": "Tokens minted successfully",
        "successBatch": "Tokens minted successfully to all recipients"
      },
      "reviewTitle": "Review mint",
      "recipients": "Recipients",
      "submit": "Confirm mint",
      "submitting": "Minting...",
      "title": "Mint tokens",
      "form": {
        "recipients": "Recipients",
        "addressLabel": "Recipient",
        "amountLabel": "Amount",
        "addRecipient": "Add recipient",
        "limit": "Limit applies: collateral/cap",
        "noLimit": "No protocol limit",
        "overLimit": "Total amount exceeds allowed limit",
        "limitLabel": "Protocol limit (applies to entire transaction)",
        "total": "Total"
      }
    },
    "collateral": {
      "description": "Manage collateral claims to control token supply limits",
      "label": "Manage Collateral",
      "messages": {
        "error": "An error occurred while updating collateral",
        "failed": "Failed to update collateral claim",
        "preparing": "Preparing to update collateral claim...",
        "submitting": "Submitting collateral claim update...",
        "success": "Collateral claim updated successfully"
      },
      "reviewTitle": "Review Collateral Update",
      "submit": "Update Collateral",
      "submitting": "Updating...",
      "title": "Manage Collateral",
      "success": "Collateral updated successfully",
      "current": "Current Collateral",
      "new": "New Collateral",
      "currentStatus": "Current Status",
      "currentCollateral": "Current Collateral",
      "utilization": "Utilization",
      "expiryDate": "Expiry Date",
      "availableForMinting": "Available for Minting",
      "claimNote": "This will issue a new collateral claim on the token's identity contract.",
      "info": "Collateral claims act as supply caps, ensuring tokens are backed by sufficient assets. Only trusted claim issuers can update these claims.",
      "form": {
        "amountLabel": "New Collateral Amount",
        "amountDescription": "The total collateral amount that will back the token supply",
        "expiryLabel": "Claim Validity Period",
        "expiryDescription": "Number of days until the collateral claim expires",
        "amountTooLow": "Collateral amount must be greater than the current total supply"
      }
    },
    "pause": {
      "description": "Pausing this token will prevent all transfers until it is unpaused. This action requires verification.",
      "label": "Pause Token",
      "messages": {
        "error": "An error occurred while pausing the token",
        "failed": "Failed to pause token",
        "preparing": "Preparing to pause token...",
        "submitting": "Submitting pause transaction...",
        "success": "Asset '{{name}} ({{symbol}})' paused successfully"
      },
      "submit": "Pause Token",
      "submitting": "Pausing...",
      "title": "Pause Token Transfers"
    },
    "recoverERC20": {
      "description": "Recover other ERC20 tokens sent to this contract by mistake.",
      "label": "Recover ERC20",
      "messages": {
        "error": "An error occurred during recovery",
        "failed": "Failed to recover ERC20 tokens",
        "preparing": "Preparing ERC20 recovery...",
        "submitting": "Submitting recovery transaction...",
        "success": "ERC20 tokens recovered successfully"
      },
      "submit": "Recover",
      "submitting": "Recovering...",
      "title": "Recover ERC20 Tokens"
    },
    "recoverTokens": {
      "description": "Recover tokens that were sent to this contract by mistake.",
      "label": "Recover Tokens",
      "messages": {
        "error": "An error occurred during recovery",
        "failed": "Failed to recover tokens",
        "preparing": "Preparing token recovery...",
        "submitting": "Submitting recovery transaction...",
        "success": "Tokens recovered successfully"
      },
      "submit": "Recover",
      "submitting": "Recovering...",
      "title": "Recover Lost Tokens"
    },
    "redeem": {
      "description": "Redeem tokens for their underlying value.",
      "label": "Redeem Tokens",
      "messages": {
        "error": "An error occurred during redemption",
        "failed": "Failed to redeem tokens",
        "failedAll": "Failed to redeem all tokens",
        "preparing": "Preparing token redemption...",
        "preparingAll": "Preparing to redeem all tokens...",
        "submitting": "Submitting redemption transaction...",
        "success": "Tokens redeemed successfully",
        "successAll": "All tokens redeemed successfully"
      },
      "submit": "Redeem",
      "submitting": "Redeeming...",
      "title": "Redeem Tokens",
      "form": {
        "balance": {
          "title": "Balance",
          "available": "Available Balance"
        },
        "redeemAll": "Redeem All Tokens",
        "amount": {
          "label": "Amount to Redeem",
          "max": "Max"
        }
      },
      "toasts": {
        "loading": "Processing redemption...",
        "success": "Successfully redeemed {{amount}} {{symbol}}",
        "error": "Redemption failed: {{error}}"
      }
    },
    "redeemAll": {
      "description": "Redeem all your tokens at once.",
      "label": "Redeem All",
      "messages": {
        "error": "An error occurred during redemption",
        "failed": "Failed to redeem all tokens",
        "preparing": "Preparing to redeem all tokens...",
        "submitting": "Submitting redemption transaction...",
        "success": "All tokens redeemed successfully"
      },
      "submit": "Redeem All",
      "submitting": "Redeeming all...",
      "title": "Redeem All Tokens"
    },
    "removeCompliance": {
      "description": "Remove an existing compliance module from the token.",
      "label": "Remove Compliance Module",
      "messages": {
        "error": "An error occurred while removing module",
        "failed": "Failed to remove compliance module",
        "preparing": "Preparing to remove compliance module...",
        "submitting": "Submitting module removal...",
        "success": "Compliance module removed successfully"
      },
      "submit": "Remove Module",
      "submitting": "Removing module...",
      "title": "Remove Compliance Module"
    },
    "setCap": {
      "description": "Define the maximum number of tokens that can ever be minted.",
      "label": "Set Max Supply",
      "messages": {
        "error": "An error occurred while setting cap",
        "failed": "Failed to set supply cap",
        "preparing": "Preparing to set supply cap...",
        "submitting": "Submitting cap transaction...",
        "success": "Supply cap set successfully"
      },
      "submit": "Set Cap",
      "submitting": "Setting cap...",
      "title": "Set Maximum Supply Cap"
    },
    "setYieldSchedule": {
      "description": "Set the yield distribution schedule for token holders.",
      "label": "Set Yield Schedule",
      "messages": {
        "error": "An error occurred while setting schedule",
        "failed": "Failed to set yield schedule",
        "invalidSchedule": "Invalid yield schedule configuration",
        "noSchedules": "No yield schedules provided",
        "preparing": "Preparing to configure yield schedule...",
        "submitting": "Submitting yield schedule...",
        "success": "Yield schedule configured successfully"
      },
      "submit": "Set Schedule",
      "submitting": "Setting schedule...",
      "title": "Configure Yield Schedule"
    },
    "topUpDenominationAsset": {
      "title": "Top up denomination asset",
      "description": "Add {{symbol}} to the yield schedule contract",
      "label": "Top up denomination asset",
      "submit": "Confirm top up",
      "success": "Denomination asset topped up successfully",
      "error": "Failed to top up denomination asset: {{error}}",
      "amountLabel": "Amount to top up",
      "available": "Available balance",
      "insufficientBalance": "You don't have enough {{symbol}} in your wallet. Please reduce the amount or add more assets to continue.",
      "noBalance": "You don't have any {{symbol}} in your wallet. Please add some {{symbol}} to your wallet to continue.",
      "invalidAmount": "Please enter a valid amount",
      "reviewTitle": "Review Top Up",
      "currentBalance": "Current Balance",
      "newBalance": "New Balance",
      "warning": "This will transfer denomination assets from your wallet to the yield contract for distribution."
    },
    "withdrawDenominationAsset": {
      "title": "Withdraw denomination asset",
      "description": "Withdraw {{symbol}} from the yield schedule contract",
      "label": "Withdraw denomination asset",
      "submit": "Confirm withdrawal",
      "success": "Denomination asset withdrawn successfully",
      "error": "Failed to withdraw denomination asset: {{error}}",
      "amountLabel": "Amount to withdraw",
      "recipientLabel": "Recipient address",
      "recipientPlaceholder": "Enter recipient address",
      "available": "Available balance",
      "insufficientBalance": "You don't have enough {{symbol}} in the yield schedule. Please reduce the amount or top up more assets first.",
      "noBalance": "You don't have any {{symbol}} in the yield schedule. Please top up some {{symbol}} first.",
      "invalidAmount": "Please enter a valid amount",
      "reviewTitle": "Review Withdrawal",
      "currentBalance": "Current Balance",
      "newBalance": "New Balance",
      "warning": "This will transfer denomination assets from the yield contract to the specified address."
    },
    "transfer": {
      "description": "Send tokens to another address.",
      "label": "Transfer Tokens",
      "messages": {
        "error": "An error occurred while transferring tokens",
        "failed": "Failed to transfer tokens",
        "preparing": "Preparing token transfer...",
        "submitting": "Submitting transfer transaction...",
        "success": "Tokens transferred successfully"
      },
      "submit": "Transfer Tokens",
      "submitting": "Transferring...",
      "title": "Transfer Tokens"
    },
    "transferFrom": {
      "messages": {
        "error": "An error occurred during delegated transfer",
        "failed": "Failed to complete delegated transfer",
        "preparing": "Preparing delegated transfer...",
        "submitting": "Submitting transfer on behalf of owner...",
        "success": "Delegated transfer completed successfully"
      }
    },
    "unfreeze": {
      "description": "Allow a previously frozen address to transfer tokens again.",
      "label": "Unfreeze Address",
      "messages": {
        "error": "An error occurred while unfreezing address",
        "failed": "Failed to unfreeze address",
        "preparing": "Preparing to unfreeze address...",
        "submitting": "Submitting unfreeze transaction...",
        "success": "Address unfrozen successfully"
      },
      "submit": "Unfreeze",
      "submitting": "Unfreezing...",
      "title": "Unfreeze Address"
    },
    "unfreezePartial": {
      "description": "Unfreeze a specific amount of previously frozen tokens for an address.",
      "label": "Unfreeze Partial Balance",
      "messages": {
        "error": "An error occurred while unfreezing partial balance",
        "failed": "Failed to unfreeze partial balance",
        "preparing": "Preparing to unfreeze partial balance...",
        "submitting": "Submitting partial unfreeze transaction...",
        "success": "Partial balance unfrozen successfully"
      },
      "submit": "Unfreeze Tokens",
      "submitting": "Unfreezing tokens...",
      "title": "Unfreeze Partial Balance",
      "reviewTitle": "Review Token Unfreeze",
      "confirmationNote": "This will unfreeze the specified amount of tokens for the selected address, allowing them to be transferred again.",
      "form": {
        "addressLabel": "Address to unfreeze",
        "addressDescription": "The address whose tokens will be unfrozen",
        "amountLabel": "Amount to unfreeze",
        "amountDescription": "The number of tokens to unfreeze for this address"
      }
    },
    "unpause": {
      "description": "Unpausing this token will allow transfers to resume. This action requires verification.",
      "label": "Unpause Token",
      "messages": {
        "error": "An error occurred while unpausing the token",
        "failed": "Failed to unpause token",
        "preparing": "Preparing to unpause token...",
        "submitting": "Submitting unpause transaction...",
        "success": "Asset '{{name}} ({{symbol}})' unpaused successfully"
      },
      "submit": "Unpause Token",
      "submitting": "Unpausing...",
      "title": "Unpause Token Transfers"
    },
    "viewDetails": "View Details",
    "viewEvents": "View Events",
    "viewOnEtherscan": "View on Etherscan"
  },
  "asset-types": {
    "bond": "Bonds",
    "deposit": "Deposits",
    "equity": "Equities",
    "fund": "Funds",
    "stablecoin": "Stablecoins"
  },
  "bulkActions": {
    "archiveMessage": "Would archive {{count}} token(s). This is a demo action.",
    "duplicateMessage": "Would duplicate {{count}} token(s). This is a demo action."
  },
  "columns": {
    "actions": "Actions",
    "contractAddress": "Contract Address",
    "createdAt": "Created At",
    "decimals": "Decimals",
    "name": "Name",
    "paused": "Status",
    "symbol": "Symbol",
    "tokenName": "Token Name",
    "tokenSymbol": "Token Symbol",
    "totalSupply": "Total Supply"
  },
  "details": {
    "bondInformation": "Bond Information",
    "collateralInformation": "Collateral",
    "events": "Events",
    "fundInformation": "Fund Information",
    "holders": "Holders",
    "tokenInformation": "Details",
    "stateChange": "State Change",
    "currentState": "Current State",
    "targetState": "Target State",
    "currentSupply": "Current supply",
    "newSupply": "New supply"
  },
  "emptyState": {
    "description": "This factory has not created any tokens yet. Create your first token to get started.",
    "title": "No tokens found"
  },
  "events": {
    "actions": {
      "copyTransactionHash": "Copy Transaction Hash",
      "transactionHashCopied": "Transaction hash copied to clipboard",
      "viewDetails": "View Details",
      "viewOnEtherscan": "View on Etherscan"
    },
    "columns": {
      "event": "Event",
      "sender": "Sender",
      "timestamp": "Timestamp",
      "txIndex": "Tx Index"
    },
    "description": "Historical activity and transactions for this token",
    "details": {
      "asset": "Asset",
      "blockNumber": "Block Number",
      "description": "{{eventName}} event for {{tokenName}}",
      "eventParameters": "Event Parameters",
      "sender": "Sender",
      "timestamp": "Date",
      "title": "Event Details",
      "transactionHash": "Transaction Hash"
    },
    "searchPlaceholder": "Search events by type, sender...",
    "title": "Token Events"
  },
  "factory": {
    "create": {
      "all-completed": "All token factories deployed successfully",
      "completed": "{{completed}} of {{total}} factories deployed",
      "deploying": "Deploying {{current}} of {{total}} factories...",
      "description": "Deploy factory contracts for your selected asset types",
      "error": {
        "default": "Failed to deploy token factory",
        "no-result": "Factory deployment completed but no address was returned",
        "system-not-bootstrapped": "System needs to be bootstrapped first. Please wait for system initialization to complete.",
        "system-not-found": "System address not found. Please ensure a system is deployed first."
      },
      "success": "Token factory successfully created",
      "title": "Create Token Factories"
    },
    "info": {
      "bond": {
        "description": "A bond is a debt instrument through which an issuer raises capital from investors, agreeing to repay the principal with interest over a defined period. When issued on blockchain, bonds become programmable assets with transparent terms, automated compliance, and efficient end-to-end lifecycle management from issuance to settlement.",
        "title": "A digital fixed-income security asset"
      },
      "deposit": {
        "description": "A deposit is the act of placing funds into a financial account, typically for safekeeping, future use, or to fulfill a contractual obligation. On blockchain platforms, deposits can be represented as digital tokens, enabling automated verification, conditional release, and auditable custody throughout the transaction lifecycle.",
        "title": "Secure and compliant digital deposit management"
      },
      "equity": {
        "description": "Equity refers to the ownership interest in a company or asset, typically entitling the holder to a share of profits and voting rights. When tokenized on blockchain, equity can be issued, managed, and transferred with programmable rules, improving access, liquidity, and operational efficiency in ownership markets.",
        "title": "Institutional-grade digital equity management"
      },
      "fund": {
        "description": "A fund aggregates capital from multiple investors to invest in a portfolio of assets according to a defined strategy and management structure. Tokenizing funds on blockchain enables granular ownership tracking, efficient distribution of returns, and streamlined operations through smart contracts and real-time reporting.",
        "title": "Digital asset for institutional fund management"
      },
      "stablecoin": {
        "description": "A stablecoin is a type of cryptocurrency engineered to maintain a stable value, often backed by reserves like fiat currencies or other assets. On blockchain platforms, stablecoins provide a dependable medium of exchange and store of value, facilitating seamless, low-volatility transactions and programmable financial operations.",
        "title": "A secure and collateralized digital currency"
      }
    },
    "related": {
      "bond": {
        "box1": {
          "button": "Read Guide",
          "description": "Learn how to create and deploy tokenized bonds with customizable maturity dates, interest rates, and compliance rules tailored for institutional investors.",
          "title": "Getting Started with Bond Creation"
        },
        "box2": {
          "button": "View Documentation",
          "description": "Understand the regulatory requirements for tokenized bonds, including investor eligibility, transfer restrictions, and automated coupon payment mechanisms.",
          "title": "Bond Compliance and Regulatory Framework"
        },
        "box3": {
          "button": "Technical Docs",
          "description": "Explore the technical implementation of bond tokens including face value calculations, yield management, and integration with payment systems for automated settlements.",
          "title": "Bond Contract Architecture"
        }
      },
      "deposit": {
        "box1": {
          "button": "Read Guide",
          "description": "Learn how to tokenize deposits with configurable withdrawal conditions, interest accrual, and multi-signature approval workflows.",
          "title": "Getting Started with Deposit Token Creation"
        },
        "box2": {
          "button": "View Documentation",
          "description": "Understand the security measures and compliance features for tokenized deposits, including custody controls and audit trail requirements.",
          "title": "Deposit Compliance and Security Standards"
        },
        "box3": {
          "button": "Technical Docs",
          "description": "Explore the technical design of deposit tokens including time-lock mechanisms, conditional release logic, and integration with custody providers.",
          "title": "Deposit Contract Architecture"
        }
      },
      "equity": {
        "box1": {
          "button": "Read Guide",
          "description": "Learn how to tokenize company shares with voting rights, dividend distribution capabilities, and cap table management features.",
          "title": "Getting Started with Equity Token Creation"
        },
        "box2": {
          "button": "View Documentation",
          "description": "Understand the regulatory framework for tokenized equity, including shareholder agreements, voting mechanisms, and transfer restrictions.",
          "title": "Equity Compliance and Shareholder Rights"
        },
        "box3": {
          "button": "Technical Docs",
          "description": "Explore the implementation of equity tokens including governance features, dividend distribution systems, and corporate action handling.",
          "title": "Equity Contract Architecture"
        }
      },
      "fund": {
        "box1": {
          "button": "Read Guide",
          "description": "Learn how to create tokenized investment funds with NAV calculations, subscription/redemption workflows, and performance fee structures.",
          "title": "Getting Started with Fund Token Creation"
        },
        "box2": {
          "button": "View Documentation",
          "description": "Understand the regulatory requirements for tokenized funds, including investor accreditation, lock-up periods, and reporting obligations.",
          "title": "Fund Compliance and Investor Protection"
        },
        "box3": {
          "button": "Technical Docs",
          "description": "Explore the technical design of fund tokens including portfolio management, fee calculations, and integration with fund administration systems.",
          "title": "Fund Contract Architecture"
        }
      },
      "stablecoin": {
        "box1": {
          "button": "Read Guide",
          "description": "Learn how to deploy stablecoins with configurable collateral requirements, minting/burning controls, and price stability mechanisms.",
          "title": "Getting Started with Stablecoin Creation"
        },
        "box2": {
          "button": "View Documentation",
          "description": "Understand the regulatory framework for stablecoins, including reserve auditing, redemption guarantees, and anti-money laundering controls.",
          "title": "Stablecoin Compliance and Reserve Management"
        },
        "box3": {
          "button": "Technical Docs",
          "description": "Explore the implementation of stablecoins including oracle integrations, collateral management, and automated rebalancing mechanisms.",
          "title": "Stablecoin Contract Architecture"
        }
      }
    }
  },
  "related": {
    "title": "Related Actions",
    "increase-supply": {
      "title": {
        "bonds": "Issue bonds",
        "cryptocurrencies": "Mint assets",
        "deposits": "Increase the supply",
        "equities": "Issue new shares",
        "funds": "Issue new fund shares",
        "stablecoins": "Increase the supply"
      },
      "description": {
        "bonds": "A bond manager can issue new bonds through primary issuance or tap issuance with defined face value and maturity.",
        "cryptocurrencies": "A asset manager can mint new assets according to the tokenomics plan and emission schedule.",
        "deposits": "A supply manager can mint new deposits, provided sufficient collateral is available.",
        "equities": "An equity manager can issue new shares through various mechanisms like rights issues, private placements, or stock splits.",
        "funds": "A fund manager can issue new funds through primary issuance or tap issuance with defined face value and maturity.",
        "stablecoins": "A supply manager can mint new stablecoins, provided sufficient collateral is available."
      }
    },
    "decrease-supply": {
      "title": {
        "bonds": "Redeem bonds",
        "cryptocurrencies": "Decrease supply",
        "deposits": "Reduce deposit supply",
        "equities": "Reduce share supply",
        "funds": "Burn fund shares",
        "stablecoins": "Decrease the supply"
      },
      "description": {
        "bonds": "A bond manager can reduce the total supply through bond redemption at maturity or early repurchase programs.",
        "cryptocurrencies": "A supply manager can burn existing cryptocurrency tokens to decrease the total supply.",
        "deposits": "A supply manager can burn existing deposits, provided sufficient collateral is available.",
        "equities": "An equity manager can reduce the total supply of shares through a buyback program or capital reduction.",
        "funds": "A fund manager can reduce the total supply through fund redemption at maturity or early repurchase programs.",
        "stablecoins": "A supply manager can burn existing stablecoins, provided sufficient collateral is available."
      }
    },
    "update-collateral": {
      "title": "Update collateral",
      "description": {
        "deposits": "A supply manager needs to refresh and verify the collateral backing the deposit. This ensures the asset remains fully collateralized at all times.",
        "stablecoins": "A supply manager needs to refresh and verify the collateral backing the stablecoin. This ensures the asset remains fully collateralized at all times."
      }
    },
    "launch-minting-workflow": {
      "title": "Launch minting workflow",
      "description": "Create additional stablecoin supply when balance-sheet demand increases.",
      "cta": "Launch workflow"
    },
    "manage-denomination": {
      "title": "Balance denomination reserves",
      "description": "Withdraw denomination assets from the bond's yield schedule to realign reserve levels before maturity events.",
      "cta": "Manage reserves"
    }
  },
  "fields": {
    "assetType": "Asset Type",
    "assetTypeInfo": "The type of asset this token represents",
    "basePrice": "Base Price",
    "basePriceInfo": "The base price of the asset",
    "cap": "Max Supply",
    "capInfo": "The maximum amount that can be minted",
    "category": "Category",
    "categoryInfo": "The category of the asset",
    "class": "Class",
    "classInfo": "The class of the asset",
    "collateral": "Collateral",
    "collateralExpiry": "Collateral Expiry",
    "collateralExpiryInfo": "The date when the collateral expires",
    "collateralInfo": "The amount of collateral backing this asset",
    "committedCollateralRatio": "Committed Collateral Ratio",
    "committedCollateralRatioInfo": "The ratio of the collateral committed to the total supply of the asset",
    "contractAddress": "Contract Address",
    "contractAddressInfo": "The blockchain address of this asset contract",
    "createdBy": "Created By",
    "createdByInfo": "The address of the user who created the asset",
    "decimals": "Decimals",
    "decimalsInfo": "Number of decimal places for this token",
    "denominationAssetNeeded": "Total Asset Needed",
    "denominationAssetNeededInfo": "Total amount of denomination assets needed to mature all bond tokens",
    "currentDenominationHoldings": "Current Holdings",
    "currentDenominationHoldingsInfo": "Amount of denomination asset currently held by the bond contract",
    "shortfallToMature": "Shortfall to Mature",
    "shortfallToMatureInfo": "Additional denomination asset needed to fully mature this bond",
    "faceValue": "Face Value",
    "faceValueInfo": "The face value of the bond",
    "isin": "ISIN",
    "isinInfo": "The ISIN (International Securities Identification Number) code used to uniquely identify financial instruments",
    "isMatured": "Is Matured",
    "isMaturedInfo": "Whether the bond is matured",
    "managementFeeBps": "Management Fee",
    "managementFeeBpsInfo": "The management fee of the fund",
    "maturityDate": "Maturity Date",
    "maturityDateInfo": "The maturity date of the bond",
    "name": "Asset Name",
    "nameInfo": "The full name of the asset",
    "noExpiry": "No expiry",
    "noRequiredClaims": "No claims required",
    "redeemedAmount": "Redeemed Amount",
    "redeemedAmountInfo": "The amount redeemed",
    "requiredClaims": "Required Claims",
    "requiredClaimsInfo": "Identity claims required to interact with this asset",
    "status": "Status",
    "statusInfo": "Current operational status of the asset",
    "symbol": "Symbol",
    "symbolInfo": "The trading symbol for this asset",
    "totalSupply": "Total Supply",
    "totalSupplyInfo": "The total amount in circulation",
    "totalPrice": "Total Price",
    "totalPriceInfo": "The total price of the asset",
    "ownershipConcentration": "Ownership concentration",
    "totalBurned": "Total burned",
    "holdersCount": "# of holders"
  },
  "holders": {
    "actions": {
      "addressCopied": "Address copied to clipboard",
      "copyAddress": "Copy Address",
      "viewOnEtherscan": "View on Etherscan",
      "viewProfile": "View Profile",
      "burn": "Burn"
    },
    "bulkActions": {
      "freezeMessage": "Would freeze {{count}} holder(s). This is a demo action.",
      "unfreezeMessage": "Would unfreeze {{count}} holder(s). This is a demo action."
    },
    "columns": {
      "actions": "Actions",
      "address": "Address",
      "available": "Available",
      "frozen": "Frozen",
      "status": "Status",
      "totalBalance": "Total Balance"
    },
    "searchPlaceholder": "Search by holder address...",
    "status": {
      "active": "Active",
      "frozen": "Frozen"
    }
  },
  "manage": "Manage Asset",
  "searchPlaceholder": "Search tokens by name, symbol, or address...",
  "status": {
    "active": "Active",
    "matured": "Matured",
    "paused": "Paused"
  },
  "tabs": {
    "actions": "Actions",
    "allowlist": "Allowlist",
    "blocklist": "Blocklist",
    "events": "Events",
    "holders": "Holders",
    "mica": "MICA",
    "permissions": "Permissions",
    "tokenInformation": "Asset Details",
    "denominationAsset": "Denomination Assets",
    "yield": "Yield"
  },
  "yield": {
    "emptyState": {
      "title": "No yield schedule found",
      "description": "This bond does not have a yield schedule configured yet. Set up a yield schedule to enable automated interest payments to bond holders.",
      "setScheduleButton": "Set yield schedule"
    },
    "scheduleConfiguration": "Schedule configuration",
    "yieldTracking": "Yield tracking",
    "currentPeriod": "Current period",
    "nextPeriod": "Next period",
    "allPeriods": "All periods",
    "periodsTable": {
      "title": "All periods",
      "description": "Complete overview of all yield periods",
      "columns": {
        "periodId": "Period ID",
        "startDate": "Start date",
        "endDate": "End date",
        "claimedTotal": "Claimed / Total",
        "progress": "Progress",
        "status": "Status"
      },
      "status": {
        "scheduled": "Scheduled",
        "active": "Active",
        "completed": "Completed",
        "expired": "Expired"
      },
      "empty": {
        "title": "No periods found",
        "description": "This yield schedule has no periods configured yet."
      }
    },
    "fields": {
      "startDate": "Start date",
      "startDateInfo": "The date when yield generation begins",
      "endDate": "End date",
      "endDateInfo": "The date when yield generation ends",
      "rate": "Yield rate",
      "rateInfo": "Enter yield rate in basis points (100 bps = 1%)",
      "rateInPercentage": "Equivalent to",
      "interval": "Payment interval",
      "intervalInfo": "How often yield payments are distributed",
      "totalYield": "Total Yield",
      "totalYieldInfo": "The total amount of yield generated",
      "totalClaimed": "Total Claimed",
      "totalClaimedInfo": "The total amount of yield claimed by holders",
      "totalUnclaimed": "Total Unclaimed",
      "totalUnclaimedInfo": "The total amount of yield waiting to be claimed",
      "denominationAsset": "Denomination Asset",
      "denominationAssetInfo": "The asset used for yield payments",
      "denominationAssetBalance": "Denomination Asset Balance",
      "denominationAssetBalanceInfo": "The balance of the denomination asset in the yield schedule",
      "periodStart": "Period Start",
      "periodStartInfo": "The start date of this yield period",
      "periodEnd": "Period End",
      "periodEndInfo": "The end date of this yield period",
      "periodYield": "Period Yield",
      "periodYieldInfo": "Total yield available in this period",
      "periodClaimed": "Period Claimed",
      "periodClaimedInfo": "Amount claimed in this period",
      "totalPeriods": "Total Periods",
      "totalPeriodsInfo": "The total number of yield periods",
      "country": "Country",
      "countryInfo": "Choose where your yield schedule will be registered"
    },
    "intervals": {
      "daily": "Daily",
      "weekly": "Weekly",
      "monthly": "Monthly",
      "quarterly": "Quarterly",
      "yearly": "Yearly",
      "weeks": "Every {{count}} weeks",
      "days": "Every {{count}} days"
    },
    "form": {
      "selectInterval": "Select payment interval",
      "selectCountry": "Select jurisdiction"
    },
    "estimates": {
      "title": "Yield Estimates",
      "duration": "Duration",
      "annualRate": "Annual Rate",
      "estimatedTotal": "Estimated Total Yield",
      "disclaimer": "These are estimates based on current total supply. Actual yields may vary."
    }
  },
  "blocklist": {
    "title": "Blocklist",
    "description": "Manage addresses in the blocklist",
    "block": "Block",
    "columns": {
      "address": "Address"
    },
    "addAddress": "Add address",
    "removeAddress": "Remove address",
    "searchPlaceholder": "Search addresses...",
    "empty": {
      "title": "No blocklisted addresses",
      "description": "You have not added any addresses to the blocklist."
    }
  },
  "permissions": {
    "title": "Permissions",
    "columns": {
      "address": "Address",
      "roles": "Roles"
    },
    "empty": {
      "title": "No role assignments",
      "description": "No roles are assigned to any account yet."
    },
    "changeRoles": {
      "cta": "Change roles"
    },
    "searchPlaceholder": "Search addresses...",
    "groups": {
      "administration": "Administration",
      "operations": "Operations",
      "compliance": "Compliance",
      "other": "Other"
    }
  },
  "api": {
    "errors": {
      "InvalidSender": "Invalid sender address",
      "InvalidReceiver": "Invalid receiver address",
      "InsufficientBalance": "Insufficient balance to complete transfer",
      "InsufficientAllowance": "Insufficient allowance for transfer",
      "TokenFrozen": "Token transfers are currently frozen",
      "WalletFrozen": "Wallet is frozen and cannot perform transfers",
      "SelfTransfer": "Cannot transfer tokens to yourself",
      "InvalidIdentity": "Invalid identity verification",
      "ZeroAddress": "Cannot use zero address",
      "ComplianceCheckFailed": "Compliance check failed for this transfer",
      "NonTransferable": "Token is not transferable",
      "NotVerified": "Identity not verified",
      "Paused": "Token is paused",
      "OnlyOwner": "Only owner can perform this action",
      "OnlyAgent": "Only authorized agent can perform this action",
      "OnlySupplyManager": "Only supply manager can perform this action",
      "OnlyComplianceManager": "Only compliance manager can perform this action",
      "OnlyTokenAdmin": "Only token admin can perform this action",
      "ForcedTransferNotAllowed": "Forced transfers not allowed",
      "RecoveryNotAllowed": "Recovery not allowed",
      "MaxSupplyReached": "Maximum supply limit reached",
      "AmountExceedsBalance": "Amount exceeds available balance",
      "AmountExceedsFrozenTokens": "Amount exceeds frozen tokens",
      "NotEnoughFrozenTokens": "Not enough frozen tokens",
      "AlreadyFrozen": "Already frozen",
      "NotFrozen": "Not frozen",
      "ClaimNotFound": "Required claim not found",
      "ClaimNotValid": "Claim validation failed",
      "ClaimExpired": "Claim has expired",
      "ClaimRevoked": "Claim has been revoked",
      "IdentityNotFound": "Identity not found",
      "IdentityAlreadyExists": "Identity already exists",
      "IdentityMismatch": "Identity mismatch",
      "BurnNotAllowed": "Token burning not allowed",
      "MintNotAllowed": "Token minting not allowed",
      "AlreadyPaused": "Token is already paused",
      "NotPaused": "Token is not paused",
      "InvalidBatchLength": "Invalid batch operation length",
      "BatchOperationFailed": "Batch operation failed at index {{index}}",
      "InvalidYieldSchedule": "Invalid yield schedule",
      "YieldNotEnabled": "Yield distribution not enabled",
      "NoYieldAvailable": "No yield available for distribution",
      "InvalidCollateral": "Invalid collateral configuration",
      "CollateralLocked": "Collateral is locked",
      "BondNotMatured": "Bond has not matured yet",
      "BondAlreadyMatured": "Bond has already matured",
      "RedemptionNotAllowed": "Redemption not allowed",
      "InvalidFaceValue": "Invalid face value",
      "InvalidMaturityDate": "Invalid maturity date",
      "ModuleNotFound": "Compliance module not found",
      "ModuleAlreadyBound": "Module already bound",
      "ModuleBindingFailed": "Module binding failed",
      "InvalidManagementFee": "Invalid management fee",
      "FeeExceedsMaximum": "Fee exceeds maximum allowed",
      "InvalidTokenType": "Invalid token type",
      "ContractNotFound": "Contract not found",
      "ContractUpgradeFailed": "Contract upgrade failed",
      "InvalidImplementation": "Invalid implementation contract",
      "ProxyDeployFailed": "Proxy deployment failed",
      "FactoryNotDeployed": "Factory not deployed",
      "SystemNotBootstrapped": "System not bootstrapped",
      "InvalidConfiguration": "Invalid configuration",
      "NetworkError": "Network error occurred",
      "TransactionFailed": "Transaction failed: {{reason}}",
      "TransactionReverted": "Transaction reverted: {{reason}}",
      "EstimationFailed": "Gas estimation failed",
      "SignatureFailed": "Signature verification failed",
      "NonceTooLow": "Transaction nonce too low",
      "ReplacementUnderpriced": "Replacement transaction underpriced",
      "UnknownError": "An unknown error occurred",
      "ChainMismatch": "Connected to wrong blockchain network",
      "WalletNotConnected": "Wallet not connected",
      "UserRejected": "User rejected the transaction"
    },
    "queries": {
      "holders": {
        "messages": {
          "failed": "Failed to fetch token holders"
        }
      },
      "events": {
        "messages": {
          "failed": "Failed to fetch token events"
        }
      },
      "list": {
        "messages": {
          "failed": "Failed to list tokens"
        }
      }
    },
    "factory": {
      "read": {
        "messages": {
          "failed": "Failed to read token factory"
        }
      },
      "list": {
        "messages": {
          "failed": "Failed to list token factories"
        }
      },
      "create": {
        "messages": {
          "failed": "Failed to create factory: {{name}}",
          "batchFailed": "Failed to create all {{count}} {{count, plural, one {factory} other {factories}}}",
          "alreadyExists": "Factory already exists",
          "systemNotBootstrapped": "System needs to be bootstrapped first. Please wait for system initialization to complete.",
          "completed": "Factory creation completed",
          "allSucceeded": "Successfully created {{count}} {{count, plural, one {factory} other {factories}}}",
          "allSkipped": "All {{count}} {{count, plural, one {factory} other {factories}}} already exist",
          "mixedResults": "Created {{successCount}}, skipped {{skippedCount}}, failed {{failureCount}} factories",
          "successAndSkipped": "Created {{successCount}}, skipped {{skippedCount}} factories",
          "successAndFailed": "Created {{successCount}}, failed {{failureCount}} factories",
          "skippedAndFailed": "Skipped {{skippedCount}}, failed {{failureCount}} factories"
        }
      },
      "predict": {
        "messages": {
          "invalidType": "Invalid token type"
        },
        "fund": {
          "messages": {
            "failed": "Failed to predict fund address"
          }
        },
        "equity": {
          "messages": {
            "failed": "Failed to predict equity address"
          }
        },
        "bond": {
          "messages": {
            "failed": "Failed to predict bond address"
          }
        },
        "stablecoin": {
          "messages": {
            "failed": "Failed to predict stablecoin address"
          }
        },
        "deposit": {
          "messages": {
            "failed": "Failed to predict deposit address"
          }
        }
      }
    },
    "mutations": {
      "create": {
        "messages": {
          "notFound": "Failed to find created token",
          "missingAfterCreation": "Token not found after creation",
          "notFoundForTransaction": "Token not found for transaction {{transactionHash}}",
          "failed": "Failed to create token",
          "nullObject": "Token object is null for transaction {{transactionHash}}"
        },
        "fund": {
          "messages": {
            "invalidType": "Invalid token type",
            "failed": "Failed to create fund token"
          }
        },
        "equity": {
          "messages": {
            "invalidType": "Invalid token type",
            "failed": "Failed to create equity token"
          }
        },
        "bond": {
          "messages": {
            "invalidType": "Invalid token type",
            "failed": "Failed to create bond token"
          }
        },
        "stablecoin": {
          "messages": {
            "invalidType": "Invalid token type",
            "failed": "Failed to create stablecoin token"
          }
        },
        "deposit": {
          "messages": {
            "invalidType": "Invalid token type",
            "failed": "Failed to create deposit token"
          }
        }
      },
      "yield": {
        "messages": {
          "createScheduleFailed": "Failed to create yield schedule",
          "transactionFailed": "Transaction failed",
          "transactionFailedWithStatus": "Transaction failed with status: {{status}}",
          "receiptFailed": "Failed to get transaction receipt",
          "scheduleAddressNotFound": "Schedule address not found",
          "setScheduleFailed": "Failed to set yield schedule"
        }
      }
    },
    "stats": {
      "supplyChanges": {
        "messages": {
          "failed": "Failed to fetch token supply changes history"
        }
      }
    }
  },
  "validation": {
    "mint": {
      "recipientRequired": "At least one recipient required",
      "amountRequired": "At least one amount required"
    },
    "burn": {
      "addressRequired": "At least one address required",
      "amountRequired": "At least one amount required",
      "batchDescription": "batch burn"
    },
    "transfer": {
      "fromRequired": "From address(es) required for transferFrom and forced transfers"
    }
  },
  "assetClassification": {
    "equity": {
      "categories": {
        "blend_equity": "Blend Equity",
        "common_equity": "Common Equity",
        "communication_services": "Communication Services",
        "consumer_staples": "Consumer Staples",
        "consumer_discretionary": "Consumer Discretionary",
        "convertible_preferred_stock": "Convertible Preferred Stock",
        "cumulative_preferred_stock": "Cumulative Preferred Stock",
        "distressed_equity": "Distressed Equity",
        "domestic_equity": "Domestic Equity",
        "dual_class_shares": "Dual-Class Shares",
        "emerging_market_equity": "Emerging Market Equity",
        "energy": "Energy",
        "esop_shares": "Employee Stock Ownership Plan (ESOP) Shares",
        "financials": "Financials",
        "frontier_market_equity": "Frontier Market Equity",
        "global_equity": "Global Equity",
        "growth_capital": "Growth Capital",
        "growth_equity": "Growth Equity",
        "healthcare": "Healthcare",
        "income_equity": "Income Equity",
        "industrials": "Industrials",
        "international_equity": "International Equity",
        "large_cap_equity": "Large-Cap Equity",
        "leveraged_buyouts": "Leveraged Buyouts (LBOs)",
        "materials": "Materials",
        "mezzanine_financing": "Mezzanine Financing",
        "micro_cap_equity": "Micro-Cap Equity",
        "mid_cap_equity": "Mid-Cap Equity",
        "non_cumulative_preferred_stock": "Non-Cumulative Preferred Stock",
        "non_voting_common_stock": "Non-Voting Common Stock",
        "real_estate": "Real Estate",
        "redeemable_preferred_stock": "Redeemable Preferred Stock",
        "restricted_stock": "Restricted Stock",
        "small_cap_equity": "Small-Cap Equity",
        "technology": "Technology",
        "tracking_stocks": "Tracking Stocks",
        "utilities": "Utilities",
        "value_equity": "Value Equity",
        "venture_capital": "Venture Capital",
        "voting_common_stock": "Voting Common Stock"
      },
      "classes": {
        "common_equity": "Common Equity",
        "preferred_equity": "Preferred Equity",
        "market_capitalization_equity": "Market Capitalization Equity",
        "geographic_equity": "Geographic Equity",
        "sector_industry_equity": "Sector/Industry Equity",
        "investment_style_equity": "Investment Style Equity",
        "investment_stage_private_equity": "Investment Stage (Private Equity)",
        "special_classes_equity": "Special Classes of Equity"
      }
    },
    "funds": {
      "categories": {
        "activist": "Activist",
        "commodity_trading": "Commodity Trading",
        "convertible_arbitrage": "Convertible Arbitrage",
        "credit": "Credit",
        "currency_fx": "Currency FX",
        "distressed_debt": "Distressed Debt",
        "emerging_markets": "Emerging Markets",
        "equity_hedge": "Equity Hedge",
        "event_driven": "Event-Driven",
        "fixed_income_arbitrage": "Fixed Income Arbitrage",
        "fund_of_funds": "Fund of Funds",
        "global_macro": "Global Macro",
        "high_frequency_trading": "High-Frequency Trading (HFT)",
        "managed_futures_cta": "Managed Futures / CTA",
        "market_neutral": "Market Neutral",
        "merger_arbitrage": "Merger Arbitrage",
        "multi_strategy": "Multi-Strategy",
        "private_equity": "Private Equity (PE)",
        "venture_capital": "Venture Capital (VC)"
      },
      "classes": {
        "absolute_return": "Absolute Return",
        "core_blend": "Core / Blend",
        "diversified": "Diversified",
        "early_stage": "Early Stage",
        "factor_based": "Factor-Based",
        "growth_focused": "Growth-Focused",
        "income_focused": "Income-Focused",
        "large_cap": "Large-Cap",
        "long_equity": "Long Equity (Long Only)",
        "long_short_equity": "Long/Short Equity",
        "market_neutral": "Market Neutral",
        "mid_cap": "Mid-Cap",
        "momentum_oriented": "Momentum-Oriented",
        "opportunistic": "Opportunistic",
        "pre_series_b": "Pre-Series B",
        "quantitative_algorithmic": "Quantitative / Algorithmic",
        "regional": "Regional",
        "sector_specific": "Sector-Specific",
        "seed_pre_seed": "Seed / Pre-Seed",
        "series_b_late_stage": "Series B / Late Stage",
        "short_equity": "Short Equity",
        "small_cap": "Small-Cap",
        "tactical_asset_allocation": "Tactical Asset Allocation",
        "value_focused": "Value-Focused"
      }
    }
  }
}
