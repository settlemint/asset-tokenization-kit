/**
 * Authentication Provider Component
 *
 * This module provides authentication context and UI components for the application.
 * It integrates Better Auth with TanStack Query and TanStack Router to provide
 * a complete authentication solution with:
 *
 * - Session management and user state
 * - Authentication UI components (login, signup, etc.)
 * - Optimistic updates for better UX
 * - Passkey/WebAuthn support
 * - Toast notifications for auth events
 * - Router integration for navigation after auth actions
 *
 * The provider wraps two key contexts:
 * 1. AuthQueryProvider - Manages auth state with TanStack Query
 * 2. AuthUIProviderTanstack - Provides pre-built auth UI components
 * @see {@link @/lib/auth/auth.client} - Authentication client configuration
 * @see {@link https://better-auth.com} - Better Auth documentation
 */

import { authClient } from "@/lib/auth/auth.client";
import { AuthQueryProvider } from "@daveyplate/better-auth-tanstack";
import { AuthUIProviderTanstack } from "@daveyplate/better-auth-ui/tanstack";
import { Link, useRouter } from "@tanstack/react-router";
import React, { useCallback, useMemo } from "react";
import { useTranslation } from "react-i18next";
import { toast } from "sonner";

/**
 * Authentication provider that wraps the application with auth context.
 *
 * This provider integrates authentication functionality throughout the app,
 * providing hooks and components for:
 * - User authentication state (`useSession`, `useUser`)
 * - Auth operations (`useSignIn`, `useSignUp`, `useSignOut`)
 * - Pre-built UI components (`<SignIn />`, `<SignUp />`, etc.)
 * - Automatic session refresh and persistence
 * @example
 * ```tsx
 * // Using auth hooks in a component
 * import { useSession } from '@daveyplate/better-auth-tanstack';
 *
 * function UserProfile() {
 *   const { data: session, isLoading } = useSession();
 *
 *   if (isLoading) return <div>Loading...</div>;
 *   if (!session) return <div>Not logged in</div>;
 *
 *   return <div>Welcome {session.user.email}!</div>;
 * }
 *
 * // Using pre-built auth components
 * import { SignIn } from '@daveyplate/better-auth-ui/tanstack';
 *
 * function LoginPage() {
 *   return <SignIn />;
 * }
 * ```
 */
interface AuthProviderProps {
  children: React.ReactNode;
}

export function AuthProvider({ children }: AuthProviderProps) {
  const router = useRouter();
  const { t } = useTranslation("auth");

  const localization = useMemo(
    () => ({
      SERVICE_UNAVAILABLE: t("SERVICE_UNAVAILABLE"),
      RATE_LIMIT_EXCEEDED: t("RATE_LIMIT_EXCEEDED"),
      DELETE: t("DELETE"),
      ACCEPT: t("ACCEPT"),
      ACCEPT_INVITATION: t("ACCEPT_INVITATION"),
      ACCEPT_INVITATION_DESCRIPTION: t("ACCEPT_INVITATION_DESCRIPTION"),
      ACCOUNT: t("ACCOUNT"),
      ACCOUNTS: t("ACCOUNTS"),
      ACCOUNTS_DESCRIPTION: t("ACCOUNTS_DESCRIPTION"),
      ACCOUNTS_INSTRUCTIONS: t("ACCOUNTS_INSTRUCTIONS"),
      ACCOUNT_NOT_FOUND: t("ACCOUNT_NOT_FOUND"),
      ADD_ACCOUNT: t("ADD_ACCOUNT"),
      ADD_PASSKEY: t("ADD_PASSKEY"),
      ADMIN: t("ADMIN"),
      ALREADY_HAVE_AN_ACCOUNT: t("ALREADY_HAVE_AN_ACCOUNT"),
      ALREADY_SUBSCRIBED_PLAN: t("ALREADY_SUBSCRIBED_PLAN"),
      ANONYMOUS_USERS_CANNOT_SIGN_IN_AGAIN_ANONYMOUSLY: t(
        "ANONYMOUS_USERS_CANNOT_SIGN_IN_AGAIN_ANONYMOUSLY"
      ),
      API_KEY: t("API_KEY"),
      API_KEYS: t("API_KEYS"),
      API_KEYS_DESCRIPTION: t("API_KEYS_DESCRIPTION"),
      API_KEYS_INSTRUCTIONS: t("API_KEYS_INSTRUCTIONS"),
      API_KEY_CREATED: t("API_KEY_CREATED"),
      API_KEY_NAME_PLACEHOLDER: t("API_KEY_NAME_PLACEHOLDER"),
      AUTHENTICATION_FAILED: t("AUTHENTICATION_FAILED"),
      AVATAR: t("AVATAR"),
      AVATAR_DESCRIPTION: t("AVATAR_DESCRIPTION"),
      AVATAR_INSTRUCTIONS: t("AVATAR_INSTRUCTIONS"),
      BACKUP_CODE: t("BACKUP_CODE"),
      BACKUP_CODES: t("BACKUP_CODES"),
      BACKUP_CODES_DESCRIPTION: t("BACKUP_CODES_DESCRIPTION"),
      BACKUP_CODES_NOT_ENABLED: t("BACKUP_CODES_NOT_ENABLED"),
      BACKUP_CODE_PLACEHOLDER: t("BACKUP_CODE_PLACEHOLDER"),
      BACKUP_CODE_REQUIRED: t("BACKUP_CODE_REQUIRED"),
      BANNED_USER: t("BANNED_USER"),
      BY_CONTINUING_YOU_AGREE: t("BY_CONTINUING_YOU_AGREE"),
      CANCEL: t("CANCEL"),
      CANCEL_INVITATION: t("CANCEL_INVITATION"),
      CHALLENGE_NOT_FOUND: t("CHALLENGE_NOT_FOUND"),
      CHANGE_PASSWORD: t("CHANGE_PASSWORD"),
      CHANGE_PASSWORD_DESCRIPTION: t("CHANGE_PASSWORD_DESCRIPTION"),
      CHANGE_PASSWORD_INSTRUCTIONS: t("CHANGE_PASSWORD_INSTRUCTIONS"),
      CHANGE_PASSWORD_SUCCESS: t("CHANGE_PASSWORD_SUCCESS"),
      CONFIRM_PASSWORD: t("CONFIRM_PASSWORD"),
      CONFIRM_PASSWORD_PLACEHOLDER: t("CONFIRM_PASSWORD_PLACEHOLDER"),
      CONFIRM_PASSWORD_REQUIRED: t("CONFIRM_PASSWORD_REQUIRED"),
      CONTINUE: t("CONTINUE"),
      CONTINUE_WITH_AUTHENTICATOR: t("CONTINUE_WITH_AUTHENTICATOR"),
      COPIED_TO_CLIPBOARD: t("COPIED_TO_CLIPBOARD"),
      COPY_ALL_CODES: t("COPY_ALL_CODES"),
      COPY_TO_CLIPBOARD: t("COPY_TO_CLIPBOARD"),
      COULD_NOT_CREATE_SESSION: t("COULD_NOT_CREATE_SESSION"),
      CREATE_API_KEY: t("CREATE_API_KEY"),
      CREATE_API_KEY_DESCRIPTION: t("CREATE_API_KEY_DESCRIPTION"),
      CREATE_API_KEY_SUCCESS: t("CREATE_API_KEY_SUCCESS"),
      CREATE_ORGANIZATION: t("CREATE_ORGANIZATION"),
      CREATE_ORGANIZATION_SUCCESS: t("CREATE_ORGANIZATION_SUCCESS"),
      CREDENTIAL_ACCOUNT_NOT_FOUND: t("CREDENTIAL_ACCOUNT_NOT_FOUND"),
      CURRENT_PASSWORD: t("CURRENT_PASSWORD"),
      CURRENT_PASSWORD_PLACEHOLDER: t("CURRENT_PASSWORD_PLACEHOLDER"),
      CURRENT_SESSION: t("CURRENT_SESSION"),
      DELETE_ACCOUNT: t("DELETE_ACCOUNT"),
      DELETE_ACCOUNT_DESCRIPTION: t("DELETE_ACCOUNT_DESCRIPTION"),
      DELETE_ACCOUNT_INSTRUCTIONS: t("DELETE_ACCOUNT_INSTRUCTIONS"),
      DELETE_ACCOUNT_SUCCESS: t("DELETE_ACCOUNT_SUCCESS"),
      DELETE_ACCOUNT_VERIFY: t("DELETE_ACCOUNT_VERIFY"),
      DELETE_API_KEY: t("DELETE_API_KEY"),
      DELETE_API_KEY_CONFIRM: t("DELETE_API_KEY_CONFIRM"),
      DELETE_AVATAR: t("DELETE_AVATAR"),
      DELETE_LOGO: t("DELETE_LOGO"),
      DELETE_ORGANIZATION: t("DELETE_ORGANIZATION"),
      DELETE_ORGANIZATION_DESCRIPTION: t("DELETE_ORGANIZATION_DESCRIPTION"),
      DELETE_ORGANIZATION_INSTRUCTIONS: t("DELETE_ORGANIZATION_INSTRUCTIONS"),
      DELETE_ORGANIZATION_SUCCESS: t("DELETE_ORGANIZATION_SUCCESS"),
      DISABLED_CREDENTIALS_DESCRIPTION: t("DISABLED_CREDENTIALS_DESCRIPTION"),
      DISABLE_TWO_FACTOR: t("DISABLE_TWO_FACTOR"),
      DONE: t("DONE"),
      DONT_HAVE_AN_ACCOUNT: t("DONT_HAVE_AN_ACCOUNT"),
      EMAIL: t("EMAIL"),
      EMAIL_CAN_NOT_BE_UPDATED: t("EMAIL_CAN_NOT_BE_UPDATED"),
      EMAIL_DESCRIPTION: t("EMAIL_DESCRIPTION"),
      EMAIL_INSTRUCTIONS: t("EMAIL_INSTRUCTIONS"),
      EMAIL_IS_THE_SAME: t("EMAIL_IS_THE_SAME"),
      EMAIL_NOT_VERIFIED: t("EMAIL_NOT_VERIFIED"),
      EMAIL_OTP: t("EMAIL_OTP"),
      EMAIL_OTP_DESCRIPTION: t("EMAIL_OTP_DESCRIPTION"),
      EMAIL_OTP_SEND_ACTION: t("EMAIL_OTP_SEND_ACTION"),
      EMAIL_OTP_VERIFICATION_SENT: t("EMAIL_OTP_VERIFICATION_SENT"),
      EMAIL_OTP_VERIFY_ACTION: t("EMAIL_OTP_VERIFY_ACTION"),
      EMAIL_PLACEHOLDER: t("EMAIL_PLACEHOLDER"),
      EMAIL_REQUIRED: t("EMAIL_REQUIRED"),
      EMAIL_VERIFICATION: t("EMAIL_VERIFICATION"),
      EMAIL_VERIFICATION_REQUIRED: t("EMAIL_VERIFICATION_REQUIRED"),
      EMAIL_VERIFY_CHANGE: t("EMAIL_VERIFY_CHANGE"),
      ENABLE_TWO_FACTOR: t("ENABLE_TWO_FACTOR"),
      EXPIRES: t("EXPIRES"),
      EXPIRES_IN_IS_TOO_LARGE: t("EXPIRES_IN_IS_TOO_LARGE"),
      EXPIRES_IN_IS_TOO_SMALL: t("EXPIRES_IN_IS_TOO_SMALL"),
      FAILED_TO_CREATE_SESSION: t("FAILED_TO_CREATE_SESSION"),
      FAILED_TO_CREATE_USER: t("FAILED_TO_CREATE_USER"),
      FAILED_TO_FETCH_PLANS: t("FAILED_TO_FETCH_PLANS"),
      FAILED_TO_GET_SESSION: t("FAILED_TO_GET_SESSION"),
      FAILED_TO_GET_USER_INFO: t("FAILED_TO_GET_USER_INFO"),
      FAILED_TO_RETRIEVE_INVITATION: t("FAILED_TO_RETRIEVE_INVITATION"),
      FAILED_TO_UNLINK_LAST_ACCOUNT: t("FAILED_TO_UNLINK_LAST_ACCOUNT"),
      FAILED_TO_UPDATE_PASSKEY: t("FAILED_TO_UPDATE_PASSKEY"),
      FAILED_TO_UPDATE_USER: t("FAILED_TO_UPDATE_USER"),
      FAILED_TO_VERIFY_REGISTRATION: t("FAILED_TO_VERIFY_REGISTRATION"),
      FORGOT_AUTHENTICATOR: t("FORGOT_AUTHENTICATOR"),
      FORGOT_PASSWORD: t("FORGOT_PASSWORD"),
      FORGOT_PASSWORD_ACTION: t("FORGOT_PASSWORD_ACTION"),
      FORGOT_PASSWORD_DESCRIPTION: t("FORGOT_PASSWORD_DESCRIPTION"),
      FORGOT_PASSWORD_EMAIL: t("FORGOT_PASSWORD_EMAIL"),
      FORGOT_PASSWORD_LINK: t("FORGOT_PASSWORD_LINK"),
      GO_BACK: t("GO_BACK"),
      GUEST: t("GUEST"),
      ID_TOKEN_NOT_SUPPORTED: t("ID_TOKEN_NOT_SUPPORTED"),
      INVALID_API_KEY: t("INVALID_API_KEY"),
      INVALID_API_KEY_GETTER_RETURN_TYPE: t(
        "INVALID_API_KEY_GETTER_RETURN_TYPE"
      ),
      INVALID_BACKUP_CODE: t("INVALID_BACKUP_CODE"),
      INVALID_CODE: t("INVALID_CODE"),
      INVALID_EMAIL: t("INVALID_EMAIL"),
      INVALID_EMAIL_OR_PASSWORD: t("INVALID_EMAIL_OR_PASSWORD"),
      INVALID_METADATA_TYPE: t("INVALID_METADATA_TYPE"),
      INVALID_NAME_LENGTH: t("INVALID_NAME_LENGTH"),
      INVALID_OAUTH_CONFIGURATION: t("INVALID_OAUTH_CONFIGURATION"),
      INVALID_OTP: t("INVALID_OTP"),
      INVALID_PASSWORD: t("INVALID_PASSWORD"),
      INVALID_PHONE_NUMBER: t("INVALID_PHONE_NUMBER"),
      INVALID_PHONE_NUMBER_OR_PASSWORD: t("INVALID_PHONE_NUMBER_OR_PASSWORD"),
      INVALID_PREFIX_LENGTH: t("INVALID_PREFIX_LENGTH"),
      INVALID_REMAINING: t("INVALID_REMAINING"),
      INVALID_SESSION_TOKEN: t("INVALID_SESSION_TOKEN"),
      INVALID_TOKEN: t("INVALID_TOKEN"),
      INVALID_TWO_FACTOR_COOKIE: t("INVALID_TWO_FACTOR_COOKIE"),
      INVALID_USERNAME: t("INVALID_USERNAME"),
      INVALID_USERNAME_OR_PASSWORD: t("INVALID_USERNAME_OR_PASSWORD"),
      INVALID_USER_ID_FROM_API_KEY: t("INVALID_USER_ID_FROM_API_KEY"),
      INVITATION_ACCEPTED: t("INVITATION_ACCEPTED"),
      INVITATION_CANCELLED: t("INVITATION_CANCELLED"),
      INVITATION_EXPIRED: t("INVITATION_EXPIRED"),
      INVITATION_LIMIT_REACHED: t("INVITATION_LIMIT_REACHED"),
      INVITATION_NOT_FOUND: t("INVITATION_NOT_FOUND"),
      INVITATION_REJECTED: t("INVITATION_REJECTED"),
      INVITER_IS_NO_LONGER_A_MEMBER_OF_THE_ORGANIZATION: t(
        "INVITER_IS_NO_LONGER_A_MEMBER_OF_THE_ORGANIZATION"
      ),
      INVITE_MEMBER: t("INVITE_MEMBER"),
      INVITE_MEMBER_DESCRIPTION: t("INVITE_MEMBER_DESCRIPTION"),
      IS_INVALID: t("IS_INVALID"),
      IS_REQUIRED: t("IS_REQUIRED"),
      IS_THE_SAME: t("IS_THE_SAME"),
      KEY_DISABLED: t("KEY_DISABLED"),
      KEY_DISABLED_EXPIRATION: t("KEY_DISABLED_EXPIRATION"),
      KEY_EXPIRED: t("KEY_EXPIRED"),
      KEY_NOT_FOUND: t("KEY_NOT_FOUND"),
      KEY_NOT_RECOVERABLE: t("KEY_NOT_RECOVERABLE"),
      LEAVE_ORGANIZATION: t("LEAVE_ORGANIZATION"),
      LEAVE_ORGANIZATION_CONFIRM: t("LEAVE_ORGANIZATION_CONFIRM"),
      LEAVE_ORGANIZATION_SUCCESS: t("LEAVE_ORGANIZATION_SUCCESS"),
      LINK: t("LINK"),
      LOGO: t("LOGO"),
      LOGO_DESCRIPTION: t("LOGO_DESCRIPTION"),
      LOGO_INSTRUCTIONS: t("LOGO_INSTRUCTIONS"),
      MAGIC_LINK: t("MAGIC_LINK"),
      MAGIC_LINK_ACTION: t("MAGIC_LINK_ACTION"),
      MAGIC_LINK_DESCRIPTION: t("MAGIC_LINK_DESCRIPTION"),
      MAGIC_LINK_EMAIL: t("MAGIC_LINK_EMAIL"),
      MANAGE_ORGANIZATION: t("MANAGE_ORGANIZATION"),
      MEMBER: t("MEMBER"),
      MEMBERS: t("MEMBERS"),
      MEMBERS_DESCRIPTION: t("MEMBERS_DESCRIPTION"),
      MEMBERS_INSTRUCTIONS: t("MEMBERS_INSTRUCTIONS"),
      MEMBER_NOT_FOUND: t("MEMBER_NOT_FOUND"),
      MEMBER_ROLE_UPDATED: t("MEMBER_ROLE_UPDATED"),
      METADATA_DISABLED: t("METADATA_DISABLED"),
      MISSING_RESPONSE: t("MISSING_RESPONSE"),
      MISSING_SECRET_KEY: t("MISSING_SECRET_KEY"),
      NAME: t("NAME"),
      NAME_DESCRIPTION: t("NAME_DESCRIPTION"),
      NAME_INSTRUCTIONS: t("NAME_INSTRUCTIONS"),
      NAME_PLACEHOLDER: t("NAME_PLACEHOLDER"),
      NEVER_EXPIRES: t("NEVER_EXPIRES"),
      NEW_PASSWORD: t("NEW_PASSWORD"),
      NEW_PASSWORD_PLACEHOLDER: t("NEW_PASSWORD_PLACEHOLDER"),
      NEW_PASSWORD_REQUIRED: t("NEW_PASSWORD_REQUIRED"),
      NO_ACTIVE_ORGANIZATION: t("NO_ACTIVE_ORGANIZATION"),
      NO_EXPIRATION: t("NO_EXPIRATION"),
      NO_VALUES_TO_UPDATE: t("NO_VALUES_TO_UPDATE"),
      ONE_TIME_PASSWORD: t("ONE_TIME_PASSWORD"),
      ORGANIZATION: t("ORGANIZATION"),
      ORGANIZATIONS: t("ORGANIZATIONS"),
      ORGANIZATIONS_DESCRIPTION: t("ORGANIZATIONS_DESCRIPTION"),
      ORGANIZATIONS_INSTRUCTIONS: t("ORGANIZATIONS_INSTRUCTIONS"),
      ORGANIZATION_ALREADY_EXISTS: t("ORGANIZATION_ALREADY_EXISTS"),
      ORGANIZATION_MEMBERSHIP_LIMIT_REACHED: t(
        "ORGANIZATION_MEMBERSHIP_LIMIT_REACHED"
      ),
      ORGANIZATION_NAME: t("ORGANIZATION_NAME"),
      ORGANIZATION_NAME_DESCRIPTION: t("ORGANIZATION_NAME_DESCRIPTION"),
      ORGANIZATION_NAME_INSTRUCTIONS: t("ORGANIZATION_NAME_INSTRUCTIONS"),
      ORGANIZATION_NAME_PLACEHOLDER: t("ORGANIZATION_NAME_PLACEHOLDER"),
      ORGANIZATION_NOT_FOUND: t("ORGANIZATION_NOT_FOUND"),
      ORGANIZATION_SLUG: t("ORGANIZATION_SLUG"),
      ORGANIZATION_SLUG_DESCRIPTION: t("ORGANIZATION_SLUG_DESCRIPTION"),
      ORGANIZATION_SLUG_INSTRUCTIONS: t("ORGANIZATION_SLUG_INSTRUCTIONS"),
      ORGANIZATION_SLUG_PLACEHOLDER: t("ORGANIZATION_SLUG_PLACEHOLDER"),
      OR_CONTINUE_WITH: t("OR_CONTINUE_WITH"),
      OTP_EXPIRED: t("OTP_EXPIRED"),
      OTP_HAS_EXPIRED: t("OTP_HAS_EXPIRED"),
      OTP_NOT_ENABLED: t("OTP_NOT_ENABLED"),
      OTP_NOT_FOUND: t("OTP_NOT_FOUND"),
      OWNER: t("OWNER"),
      PASSKEY: t("PASSKEY"),
      PASSKEYS: t("PASSKEYS"),
      PASSKEYS_DESCRIPTION: t("PASSKEYS_DESCRIPTION"),
      PASSKEYS_INSTRUCTIONS: t("PASSKEYS_INSTRUCTIONS"),
      PASSKEY_NOT_FOUND: t("PASSKEY_NOT_FOUND"),
      PASSWORD: t("PASSWORD"),
      PASSWORDS_DO_NOT_MATCH: t("PASSWORDS_DO_NOT_MATCH"),
      PASSWORD_COMPROMISED: t("PASSWORD_COMPROMISED"),
      PASSWORD_PLACEHOLDER: t("PASSWORD_PLACEHOLDER"),
      PASSWORD_REQUIRED: t("PASSWORD_REQUIRED"),
      PASSWORD_TOO_LONG: t("PASSWORD_TOO_LONG"),
      PASSWORD_TOO_SHORT: t("PASSWORD_TOO_SHORT"),
      PENDING_INVITATIONS: t("PENDING_INVITATIONS"),
      PENDING_INVITATIONS_DESCRIPTION: t("PENDING_INVITATIONS_DESCRIPTION"),
      PERSONAL_ACCOUNT: t("PERSONAL_ACCOUNT"),
      PHONE_NUMBER_EXIST: t("PHONE_NUMBER_EXIST"),
      PHONE_NUMBER_NOT_VERIFIED: t("PHONE_NUMBER_NOT_VERIFIED"),
      PRIVACY_POLICY: t("PRIVACY_POLICY"),
      PROTECTED_BY_RECAPTCHA: t("PROTECTED_BY_RECAPTCHA"),
      PROVIDERS: t("PROVIDERS"),
      PROVIDERS_DESCRIPTION: t("PROVIDERS_DESCRIPTION"),
      PROVIDER_NOT_FOUND: t("PROVIDER_NOT_FOUND"),
      RECOVER_ACCOUNT: t("RECOVER_ACCOUNT"),
      RECOVER_ACCOUNT_ACTION: t("RECOVER_ACCOUNT_ACTION"),
      RECOVER_ACCOUNT_DESCRIPTION: t("RECOVER_ACCOUNT_DESCRIPTION"),
      REFILL_AMOUNT_AND_INTERVAL_REQUIRED: t(
        "REFILL_AMOUNT_AND_INTERVAL_REQUIRED"
      ),
      REFILL_INTERVAL_AND_AMOUNT_REQUIRED: t(
        "REFILL_INTERVAL_AND_AMOUNT_REQUIRED"
      ),
      REJECT: t("REJECT"),
      REMEMBER_ME: t("REMEMBER_ME"),
      REMOVE_MEMBER: t("REMOVE_MEMBER"),
      REMOVE_MEMBER_CONFIRM: t("REMOVE_MEMBER_CONFIRM"),
      REMOVE_MEMBER_SUCCESS: t("REMOVE_MEMBER_SUCCESS"),
      REQUEST_FAILED: t("REQUEST_FAILED"),
      RESEND_CODE: t("RESEND_CODE"),
      RESEND_VERIFICATION_EMAIL: t("RESEND_VERIFICATION_EMAIL"),
      RESET_PASSWORD: t("RESET_PASSWORD"),
      RESET_PASSWORD_ACTION: t("RESET_PASSWORD_ACTION"),
      RESET_PASSWORD_DESCRIPTION: t("RESET_PASSWORD_DESCRIPTION"),
      RESET_PASSWORD_SUCCESS: t("RESET_PASSWORD_SUCCESS"),
      REVOKE: t("REVOKE"),
      ROLE: t("ROLE"),
      ROLE_NOT_FOUND: t("ROLE_NOT_FOUND"),
      SAVE: t("SAVE"),
      SECURITY: t("SECURITY"),
      SELECT_ROLE: t("SELECT_ROLE"),
      SEND_INVITATION: t("SEND_INVITATION"),
      SEND_INVITATION_SUCCESS: t("SEND_INVITATION_SUCCESS"),
      SEND_VERIFICATION_CODE: t("SEND_VERIFICATION_CODE"),
      SERVER_ONLY_PROPERTY: t("SERVER_ONLY_PROPERTY"),
      SESSIONS: t("SESSIONS"),
      SESSIONS_DESCRIPTION: t("SESSIONS_DESCRIPTION"),
      SESSION_EXPIRED: t("SESSION_EXPIRED"),
      SESSION_NOT_FRESH: t("SESSION_NOT_FRESH"),
      SETTINGS: t("SETTINGS"),
      SET_PASSWORD: t("SET_PASSWORD"),
      SET_PASSWORD_DESCRIPTION: t("SET_PASSWORD_DESCRIPTION"),
      SIGN_IN: t("SIGN_IN"),
      SIGN_IN_ACTION: t("SIGN_IN_ACTION"),
      SIGN_IN_DESCRIPTION: t("SIGN_IN_DESCRIPTION"),
      SIGN_IN_USERNAME_DESCRIPTION: t("SIGN_IN_USERNAME_DESCRIPTION"),
      SIGN_IN_USERNAME_PLACEHOLDER: t("SIGN_IN_USERNAME_PLACEHOLDER"),
      SIGN_IN_WITH: t("SIGN_IN_WITH"),
      SIGN_OUT: t("SIGN_OUT"),
      SIGN_UP: t("SIGN_UP"),
      SIGN_UP_ACTION: t("SIGN_UP_ACTION"),
      SIGN_UP_DESCRIPTION: t("SIGN_UP_DESCRIPTION"),
      SIGN_UP_EMAIL: t("SIGN_UP_EMAIL"),
      SLUG_DOES_NOT_MATCH: t("SLUG_DOES_NOT_MATCH"),
      SLUG_REQUIRED: t("SLUG_REQUIRED"),
      SOCIAL_ACCOUNT_ALREADY_LINKED: t("SOCIAL_ACCOUNT_ALREADY_LINKED"),
      SUBSCRIPTION_NOT_ACTIVE: t("SUBSCRIPTION_NOT_ACTIVE"),
      SUBSCRIPTION_NOT_FOUND: t("SUBSCRIPTION_NOT_FOUND"),
      SUBSCRIPTION_NOT_SCHEDULED_FOR_CANCELLATION: t(
        "SUBSCRIPTION_NOT_SCHEDULED_FOR_CANCELLATION"
      ),
      SUBSCRIPTION_PLAN_NOT_FOUND: t("SUBSCRIPTION_PLAN_NOT_FOUND"),
      SWITCH_ACCOUNT: t("SWITCH_ACCOUNT"),
      TEAM_ALREADY_EXISTS: t("TEAM_ALREADY_EXISTS"),
      TEAM_NOT_FOUND: t("TEAM_NOT_FOUND"),
      TERMS_OF_SERVICE: t("TERMS_OF_SERVICE"),
      TOO_MANY_ATTEMPTS: t("TOO_MANY_ATTEMPTS"),
      TOO_MANY_ATTEMPTS_REQUEST_NEW_CODE: t(
        "TOO_MANY_ATTEMPTS_REQUEST_NEW_CODE"
      ),
      TOTP_NOT_ENABLED: t("TOTP_NOT_ENABLED"),
      TRUST_DEVICE: t("TRUST_DEVICE"),
      TWO_FACTOR: t("TWO_FACTOR"),
      TWO_FACTOR_ACTION: t("TWO_FACTOR_ACTION"),
      TWO_FACTOR_CARD_DESCRIPTION: t("TWO_FACTOR_CARD_DESCRIPTION"),
      TWO_FACTOR_DESCRIPTION: t("TWO_FACTOR_DESCRIPTION"),
      TWO_FACTOR_DISABLED: t("TWO_FACTOR_DISABLED"),
      TWO_FACTOR_DISABLE_INSTRUCTIONS: t("TWO_FACTOR_DISABLE_INSTRUCTIONS"),
      TWO_FACTOR_ENABLED: t("TWO_FACTOR_ENABLED"),
      TWO_FACTOR_ENABLE_INSTRUCTIONS: t("TWO_FACTOR_ENABLE_INSTRUCTIONS"),
      TWO_FACTOR_NOT_ENABLED: t("TWO_FACTOR_NOT_ENABLED"),
      TWO_FACTOR_PROMPT: t("TWO_FACTOR_PROMPT"),
      TWO_FACTOR_TOTP_LABEL: t("TWO_FACTOR_TOTP_LABEL"),
      UNABLE_TO_CREATE_CUSTOMER: t("UNABLE_TO_CREATE_CUSTOMER"),
      UNABLE_TO_CREATE_SESSION: t("UNABLE_TO_CREATE_SESSION"),
      UNABLE_TO_REMOVE_LAST_TEAM: t("UNABLE_TO_REMOVE_LAST_TEAM"),
      UNAUTHORIZED_SESSION: t("UNAUTHORIZED_SESSION"),
      UNEXPECTED_ERROR: t("UNEXPECTED_ERROR"),
      UNKNOWN_ERROR: t("UNKNOWN_ERROR"),
      UNLINK: t("UNLINK"),
      UPDATED_SUCCESSFULLY: t("UPDATED_SUCCESSFULLY"),
      UPDATE_ROLE: t("UPDATE_ROLE"),
      UPDATE_ROLE_DESCRIPTION: t("UPDATE_ROLE_DESCRIPTION"),
      UPLOAD: t("UPLOAD"),
      UPLOAD_AVATAR: t("UPLOAD_AVATAR"),
      UPLOAD_LOGO: t("UPLOAD_LOGO"),
      USAGE_EXCEEDED: t("USAGE_EXCEEDED"),
      USER: t("USER"),
      USERNAME: t("USERNAME"),
      USERNAME_DESCRIPTION: t("USERNAME_DESCRIPTION"),
      USERNAME_INSTRUCTIONS: t("USERNAME_INSTRUCTIONS"),
      USERNAME_IS_ALREADY_TAKEN: t("USERNAME_IS_ALREADY_TAKEN"),
      USERNAME_PLACEHOLDER: t("USERNAME_PLACEHOLDER"),
      USERNAME_TOO_LONG: t("USERNAME_TOO_LONG"),
      USERNAME_TOO_SHORT: t("USERNAME_TOO_SHORT"),
      USER_ALREADY_EXISTS: t("USER_ALREADY_EXISTS"),
      USER_ALREADY_HAS_PASSWORD: t("USER_ALREADY_HAS_PASSWORD"),
      USER_BANNED: t("USER_BANNED"),
      USER_EMAIL_NOT_FOUND: t("USER_EMAIL_NOT_FOUND"),
      USER_IS_ALREADY_A_MEMBER_OF_THIS_ORGANIZATION: t(
        "USER_IS_ALREADY_A_MEMBER_OF_THIS_ORGANIZATION"
      ),
      USER_IS_ALREADY_INVITED_TO_THIS_ORGANIZATION: t(
        "USER_IS_ALREADY_INVITED_TO_THIS_ORGANIZATION"
      ),
      USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION: t(
        "USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION"
      ),
      USER_NOT_FOUND: t("USER_NOT_FOUND"),
      VERIFICATION_FAILED: t("VERIFICATION_FAILED"),
      VERIFY_YOUR_EMAIL: t("VERIFY_YOUR_EMAIL"),
      VERIFY_YOUR_EMAIL_DESCRIPTION: t("VERIFY_YOUR_EMAIL_DESCRIPTION"),
      YOU_ARE_NOT_ALLOWED_TO_BAN_USERS: t("YOU_ARE_NOT_ALLOWED_TO_BAN_USERS"),
      YOU_ARE_NOT_ALLOWED_TO_CANCEL_THIS_INVITATION: t(
        "YOU_ARE_NOT_ALLOWED_TO_CANCEL_THIS_INVITATION"
      ),
      YOU_ARE_NOT_ALLOWED_TO_CHANGE_USERS_ROLE: t(
        "YOU_ARE_NOT_ALLOWED_TO_CHANGE_USERS_ROLE"
      ),
      YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_ORGANIZATION: t(
        "YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_ORGANIZATION"
      ),
      YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_TEAM: t(
        "YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_TEAM"
      ),
      YOU_ARE_NOT_ALLOWED_TO_CREATE_TEAMS_IN_THIS_ORGANIZATION: t(
        "YOU_ARE_NOT_ALLOWED_TO_CREATE_TEAMS_IN_THIS_ORGANIZATION"
      ),
      YOU_ARE_NOT_ALLOWED_TO_CREATE_USERS: t(
        "YOU_ARE_NOT_ALLOWED_TO_CREATE_USERS"
      ),
      YOU_ARE_NOT_ALLOWED_TO_DELETE_TEAMS_IN_THIS_ORGANIZATION: t(
        "YOU_ARE_NOT_ALLOWED_TO_DELETE_TEAMS_IN_THIS_ORGANIZATION"
      ),
      YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_MEMBER: t(
        "YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_MEMBER"
      ),
      YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_ORGANIZATION: t(
        "YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_ORGANIZATION"
      ),
      YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_TEAM: t(
        "YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_TEAM"
      ),
      YOU_ARE_NOT_ALLOWED_TO_DELETE_USERS: t(
        "YOU_ARE_NOT_ALLOWED_TO_DELETE_USERS"
      ),
      YOU_ARE_NOT_ALLOWED_TO_IMPERSONATE_USERS: t(
        "YOU_ARE_NOT_ALLOWED_TO_IMPERSONATE_USERS"
      ),
      YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION: t(
        "YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION"
      ),
      YOU_ARE_NOT_ALLOWED_TO_INVITE_USER_WITH_THIS_ROLE: t(
        "YOU_ARE_NOT_ALLOWED_TO_INVITE_USER_WITH_THIS_ROLE"
      ),
      YOU_ARE_NOT_ALLOWED_TO_LIST_USERS: t("YOU_ARE_NOT_ALLOWED_TO_LIST_USERS"),
      YOU_ARE_NOT_ALLOWED_TO_LIST_USERS_SESSIONS: t(
        "YOU_ARE_NOT_ALLOWED_TO_LIST_USERS_SESSIONS"
      ),
      YOU_ARE_NOT_ALLOWED_TO_REGISTER_THIS_PASSKEY: t(
        "YOU_ARE_NOT_ALLOWED_TO_REGISTER_THIS_PASSKEY"
      ),
      YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS: t(
        "YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS"
      ),
      YOU_ARE_NOT_ALLOWED_TO_SET_USERS_PASSWORD: t(
        "YOU_ARE_NOT_ALLOWED_TO_SET_USERS_PASSWORD"
      ),
      YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER: t(
        "YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER"
      ),
      YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_ORGANIZATION: t(
        "YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_ORGANIZATION"
      ),
      YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_TEAM: t(
        "YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_TEAM"
      ),
      YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION: t(
        "YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION"
      ),
      YOU_CANNOT_BAN_YOURSELF: t("YOU_CANNOT_BAN_YOURSELF"),
      YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER: t(
        "YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER"
      ),
      YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_ORGANIZATIONS: t(
        "YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_ORGANIZATIONS"
      ),
      YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_TEAMS: t(
        "YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_TEAMS"
      ),
    }),
    [t]
  );

  const handleNavigate = useCallback(
    (href: string) => {
      void router.navigate({ href });
    },
    [router]
  );

  const handleReplace = useCallback(
    (href: string) => {
      void router.navigate({ href, replace: true });
    },
    [router]
  );

  const LinkComponent = useCallback(
    ({ href, ...props }: React.ComponentProps<typeof Link>) => (
      <Link to={href} {...props} />
    ),
    []
  );

  const handleToast = useCallback(
    ({ variant, message }: { variant?: string; message?: string }) => {
      if (!message) return;

      switch (variant) {
        case "success":
          toast.success(message);

          break;

        case "error":
          toast.error(message);

          break;

        case "warning":
          toast.warning(message);

          break;

        default:
          toast.info(message);
      }
    },
    []
  );

  return (
    <AuthQueryProvider>
      <AuthUIProviderTanstack
        /**
         * The configured auth client instance.
         * Handles all authentication operations and state management.
         */
        authClient={authClient}
        /**
         * Navigation function for redirects after auth actions.
         * Integrates with TanStack Router for type-safe navigation.
         */
        navigate={handleNavigate}
        /**
         * Replace navigation for auth flows.
         * Replaces the current history entry instead of pushing a new one.
         */
        replace={handleReplace}
        /**
         * Link component for auth UI navigation.
         * Uses TanStack Router's Link for client-side navigation.
         */
        Link={LinkComponent}
        /**
         * Enable optimistic updates for auth operations.
         * Updates UI immediately before server confirmation for better UX.
         */
        optimistic={true}
        /**
         * Disable client persistence.
         * Auth state is managed by cookies, not localStorage.
         */
        persistClient={false}
        /**
         * Enable passkey/WebAuthn support.
         * Allows users to authenticate with biometrics or security keys.
         */
        passkey={true}
        nameRequired={true}
        gravatar={true}
        redirectTo="/"
        apiKey={true}
        credentials={{
          confirmPassword: true,
          forgotPassword: false,
        }}
        signUp={{
          fields: [],
        }}
        /**
         * Toast notification handler for auth events.
         * Displays success, error, warning, and info messages using Sonner.
         */
        toast={handleToast}
        localization={localization}
      >
        <div className="AuthProvider max-h-screen">{children}</div>
      </AuthUIProviderTanstack>
    </AuthQueryProvider>
  );
}
